import numpy as np
import random
import codecs
import os
import re
import math
from itertools import product
from fractions import Fraction
import itertools
import copy
import fractions

#PATH = 'C:\\Users\\SEULKI\\PycharmProjects\\2020\\AIG_final\\Dictionary'
PATH = 'C:\\Users\\user\\Desktop\\test'

#person_nam = [name.strip() for name in codecs.open(os.path.join(PATH, 'name_XY.txt'), 'r', 'utf-8').readlines()]
#person_yeo = [name.strip() for name in codecs.open(os.path.join(PATH, 'name_XX.txt'), 'r', 'utf-8').readlines()]
person_nam = [
"건우",
"경훈",
"다훈",
"도윤",
"동욱",
"동진",
"동현",
"명훈",
"민기",
"민석",
"민수",
"민준",
"병호",
"서준",
"석훈",
"선기",
"선우",
"성혁",
"승기",
"승현",
"시우",
"영광",
"예준",
"원석",
"원호",
"유준",
"윤기",
"인석",
"재현",
"재환",
"재훈",
"정민",
"정현",
"주원",
"주혁",
"준우",
"준희",
"지민",
"지우",
"지호",
"지훈",
"찬휘",
"창환",
"하준",
"현수",
"현진",
"현호",
"형근",
"형욱",
"형준"
]
person_yeo = [
"가람",
"가영",
"경희",
"나경",
"나은",
"나희",
"다빈",
"다은",
"다정",
"민아",
"민지",
"상희",
"선영",
"성지",
"세희",
"수민",
"수진",
"수현",
"슬기",
"승희",
"아영",
"영은",
"영지",
"유나",
"유리",
"윤아",
"윤정",
"윤진",
"은수",
"은영",
"은정",
"은진",
"재희",
"정아",
"주영",
"주은",
"주희",
"지수",
"지연",
"지현",
"진아",
"채린",
"채영",
"태희",
"한나",
"현지",
"혜빈",
"혜수",
"혜원",
"혜진",
"희진"
]
multiple_choice_nums = {0: '①', 1: '②', 2: '③', 3: '④', 4: '⑤'}
multiple_choice_hangul = {0: '㉠', 1: '㉡', 2: '㉢', 3: '㉣', 4: '㉤'}
have_jongsung_num = [0, 1, 3, 6, 7, 8]

multiple_choice_nums = {0: '➀', 1: '➁', 2: '➂', 3: '➃', 4: '➄'}
multiple_choice_jaem = {0: '㈀', 1: '㈁', 2: '㈂', 3: '㈃', 4: '㈄', 5 : '㈅'}
multiple_choice_hangul = {0: '㉠', 1: '㉡', 2: '㉢', 3: '㉣', 4: '㉤'}
have_jongsung_num = [0, 1, 3, 6, 7, 8]
multiple_choice_jaem_2 = {0: 'ㄱ', 1: 'ㄴ', 2: 'ㄷ', 3: 'ㄹ', 4 : 'ㅁ', 5:'ㅂ'}
multiple_choice_jaem_3 = {0: '㈀', 1: '㈁', 2: '㈂', 3: '㈃'}

box = "box{````}"
box_1 = "box{````①````}"
box_2 = "box{````②````}"
box_a = 'box{````㉠````}'
box_b = 'box{````㉡````}'
box_j1 = 'box{ pile{ # } ㉠ pile{ # } }'
box_j2 = 'box{ pile{ # } ㉡ pile{ # } }'
left = '&gt;'
right = '&lt;'
equal = '='

answer_dict = {
    0: "①",
    1: "②",
    2: "③",
    3: "④",
    4: "⑤"
}

answer_kodict = {
    0: "㉠",
    1: "㉡",
    2: "㉢",
    3: "㉣",
    4: "㉤"
}
#부호 관련 함수
def mark(num):
    if(num>=0):
        return "+"
    else:
        return ""

#분모가 1일 가능성이 있을 때, over를 포함하여 사용하는 함수
def over_den(num):
    if num == 1:
        over_num = ""
    else:
        over_num = "over %s" % num
    return over_num


# 분자 나누기 분모꼴로 숫자를 넣으면 실제 값과 수식을 리턴
def frac_e(num, den):
    if num == 0:
        return 0

    elif "sqrt" not in str(num).split():
        num, den = int(num), int(den)
        n = abs(num)
        d = abs(den)
        g = gcd(n, d)
        if d / g == 1:
            return int((n / g) * ((num * den) / (n * d)))
        elif num * den > 0:
            return str(int(n / g)) + " over " + str(int(d / g))
        else:
            return "- " + str(int(n / g)) + " over " + str(int(d / g))

    else:
        den = int(den)
        n1, n2, n3 = irrational_num_to_cofactor(num)
        if n1 == 0:
            frac_gcd = gcd(abs(n2),den)
        else:
            frac_gcd = gcd(abs(n1), gcd(abs(n2),den))
        if den / frac_gcd == 1:
            return irrational_cofactor_to_num(int(n1/frac_gcd), int(n2/frac_gcd), n3)
        else:
            return "{%s} over %s"%(irrational_cofactor_to_num(int(n1/frac_gcd), int(n2/frac_gcd), n3), int(den/frac_gcd))


# num에 따라 부호를 부여
def sgn(num, exception=0):
    if type(num) == str:  # frac 함수로 정의된 경우
        if num[0] == "-":
            return "- ` " + num[2:]
        else:
            return "+ ` " + num

    elif type(num) == int or float:
        if exception == 0:  # 일반 숫자
            if num >= 0:
                return "+ ` " + str(num)
            else:
                return "- ` " + str(-num)

        else:  # 변수 앞에 붙을 때
            if num == 1:
                return "+ ` "
            elif num == -1:
                return "- ` "
            elif num > 0:
                return "+ ` " + str(num)
            else:
                return "- ` " + str(-num)


#사칙연산 뒤에 음수가 나올 때, 괄호를 씌워주는 함수, must=1인경우 무조건 괄호를 씌움
def parentheses(num, must=0):
    if must == 1:
        p_num = " ( %s  )" % num
    elif type(num) == int:
        if num < 0:
            p_num = " ( %s  )" % num
        else:
            p_num = "%s" % num
    elif type(num) == str:
        if num.split()[0] == "-":
            p_num = " ( %s  )" % num
        else:
            p_num = "%s" % num

    return p_num


# 루트 안의 숫자에서 제곱수를 뺴냄, num = {a} sqrt {b}
def sqrt_out(num, true_value=0):
    square = list(range(2, int(num ** (1 / 2) + 1)))
    num_list = []
    for i in square:
        if num % (i ** 2) == 0:
            num_list.append(i)
    if num_list == []:
        if true_value == 0:
            a = ""
        else:
            a = 1
        b = num
    else:
        a = num_list[-1]
        b = int(num / a ** 2)
    return a, b


# frac 함수의 분자를 확인(무조건 양수)
def frac_num_check(frac):
    if type(frac) == int:
        num = abs(frac)
    else:
        num = int(frac.split()[-3])
    return num


# frac 함수의 분모를 확인(무조건 양수)
def frac_den_check(frac):
    if type(frac) == int:
        den = 1
    else:
        den = int(frac.split()[-1])
    return den


# 답이 ans일때, n간격으로 객관식을 정답 (ans_num)번으로 만들어줌
def mulcho(ans, n):
    if type(ans) == int:
        m = ans + np.random.randint(-4, 1) * n
        ex1, ex2, ex3, ex4, ex5 = m, m + n, m + 2 * n, m + 3 * n, m + 4 * n
        c = 0
        for i in [ex1, ex2, ex3, ex4, ex5]:
            if i == ans:
                ans_num = answer_dict[c]
            c += 1
    elif type(ans) == str:
        num, den = frac_num_check(ans), frac_den_check(ans)
        if ans.split()[0] == "-":
            num = -num
        m = num + np.random.randint(-4, 1) * n * den
        ex1, ex2, ex3, ex4, ex5 = frac_e(m, den), frac_e(m + n * den, den), frac_e(m + 2 * n * den, den), frac_e(
            m + 3 * n * den, den), frac_e(m + 4 * n * den, den)
        c = 0
        for i in [ex1, ex2, ex3, ex4, ex5]:
            if i == ans:
                ans_num = answer_dict[c]
            c += 1

    return ex1, ex2, ex3, ex4, ex5, ans_num


#해당 정수가 제곱수인지 아닌지 판단해 줌(True, False)
def issquare(num):
    if int(num ** 0.5) == num ** 0.5:
        bool = True
    elif int(num ** 0.5) != num ** 0.5:
        bool = False

    return bool


#a + b sqrt c; a,b,c는 정수, c는 양수
def irrational_cofactor_to_num(a, b, c):
    if a == 0:
        if b == 1:
            num = "sqrt %s"%c
        elif b == -1:
            num = "- sqrt %s"%c
        else:
            num = "%s sqrt %s"%(b,c)
    elif b == 0:
        num = str(a)
    elif b == 1:
        num = "%s `+` sqrt %s" % (a, c)
    elif b == -1:
        num = "%s `-` sqrt %s" % (a, c)
    elif b > 0:
        num = "%s `+` %s sqrt %s"%(a,b,c)
    elif b < 0:
        num = "%s `-` %s sqrt %s"%(a,-b,c)

    return num


#정수로 이뤄진 무리식에서 계수를 빼옴; a + b sqrt c; sqrt값은 num만으로 c를 유추할 수 없을때 c값을 지정해줌
def irrational_num_to_cofactor(num, sqrt=1):
    if len(num.split()) == 1:
        a = num
        b = 0
        c = sqrt
    elif "`" not in num.split()[1]:
        a = 0
        if num.split()[0] == "sqrt":
            b = 1
        elif num.split()[0] == "-":
            b = -1
        else:
            b = int(num.split()[0])
        c = int(num.split()[-1])
    else:
        a = int(num.split()[0])
        if num.split()[1] == "`+`":
            if num.split()[2] == "sqrt":
                b = 1
            else:
                b = int(num.split()[2])
        else:
            if num.split()[2] == "sqrt":
                b = -1
            else:
                b = int(-int(num.split()[2]))
        c = int(num.split()[-1])

    return a,b,c


#무리식이 str 형태로 주어졌을 때 실제 값을 계산함; a + b sqrt c; sqrt값은 num만으로 c를 유추할 수 없을때 c값을 지정해줌
def irrational_str_to_float(num, sqrt=1):
    num = str(num)
    if "over" in num:
        if "}" in num:
            right_br = num.index("}")
            num = num[1:right_br]
            den = int(num.split()[-1])
            a, b, c = irrational_num_to_cofactor(num, sqrt)
            return (int(a) + int(b) * (int(c) ** 0.5)) / den
        else:
            a = int(num.split()[-3])
            den = int(num.split()[-1])
            if "-" in num:
                return -a/den
            else:
                return a/den

    else:
        a, b, c = irrational_num_to_cofactor(num, sqrt)
        return int(a) + int(b) * (int(c) ** 0.5)


#유리식이 포함된 객관식 보기를 크기 순으로 정렬해 줌
def irrational_candidates_sort(ans_list, right_ans, sqrt=1):
    np.random.shuffle(ans_list)
    candidates = ans_list[0:5]
    while right_ans not in candidates:
        np.random.shuffle(ans_list)
        candidates = ans_list[0:5]

    candidates_dict = {candidates[0]: irrational_str_to_float(candidates[0], sqrt),
                       candidates[1]: irrational_str_to_float(candidates[1], sqrt),
                       candidates[2]: irrational_str_to_float(candidates[2], sqrt),
                       candidates[3]: irrational_str_to_float(candidates[3], sqrt),
                       candidates[4]: irrational_str_to_float(candidates[4], sqrt)}
    candidates_list = sorted(candidates_dict.items(), key=(lambda x: x[1]))
    s_candidates = [candidates_list[0][0], candidates_list[1][0], candidates_list[2][0], candidates_list[3][0], candidates_list[4][0]]
    ex1, ex2, ex3, ex4, ex5, ans = s_candidates[0], s_candidates[1], s_candidates[2], s_candidates[3], s_candidates[4], answer_dict[s_candidates.index(right_ans)]
    return ex1, ex2, ex3, ex4, ex5, ans

#변수가 계수일때 사용하는 함수
def coefficient(num):
    if num == 1:
        co_num = ""
    elif num == -1:
        co_num = "-"
    else:
        co_num = num

    return co_num

def gcd (a, b):
    if b == 0:
        return a
    else:
        if a < b:
            a, b = b, a
        return gcd(b, a % b)


def lcm(a, b):
    return a * b // gcd(a, b)


def factor(a):
    fac_list = []
    for i in range(a):
        if lcm(i+1, a) == a:
            fac_list.append(i+1)
    return fac_list


def get_primes(n):
    is_primes = [True] * n
    if n**0.5 == int(n**0.5):
        max_length = int(n**0.5)
    else:
        max_length = int(n**0.5) + 1
    for i in range(2, max_length):
        if is_primes[i]:
            for j in range(i+i, n, i):
                is_primes[j] = False
    ret_l = [i for i in range(2, n) if is_primes[i]]
    if len(factor(n)) == 2:
        ret_l.append(n)
    return ret_l


def get_factorization(num):
    factors = []
    for prime in get_primes(num):
        count = 0
        while num % prime == 0:
            num /= prime
            count = count + 1
        if count > 0:
            factors.append((prime, count))
    return factors


def random_minus(list1):
    random_list = []
    for i in range(len(list1)):
        rf = np.random.randint(0,2)
        if rf == 0:
            random_list.append(list1[i])
        else:
            random_list.append(-list1[i])
    return random_list


# contract fraction a/b
def ctr_frac(a, b):
    if a == 0:
        return [0, 1]
    if b < 0:
        if a < 0:
            a = abs(a)
            b = abs(b)
        else:
            a = -a
            b = abs(b)

    isminus = 0
    if a < 0:
        a = abs(a)
        isminus = 1

    if gcd(a,b) == 1:
        return [-1, "already contracted fraction"]
    else:
        if isminus == 0:
            return [int(a/gcd(a,b)), int(b/gcd(a,b))]
        else:
            return [-int(a/gcd(a,b)), int(b/gcd(a,b))]

def ctr_frac2(a, b):
    if a == 0:
        return [0, 1]
    if b < 0:
        if a < 0:
            a = abs(a)
            b = abs(b)
        else:
            a = -a
            b = abs(b)
    if a < 0:
        a = abs(a)
        return [-int(a/gcd(a,b)), int(b/gcd(a,b))]
    else:
        return [int(a/gcd(a,b)), int(b/gcd(a,b))]


#  a[0]/a[1] + b[0]/b[1]
def sum_frac(a, b):
    lcm_ = lcm(a[1], b[1])
    if a[0] * int(lcm_/a[1]) + b[0] * int(lcm_/b[1]) == 0:
        return [0, 1]
    ctr = ctr_frac2(a[0] * int(lcm_/a[1]) + b[0] * int(lcm_/b[1]), lcm_)
    return [ctr[0], ctr[1]]


# big == 0 : generate fraction less than 1
def frac_generator(big, base, high):
    nums = random.sample(list(range(1,base)),2)
    if big == 0:
        nums.sort()
    ctr = ctr_frac2(nums[0], nums[1])
    if big != 0:
        randoms = np.random.randint(0,high)
        ctr = sum_frac(ctr, [randoms,1])
    while ctr[1] == 1:
        nums = random.sample(list(range(1,10)),2)
        if big == 0:
            nums.sort()
        ctr = ctr_frac2(nums[0], nums[1])
        if big != 0:
            randoms = np.random.randint(0,high)
            ctr = sum_frac(ctr, [randoms,1])
    return [ctr[0], ctr[1]]


def frac_generator2(big, base_list, high):
    base_num = random.sample(base_list, 1)[0]
    coprime_list = []
    for i in range(base_num-1):
        if gcd(base_num, i+1) == 1:
            coprime_list.append(i+1)
    
    n = random.sample(coprime_list, 1)[0]
    ctr = [n, base_num]

    if big != 0:
        randoms = np.random.randint(0,high)
        ctr = sum_frac(ctr, [randoms,1])

    return [ctr[0], ctr[1]]


def frac_sum3(a, b):
    res = sum_frac(a[0], b[0])
    if res[0] > 0:
        return (res, res[0]/res[1], "( +{%d} over {%d} )" % (res[0], res[1]))
    else:
        return (res, res[0]/res[1], "( -{%d} over {%d} )" % (abs(res[0]), res[1]))


def frac_minus3(a, b):
    f = a[0]
    s = [-b[0][0], b[0][1]]
    res = sum_frac(f, s)
    if res[0] > 0:
        return (res, res[0]/res[1], "( +{%d} over {%d} )" % (res[0], res[1]))
    else:
        return (res, res[0]/res[1], "( -{%d} over {%d} )" % (abs(res[0]), res[1]))


def frac_gen3(minus, big, base_list, high):
    base_num = random.sample(base_list, 1)[0]

    if base_num == 1:
        hi = np.random.randint(1, high)
        if minus == 0:
            return ([hi, 1], hi, str(hi))
        elif minus == -1:
            return ([-hi, 1], -hi, str(-hi))
        else:
            rf = np.random.randint(0,2)
            if rf == 0:
                return ([hi, 1], hi, "+" + str(hi))
            else:
                return ([-hi, 1], -hi, "-" + str(abs(hi)))

    coprime_list = []
    for i in range(base_num-1):
        if gcd(base_num, i+1) == 1:
            coprime_list.append(i+1)
    
    n = random.sample(coprime_list, 1)[0]
    ctr = [n, base_num]

    if big != 0:
        randoms = np.random.randint(0,high)
        ctr = sum_frac(ctr, [randoms,1])

    if minus == 0:
        return ([ctr[0], ctr[1]], ctr[0]/ctr[1], "{%d} over {%d}" % (ctr[0], ctr[1]))
    elif minus == -1:
        return ([-ctr[0], ctr[1]], -ctr[0]/ctr[1], "-{%d} over {%d}" % (ctr[0], ctr[1]))
    
    rf = np.random.randint(0,2)
    if rf == 0:
        return ([ctr[0], ctr[1]], ctr[0]/ctr[1], "( +{%d} over {%d} )" % (ctr[0], ctr[1]))
    else:
        return ([-ctr[0], ctr[1]], -ctr[0]/ctr[1], "( -{%d} over {%d} )" % (abs(ctr[0]), ctr[1]))


def print_frac3(f1, f2):
    if f2 < 0:
        f1 = -f1
        f2 = abs(f2)
    if f1 == 0:
        return str(0)

    if f2 == 1:
        if f1 < 0:
            return "( -%d )" % (abs(f1)) 
        else:
            return "( +%d )" % (abs(f1)) 
    if f1 < 0:
        return "( -{%d} over {%d} )" % (abs(f1), f2)
    else:
        return "( +{%d} over {%d} )" % (f1, f2)


def print_ans(f1, f2):
    if f1 == 0:
        return str(0)
    if f2 < 0:
        f1 = -f1
        f2 = abs(f2)
    ctr = ctr_frac2(f1, f2)
    if ctr[1] == 1:
        return str(ctr[0])
    if ctr[0] < 0:
        return "-{%d} over {%d}" % (abs(ctr[0]), ctr[1])
    else:
        return "{%d} over {%d}" % (ctr[0], ctr[1])


def print_parent_int(n):
    if n == 0:
        return "( 0 )"
    elif n < 0:
        return "( -%d )" % abs(n)
    else:
        return "( +%d )" % n


def make_example(ans):
    interval = np.random.randint(1, 3)
    reverse = 0
    if ans <= interval:
        ans_index = 0
        reverse = int(np.random.rand() + 0.5)
    else:
        limit = (ans // interval) if ans // interval < 5 else 5
        ans_index = np.random.randint(0, limit)
        reverse = int(np.random.rand() + 0.25)
    
    ex_list = []
    if reverse == 0:
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (i-ans_index)*interval)
    else:
        ans_index = 4 - ans_index
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (ans_index-i)*interval)
    return ex_list


def make_example_by_interval(ans, interval):
    reverse = 0
    if ans <= interval:
        ans_index = 0
        reverse = int(np.random.rand() + 0.5)
    else:
        limit = (ans // interval) if ans // interval < 5 else 5
        ans_index = np.random.randint(0, limit)
        reverse = int(np.random.rand() + 0.25)
    
    ex_list = []
    if reverse == 0:
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (i-ans_index)*interval)
    else:
        ans_index = 4 - ans_index
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (ans_index-i)*interval)
    return ex_list


def make_example_minus(ans, interval):
    if interval == 0:
        interval = np.random.randint(1, 3)

    ans_index = np.random.randint(0, 5)
    reverse = int(np.random.rand() + 0.25)
    
    ex_list = []
    if reverse == 0:
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (i-ans_index)*interval)
    else:
        ans_index = 4 - ans_index
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (ans_index-i)*interval)
    return ex_list


def make_example_by_interval_fraction_ver(ans, interval, high):
    reverse = 0
    if high-ans < interval:
        ans_index = 4
        reverse = int(np.random.rand() + 0.5)
    elif ans <= interval:
        ans_index = 0
        reverse = int(np.random.rand() + 0.5)
    else:
        h_limit = (ans // interval) if ans // interval < 5 else 5
        l_limit = 4 - ((high-ans) // interval) if 4 - ((high-ans) // interval) >= 0 else 0
        ans_index = np.random.randint(l_limit, h_limit)
        reverse = int(np.random.rand() + 0.25)   

    ex_list = []
    if reverse == 0:
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (i-ans_index)*interval)
    else:
        ans_index = 4 - ans_index
        ex_list.append(ans_index)
        for i in range(5):
            ex_list.append(ans + (ans_index-i)*interval)
    return ex_list


# ans = a/b, interval = 1/fintv
def make_fraction_example(a,b,fintv):
    lcm_ = lcm(b, fintv)
    mult = [int(lcm_/b), int(lcm_/fintv)]
    b = b * mult[0]
    a = a * mult[0]
    fintv = fintv * mult[1]

    ans_list = []
    example_list = make_example_by_interval_fraction_ver(a,mult[1],fintv)
    ans_list.append(example_list[0])
    for i in range(5):
        if gcd(example_list[i+1], fintv) != 1:
            ctr = ctr_frac(example_list[i+1], fintv)
            if ctr[1] == 1:
                ans_list.append("1")
            else:
                ans_list.append("{%d} over {%d}" % (ctr[0], ctr[1]))
        else:
            ans_list.append("{%d} over {%d}" % (example_list[i+1], fintv))
    
    return ans_list


def make_shuffle_example(answer_list, f_ans_ind):    
    example_list = copy.deepcopy(answer_list)
    ind = [0,1,2,3,4]
    random.shuffle(ind)

    ans_ind = ind[f_ans_ind]   
    for i in range(len(ind)):
        example_list[ind[i]] = answer_list[i]

    return [ans_ind] + example_list


def make_shuffle_example2(answer_list, f_ans_inds):    
    example_list = copy.deepcopy(answer_list)
    ind = [0,1,2,3,4]
    random.shuffle(ind)

    ans_inds = []
    for i in range(len(f_ans_inds)):
        ans_inds.append(ind[f_ans_inds[i]])

    for i in range(len(ind)):
        example_list[ind[i]] = answer_list[i]

    return [ans_inds] + example_list


def make_fraction_example2(f1, f2):
    if f1 == 0:
        base_list = [0, 1, -1, 2, -2, print_ans(1, 2), print_ans(-1, 2), print_ans(1, 3), print_ans(-1, 3)]
    else:
        base_list = [print_ans(-f1, f2), print_ans(f1, f2*2), print_ans(f1, f2*4), print_ans(f1*2, f2), print_ans(f1*4, f2), print_ans(-f1, f2*2), print_ans(-f1, f2*4), print_ans(-f1*2, f2), print_ans(-f1*4, f2)]
    ans_list = random.sample(base_list,5)
    ans_list[0] = print_ans(f1, f2)
    return make_shuffle_example(ans_list, 0)


def make_equation(var, var_f, a, x1, x2):
    if a == 0:
        print("ERROR: input a is zero // make_equation function")
        return ["ERROR", "input a is zero", "ERROR"]

    elif x1 == 0 and x2 == 0:
        eq1 = "%s%s`times`%s" % (a if a!= 1 else "", var, var)
        eq2 = "%s%s^{2}" % (a if a!= 1 else "", var)
        eq3 = "%s%s^{2}" % (a if a!= 1 else "", var)

        if var_f == 1:
            eq1 = "%sLEFT( %s ) ( %s )" % (a if a!= 1 else "", var, var)
            eq2 = "%sLEFT( %s )^{2}" % (a if a!= 1 else "", var)
            eq3 = "%sLEFT( %s )^{2}" % (a if a!= 1 else "", var)

        return [eq1, eq2, eq3]

    elif x1 == 0 and x2 != 0:
        if x2 > 0:
            x2s = "-"
        else:
            x2s = "+"

        m = -x2
        ms = "+" if m > 0 else "-"
        am = m * a
        ams = "+" if am > 0 else "-"

        eq1 = "%s%s`(%s`%s`%d )" % (a if a!= 1 else "", var, var, x2s, abs(x2))
        eq2 = "%sLEFT(%s^{2}`%s`%s%s )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
        eq3 = "%s%s^{2}`%s`%s%s" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)

        if var_f == 1:
            eq1 = "%sLEFT(%s )`(%s`%s`%d )" % (a if a!= 1 else "", var, var, x2s, abs(x2))
            eq2 = "%sLEFT((%s )^{2}`%s`%s (%s ) )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
            eq3 = "%sLEFT(%s )^{2}`%s`%s (%s )" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)

        return [eq1, eq2, eq3]
    
    elif x1 != 0 and x2 == 0:
        if x1 > 0:
            x1s = "-"
        else:
            x1s = "+"

        m = -x1
        ms = "+" if m > 0 else "-"
        am = m * a
        ams = "+" if am > 0 else "-"

        eq1 = "%s%s`(%s`%s`%d )" % (a if a!= 1 else "", var, var, x1s, abs(x1))
        eq2 = "%sLEFT(%s^{2}`%s`%s%s )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
        eq3 = "%s%s^{2}`%s`%s%s" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)
        
        if var_f == 1:
            eq1 = "%sLEFT( %s )`(%s`%s`%d )" % (a if a!= 1 else "", var, var, x1s, abs(x1))
            eq2 = "%sLEFT((%s )^{2}`%s`%sLEFT(%s ) )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
            eq3 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)

        return [eq1, eq2, eq3]

    else:
        if x1 > 0:
            x1s = "-"
        else:
            x1s = "+"
        if x2 > 0:
            x2s = "-"
        else:
            x2s = "+"
        
        m = -x1-x2
        n = x1 * x2
        ms = "+" if m > 0 else "-"
        ns = "+" if n > 0 else "-"

        am = m * a
        an = n * a
        ams = "+" if am > 0 else "-"
        ans = "+" if an > 0 else "-"

        eq1 = "%sLEFT(%s`%s`%d )(%s`%s`%d )" % (a if a!= 1 else "", var, x1s, abs(x1), var, x2s, abs(x2))
        
        if x1 == x2:
            eq1 = "%sLEFT(%s`%s`%d )^{2}" % (a if a!= 1 else "", var, x1s, abs(x1))
        
        eq2 = "%sLEFT(%s^{2}`%s`%s%s`%s`%d )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var, ns, abs(n))
        eq3 = "%s%s^{2}`%s`%s%s`%s`%d" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var, ans, abs(an))
        
        if var_f == 1:
            eq2 = "%sLEFT((%s )^{2}`%s`%sLEFT(%s )`%s`%d )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var, ns, abs(n))
            eq3 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var, ans, abs(an))

        if m == 0 and n != 0:
            eq2 = "%sLEFT(%s^{2}`%s`%d )" % (a if a != 1 else "", var, ns, abs(n))
            eq3 = "%s%s^{2}`%s`%d" % (a if a != 1 else "", var, ans, abs(an))

            if var_f == 1:
                eq2 = "%sLEFT(( %s )^{2}`%s`%d )" % (a if a != 1 else "", var, ns, abs(n))
                eq3 = "%sLEFT(%s )^{2}`%s`%d" % (a if a != 1 else "", var, ans, abs(an))

        elif m != 0 and n == 0:
            eq2 = "%sLEFT(%s^{2}`%s`%s%s )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
            eq3 = "%s%s^{2}`%s`%s%s" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)

            if var_f == 1:
                eq2 = "%sLEFT((%s )^{2}`%s`%sLEFT(%s ) )" % (a if a != 1 else "", var, ms, abs(m) if abs(m) != 1 else "", var)
                eq3 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )" % (a if a != 1 else "", var, ams, abs(am) if abs(am) != 1 else "", var)
        elif m == 0 and n == 0:
            eq2 = "%sLEFT(%s^{2} )" % (a if a != 1 else "", var)
            eq3 = "%s%s^{2}" % (a if a != 1 else "", var)

            if var_f == 1:
                eq2 = "%sLEFT((%s )^{2} )" % (a if a != 1 else "", var)
                eq3 = "%sLEFT(%s )^{2}" % (a if a != 1 else "", var)
        
        return [eq1, eq2, eq3]


def make_equation2(var, var_f, f1, f2):
    p1 = 1
    p2 = 1
    if f1[0][1] < 0:
        p1 = -1
    if f2[0][1] < 0:
        p2 = -1
    p = p1 * p2
    
    if f1[1] < 0:
        s1 = [1, "+"]
    else:
        s1 = [-1, "-"]
    a = abs(f1[0][1])
    b = abs(f1[0][0])
    
    if f2[1] < 0:
        s2 = [1, "+"]
    else:
        s2 = [-1, "-"]
    c = abs(f2[0][1])
    d = abs(f2[0][0])

    k1 = a * c
    k2 = s1[0] * b * c + s2[0] * a * d
    if k2 < 0:
        sk2 = [-1, "-"]
    else:
        sk2 = [1, "+"]
    k3 = s1[0] * s2[0] * b * d
    if k3 < 0:
        sk3 = [-1, "-"]
    else:
        sk3 = [1, "+"]

    
    if f1[1] == f2[1]:
        eq1 = "%sLEFT( %s%s`%s`%d )^{2}" % ("" if p == 1 else "-", a if a != 1 else "", var, s1[1], b)

        if var_f == 1:
            eq1 = "%sLEFT{ %sLEFT(%s )`%s`%d }^{2}" % ("" if p == 1 else "-", a if a != 1 else "", var, s1[1], b)

    else:
        eq1 = "%sLEFT( %s%s`%s`%d ) ( %s%s`%s`%d )" % ("" if p == 1 else "-", a if a != 1 else "", var, s1[1], b, c if c != 1 else "", var, s2[1], d)

        if var_f == 1:
            eq1 = "%sLEFT{ %sLEFT(%s )`%s`%d } { %sLEFT(%s )`%s`%d }" % ("" if p == 1 else "-", a if a != 1 else "", var, s1[1], b, c if c != 1 else "", var, s2[1], d)

    eq2 = "%s%s^{2}`%s`%s%s`%s`%d" % (k1 if k1 != 1 else "", var, sk2[1], abs(k2) if abs(k2) != 1 else "", var, sk3[1], abs(k3))
    if var_f == 1:
        eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (k1 if k1 != 1 else "", var, sk2[1], abs(k2) if abs(k2) != 1 else "", var, sk3[1], abs(k3))
    
    if p == -1:
        eq2 = "%s%s^{2}`%s`%s%s`%s`%d" % (-k1 if k1 != 1 else "-", var, "+" if -sk2[0] == 1 else "-", abs(k2) if abs(k2) != 1 else "", var, "+" if -sk3[0] == 1 else "-", abs(k3))

        if var_f == 1:
            eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (-k1 if k1 != 1 else "-", var, "+" if -sk2[0] == 1 else "-", abs(k2) if abs(k2) != 1 else "", var, "+" if -sk3[0] == 1 else "-", abs(k3))


    if k2 == 0:
        eq2 = "%s%s^{2}`%s`%d" % (k1 if k1 != 1 else "", var, sk3[1], abs(k3))

        if var_f == 1:
            eq2 = "%sLEFT(%s )^{2}`%s`%d" % (k1 if k1 != 1 else "", var, sk3[1], abs(k3))
        if p == -1:
            eq2 = "%s%s^{2}`%s`%d" % (-k1 if k1 != 1 else "-", var, "+" if -sk3[0] == 1 else "-", abs(k3))
            if var_f == 1:
                eq2 = "%sLEFT(%s )^{2}`%s`%d" % (-k1 if k1 != 1 else "-", var, "+" if -sk3[0] == 1 else "-", abs(k3))
    
    return [eq1, eq2]


def random_eq_gen(mode, var, var_f):
    if mode == -1:
        x1 = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
        eq = make_equation(var, var_f, 1, x1, x1)

        return [[x1, x1], eq[0], eq[2]]
    elif mode == 0:
        xs = random.sample(list(range(1,6)), 2)
        x1 = xs[0] * random.sample([-1,1], 1)[0]
        x2 = xs[1] * random.sample([-1,1], 1)[0]
        eq = make_equation(var, var_f, 1, x1, x2)

        return [[x1, x2], eq[0], eq[2]]
    elif mode == 1:
        fr1 = frac_gen3(1, 0, [1, 2, 3, 4, 5], 5)
        fr2 = frac_gen3(1, 0, [1, 2, 3, 4, 5], 5)
        while fr1[1] == fr2[1]:
            fr2 = frac_gen3(1, 0, [1, 2, 3, 4, 5], 5)
        eq = make_equation2(var, var_f, fr1, fr2)

        return [[fr1[0], fr2[0]], eq[0], eq[1]]
    elif mode == 2:
        fr = frac_gen3(1, 0, [1, 2, 3, 4, 5], 5)
        eq = make_equation2(var, var_f, fr, fr)

        return [[fr[0], fr[0]], eq[0], eq[1]]


def make_equation_v2(var1, var2, var_f, x1, x2):
    if x1 == 0 and x2 == 0:
        eq1 = "%s`times`%s" % (var1, var1)
        eq2 = "%s%s" % (var1, var1)

        if var_f == 1:
            eq1 = "( %s ) ( %s )" % (var1, var1)
            eq2 = "( %s ) ( %s )" % (var1, var1)

        return [eq1, eq2]

    elif x1 == 0 and x2 != 0:
        if x2 > 0:
            x2s = "-"
        else:
            x2s = "+"

        m = -x2
        ms = "+" if m > 0 else "-"
        am = m
        ams = "+" if am > 0 else "-"

        eq1 = "%s`(%s`%s`%s%s )" % (var1, var1, x2s, abs(x2) if abs(x2) != 1 else "", var2)
        eq2 = "%s^{2}`%s`%s%s%s" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2)

        if var_f == 1:
            eq1 = "(%s )`(%s`%s`%s%s )" % (var1, var1, x2s, abs(x2) if abs(x2) != 1 else "", var2)
            eq2 = "(%s )^{2}`%s`%s (%s )(%s )" % (var1, ams, abs(am) if abs(am) != 1 else "", var1, var2)

        return [eq1, eq2]
    
    elif x1 != 0 and x2 == 0:
        if x1 > 0:
            x1s = "-"
        else:
            x1s = "+"

        m = -x1
        ms = "+" if m > 0 else "-"
        am = m
        ams = "+" if am > 0 else "-"

        eq1 = "%s`(%s`%s`%s%s )" % (var1, var1, x1s, abs(x1) if abs(x1) != 1 else "", var2)
        eq2 = "%s^{2}`%s`%s%s%s" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2)

        if var_f == 1:
            eq1 = "(%s )`(%s`%s`%s%s )" % (var1, var1, x1s, abs(x1) if abs(x1) != 1 else "", var2)
            eq2 = "(%s )^{2}`%s`%s (%s )(%s )" % (var1, ams, abs(am) if abs(am) != 1 else "", var1, var2)

        return [eq1, eq2]

    else:
        if x1 > 0:
            x1s = "-"
        else:
            x1s = "+"
        if x2 > 0:
            x2s = "-"
        else:
            x2s = "+"
        
        m = -x1-x2
        n = x1 * x2
        ms = "+" if m > 0 else "-"
        ns = "+" if n > 0 else "-"

        eq1 = "(%s`%s`%s%s )(%s`%s`%s%s )" % (var1, x1s, abs(x1) if abs(x1) != 1 else "", var2, var1, x2s, abs(x2) if abs(x2) != 1 else "", var2)
        
        if x1 == x2:
            eq1 = "(%s`%s`%s%s )^{2}" % (var1, x1s, abs(x1) if abs(x1) != 1 else "", var2)
        
        eq2 = "%s^{2}`%s`%s%s%s`%s`%s%s^{2}" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2, ns, abs(n) if abs(n) != 1 else "", var2)
        
        if var_f == 1:
            eq2 = "(%s )^{2}`%s`%sLEFT(%s )(%s )`%s`%s%s^{2}" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2, ns, abs(n) if abs(n) != 1 else "", var2)

        if m == 0 and n != 0:
            eq2 = "%s^{2}`%s`%s%s^{2}" % (var1, ns, abs(n) if abs(n) != 1 else "", var2)

            if var_f == 1:
                eq2 = "(%s )^{2}`%s`%sLEFT(%s )^{2}" % (var1, ns, abs(n) if abs(n) != 1 else "", var2)

        elif m != 0 and n == 0:
            eq2 = "%s^{2}`%s`%s%s%s" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2)

            if var_f == 1:
                eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )(%s )" % (var1, ms, abs(m) if abs(m) != 1 else "", var1, var2)
        
        elif m == 0 and n == 0:
            eq2 = "%s^{2}" % (var1)

            if var_f == 1:
                eq2 = "(%s )^{2}" % (var1)
        
        return [eq1, eq2]


def make_equation2_v2(var1, var2, var_f, f1, f2):
    p1 = 1
    p2 = 1
    if f1[0][1] < 0:
        p1 = -1
    if f2[0][1] < 0:
        p2 = -1
    p = p1 * p2
    
    if f1[1] < 0:
        s1 = [1, "+"]
    else:
        s1 = [-1, "-"]
    a = abs(f1[0][1])
    b = abs(f1[0][0])
    
    if f2[1] < 0:
        s2 = [1, "+"]
    else:
        s2 = [-1, "-"]
    c = abs(f2[0][1])
    d = abs(f2[0][0])

    k1 = a * c
    k2 = s1[0] * b * c + s2[0] * a * d
    if k2 < 0:
        sk2 = [-1, "-"]
    else:
        sk2 = [1, "+"]
    k3 = s1[0] * s2[0] * b * d
    if k3 < 0:
        sk3 = [-1, "-"]
    else:
        sk3 = [1, "+"]

    
    if f1[1] == f2[1]:
        eq1 = "%sLEFT( %s%s`%s`%s%s )^{2}" % ("" if p == 1 else "-", a if a != 1 else "", var1, s1[1], b if b != 1 else "", var2)

        if var_f == 1:
            eq1 = "%sLEFT{ %sLEFT(%s )`%s`%sLEFT(%s ) }^{2}" % ("" if p == 1 else "-", a if a != 1 else "", var1, s1[1], b if b != 1 else "", var2)

    else:
        eq1 = "%sLEFT( %s%s`%s`%s%s ) ( %s%s`%s`%s%s )" % ("" if p == 1 else "-", a if a != 1 else "", var1, s1[1], b if b != 1 else "", var2, c if c != 1 else "", var1, s2[1], d if d != 1 else "", var2)

        if var_f == 1:
            eq1 = "%sLEFT{ %sLEFT(%s )`%s`%sLEFT(%s ) } { %sLEFT(%s )`%s`%sLEFT(%s ) }" % ("" if p == 1 else "-", a if a != 1 else "", var1, s1[1], b if b != 1 else "", var2, c if c != 1 else "", var1, s2[1], d if d != 1 else "", var2)

    eq2 = "%s%s^{2}`%s`%s%s%s`%s`%s%s^{2}" % (k1 if k1 != 1 else "", var1, sk2[1], abs(k2) if abs(k2) != 1 else "", var1, var2, sk3[1], abs(k3) if abs(k3) != 1 else "", var2)
    if var_f == 1:
        eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )(%s )`%s`%sLEFT(%s )^{2}" % (k1 if k1 != 1 else "", var1, sk2[1], abs(k2) if abs(k2) != 1 else "", var1, var2, sk3[1], abs(k3) if abs(k3) != 1 else "", var2)
    
    if p == -1:
        eq2 = "%s%s^{2}`%s`%s%s%s`%s`%s%s^{2}" % (-k1 if k1 != 1 else "-", var1, "+" if -sk2[0] == 1 else "-", abs(k2) if abs(k2) != 1 else "", var1, var2, "+" if -sk3[0] == 1 else "-", abs(k3) if abs(k3) != 1 else "", var2)

        if var_f == 1:
            eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )(%s )`%s`%sLEFT(%s )^{2}" % (-k1 if k1 != 1 else "-", var1, "+" if -sk2[0] == 1 else "-", abs(k2) if abs(k2) != 1 else "", var1, var2, "+" if -sk3[0] == 1 else "-", abs(k3) if abs(k3) != 1 else "", var2)


    if k2 == 0:
        eq2 = "%s%s^{2}`%s`%s%s^{2}" % (k1 if k1 != 1 else "", var1, sk3[1], abs(k3) if abs(k3) != 1 else "", var2)

        if var_f == 1:
            eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )^{2}" % (k1 if k1 != 1 else "", var1, sk3[1], abs(k3) if abs(k3) != 1 else "", var2)
        if p == -1:
            eq2 = "%s%s^{2}`%s`%s%s^{2}" % (-k1 if k1 != 1 else "-", var1, "+" if -sk3[0] == 1 else "-", abs(k3) if abs(k3) != 1 else "", var2)
            if var_f == 1:
                eq2 = "%sLEFT(%s )^{2}`%s`%sLEFT(%s )^{2}" % (-k1 if k1 != 1 else "-", var1, "+" if -sk3[0] == 1 else "-", abs(k3) if abs(k3) != 1 else "", var2)
    
    return [eq1, eq2]


def random_eq_gen_v2(mode, var1, var2, var_f):
    if mode == -1:
        x1 = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
        eq = make_equation_v2(var1, var2, var_f, x1, x1)

        return [[x1, x1], eq[0], eq[1]]
    elif mode == 0:
        xs = random.sample(list(range(1,6)), 2)
        x1 = xs[0] * random.sample([-1,1], 1)[0]
        x2 = xs[1] * random.sample([-1,1], 1)[0]
        eq = make_equation_v2(var1, var2, var_f, x1, x2)

        return [[x1, x2], eq[0], eq[1]]
    elif mode == 1:
        fr1 = frac_gen3(1, 0, [1, 2, 3, 4], 5)
        fr2 = frac_gen3(1, 0, [1, 2, 3, 4], 5)
        while fr1[1] == fr2[1]:
            fr2 = frac_gen3(1, 0, [1, 2, 3, 4], 5)
        eq = make_equation2_v2(var1, var2, var_f, fr1, fr2)

        return [[fr1[0], fr2[0]], eq[0], eq[1]]
    elif mode == 2:
        fr = frac_gen3(1, 0, [1, 2, 3, 4], 5)
        eq = make_equation2_v2(var1, var2, var_f, fr, fr)

        return [[fr[0], fr[0]], eq[0], eq[1]]


def print_sol(frs, var):
    if len(frs) == 1:
        f1 = frs[0]
        
        if f1[1]*f1[0] < 0:
            s1 = [1, "+"]
        else:
            s1 = [-1, "-"]
        a = abs(f1[1])
        b = abs(f1[0])

        eq = "%s%s`%s`%d" % (a if a != 1 else "", var, s1[1], b)

    else:
        eq = ""
        for i in range(frs):
            f1 = frs[i]
            if f1[1]*f1[0] < 0:
                s1 = [1, "+"]
            else:
                s1 = [-1, "-"]
            a = abs(f1[1])
            b = abs(f1[0])
            eq = eq + "( %s%s`%s`%d )" % (a if a != 1 else "", var, s1[1], b)
    
    return eq


# mode == 0: ()(), mode == 1: ----
def make_equation_example(var, var_f, fs, random_ans_l, mode):
    base_ls = []
    ans = random_ans_l[0]

    if ans[0] != ans[1]:
        base_ls.append(make_equation(var, var_f, 1, ans[0], ans[0])[mode*2])
        base_ls.append(make_equation(var, var_f, 1, ans[1], ans[1])[mode*2])
    base_ls.append(make_equation(var, var_f, 1, ans[0], -ans[1])[mode*2])
    base_ls.append(make_equation(var, var_f, 1, -ans[0], ans[1])[mode*2])
    base_ls.append(make_equation(var, var_f, 1, -ans[0], -ans[1])[mode*2])
    for i in range(len(fs)):
        base_ls.append(make_equation(var, var_f, 1, ans[0], fs[i])[mode*2])
        if ans[0] != ans[1]:
            base_ls.append(make_equation(var, var_f, 1, fs[i], ans[1])[mode*2])

    random.shuffle(base_ls)
    ex_lists = base_ls[0:4]
    ex_lists.append(random_ans_l[mode+1])

    return make_shuffle_example(ex_lists, 4)


# mode == 0: ()(), mode == 1: ----
def make_equation_example2(var, var_f, f_lists, ans, mode):
    base_ls = []
    ans_fs = ans[0]

    base_ls.append(make_equation2(var, var_f, [ans_fs[0], ans_fs[0][0]/ans_fs[0][1]], [[-ans_fs[1][0], ans_fs[1][1]], -ans_fs[1][0]/ans_fs[1][1]])[mode])
    base_ls.append(make_equation2(var, var_f, [[-ans_fs[0][0], ans_fs[0][1]], -ans_fs[0][0]/ans_fs[0][1]], [ans_fs[1], ans_fs[1][0]/ans_fs[1][1]])[mode])
    base_ls.append(make_equation2(var, var_f, [[-ans_fs[0][0], ans_fs[0][1]], -ans_fs[0][0]/ans_fs[0][1]], [[-ans_fs[1][0], ans_fs[1][1]], -ans_fs[1][0]/ans_fs[1][1]])[mode])
    for i in range(len(f_lists)):
        base_ls.append(make_equation2(var, var_f, [ans_fs[0], ans_fs[0][0]/ans_fs[0][1]], [f_lists[i], f_lists[i][0]/f_lists[i][1]])[mode])
        if ans_fs[0][0]/ans_fs[0][1] != ans_fs[1][0]/ans_fs[1][1]:
            base_ls.append(make_equation2(var, var_f, [f_lists[i], f_lists[i][0]/f_lists[i][1]], [ans_fs[1], ans_fs[1][0]/ans_fs[1][1]])[mode])

    random.shuffle(base_ls)
    ex_lists = base_ls[0:4]
    ex_lists.append(ans[mode+1])

    return make_shuffle_example(ex_lists, 4)

# 조사 확인(강슬기)
def josa_check(name):
    JONGSUNG_LIST = [' ', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ',
                     'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ']

    char_code = ord(name) - 44032
    ch1 = int(char_code / 588)
    ch2 = int((char_code - (588 * ch1)) / 28)
    ch3 = int((char_code - (588 * ch1) - (28 * ch2)))

    return JONGSUNG_LIST[ch3]

# 수식표현(강슬기)
def int_str_converter(number, first=False, exp_one_remove=False):
    if first == True :
        if exp_one_remove == True :
            if number == -1 :
                sym = '-'
                num = ''
            elif number == 1 :
                sym = ''
                num = ''
            elif number < 0 :
                sym = '-'
                num = str(abs(number))
            else :
                sym = ''
                num = str(abs(number))
        else :
            if number < 0 :
                sym = '-'
                num = str(abs(number))
            else :
                sym = ''
                num = str(abs(number))

    else :
        if exp_one_remove == True :
            if number == -1 :
                sym = '`-`'
                num = ''
            elif number == 1 :
                sym = '`+`'
                num = ''
            elif number < 0 :
                sym = '`-`'
                num = str(abs(number))
            else :
                sym = '`+`'
                num = str(abs(number))
        else :
            if number < 0 :
                sym = '`-`'
                num = str(abs(number))
            else :
                sym = '`+`'
                num = str(abs(number))

    num_str = sym + num

    return num_str

# 서로소(강슬기)
def is_gcd(num1, num2):
    x, y = abs(num1), abs(num2)
    if x != y:
        while 1:
            r = x % y
            if r == 0:
                break
            x, y = y, r
        if y == 1:
            return True
    return False

# 기약분수 여부 확인(강슬기)
def check_simFrac(num1, num2):
    if get_gcd(num1, num2) == 1:
        return True
    else:
        return False

# 최대공약수(강슬기)
def get_gcd(num1, num2):
    num1, num2 = sorted([num1, num2])
    gcd = 1
    for i in range(num1, 0, -1):
        if num1 % i == 0 and num2 % i == 0:
            gcd = i
            break

    return gcd

# 최소공배수(강슬기)
def get_lcm(num1, num2):
    return num1 * num2 // get_gcd(num1, num2)

# 조사확인(이명훈)
def postposition(num, flag=0):
    num = abs(num)
    # 조사 이, 가
    if flag == 0:
        if num in [2, 4, 5, 9]:
            return '가'
        return '이'
    # 조사 을, 를
    if flag == 1:
        if num in [2, 4, 5, 9]:
            return '를'
        return '을'
    # 조사 와, 과
    elif flag == 2:
        if num in [2, 4, 5, 9]:
            return '와'
        return '과'
    # 조사 로, 으로
    elif flag == 3:
        if num in [2, 4, 5, 7, 8, 9]:
            return '로'
        return '으로'
    # 조사 라고, 이라고
    elif flag == 4:
        if num in [2, 4, 5, 9]:
            return '라고'
        return '이라고'
    # 조사 은, 는
    else:
        if num in [2, 4, 5, 9]:
            return '는'
        return '은'

# 최소공배수(이명훈)
def least_common_multiple(num1, num2):
    if num1 > num2:
        lcm = num1
    else:
        lcm = num2
    while lcm:
        if lcm % num1 == 0 and lcm % num2 == 0:
            break
        lcm += 1
    return lcm

# 약분(이명훈)
def reduce(num1, num2):
    x, y = abs(num1), abs(num2)
    commonDivisor = 2
    if x > y:
        while commonDivisor <= abs(num2):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    else:
        while commonDivisor <= abs(num1):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    return x, y

# 조사 확인(강슬기)
def josa_check(name):
    JONGSUNG_LIST = [' ', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ',
                     'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ']

    char_code = ord(name) - 44032
    ch1 = int(char_code / 588)
    ch2 = int((char_code - (588 * ch1)) / 28)
    ch3 = int((char_code - (588 * ch1) - (28 * ch2)))

    return JONGSUNG_LIST[ch3]

# 수식표현(강슬기)
def int_str_converter(number, first=False, exp_one_remove=False):
    if first == True :
        if exp_one_remove == True :
            if number == -1 :
                sym = '-'
                num = ''
            elif number == 1 :
                sym = ''
                num = ''
            elif number < 0 :
                sym = '-'
                num = str(abs(number))
            else :
                sym = ''
                num = str(abs(number))
        else :
            if number < 0 :
                sym = '-'
                num = str(abs(number))
            else :
                sym = ''
                num = str(abs(number))

    else :
        if exp_one_remove == True :
            if number == -1 :
                sym = '`-`'
                num = ''
            elif number == 1 :
                sym = '`+`'
                num = ''
            elif number < 0 :
                sym = '`-`'
                num = str(abs(number))
            else :
                sym = '`+`'
                num = str(abs(number))
        else :
            if number < 0 :
                sym = '`-`'
                num = str(abs(number))
            else :
                sym = '`+`'
                num = str(abs(number))

    num_str = sym + num

    return num_str

# 서로소(강슬기)
def is_gcd(num1, num2):
    x, y = abs(num1), abs(num2)
    if x != y:
        while 1:
            r = x % y
            if r == 0:
                break
            x, y = y, r
        if y == 1:
            return True
    return False

# 기약분수 여부 확인(강슬기)
def check_simFrac(num1, num2):
    if get_gcd(num1, num2) == 1:
        return True
    else:
        return False

# 최대공약수(강슬기)
def get_gcd(num1, num2):
    num1, num2 = sorted([num1, num2])
    gcd = 1
    for i in range(num1, 0, -1):
        if num1 % i == 0 and num2 % i == 0:
            gcd = i
            break

    return gcd

# 최소공배수(강슬기)
def get_lcm(num1, num2):
    return num1 * num2 // get_gcd(num1, num2)

# 약수 리스트 구하기(강슬기)
def get_divisor(num):
    n = 0
    divisors = []
    while True :
        n += 1
        if num % n == 0 :
            divisors.append(n)

        if n == num:
            break
    return divisors

# 소인수분해 함수(지선영)
def integer_factorization(number):
    '''
    number의 소인수분해
    :param number:
    :return: [[소인수,차수], [소인수, 차수]]
    '''

    # 0~n까지의 boolean slot 생성
    # 0과 1은 소수가 아니므로 제외
    slot = [False, False] + [True] * (number - 1)

    # 소수 리스트 초기화
    primes = []
    # 소인수분해 결과를 담을 리스트 초기화
    factors_list = []

    # 2부터 number 까지의 숫자를 탐색
    for i in range(2, number + 1):
        # i번째 숫자가 소수인 경우
        if slot[i]:
            # primes에 append
            primes.append(i)

            # i*2부터 number 까지의 숫자 중 i의 배수를 소수에서 제외
            for j in range(i * 2, number + 1, i):
                slot[j] = False

    # 2부터 number 사이에 존재하는 소수 루프
    for prime in primes:
        degree = 0  # 차수
        # number가 prime으로 나누어 떨어지는 경우 number를 prime으로 계속 나누며 차수를 구함
        while (number % prime) == 0:
            number = number/prime
            degree += 1
        # 차수가 1 이상인 경우 factors_list에 [소인수, 차수] 형식으로 append
        if degree > 0:
            factors_list.append([prime, degree])

    return factors_list

# 제곱근 정리(지선영)
def sqrt_pow(number):
    '''
    제곱근에서 완전제곱수를 루트 밖으로 빼내기
    :param number:
    :return: 완전제곱수가 되는 수(pow), 나머지(sqrt)
    pow, sqrt = 2, 6 = sqrt_pow(24)
    '''

    # number 소인수분해
    factors_list = integer_factorization(number)

    pow = 1
    for i, factor in enumerate(factors_list):
        pri, deg = factor
        pri = pri
        deg = deg

        if deg % 2 == 0:
            pow = pow * (math.pow(pri, deg))
        else:
            pow = pow * (math.pow(pri, deg - 1))

    pow = int(pow)

    return int(math.sqrt(pow)), number // pow

# 조사확인(이명훈)
def postposition(num, flag=0):
    num = abs(num)
    # 조사 이, 가
    if flag == 0:
        if num in [2, 4, 5, 9]:
            return '가'
        return '이'
    # 조사 을, 를
    if flag == 1:
        if num in [2, 4, 5, 9]:
            return '를'
        return '을'
    # 조사 와, 과
    elif flag == 2:
        if num in [2, 4, 5, 9]:
            return '와'
        return '과'
    # 조사 로, 으로
    elif flag == 3:
        if num in [2, 4, 5, 7, 8, 9]:
            return '로'
        return '으로'
    # 조사 라고, 이라고
    elif flag == 4:
        if num in [2, 4, 5, 9]:
            return '라고'
        return '이라고'
    # 조사 은, 는
    else:
        if num in [2, 4, 5, 9]:
            return '는'
        return '은'

# 최소공배수(이명훈)
def least_common_multiple(num1, num2):
    if num1 > num2:
        lcm = num1
    else:
        lcm = num2
    while lcm:
        if lcm % num1 == 0 and lcm % num2 == 0:
            break
        lcm += 1
    return lcm

# 최대공약수 리턴(이명훈)
def great_common_divisor(num1, num2):
    if num1 > num2:
        gcd = num1
    else:
        gcd = num2
    while 1:
        if gcd == 1:
            break
        if num1 % gcd == 0 and num2 % gcd == 0:
            break
        gcd -= 1
    return gcd

# 약분(이명훈)
def reduce(num1, num2):
    x, y = abs(num1), abs(num2)
    commonDivisor = 2
    if x > y:
        while commonDivisor <= abs(num2):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    else:
        while commonDivisor <= abs(num1):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    return x, y

# 최대공약수(이명훈)
def gcd(num1, num2):
    x, y = abs(num1), abs(num2)
    commonDivisor = 2
    if x > y:
        while commonDivisor <= abs(num2):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    else:
        while commonDivisor <= abs(num1):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    return commonDivisor

# 부호 리턴(이명훈)
def sign(num):
    if num < 0:
        return '-'
    else:
        return '+'

# 정답 부호 리턴(이명훈)
def answer_sign(num):
    if num < 0:
        return '-'
    else:
        return ''

# 수식표현_변수 앞(이명훈)
def post_variable(num):
    num = abs(num)
    if num == 1:
        return ''
    return num

# 수식표현_맨 앞 변수 앞(이명훈)
def ppost_variable(num):
    if abs(num) == 1:
        if num > 0:
            return ''
        else:
            return '-'
    else:
        if num > 0:
            return num
        else:
            return num

# 분수 및 약분 값 리턴(이명훈)
def frac(num1, num2, a_sqrt=None, b_sqrt=None):
    num1, num2 = reduce(int(num1), int(num2))
    if a_sqrt:
        if num2 == 1:
            return '{0} sqrt{{ {1} }}'.format(post_variable(num1), a_sqrt)
        else:
            return '{{ {0} sqrt{{ {2} }} }} OVER {{ {1} }}'.format(post_variable(num1), num2, a_sqrt)

    if num2 == 1:
        return num1
    else:
        return '{{ {0} }} OVER {{ {1} }}'.format(num1, num2)

# 소수일 경우 리턴 True(이명훈)
def is_prime_number(number):
    num = abs(number)
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

# 제곱수일 경우 true 리턴(이명훈)
def is_square_number(num):
    for i in range(1, num):
        if num // i == i and num % i == 0:
            return True
    return False

# 제곱 형태 리턴(이명훈)
def trans_squared(num, squ):
    if squ == 1:
        if num < 0:
            return '( {0} )'.format(num)
        elif num > 0:
            return '{0}'.format(num)
    if num < 0:
        return '( {0} )^{{ {1} }}'.format(num, squ)
    elif num > 0:
        return '{0}^{{ {1} }}'.format(num, squ)
    else:
        [print('error') for _ in range(100)]

# 약수를 리스트 형태로 리턴(이명훈)
def submultiple(num):
    return_lst = []
    for i in range(1, num + 1):
        if num % i == 0:
            return_lst.append(i)
    return return_lst

# 인수분해 서로 다른 두 해 리턴 ex> x^{2} + Ax + B(이명훈)
def factorization(num1, num2):
    lst = submultiple(abs(num2))
    re_lst = list(reversed(lst))
    if num2 > 0:
        lst1 = lst + [-i for i in lst]
        lst2 = re_lst + [-i for i in re_lst]
        lst = list(zip(lst1, lst2))
    else:
        lst1 = lst + [-i for i in lst]
        lst2 = [-i for i in re_lst] + re_lst
        lst = list(zip(lst1, lst2))

    for i, j in lst:
        if i + j == num1:
            return i, j
    return 0, 0

# 약분(신현호)
def shh_reduce(num1, num2):
    x, y = abs(num1), abs(num2)
    commonDivisor = 2
    if x > y:
        while commonDivisor <= abs(num2):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    else:
        while commonDivisor <= abs(num1):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    return x, y

# 분수생성(신현호)
def shh_frac(a, G):
    s = '-' if a * G < 0 else ''
    n = abs(a) // get_gcd(abs(a), abs(G))
    d = abs(G) // get_gcd(abs(a), abs(G))
    if n == d:
        return '%s1' % (s)
    elif d == 1:
        return '%s%s' % (s, n)
    else:
        return '%s{%d} over {%d}' % (s, n, d)

# 음수처리(분수)_괄호(신현호)
def round_brackets(a, b):
    if b == 1:
        if a < 0:
            value = ' ( %s  )' % int_str_converter(a, first=True)
        else:
            value = '%s' % int_str_converter(a, first=True)
        return value

    else:
        if a * b < 0:
            value = ' ( %s {%d} over {%d}  )' % (frac_sign(a * b), abs(a), abs(b))
        else:
            value = '{%d} over {%d}' % (abs(a), abs(b))
        return value

# 음수처리(정수)_괄호(신현호)
def round_brackets_int(a):
    if a < 0:
        value = ' ( %s  )' % int_str_converter(a, first=True)

    else:
        value = '%s' % int_str_converter(a, first=True)

    return value

# 부호처리(분수)(신현호)
def frac_sign(num):
    if num < 0:
        return '-'
    else:
        return ''

# 조사 확인(신현호)
def check_jongsung(number):
    '''
    숫자 뒤에 오는 조사 설정
    :param number: 숫자
    :return: 조사
    '''
    have_jongsung_num = ['0', '1', '3', '6', '7', '8']

    try:
        mention = number.mention
    except:
        mention = str(number)

    if mention[-1] in have_jongsung_num:
        return ["과", "은", "을", "이", '으로', '이었다.']
    else:
        return ["와", "는", "를", "가", '로', '였다.']

# 수식표현_분수 앞(신현호)
def frac_variable(num):
    num = abs(num)
    return num

# 등장하는 변수들의 절댓값 체크 함수 (기본값 100으로 되어 있음. max로 수정 가능)(지선영)
def check_abs(num_list, max=100):
    for num in num_list:
        if abs(num) > 100:
            return False

    return True

# 수식표현_부호(이다빈)
def str_double_sym(line):

    pattern = '[-1-1]{1}[a-zA-Z]+'
    p = re.compile(pattern)

    if '`+`-' in line:
        line = line.replace('`+`-', '`-`')
    if '`+`+' in line:
        line = line.replace('`+`+', '`+`')
    if '`-`+' in line:
        line = line.replace('`-`+', '`-`')
    if '`-`-' in line:
        line = line.replace('`-`-', '`+`')

    return line

# 부호 체크 함수(지선영)
def check_sign(num, first=False):
    sign = ''

    # 음수, 위치 : 식의 첫번째
    if num < 0 and first:
        sign = '-'
    # 음수, 위치 : 식의 중간 이후 (띄어쓰기 ` 추가)
    elif num < 0 and not first:
        sign = "`-`"
    # 양수, 위치 : 식의 첫번째
    elif num > 0 and first:
        sign = ''
    # 0
    elif num == 0:
        sign = ''
    # 양수, 위치 : 식의 중간 이후 (띄어쓰기 ` 추가)
    else:
        sign = "`+`"

    return sign

# 최대공약수 함수(지선영)
def greatest_common_divisor(number1, number2):
    '''
    최대공약수
    :param number1: 최대공약수를 계산할 숫자 1
    :param number2: 최대공약수를 계산할 숫자 2
    :return: (최대공약수, 최대공약수 계산식)
    '''
    # 숫자별 소인수분해 계산 결과 받아오기
    n1_factors_list = integer_factorization(number1)
    n2_factors_list = integer_factorization(number2)

    # number1과 number2의 소인수 리스트 생성
    total_factors = [factor for (factor, degree) in n1_factors_list]
    total_factors += [factor for (factor, degree) in n2_factors_list]
    # 소인수 통합 리스트에서 2회 이상 등장하는 경우 공통된 소인수 리스트에 추가
    common_factors = [factor for factor in set(total_factors) if total_factors.count(factor) >= 2]

    # 숫자별 소인수분해 계산 결과 통합 후 차수가 낮은 순서대로 정렬
    total_factors_list = n1_factors_list + n2_factors_list
    total_factors_list = sorted(total_factors_list, key=lambda factors: factors[-1])

    # 최대공약수 계산 식 리스트 생성
    greatest_common_divisors = []

    # 공통된 소인수 리스트 루프
    for c_factor in common_factors:
        # 차수가 낮은 순서대로 정렬된 소인수분해 계산 결과 루프
        for (factor, degree) in total_factors_list:
            # factor와 c_factor가 일치하는 경우 해당 (factor, degree) 쌍을 최대공약수 계산 식으로 추가함
            if factor == c_factor:
                greatest_common_divisors.append([c_factor, degree])
                break

    # 최대공약수 계산
    gcd = 1
    for (factors, degree) in greatest_common_divisors:
        gcd *= math.pow(factors, degree)

    return int(gcd), greatest_common_divisors

# 기약분수로 약분(지선영)
def reduction(numerator, denominator):
    '''
    분자와 분모를 인자값으로 넣으면 기약분수로 약분해주는 함수
    :param numerator: 분자
    :param denominator: 분모
    :return: 분수 (분수형태 또는 자연수형태)
    '''
    # 최대공약수 구하기
    gcd = greatest_common_divisor(abs(numerator), abs(denominator))

    # 최대공약수가 1이 아닌 경우 = 입력값이 기약분수가 아닌 경우
    if gcd[0] != 1:
        numerator /= gcd[0]
        denominator /= gcd[0]

        # 분모가 1인 경우
        if abs(int(denominator)) == 1:
            return int(numerator * denominator)
        # 분수 < 0
        elif denominator * numerator < 0:
            return "- {%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))
        # 분수 > 0
        else:
            return "{%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))
    # 기약분수인 경우
    else:
        # 분모가 1인 경우
        if abs(int(denominator)) == 1:
            return int(numerator * denominator)
        # 분수 < 0
        elif denominator * numerator < 0:
            return "- {%s} over {%s}" % (abs(numerator), abs(denominator))
        # 분수 > 0
        else:
            return "{%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))

# 숫자 뒤에 오는 조사(지선영)
def num_josa(number):
    '''
    숫자 뒤에 오는 조사 설정
    :param number: 숫자
    :return: 조사
    '''
    have_jongsung_num = ['0', '1', '3', '6', '7', '8']
    have_euro_num = ['1', '7', '8']

    try:
        mention = number.mention
    except:
        mention = str(number)

    if mention[-1] in have_jongsung_num:
        if mention[-1] in have_euro_num:
            return ["과", "은", "을", "이", "로"]
        else:
            return ["과", "은", "을", "이", "으로"]
    else:
        return ["와", "는", "를", "가", "로"]

# 최대공약수(이명훈)
def gcd(num1, num2):
    x, y = abs(num1), abs(num2)
    commonDivisor = 2
    if x > y:
        while commonDivisor <= abs(num2):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    else:
        while commonDivisor <= abs(num1):
            if x % commonDivisor == 0 and y % commonDivisor == 0:
                x, y = int(x / commonDivisor), int(y / commonDivisor)
            else:
                commonDivisor += 1
    return commonDivisor

# 부호 리턴(이명훈)
def sign(num):
    if num < 0:
        return '-'
    else:
        return '+'

# 정답 부호 리턴(이명훈)
def answer_sign(num):
    if num < 0:
        return '-'
    else:
        return ''

# 수식표현_변수 앞(이명훈)
def post_variable(num):
    num = abs(num)
    if num == 1:
        return ''
    return num

# 수식표현_맨 앞 변수 앞(이명훈)
def ppost_variable(num):
    if abs(num) == 1:
        if num > 0:
            return ''
        else:
            return '-'
    else:
        if num > 0:
            return num
        else:
            return num

# 소수일 경우 리턴 True(이명훈)
def is_prime_number(number):
    num = abs(number)
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

# 제곱수일 경우 true 리턴(이명훈)
def is_square_number(num):
    for i in range(1, num):
        if num // i == i and num % i == 0:
            return True
    return False

# 수식 표현_분수(신현호)
def frac_sign(num):
    if num < 0:
        return '-'
    else:
        return ''

# 수식표현_분수 앞(신현호)
def frac_variable(num):
    num = abs(num)
    return num

# 수식표현_분수(이다빈)
def change_frac(frac):
    if frac.count('-') == 2:
        frac = frac.replace('-', '')

    elif frac.count('-') == 1:
        frac = frac.replace('-', '')
        frac = '-' + frac
    else:
        pass

    return frac

# 수식표현_부호(이다빈)
def str_double_sym(line):

    pattern = '[-1-1]{1}[a-zA-Z]+'
    p = re.compile(pattern)

    if '`+`-' in line:
        line = line.replace('`+`-', '`-`')
    if '`+`+' in line:
        line = line.replace('`+`+', '`+`')
    if '`-`+' in line:
        line = line.replace('`-`+', '`-`')
    if '`-`-' in line:
        line = line.replace('`-`-', '`+`')

    return line

# 부호 체크 함수(지선영)
def check_sign(num, first=False):
    sign = ''

    # 음수, 위치 : 식의 첫번째
    if num < 0 and first:
        sign = '-'
    # 음수, 위치 : 식의 중간 이후 (띄어쓰기 ` 추가)
    elif num < 0 and not first:
        sign = "`-`"
    # 양수, 위치 : 식의 첫번째
    elif num > 0 and first:
        sign = ''
    # 0
    elif num == 0:
        sign = ''
    # 양수, 위치 : 식의 중간 이후 (띄어쓰기 ` 추가)
    else:
        sign = "`+`"

    return sign

# 소인수분해 함수(지선영)
def integer_factorization(number):
    '''
    number의 소인수분해
    :param number:
    :return: [[소인수,차수], [소인수, 차수]]
    '''

    # 0~n까지의 boolean slot 생성
    # 0과 1은 소수가 아니므로 제외
    slot = [False, False] + [True] * (number - 1)

    # 소수 리스트 초기화
    primes = []
    # 소인수분해 결과를 담을 리스트 초기화
    factors_list = []

    # 2부터 number 까지의 숫자를 탐색
    for i in range(2, number + 1):
        # i번째 숫자가 소수인 경우
        if slot[i]:
            # primes에 append
            primes.append(i)

            # i*2부터 number 까지의 숫자 중 i의 배수를 소수에서 제외
            for j in range(i * 2, number + 1, i):
                slot[j] = False

    # 2부터 number 사이에 존재하는 소수 루프
    for prime in primes:
        degree = 0  # 차수
        # number가 prime으로 나누어 떨어지는 경우 number를 prime으로 계속 나누며 차수를 구함
        while (number % prime) == 0:
            number = number/prime
            degree += 1
        # 차수가 1 이상인 경우 factors_list에 [소인수, 차수] 형식으로 append
        if degree > 0:
            factors_list.append([prime, degree])

    return factors_list

# 최대공약수 함수(지선영)
def greatest_common_divisor(number1, number2):
    '''
    최대공약수
    :param number1: 최대공약수를 계산할 숫자 1
    :param number2: 최대공약수를 계산할 숫자 2
    :return: (최대공약수, 최대공약수 계산식)
    '''
    # 숫자별 소인수분해 계산 결과 받아오기
    n1_factors_list = integer_factorization(number1)
    n2_factors_list = integer_factorization(number2)

    # number1과 number2의 소인수 리스트 생성
    total_factors = [factor for (factor, degree) in n1_factors_list]
    total_factors += [factor for (factor, degree) in n2_factors_list]
    # 소인수 통합 리스트에서 2회 이상 등장하는 경우 공통된 소인수 리스트에 추가
    common_factors = [factor for factor in set(total_factors) if total_factors.count(factor) >= 2]

    # 숫자별 소인수분해 계산 결과 통합 후 차수가 낮은 순서대로 정렬
    total_factors_list = n1_factors_list + n2_factors_list
    total_factors_list = sorted(total_factors_list, key=lambda factors: factors[-1])

    # 최대공약수 계산 식 리스트 생성
    greatest_common_divisors = []

    # 공통된 소인수 리스트 루프
    for c_factor in common_factors:
        # 차수가 낮은 순서대로 정렬된 소인수분해 계산 결과 루프
        for (factor, degree) in total_factors_list:
            # factor와 c_factor가 일치하는 경우 해당 (factor, degree) 쌍을 최대공약수 계산 식으로 추가함
            if factor == c_factor:
                greatest_common_divisors.append([c_factor, degree])
                break

    # 최대공약수 계산
    gcd = 1
    for (factors, degree) in greatest_common_divisors:
        gcd *= math.pow(factors, degree)

    return int(gcd), greatest_common_divisors

# 제곱근 정리(지선영)
def sqrt_pow(number):
    '''
    제곱근에서 완전제곱수를 루트 밖으로 빼내기
    :param number:
    :return: 완전제곱수가 되는 수(pow), 나머지(sqrt)
    pow, sqrt = 2, 6 = sqrt_pow(24)
    '''

    # number 소인수분해
    factors_list = integer_factorization(number)

    pow = 1
    for i, factor in enumerate(factors_list):
        pri, deg = factor
        pri = pri
        deg = deg

        if deg % 2 == 0:
            pow = pow * (math.pow(pri, deg))
        else:
            pow = pow * (math.pow(pri, deg - 1))

    pow = int(pow)

    return int(math.sqrt(pow)), number // pow

# 기약분수로 약분(지선영)
def reduction(numerator, denominator):
    '''
    분자와 분모를 인자값으로 넣으면 기약분수로 약분해주는 함수
    :param numerator: 분자
    :param denominator: 분모
    :return: 분수 (분수형태 또는 자연수형태)
    '''
    # 최대공약수 구하기
    gcd = greatest_common_divisor(abs(numerator), abs(denominator))

    # 최대공약수가 1이 아닌 경우 = 입력값이 기약분수가 아닌 경우
    if gcd[0] != 1:
        numerator /= gcd[0]
        denominator /= gcd[0]

        # 분모가 1인 경우
        if abs(int(denominator)) == 1:
            return int(numerator * denominator)
        # 분수 < 0
        elif denominator * numerator < 0:
            return "- {%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))
        # 분수 > 0
        else:
            return "{%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))
    # 기약분수인 경우
    else:
        # 분모가 1인 경우
        if abs(int(denominator)) == 1:
            return int(numerator * denominator)
        # 분수 < 0
        elif denominator * numerator < 0:
            return "- {%s} over {%s}" % (abs(numerator), abs(denominator))
        # 분수 > 0
        else:
            return "{%s} over {%s}" % (abs(int(numerator)), abs(int(denominator)))

# 숫자 뒤에 오는 조사(지선영)
def num_josa(number):
    '''
    숫자 뒤에 오는 조사 설정
    :param number: 숫자
    :return: 조사
    '''
    have_jongsung_num = ['0', '1', '3', '6', '7', '8']
    have_euro_num = ['1', '7', '8']

    try:
        mention = number.mention
    except:
        mention = str(number)

    if mention[-1] in have_jongsung_num:
        if mention[-1] in have_euro_num:
            return ["과", "은", "을", "이", "로"]
        else:
            return ["과", "은", "을", "이", "으로"]
    else:
        return ["와", "는", "를", "가", "로"]

def made_answer_cand_1(a):
    return [a-2,a-1,a,a+1,a+2]

def made_answer_cand_2(a1,a2):
    c=[]
    tmp=0
    for i in range(-2,3,1):
        if a1-i==0:
            c.append("$$수식$${}$$/수식$$".format(0))
        elif a2-i==0:
            c.append("$$수식$${}$$/수식$$".format(3*a1*a2))
        elif a2-i==1:
            c.append("$$수식$${}$$/수식$$".format(a1))
        elif a2-i==-1:
            c.append("$$수식$${}$$/수식$$".format(-a1))
        else:
            tmp=Fraction(a1-i,a2-i)
            if (tmp*10)%10==0:
                tmp=int(tmp)
                c.append("$$수식$${}$$/수식$$".format(tmp))
            else:
                c.append("$$수식$${} OVER {}$$/수식$$".format(tmp.numerator,tmp.denominator))
    return c

def made_answer_cand_3(a):
    return[a-10,a-5,a,a+5,a+10]
    

def gcd(a, b): 
    if a < b: (a, b) = (b, a) 
    while b != 0: 
        (a, b) = (b, a % b) 
    return a
def made_answer_cand_4(a):
    return [a-4,a-2,a,a+2,a+4]

def made_string(a):
    string=a[0]
    for i in range(len(a)):
        if i==0:
            continue
        else:
            string=string+", "+a[i]
    return string

def made_sign_string(a):
    if abs(a)==1:
        if a==1:
            return ""
        else:
            return "-"
    elif a<0:
        return "-`{}".format(abs(a))
    else:
        return "+`{}".format(a)

def made_fraction_string(a):
    if str(type(a))=="<class 'int'>":
        return a
    if a<0:
        return "`-`{}over{}".format(abs(a.numerator),abs(a.denominator))
    else:
        return "{}over{}".format(a.numerator,a.denominator)
def get_factor(a):
    factor=[]
    for i in range(1,a+1):
        if a%i==0:
            factor.append(i)
    return factor

def made_facotr_pair(a):
    pair=[]
    if len(a)%2==0:
        for i in range(len(a)//2):
            pair.append([a[i],a[len(a)-1-i]])
    else:
        for i in range(len(a)//2+1):
            if i==len(a)//2:
                pair.append([a[i],a[i]])
            else:
                pair.append([a[i],a[len(a)-1-i]])
    return pair

def proc_jo(num, check=0):
    if check < 0:
        # 은는
        if bool_jo(num):
            return "은"
        return "는"
    elif check == 0:
        # 이가
        if bool_jo(num):
            return "이"
        return "가"
    elif check == 2:
        # 와과
        if bool_jo(num):
            return "과"
        return "와"
    elif check == 3:
        #이(라고)
        if bool_jo(num):
            return "이"
        return ""
    elif bool_jo(num):
        # 을를
        return "을"
    return "를"

def bool_jo(num):
    if type(num) == int:
        num = int(str(num)[-1])
        lee_nums = [0, 1, 3, 6, 7, 8]
        if num in lee_nums:
            return True
        else:
            return False
    else:
        num = str(num)[-1]
        num = ord(num)
        if (num >= 65 and num <= 90) or (num >= 97 and num <= 122):
            t_list = [76, 77, 78, 82, 108, 109, 110, 114]
            if num in t_list:
                return True
            return False
        else:
            check = (num - 44032) % 28
            if check:
                return True
            return False

def getdivisor(num):
    if num < 1:
        return 0
    divisor = []
    for i in range(1, num + 1):
        if num % i == 0:
            divisor.append(i)
    return divisor


def is_prime(number):
    if number != 1:
        for i in range(2, number):
            if number % i == 0:
                return False
    else:
        return False
    return True


def getfactor(n):
    result = []
    for i in range(2, int(n / 2) + 1):
        if not is_prime(i):
            continue
        count = 0
        while n % i == 0:
            count = count + 1
            n = int(n / i)
        if count != 0:
            result.append((i, count))
            # (소수, 개수) 형태로 리스트에 추가됨
        if n == 1:
            break
    return result


def getfactor2(n):
    result = []
    for i in range(2, int(n / 2) + 1):
        if not is_prime(i):
            continue
        while n % i == 0:
            result.append(i)
            n = int(n / i)
        if n == 1:
            break
    return result


def GCD(a, b):
    if a % b == 0:
        return b
    return GCD(b, a % b)

# 3-1-2-1
def factorization312_Stem_001():
    stem = "$$수식$${stem1}{stem2}$$/수식$$를 전개하면?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}{stem2}$$/수식$$\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$${com2}$$/수식$$\n\n"

    while True:
        Z, Y, X, W = np.random.choice(np.arange(-9, 10), 4)
        V = Z * Y
        O = Z * W
        N = X * Y
        S = X * W
        U = O + N
        Q = V * (-1)
        P = Q + 1
        R = np.random.choice(np.arange(1, 10), 1)[0]

        if (R != U) and (S != Y) and (U != R) and (R != P)and (Z != 0) and (Y != 0) and (X != 0) and (W != 0):
            break

    stem1 = ' ( %sa %sb  )' % (int_str_converter(Z, True, True), int_str_converter(X, False, True))
    stem2 = ' ( %sa %sb  )' % (int_str_converter(Y, True, False), int_str_converter(W, False, True))

    items = [[V, U, Y], [V, U, S], [V, R, S], [Q, R, S], [Q, P, S]]

    qu_ep_list = ['%sa^{2} %sab %sb^{2}' % (int_str_converter(a, True, True), int_str_converter(b, False, True),
                                           int_str_converter(c, False, True)) for [a, b, c] in items ]

    np.random.shuffle(qu_ep_list)

    asw1 = 0
    com2 = ''
    for i, qu_ep in enumerate(qu_ep_list):
        if qu_ep == '%sa^{2} %sab %sb^{2}' % (int_str_converter(V, True, True), int_str_converter(U, False, True),
                                              int_str_converter(S, False, True)):
            asw1 = i
            com2 = '=`%s' % qu_ep
        else:
            pass

    com1 = '=`%sa^{2} %sab %sab %sb^{2}' % (int_str_converter(V, True, True), int_str_converter(O, False, True),
                                            int_str_converter(N, False, True), int_str_converter(S, False, True))

    stem = stem.format(stem1=str_double_sym(stem1), stem2=str_double_sym(stem2), qu_ep1=str_double_sym(qu_ep_list[0]),
                       qu_ep2=str_double_sym(qu_ep_list[1]), qu_ep3=str_double_sym(qu_ep_list[2]),
                       qu_ep4=str_double_sym(qu_ep_list[3]), qu_ep5=str_double_sym(qu_ep_list[4]))

    answer = answer.format(asw1=multiple_choice_nums[asw1])
    comment = comment.format(stem1=str_double_sym(stem1), stem2=str_double_sym(stem2),
                             com1=str_double_sym(com1), com2=str_double_sym(com2))

    return stem, answer, comment


# 3-1-2-2
def factorization312_Stem_002():
    stem = "$$수식$${stem1}{stem2}$$/수식$$를 전개한 식이 $$수식$${stem3}$$/수식$$일 때, " \
           "상수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$에 대하여 합 $$수식$$A `+` B$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}{stem2}$$/수식$$\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$, $$수식$${com4}$$/수식$$\n" \
              "따라서 $$수식$$A `+` B {com5}$$/수식$$\n\n"

    while True:
        W = np.random.choice(np.arange(1, 10), 1)[0]
        V, U = np.random.choice(np.arange(-9, 10), 2)
        N = np.random.choice(np.arange(1, 6), 1)[0]
        T = W * N
        S = V * U
        D = W * U
        G = D + V * N
        K = N + G

        if (V != 0) and (U != 0):
            break

    stem1 = ' ( %sx %sy  )' % (int_str_converter(W, first=True, exp_one_remove=True),
                                        int_str_converter(V, first=False, exp_one_remove=True))
    stem2 = ' ( Ax %sy  )' % int_str_converter(U, first=False, exp_one_remove=True)
    stem3 = '%sx^{2} `+` Bxy %sy^{2}' % (int_str_converter(T, first=True, exp_one_remove=True),
                                         int_str_converter(U, first=False, exp_one_remove=True))
    com1 = '=` %sAx^{2} %sxy %sAxy %sy^{2}' % (int_str_converter(W, first=True, exp_one_remove=True),
                                               int_str_converter(D, first=False, exp_one_remove=True),
                                               int_str_converter(V, first=False, exp_one_remove=True),
                                               int_str_converter(S, first=False, exp_one_remove=True))
    com2 = '%sA `=` %s' % (int_str_converter(W, first=True, exp_one_remove=True), T)
    com3 = 'A `=` %d' % (N)
    com4 = 'B `=` %s %sA `=` %d' % (int_str_converter(D, first=True, exp_one_remove=True),
                                    int_str_converter(V, first=False, exp_one_remove=True), G)
    b1, b2 = ['  ( ', '  ) '] if G < 0 else ['', '']
    com5 = '=` %d `+` %s%d%s `=` %d' % (N, b1, G, b2, K)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, A='A', B='B', ANB='A `+` B')
    answer = answer.format(asw_num=K)
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-3
def factorization312_Stem_003():
    stem = "가로, 세로의 길이가 각각 $$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$인 직사각형의 넓이는?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$$ ( {stem1}  )`TIMES` ( {stem2}  )$$/수식$$\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$${com2}$$/수식$$\n\n"

    while True:
        E, F, G, H = np.random.choice(np.arange(-9, 10), 4, True)
        Z = E * G
        Y = E * H
        X = F * G
        W = F * H
        U = X + Y
        V = -1 * Z
        T = -1 * U
        M, N = np.random.choice(np.arange(-9, 10), 2, False)
        if (M != U) and (N != W) and (M != 0) and (N != 0) and (E != 0) and (F != 0) \
                and (G != 0) and (H != 0) and (M != 0) and (T != 0) and (U != 0) and (N != 0):
            break

    stem1 = '%sa %sb' % (int_str_converter(E, first=True, exp_one_remove=True),
                         int_str_converter(F, first=False, exp_one_remove=True))
    stem2 = '%sa %sb' % (int_str_converter(G, first=True, exp_one_remove=True),
                         int_str_converter(H, first=False, exp_one_remove=True))
    com1 = '=`%sa^{2} %sab %sab %sb^{2}' % (int_str_converter(Z, first=True, exp_one_remove=True),
                                          int_str_converter(Y, first=False, exp_one_remove=True),
                                          int_str_converter(X, first=False, exp_one_remove=True),
                                          int_str_converter(W, first=False, exp_one_remove=True))

    val_list = [[Z, M, W], [Z, U, W], [Z, U, N], [V, T, N], [V, U, W]]
    qu_ep_list = ['%sa^{2} %sab %sb^{2}' % (int_str_converter(a, True, True),
                                            int_str_converter(b, False, True),
                                            int_str_converter(c, False, True))
                                            for [a, b, c] in val_list]

    np.random.shuffle(qu_ep_list)

    asw_num = 0
    com2 = ''
    for i, qu_ep in enumerate(qu_ep_list):
        if qu_ep == '%sa^{2} %sab %sb^{2}' % (int_str_converter(Z, first=True, exp_one_remove=True),
                                              int_str_converter(U, first=False, exp_one_remove=True),
                                              int_str_converter(W, first=False, exp_one_remove=True)):
            asw_num = i
            com2 = '=`' + qu_ep
        else:
            pass

    stem = stem.format(stem1=stem1, stem2=stem2, qu_ep1=qu_ep_list[0], qu_ep2=qu_ep_list[1],
                       qu_ep3=qu_ep_list[2], qu_ep4=qu_ep_list[3], qu_ep5=qu_ep_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[asw_num])
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-4
def factorization312_Stem_004():
    stem = "$$수식$${stem1}`-`{stem2}`=`{stem3}$$/수식$$일때, 상수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$에 대하여 " \
           "$$수식$$A`+`B$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}`-`{stem2}$$/수식$$\n" \
              "$$수식$${com1}{com2}$$/수식$$\n" \
              "$$수식$${com1}{com3}$$/수식$$\n" \
              "$$수식$${com4}$$/수식$$\n" \
              "이때 $$수식$${com5}$$/수식$$의 계수는 $$수식$${AA}$$/수식$$이고 " \
              "$$수식$$ab$$/수식$$의 계수는 $$수식$${BB}$$/수식$$\n" \
              "따라서 $$수식$$A `=` {AA}$$/수식$$, $$수식$$B `=` {BB}$$/수식$$이므로 " \
              "$$수식$${c1}$$/수식$$\n\n"

    while True:
        Z, X, Y, W, V, U, T, S, R = np.random.choice(np.arange(-9, 10), 9, True)
        M = Z * W
        L = X * W
        K = Y * W
        J = Z * V
        I = X * V
        H = Y * V
        G = U * S
        F = T * S
        E = U * R
        D = T * R
        AA = M - G
        BB = L + J
        O = K - F - E
        N = -1 * D
        C = AA + BB

        if 0 not in [Z, X, Y, W, V, U, T, S, R] :
            break

    stem1 = ' ( %sa %sb %s  )  ( %sa %sb  )' \
            '' % (int_str_converter(Z, first=True, exp_one_remove=True),
                  int_str_converter(X, first=False, exp_one_remove=True),
                  int_str_converter(Y, first=False, exp_one_remove=False),
                  int_str_converter(W, first=True, exp_one_remove=True),
                  int_str_converter(V, first=False, exp_one_remove=True))

    stem2 = ' ( %sa %s  ) ( %sa %s  )' \
            '' % (int_str_converter(U, first=True, exp_one_remove=True),
                  int_str_converter(T, first=False, exp_one_remove=False),
                  int_str_converter(S, first=True, exp_one_remove=True),
                  int_str_converter(R, first=False, exp_one_remove=False))

    stem3 = 'Aa^{2} %sb^{2} `+` Bab %sb %sa %s' \
            '' % (int_str_converter(I, first=False, exp_one_remove=True),
                  int_str_converter(H, first=False, exp_one_remove=True),
                  int_str_converter(O, first=False, exp_one_remove=True),
                  int_str_converter(N, first=False, exp_one_remove=False))

    com1 = '=` %sa^{2} %sab %sa %sab %sb^{2} %sb'\
           % (int_str_converter(M, first=True, exp_one_remove=True),
              int_str_converter(L, first=False, exp_one_remove=True),
              int_str_converter(K, first=False, exp_one_remove=True),
              int_str_converter(J, first=False, exp_one_remove=True),
              int_str_converter(I, first=False, exp_one_remove=True),
              int_str_converter(H, first=False, exp_one_remove=True))

    com2 = '`-` ( %sa^{2} %sa %sa %s  )' \
           '' % (int_str_converter(G, first=True, exp_one_remove=True),
                 int_str_converter(F, first=False, exp_one_remove=True),
                 int_str_converter(E, first=False, exp_one_remove=True),
                 int_str_converter(D, first=False, exp_one_remove=False))

    com3 = '%sa^{2} %sa %sa %s' \
           '' % (int_str_converter(G*-1, first=False, exp_one_remove=True),
                 int_str_converter(F*-1, first=False, exp_one_remove=True),
                 int_str_converter(E*-1, first=False, exp_one_remove=True),
                 int_str_converter(D*-1, first=False, exp_one_remove=False))

    com4 = '=` %sa^{2} %sb^{2} %sab %sb %sa %s' \
           '' % (int_str_converter(AA, first=True, exp_one_remove=True),
                 int_str_converter(I, first=False, exp_one_remove=True),
                 int_str_converter(BB, first=False, exp_one_remove=True),
                 int_str_converter(H, first=False, exp_one_remove=True),
                 int_str_converter(O, first=False, exp_one_remove=True),
                 int_str_converter(N, first=False, exp_one_remove=False))
    com5 = 'a^{2}'

    b1, b2 = ['  ( ', '  ) '] if BB < 0 else ['', '']
    c1 = 'A `+` B `=` %d `+` %s%d%s `=` %d' % (AA, b1, BB, b2, C)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3)
    answer = answer.format(asw_num=C)
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2,
                             com3=com3, com4=com4, com5=com5, AA=AA, BB=BB, c1=c1)

    return stem, answer, comment


# 3-1-2-5
def factorization312_Stem_005():
    stem = "$$수식$${stem1}$$/수식$$을 전개하였을 때, $$수식$$x$$/수식$$의 계수를 구하시오.\n"
    answer = "(답) : $$수식$${asw_frac}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 식을 전개한 식에서 $$수식$$x$$/수식$$항은\n" \
              "$$수식$${com1} `=` {com2}$$/수식$$\n" \
              "이므로 $$수식$$x$$/수식$$의 계수는 $$수식$${com3}$$/수식$$이다.\n\n"

    while True:
        C, E = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        D, F = np.random.randint(2, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        I = D * F
        K = C * D + E * F
        if is_gcd(C, F) and is_gcd(E, D) and is_gcd(K, I) :
            break

    frac_1 = '{1} over {%d}' % (abs(D))
    s1 = '-' if D < 0 else '+'
    frac_2 = '{1} over {%d}' % (abs(F))
    s2 = '-' if F < 0 else '+'
    frac_3 = '{%d} over {%d}' % (abs(C), abs(F))
    frac_4 = '{%d} over {%d}' % (abs(E), abs(D))
    s4 = '-' if E * D < 0 else '+'
    s5 = '-' if K * I < 0 else ''
    asw_frac = '%s{%d} over {%d} ' % (s5, abs(K), abs(I))

    stem1 = ' ( %sx `%s` %s  )  ( %sx `%s` %s  )' \
            '' % (int_str_converter(C, True, True), s1, frac_1,
                  int_str_converter(E, True, True), s2, frac_2)

    b1, b2 = [' ( ', '  ) '] if D < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if F < 0 else ['', '']

    com1 = '%sx `TIMES` %s%s%s `+` %s%s%s `TIMES` %sx' \
           '' % (int_str_converter(C, True, True), b3, frac_2, b4,
                 b1, frac_1, b2, int_str_converter(E, False, True))
    com2 = ' ( %s `%s` %s  )x' % (frac_3, s4, frac_4)
    com3 = '%s `%s` %s `=` %s' % (frac_3, s4, frac_4, asw_frac)

    stem = stem.format(stem1=stem1)
    answer = answer.format(asw_frac=asw_frac)
    comment = comment.format(com1=com1, com2=com2, com3=com3)

    return stem, answer, comment


# 3-1-2-6
def factorization312_Stem_006():
    stem = "$$수식$${stem1}$$/수식$${josa} 전개한 식에서 $$수식$$x$$/수식$$의 계수는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "주어진 식을 전개한 식에서 $$수식$$x$$/수식$$항은\n" \
              "$$수식$${com1}{com2}$$/수식$$\n" \
              "이므로 $$수식$$x$$/수식$$의 계수는 $$수식$${com3}$$/수식$$이다.\n\n"

    while True :
        A, B, C, D, E, F = np.random.randint(1, 10, 6) * np.reshape(np.random.choice([-1, 1], 6), -1)
        G = A * F
        H = D * C
        I = G + H
        if I != 0 and C > 0 :
            break

    josa = '을' if abs(F) in have_jongsung_num else '를'
    stem1 = ' ( %sx %sy %s  ) ( %sx %sy %s   )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(C, False, False), int_str_converter(D, True, True),
                  int_str_converter(E, False, True), int_str_converter(F, False, False))

    b1, b2 = [' ( ', '  ) '] if F < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if D < 0 else ['', '']

    com1 = '%sx `TIMES` %s%s%s `+` %s%sx `TIMES` %s%s' \
           ''% (int_str_converter(A, True, True), b1, int_str_converter(F, True, False), b2,
                b3, int_str_converter(D, True, True), int_str_converter(C, True, False), b4)
    com2 = '`=` %sx %sx `=` %sx'% (int_str_converter(G, True, True), int_str_converter(H, False, True),
                                   int_str_converter(I, True, True))

    n = np.random.randint(1, 4)
    answers = [i for i in range(I-4*n, (I+4*n)+1, n) if i != 0]
    if len(answers) == 9 :
        idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    else :
        idx = np.random.choice([0, 1, 2, 3], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(I))

    stem = stem.format(stem1=stem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, josa=josa)
    answer = answer.format(asw_num=cor_num)
    comment = comment.format(com1=com1, com2=com2, com3=I)

    return stem, answer, comment


# 3-1-2-7
def factorization312_Stem_007():
    stem = "$$수식$${stem1}{stem2}$$/수식$$를 전개한 식에서 $$수식$$x^2$$/수식$$의 계수와 " \
           "$$수식$$xy$$/수식$$의 계수가 같을 때, 상수 $$수식$$k$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "주어진 식을 전개한 식에서 $$수식$$x^2$$/수식$$항은\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$$xy$$/수식$$항은 $$수식$${com2}$$/수식$$\n" \
              "이때 $$수식$${com3}$$/수식$$이므로 $$수식$${com4}$$/수식$$, $$수식$${com5}$$/수식$$\n\n"

    while True:
        M, N, O = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        I = M * O
        G = M - N
        if is_gcd(I, G) and G != 0 :
            break

    stem1 = ' ( %sx %sy  )' % (int_str_converter(M, True, True), int_str_converter(N, False, True))
    stem2 = ' ( kx %sy  )' % (int_str_converter(O, False, True))
    com1 = '%sx` TIMES`kx `=` %skx ^{2}'% (int_str_converter(M, True, True), int_str_converter(M, True, True))


    b1, b2 = [' ( ', '  ) '] if O < 0 else ['', '']

    com2 = '%sx` TIMES` %s%sy%s %sy` TIMES`kx`=`(`%s %sk`)`xy' \
           '' % (int_str_converter(M, True, True),
                 b1, int_str_converter(O, True, True), b2,
                 int_str_converter(N, False, True), int_str_converter(I, True, False),
                 int_str_converter(N, False, True))
    com3 = '%sk`=`%s %sk' % (int_str_converter(M, True, True), int_str_converter(I, True, False),
                             int_str_converter(N, False, True))
    com4 = '(%s %s)k`=`%s' % (int_str_converter(M, True, False), int_str_converter(N*-1, False, False),
                              int_str_converter(I, True, True))
    s1 = '-' if I * G < 0 else ''
    cor_text = '%s{%d} over {%d}' % (s1, abs(I), abs(G)) if abs(G) != 1 else '%s%s' % (s1, abs(I))
    com5 = 'k `=` %s' % (cor_text)

    n = np.random.randint(1, 4)
    ans = [i for i in range(I-4*n, (I+4*n)+1, n) if i != 0]
    answers = []
    for a in ans :
        s = '-' if a * G < 0 else ''
        n = abs(a) // get_gcd(abs(a), abs(G))
        d = abs(G) // get_gcd(abs(a), abs(G))
        if n==d :
            answers.append('%s1' % (s))
        elif d == 1 :
            answers.append('%s%s' % (s, n))
        else :
            answers.append('%s{%d} over {%d}' % (s, n, d))

    if len(ans) == 9 :
        idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    else :
        idx = np.random.choice([0, 1, 2, 3], 1)[0]

    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))


    stem = stem.format(stem1=stem1, stem2=stem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(asw_num=cor_num)
    comment = comment.format(com1=com1, com2=com2, com3=com3, com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-8
def factorization312_Stem_008():
    stem = "$$수식$${stem1}{stem2}$$/수식$$를 전개한 식에서 $$수식$$x$$/수식$$의 계수가 $$수식$${stem3}$$/수식$$일 때, " \
           "한 자리 자연수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a^2`+`b^2$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 식을 전개한 식에서 $$수식$$x$$/수식$$항은\n" \
              "$$수식$${com1}`=`{com2}$$/수식$$\n" \
              "즉 $$수식$${com3}$$/수식$$이므로 $$수식$${com4}$$/수식$$\n" \
              "이때 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 한 자리 자연수이므로\n" \
              "$$수식$$a`=`{G}$$/수식$$, $$수식$$b`=`{I}$$/수식$$ 또는 $$수식$$a`=`{I}$$/수식$$, $$수식$$b`=`{G}$$/수식$$\n" \
              "따라서 $$수식$$a^2`+`b^2`=`{com5}$$/수식$$\n\n"

    while True:
        L, M = np.random.choice(np.arange(1, 10), 2)
        G, I = np.random.choice(np.arange(1, 10), 2, False)

        N = L * M
        H = G * I
        K = N + H
        Z = G * G + I * I

        if (L != 0) and (M != 0) and (G != 0) and (I != 0):
            if (G//I == 0) or (I//G == 0):
                break

    stem1 = ' ( ax %s  )' % (int_str_converter(L, False, False))
    stem2 = ' ( %sx `+` b  )' % (int_str_converter(M,True, True))

    com1 = 'ax `TIMES` b %s `TIMES` %sx' % (int_str_converter(L, False, False),
                                          int_str_converter(M, True, True))
    com2 = ' ( ab %s  )x' % (int_str_converter(N, False, False))
    com3 = 'ab %s `=` %d' % (int_str_converter(N, False, False), K)
    com4 = 'ab `=` %d' % H


    stem = stem.format(stem1=stem1, stem2=stem2, stem3=K)
    answer = answer.format(asw_num=Z)
    comment = comment.format(com1=com1, com2=com2, com3=com3, com4=com4, com5=Z, G=G, I=I)

    return stem, answer, comment


# 3-1-2-10
def factorization312_Stem_009():
    stem = "다음 중 $$수식$${stem1}$$/수식$$과 전개식이 같은 것은?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$$=`{com2}$$/수식$$\n" \
              "$$수식$$=`{com3}$$/수식$$\n\n"

    while True:
        U, V = np.random.choice(np.arange(1, 10), 2)
        B = U * V
        A = U * U
        C = -1 * U

        if U != 1:
            break

    stem1 = ' ( -{1} over {%d}x `-` %dy  ) ^{2}' % (U, V)
    com2 = ' { -{1} over {%d}  ( x `+` %dy  )  } ^{2}' % (U, B)
    com3 = '{1} over {%d}  ( x `+` %dy  ) ^{2}' % (A, B)
    qu_ep_list = []
    qu_ep_list.append('{1} over {%d}  ( x `-` %dy  ) ^{2}' % (A, B))
    qu_ep_list.append('{1} over {%d}  ( x `+` %dy  ) ^{2}' % (A, B))
    qu_ep_list.append('-{1} over {%d}  ( x `-` %dy  ) ^{2}' % (abs(C), B))
    qu_ep_list.append('-{1} over {%d}  ( x `+` %dy  ) ^{2}' % (abs(C), B))
    qu_ep_list.append('{1} over {%d}  ( x `+` %dy  ) ^{2}' % (abs(C), B))
    np.random.shuffle(qu_ep_list)
    asw = 0

    for i, qu_ep in enumerate(qu_ep_list):
        if qu_ep == com3:
            asw = i

    stem = stem.format(stem1=stem1, qu_ep1=qu_ep_list[0], qu_ep2=qu_ep_list[1], qu_ep3=qu_ep_list[2],qu_ep4=qu_ep_list[3], qu_ep5=qu_ep_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[asw])
    comment = comment.format(com1=stem1, com2=com2, com3=com3)

    return stem, answer, comment


# 3-1-2-11
def factorization312_Stem_010():
    stem = "다음 중 옳은 것은?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "{num1} $$수식$${com1}$$/수식$$\n" \
              "{num2} $$수식$${com2}$$/수식$$\n" \
              "{num3} $$수식$${com3}$$/수식$$\n" \
              "{num4} $$수식$${com4}$$/수식$$\n\n\n"


    while True:
        Z, Y, X, W, U, T, S, R = np.random.randint(1, 10, 8) * np.reshape(np.random.choice([-1, 1], 8), -1)
        V, Q = np.random.randint(2, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)

        A = Z * Z
        B = 2 * Z * Y
        C = Y * Y
        D = X * X
        E = X * W
        F = W * W
        G = F + 1
        H = V * V
        J = U * U
        L = T * T
        M = 2 * S * T
        N = T * T
        O = R * R
        i_2 = get_gcd(abs(2*U), abs(V))
        I = change_frac('{%d} over {%d}' % (2*U//i_2, V//i_2))
        k_2 = get_gcd(abs(2), abs(V))
        K = change_frac('{%d} over {%d}' % (2//k_2, V//k_2))
        p_2 = get_gcd(abs(2*R), abs(Q))
        P = change_frac('{%d} over {%d}' % (2*R//p_2, Q//p_2))
        AA = change_frac('{%d} over {%d}' % (1, Q*Q))
        v = change_frac('{1} over {%d}' % V)
        q = change_frac('{1} over {%d}' % Q)
        h = change_frac('{1} over {%d}' % H)

        if (abs(V) != 1) and (abs(Q) != 1) and (abs(H) != 1) \
                and (abs(2*U) < abs(V)) and (2 < abs(V)) and (abs(2*R) < abs(Q)):
            break

    stems = []
    stems.append(' ( %sx %s  )^2' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False)))
    stems.append(' ( %sa %s  )^2' % (int_str_converter(X, True, True), int_str_converter(W, False, False)))
    stems.append(' ( %sx %s  )^2' % (v, int_str_converter(U, False, False)))
    stems.append(' ( %sx %sy  )^2' % (int_str_converter(T, True, True), int_str_converter(S, False, True)))
    stems.append(str_double_sym(' ( %sx`+`%s  )^2' % (int_str_converter(R, True, True), q)))

    qu_eps = []
    qu_eps.append('%s`=`%sx^2 %s' % (stems[0], int_str_converter(A, True, True), int_str_converter(C, False, False)))
    qu_eps.append('%s`=`%sa^2 %sa %s' % (stems[1], int_str_converter(D, True, True), int_str_converter(E, False, True),int_str_converter(G, False, False)))
    qu_eps.append(str_double_sym('%s`=`%sx^2`+`%sx %s' % (stems[2], h, K ,int_str_converter(J, False, False))))
    qu_eps.append('%s`=`%sx^2 %sx %sy^2' % (stems[3], int_str_converter(L, True, True), int_str_converter(M, False, True), int_str_converter(N, False, True)))
    qu_eps.append(str_double_sym('%s`=`%sx^2`+`%sx`+`%s' % (stems[4], int_str_converter(O, True, True), P, AA)))

    coms = []
    coms.append('%s`=`%sx^2 %sx %s' % (stems[0], int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(C, False, False)))
    coms.append('%s`=`%sa^2 %sa %s' % (stems[1], int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, False)))
    coms.append(str_double_sym('%s`=`%sx^2`+`%sx %s' % (stems[2], h, I ,int_str_converter(J, False, False))))
    coms.append('%s`=`%sx^2 %sxy %sy^2' % (stems[3], int_str_converter(L, True, True), int_str_converter(M, False, True), int_str_converter(N, False, True)))
    # coms.append('')
    num_list = np.random.choice(np.arange(0, 5), 5, False)

    np.random.shuffle(num_list)
    a, b, c, d, e = num_list
    nums = []
    KK = 0
    numing = []
    for i, num in enumerate(num_list):
        if qu_eps[num] == str_double_sym('%s`=`%sx^2`+`%sx`+`%s' % (stems[4], int_str_converter(O, True, True), P , AA)):
            KK = i
        else:
            numing.append(i)
            nums.append(num)

    stem = stem.format(qu_ep1=qu_eps[a], qu_ep2=qu_eps[b], qu_ep3=qu_eps[c], qu_ep4=qu_eps[d], qu_ep5=qu_eps[e])
    answer = answer.format(asw_num=multiple_choice_nums[KK])
    comment = comment.format(num1=multiple_choice_nums[numing[0]], num2=multiple_choice_nums[numing[1]], num3=multiple_choice_nums[numing[2]], num4=multiple_choice_nums[numing[3]],
                             com1=coms[nums[0]], com2=coms[nums[1]], com3=coms[nums[2]], com4=coms[nums[3]])

    return stem, answer, comment


# 3-1-2-12
def factorization312_Stem_011():
    stem = "곱셈 공식을 이용하여 $$수식$${stem1}$$/수식$$을 계산하시오.\n"
    answer = "(답) : $$수식$${asw_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com1}`=` ( {com2}  )^2`=`{com3}`=`{com4}$$/수식$$\n\n"

    M = np.random.choice(np.arange(1, 10), 1)[0]
    K = 100 + M
    Y = 200 * M
    X = M * M
    C = 10000 + Y + X
    stem1 = '%d^2' % K
    com2 = '100`+`%d' % M
    com3 = '10000`+`%d`+`%d' % (Y, X)
    stem = stem.format(stem1=stem1)
    answer = answer.format(asw_num=C)
    comment = comment.format(com1=stem1, com2=com2, com3=com3, com4=C)

    return stem, answer, comment


# 3-1-2-13
def factorization312_Stem_012():
    stem = "$$수식$${stem1}`=`{stem2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 $$수식$$a`+`b`+`c$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com0}$$/수식$$\n" \
              "따라서 $$수식$${com1}$$/수식$$, $$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$이므로\n" \
              "$$수식$${com4}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        Z = A * A
        Y = 2 * A * B
        X = B * B
        K = X + Y + Z
        if abs(K) < 100 :
            break

    stem1 = ' ( %sx %sy  )^2' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    stem2 = 'ax^2 `+` bxy `+` cy^2'
    com0 = '%sa^2 %sxy %sy^2' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                                 int_str_converter(X, False, True))
    com1 = 'a `=` %d' % Z
    com2 = 'b `=` %d' % Y
    com3 = 'c `=` %d' % Z
    com4 = '%s %s %s `=` %d' % (int_str_converter(Z, True, False), int_str_converter(Y, False, False),
                                int_str_converter(X, False, False), K)

    n = np.random.randint(1, 4)
    answers = [i for i in range(K-4*n, (K+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(K))

    stem = stem.format(stem1=stem1, stem2=stem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(asw_num=cor_num)
    comment = comment.format(stem1=stem1, com0=com0, com1=com1, com2=com2, com3=com3, com4=com4)

    return stem, answer, comment


# 3-1-2-14
def factorization312_Stem_013():
    stem = "$$수식$${stem1}`=`{stme2}$$/수식$$ 일 때, 양수 $$수식$$A$$/수식$$, " \
           "$$수식$$B$$/수식$$에 대하여 $$수식$$B`-`A$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com1}`=`{com2}$$/수식$$\n" \
              "$$수식$${com3}$$/수식$$에서 $$수식$${com4}$$/수식$$\n" \
              "$$수식$${com5}$$/수식$$, $$수식$${com6}$$/수식$$\n" \
              "따라서 $$수식$${com7}$$/수식$$\n\n"

    Z, P = np.random.choice(np.arange(1, 10), 2)
    M = Z * Z
    N = P * P
    O = 2 * Z
    K = O - P

    stem1 = ' ( %dx `+` A  )^2' % (Z)
    stme2 = ' ( %sx `+` Bx %s  )' % (int_str_converter(M, True, True),
                               int_str_converter(N, False, False))

    com2 = '%sx %sAx `+` A^2' % (int_str_converter(M, True, True),
                               int_str_converter(O, False, True))
    com3 = 'A^2 `=` %d' % N
    com4 = 'A `=` %d' % P
    com5 = 'B `=` %d' % O
    com6 = 'A `=` %d' % P
    b1, b2 = ['  ( ', '  ) '] if P < 0 else ['', '']
    com7 = 'B `-` A `=` %d `-` %s%d%s `=` %d' % (O, b1, P, b2, K)


    stem = stem.format(stem1=stem1, stme2=stme2)
    answer = answer.format(asw=K)
    comment = comment.format(com1=stem1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7)

    return stem, answer, comment


# 3-1-2-15
def factorization312_Stem_014():
    stem = "$$수식$${stem1}`=`{stem2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$${stem3}$$/수식$$의 값은?\n" \
           "① $$수식$${qu_num1}$$/수식$$\n" \
           "② $$수식$${qu_num2}$$/수식$$\n" \
           "③ $$수식$${qu_num3}$$/수식$$\n" \
           "④ $$수식$${qu_num4}$$/수식$$\n" \
           "⑤ $$수식$${qu_num5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}`=`{com1}$$/수식$$\n" \
              "$$수식$$=`{com2}$$/수식$$\n" \
              "$$수식$${com3}$$/수식$$, $$수식$${com4}$$/수식$$이므로\n" \
              "$$수식$${com5}`=`{com6}$$/수식$$\n" \
              "따라서 $$수식$${com7}$$/수식$$\n\n"

    while True:
        Z, Y, T = np.random.choice(np.arange(1, 10), 3)
        L = Z * Z
        M = 2 * Z
        N = M * M
        K = N + T
        n = np.random.choice(np.arange(1, 4), 1)[0]
        num_list = [ K-x*n for x in np.arange(-4, 5)]
        np.random.shuffle(num_list)
        num_list = num_list[:5]
        if (K in num_list) and (check_simFrac(K, T)==True) and (Y != 1) and abs(K) < 100 :
            break

    ind = num_list.index(K)
    stem1 = ' ( %sx`+`a  )^2' % int_str_converter(Z, True, True)
    stem2 = '%sx^2`+`bx`+` {1} over {%d}' % (int_str_converter(L, True, True), Y)
    stem3 = '%da^2`+`b^2' % T

    com1 = '%sx^2`+`%dax`+`a^2' % (int_str_converter(L, True, True), M)
    com2 = '%sx^2`+`bx`+`{1} over {%d}' % (int_str_converter(L, True, True), Y)
    com3 = '%da`=`b' % M
    com4 = 'a^2`=`{1} over {%d}' % Y
    com5 = 'b^2`=`%da^2' % N
    com6 = '%d` TIMES` {1} over {%d} `=` {%d} over {%d}' % (N, Y, N, Y)
    com7 = '%da ^{2} `+`b ^{2} `=` {%d} over {%d} `+` {%d} over {%d} `=` {%d} over {%d}' % (T, T, Y, N, Y, K, Y)
    qu_num = []

    for num in num_list:
        if num > 0 :
            if check_simFrac(abs(num), Y) == False:
                if get_gcd(num, Y) == Y:
                    qu_num.append(num//Y)
                else:
                    nanum = get_gcd(num, Y)
                    qu_num.append('{%d} over {%d}' % (num//nanum, Y//nanum))
            else:
                qu_num.append('{%d} over {%d}' % (num, Y))
        elif num < 0 :
            if check_simFrac(abs(num), Y) == False:
                if get_gcd(abs(num), Y) == Y:
                    qu_num.append('-%d' % (abs(num)//Y))
                else:
                    nanum = get_gcd(abs(num), Y)
                    qu_num.append('- {%d} over {%d}' % (abs(num)//nanum, Y//nanum))
            else:
                qu_num.append('- {%d} over {%d}' % (abs(num), Y))

        else:
            qu_num.append('0')


    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3,
                       qu_num1=qu_num[0], qu_num2=qu_num[1], qu_num3=qu_num[2], qu_num4=qu_num[3], qu_num5=qu_num[4])
    answer = answer.format(asw_num=multiple_choice_nums[ind])
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7)

    return stem, answer, comment


# 3-1-2-16
def factorization312_Stem_015():
    stem = "$$수식$${stem1}$$/수식$$을 전개한 식에서 $$수식$$x^2$$/수식$$의 계수가 $$수식$${stem2}$$/수식$$, 상수항이 $$수식$${stem3}$$/수식$$일 때, $$수식$$x$$/수식$$의 계수는? (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 양수이다.)\n" \
           "① $$수식$${qu_num1}$$/수식$$\n" \
           "② $$수식$${qu_num2}$$/수식$$\n" \
           "③ $$수식$${qu_num3}$$/수식$$\n" \
           "④ $$수식$${qu_num4}$$/수식$$\n" \
           "⑤ $$수식$${qu_num5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}`=`{com1}$$/수식$$이므로\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$\n" \
              "이때 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 양수이므로 $$수식$${com4}$$/수식$$, $$수식$${com5}$$/수식$$\n" \
              "따라서 $$수식$$x$$/수식$$의 계수는 $$수식$${com6}$$/수식$$\n\n"

    while True:
        Z, Y, X = np.random.choice(np.arange(1, 10), 3)
        L = Y * Y
        O = Z * Z
        N = 2 * Z
        I = 2 * X * Y
        if check_simFrac(X*X, O) == False:
            if get_lcm(X*X, O) == O:
                M = str(X*X // O)
            else:
                nanum = get_lcm(X*X, O)
                M = '{%d} over {%d}' % (X*X // nanum, O // nanum)
        else:
            M = '{%d} over {%d}' % (X*X, O)
        n = np.random.choice(np.arange(1, 4), 1)[0]
        num_list = [I-a*n for a in np.arange(-4, 4)]
        np.random.shuffle(num_list)
        num_list = num_list[:5]
        if (X != 1) and (I in num_list) and abs(I) < 100 :
            break

    stem1 = ' ( ax `+` %db  )^2'% Z
    stem2 = L
    stem3 = M

    com1 = 'a^2x^2 `+` %dabx `+` %db^2' % (N, O)
    com2 = 'a^2 `=` %d' % L
    com3 = '%db^2 `=` %s' % (O, stem3)
    com4 = 'a `=` %d' % Y
    if check_simFrac(X, O) == False:
        if get_gcd(X, O) == O:
            b = str(X // O)
        else:
            nanum = get_gcd(X, O)
            b = '{%d} over {%d}' % (X// nanum, O // nanum)
    else:
        b = '{%d} over {%d}' % (X, O)
    com5 = 'b `=` %s' % b
    ind = num_list.index(I)
    qu_num = []
    for num in num_list:
        if check_simFrac(abs(num), Z) == False:
            if get_gcd(num, Z) == Z:
                qu_num.append(num // Z)
            else:
                nanum = get_gcd(num, Z)
                qu_num.append('{%d} over {%d}' % (num // nanum, Z // nanum))
        else:
            qu_num.append('{%d} over {%d}' % (num, Z))
    com6 = '%dab`=`%d `TIMES` %d `TIMES` %s `=` %s' % (N, N, Y, b, qu_num[ind])

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3,
                       qu_num1=qu_num[0], qu_num2=qu_num[1], qu_num3=qu_num[2], qu_num4=qu_num[3], qu_num5=qu_num[4])
    answer = answer.format(asw_num=multiple_choice_nums[ind])
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6)

    return stem, answer, comment


# 3-1-2-18
def factorization312_Stem_016():
    stem = "$$수식$${stem1} `=` {stem2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, " \
           "$$수식$$c$$/수식$$에 대하여 $$수식$$b`+`c`-`a$$/수식$$의 값은?\n" \
           "① $$수식$${qu_num1}$$/수식$$\n" \
           "② $$수식$${qu_num2}$$/수식$$\n" \
           "③ $$수식$${qu_num3}$$/수식$$\n" \
           "④ $$수식$${qu_num4}$$/수식$$\n" \
           "⑤ $$수식$${qu_num5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$\n" \
              "$$수식$$=`{stem2}$$/수식$$\n" \
              "따라서 $$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$, $$수식$${com4}$$/수식$$이므로\n" \
              "$$수식$$b `+` c `-` a `=`{com5}$$/수식$$\n\n"

    while True:
        n = np.random.choice(np.arange(1, 4),1)[0]
        Z, y = np.random.choice(np.arange(10**(n-1), 10**n), 2)
        Y = -1 * y
        L = Z * Z
        M = 2 * Z * Y
        N = Y * Y
        O = -1 * L
        K = M + N + O
        n = np.random.choice(np.arange(1,4), 1)[0]
        num_list = [K+a*n for a in np.arange(-4, 4)]
        np.random.shuffle(num_list)
        num_list = num_list[:5]
        if (abs(K) < 100) and (K in num_list):
            break

    I = num_list.index(K)

    stem1 = ' ( %sx %sy  )' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True))
    stem2 = 'ax^2`+`bxy`+`cy^2'

    com1 = '%sx^2 %sxy %sy^2' % (int_str_converter(L, True, True),
                                 int_str_converter(M, False, True),
                                 int_str_converter(N, False, True))
    com2 = 'a `=` %d' % L
    com3 = 'b `=` %d' % M
    com4 = 'c `=` %d' % N
    b1, b2 = ['  ( ', '  ) '] if N < 0 else ['', '']
    b3, b4 = ['  ( ', '  ) '] if O < 0 else ['', '']
    com5 = '%s `+` %s%d%s `-` %s%d%s `=` %d' % (int_str_converter(M, True, False), b1, N, b2, b3, O, b4, K)

    stem = stem.format(stem1=stem1, stem2=stem2, qu_num1=num_list[0], qu_num2=num_list[1],
                       qu_num3=num_list[2], qu_num4=num_list[3], qu_num5=num_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[I])
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-19
def factorization312_Stem_017():
    stem = "한 변의 길이가 $$수식$${stem1}$$/수식$$인 정사각형의 넓이는?\n" \
           "① $$수식$${qu_eq1}$$/수식$$\n" \
           "② $$수식$${qu_eq2}$$/수식$$\n" \
           "③ $$수식$${qu_eq3}$$/수식$$\n" \
           "④ $$수식$${qu_eq4}$$/수식$$\n" \
           "⑤ $$수식$${qu_eq5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${com1} `=` {com2}$$/수식$$\n\n"

    while True:
        N, M = np.random.choice(np.arange(2, 10), 2)
        Q = 2 * N
        P = N * N
        R = M * M

        if is_gcd(M, N) and (M > N) and is_gcd(Q, M) and is_gcd(P, R) :
            break

    stem1 = 'x `-` {%d} over {%d}y' % (N, M)
    com1 = ' ( %s  )^2' % (stem1)
    com2 = 'x^2 `-` {%d} over {%d}xy `+` {%d} over {%d}y^2' % (Q, M, P, R)

    qu_ep_list = []
    qu_ep_list.append('x^2 `-` {%d} over {%d}xy `-` {%d} over {%d}y^2' % (Q, M, P, M))
    qu_ep_list.append('x^2 `-` {%d} over {%d}xy `+` {%d} over {%d}y^2' % (Q, M, P, R))
    qu_ep_list.append('x^2 `-` {%d} over {%d}xy `+` {%d} over {%d}y^2' % (Q, M, P, M))
    qu_ep_list.append('x^2 `+` {%d} over {%d}xy `-` {%d} over {%d}y^2' % (Q, M, P, R))
    qu_ep_list.append('x^2 `+` {%d} over {%d}xy `+` {%d} over {%d}y^2' % (Q, M, P, R))
    np.random.shuffle(qu_ep_list)
    ind = qu_ep_list.index(com2)

    stem = stem.format(stem1=stem1, qu_eq1=qu_ep_list[0],
                       qu_eq2=qu_ep_list[1], qu_eq3=qu_ep_list[2], qu_eq4=qu_ep_list[3], qu_eq5=qu_ep_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[ind])
    comment = comment.format(com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-20
def factorization312_Stem_018():
    stem = "곱셈 공식을 이용하여 $$수식$${stem1}$$/수식$$을 계산하시오.\n"
    answer = "(답) : $$수식$${asw}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}`=`{com1}`=`{com2}`=`{asw}$$/수식$$\n\n"

    M = np.random.choice(np.arange(-9, 0), 1)[0]
    K = 100 + M
    Y = 200 * M
    X = M * M

    stem1 = '%d^2' % K

    C = 10000 + Y + X

    com1 = ' ( 100 `-` %d  )^2'% abs(M)
    com2 = '10000 `-` %d `+` %d' % (abs(Y), X)

    stem = stem.format(stem1=stem1)
    answer = answer.format(asw=C)
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, asw=C)

    return stem, answer, comment


# 3-1-2-21
def factorization312_Stem_019():
    stem = "식을 전개한 결과가 같은 것끼리 짝지어진 것을 보기에서 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "㈀ $$수식$${b1}$$/수식$$    ㈁ $$수식$${b2}$$/수식$$\n" \
           "㈂ $$수식$${b3}$$/수식$$    ㈃ $$수식$${b4}$$/수식$$\n" \
           "㈄ $$수식$${b5}$$/수식$$    ㈅ $$수식$${b6}$$/수식$$\n" \
           "① {a1}\n" \
           "② {a2}\n" \
           "③ {a3}\n" \
           "④ {a4}\n" \
           "⑤ {a5}\n"
    answer = "(답) : {cor_num}\n"
    comment = '(해설)\n' \
              '{c1}\n' \
              '{c2}\n' \
              '{c3}\n' \
              '{c4}\n\n'

    while True :
        K, M = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        N, J, Z, Y, X = [-1, -1, K, 2, M] * np.reshape([M, K, K, K*M, M], -1)
        W, U, V = [-1, -1, -1] * np.reshape([Y, Z, X], -1)

        exp_1 = ' ( %sa %sb  ) ^2' % (int_str_converter(K, True, True), int_str_converter(M, False, True))
        exp_2 = '-  ( %sa %sb  ) ^2' % (int_str_converter(K, True, True), int_str_converter(N, False, True))
        exp_3 = '-  ( %sa %sb  ) ^2' % (int_str_converter(K, True, True), int_str_converter(M, False, True))
        exp_4 = ' ( %sa %sb  ) ^2' % (int_str_converter(J, True, True), int_str_converter(N, False, True))
        exp_5 = ' ( %sa %sb  ) ^2' % (int_str_converter(M, True, True), int_str_converter(J, False, True))
        exp_6 = ' ( %sa %sb  ) ^2' % (int_str_converter(K, True, True), int_str_converter(N, False, True))
        exp_list = [exp_1, exp_2, exp_3, exp_4, exp_5, exp_6]

        if 0 not in [K, M, N, J, Z, Y, X, W, U, V] and len(set(exp_list)) == 6 :
            break

    np.random.shuffle(exp_list)

    com_1 = '%s `=` %s `=` %sa^2 %sab %sb^2' % (exp_4, exp_1, int_str_converter(Z, True, True), \
                                                int_str_converter(Y, False, True), int_str_converter(X, False, True))
    com_2 = '%s `=` %sa^2 %sab %sb^2' % (exp_2, int_str_converter(U, True, True), int_str_converter(Y, False, True),
                                         int_str_converter(V, False, True))
    com_3 = '%s `=` %sa^2 %sab %sb^2' % (exp_3, int_str_converter(U, True, True), int_str_converter(W, False, True),
                                         int_str_converter(V, False, True))
    com_4 = '%s `=` %s `=` %sa^2 %sab %sb^2' % (exp_6, exp_5, int_str_converter(Z, True, True), \
                                                int_str_converter(W, False, True), int_str_converter(X, False, True))

    cor_jaem1 = ', '.join(sorted([multiple_choice_jaem.get(exp_list.index(exp_1)),
                                  multiple_choice_jaem.get(exp_list.index(exp_4))]))
    cor_jaem2 = ', '.join(sorted([multiple_choice_jaem.get(exp_list.index(exp_5)),
                                  multiple_choice_jaem.get(exp_list.index(exp_6))]))
    exp_com_dict = {}
    comments = []
    for i, e in enumerate(exp_list) :
        if e == exp_1 and com_1 not in comments:
            comments.append(com_1)
            exp_com_dict[cor_jaem1] = com_1
        elif e == exp_2 :
            comments.append(com_2)
            exp_com_dict[multiple_choice_jaem.get(i)] = com_2
        elif e == exp_3 :
            comments.append(com_3)
            exp_com_dict[multiple_choice_jaem.get(i)] = com_3
        elif e == exp_4 and com_1 not in comments:
            comments.append(com_1)
            exp_com_dict[cor_jaem1] = com_1
        elif e == exp_5 and com_4 not in comments:
            comments.append(com_4)
            exp_com_dict[cor_jaem2] = com_4
        elif e == exp_6 and com_4 not in comments:
            comments.append(com_4)
            exp_com_dict[cor_jaem2] = com_4
        else :
            pass


    keys = sorted(list(exp_com_dict.keys()))
    comments = []
    for k in keys :
        comments.append('%s $$수식$$%s$$/수식$$' % (k, exp_com_dict.get(k)))

    c1, c2, c3, c4 = comments
    b1, b2, b3, b4, b5, b6 = exp_list
    ans = ['㈀, ㈁', '㈀, ㈂', '㈀, ㈃', '㈀, ㈄', '㈀, ㈅', '㈁, ㈂', '㈁, ㈃', '㈁, ㈄', '㈁, ㈅',
           '㈂, ㈃', '㈂, ㈄', '㈂, ㈅', '㈃, ㈄', '㈃, ㈅', '㈄, ㈅']
    while True :
        answers = list(np.random.choice(ans, 5, False))
        if cor_jaem1 in answers and cor_jaem2 in answers :
            break

    answers = sorted(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = sorted([multiple_choice_nums.get(answers.index(cor_jaem1)),
                      multiple_choice_nums.get(answers.index(cor_jaem2))])
    cor_num = ', '.join(cor_num)

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, b1=b1, b2=b2, b3=b3, b4=b4, b5=b5, b6=b6)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-22
def factorization312_Stem_020():
    stem = "$$수식$${exp_1}$$/수식$$일 때, 상수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$의 곱 $$수식$$AB$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=`{c2}$$/수식$$\n" \
              "$$수식$$=`{c3}$$/수식$$\n" \
              "이므로 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$\n" \
              "따라서 $$수식$${c6}$$/수식$$\n\n"

    while True :
        Y = np.random.randint(2, 10)
        N = 2 * Y
        O = N * N
        K = N * O
        ans = [pow(N, i) for i in range(1, 8) if pow(N, i) < 15001]
        if len(ans) > 4 :
            ans = sorted(list(np.random.choice(ans, 5, False)))
            if K in ans :
                break

    c1 = ' ( x `-` A  ) ^2'
    c2 = 'x^2 `-` 2Ax `+` A ^2'
    c3 = 'x^2 `-` {1} over {%d} `+` B' % (Y)
    exp_1 = '%s `=` %s' % (c1, c3)
    c4 = 'A `=` {1} over {%d}' % (N)
    c5 = 'B `=` {1} over {%d}' % (O)
    cor_text = '{1} over {%d}' % (K)
    c6 = 'AB `=` {1} over {%d} `TIMES` {1} over {%d} `=` %s' % (N, O, cor_text)

    answers = ['{1} over {%d}' % (i) for i in ans]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6)

    return stem, answer, comment


# 3-1-2-24
def factorization312_Stem_021():
    stem = "한 변의 길이가 각각 $$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$인 두 정사각형의 넓이의 합은?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "한 변의 길이가 $$수식$${stem1}$$/수식$$인 정사각형의 넓이는\n" \
              "$$수식$${com1}`=`{com2}$$/수식$$\n" \
              "한 변의 길이가 $$수식$${stem2}$$/수식$$인 정사각형의 넓이는\n" \
              "$$수식$${com3}`=`{com4}$$/수식$$\n" \
              "따라서 구하는 넓이의 합은\n" \
              "$$수식$${com5}`+`{com6}$$/수식$$\n" \
              "$$수식$$=`{com7}$$/수식$$\n\n"

    qu_eps = []
    c = np.random.choice(np.arange(0, 2), 1)[0]
    if c == 0 : # Y가 정수일 경우
        while True:
            Z, X = np.random.choice(np.arange(1, 10), 2, False)
            Y, W = np.random.choice(np.arange(-9, 0), 2, False)
            L = Z * Z
            M = 2 * Z * Y
            N = Y * Y
            O = X * X
            P = 2 * X * W
            Q = W * W
            D = L + O
            E = M + P
            F = N + Q
            G = -1 * F
            H = -1 * D
            I = -1 * E
            num_list = [[H, E, F],[H, I, F],[D, E, F],[D, I, G],[D, I, F]]
            qu_eps = ['%sa^2 %sab %sb^2' %
                      (int_str_converter(a, True, True), int_str_converter(b, False, True), int_str_converter(c, False, True))
                      for [a, b, c] in num_list]
            np.random.shuffle(qu_eps)
            K = qu_eps.index('%sa^2 %sab %sb^2' % (int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, True)))
            if (Z != abs(Y)) and (Z != abs(W)) and (X != abs(Y)) and (X != abs(W)):
                break

        stem1 = '%sa %sb'% (int_str_converter(Z, True, True), int_str_converter(Y, False, True))
        stem2 = '%sa %sb'% (int_str_converter(X, True, True), int_str_converter(W, False, True))

        com1 = ' ( %s  )^2'% stem1
        com2 = '%sa^2 %sab %sb^2' % (int_str_converter(L, True, True), int_str_converter(M, False, True), int_str_converter(N, False, True))
        com3 = ' ( %s  )' % stem2
        com4 = '%sa^2 %sab %sb^2' % (int_str_converter(O, True, True), int_str_converter(P, False, True), int_str_converter(Q, False, True))
        com5 = ' ( %s  )' % com2
        com6 = ' ( %s  )' % com4
        com7 = '%sa^2 %sab %sb^2' % (int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, True))

        stem = stem.format(stem1=stem1, stem2=stem2, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
        answer = answer.format(asw_num=multiple_choice_nums[K])
        comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7)
    elif c == 1: # Y가 분수일 경우
        while True:
            Z, X = np.random.choice(np.arange(1, 10), 2, False)
            y, W = np.random.choice(np.arange(-9, 0), 2, False)
            Y = change_frac('{1} over {%d}' % y)
            L = Z * Z
            m_2 = get_gcd(abs(2*Z), abs(y))
            M = change_frac('{%d} over {%d}' % (2 * Z//m_2, y//m_2))
            N = change_frac('{1} over {%d}'% (y**2))
            O = X * X
            P = 2 * X * W
            Q = W * W
            D = L + O
            e_2 = get_gcd((2 * Z//m_2)+(P*y//m_2), y//m_2)
            E = change_frac('{%d} over {%d}' % (((2 * Z//m_2)+(P*y//m_2))//e_2, (y//m_2)//e_2))
            f_2 = get_gcd(1+ (y**2 * W**2), y**2)
            F = change_frac('{%d} over {%d}' % (1 + (y**2 * W**2)//f_2, y**2//f_2))
            G = change_frac('-' + F)
            H = -1 * D
            I = change_frac('-' + E)
            num_list = [[H, E, F],[H, I, F], [D, E, F],[D, I, G],[D, I, F]]
            qu_eps = [str_double_sym('%sa^2`+`%sab`+`%sb^2' % (int_str_converter(a, True, True), b, c)) for [a, b, c] in num_list]

            np.random.shuffle(qu_eps)
            K = qu_eps.index(str_double_sym('%sa^2`+`%sab`+`%sb^2' % (int_str_converter(D, True, True), E, F)))
            if (Z != abs(y)) and (Z != abs(W)) and (X != abs(y)) and (X != abs(W)) and (abs(y) != 1) and (abs(y)//m_2 != 1)\
                    and ((y**2//f_2) != 1):
                break

        stem1 = str_double_sym('%sa`+`%sb'% (int_str_converter(Z, True, True), Y))
        stem2 = '%sa %sb'% (int_str_converter(X, True, True), int_str_converter(W, False, True))

        com1 = str_double_sym(' ( %s  )^2' % stem1)
        com2 = str_double_sym('%sa^2`+`%sab`+`%sb^2' % (int_str_converter(L, True, True), M, N))
        com3 = ' ( %s  )' % stem2
        com4 = '%sa^2 %sab %sb^2' % (int_str_converter(O, True, True), int_str_converter(P, False, True), int_str_converter(Q, False, True))
        com5 = ' ( %s  )' % com2
        com6 = ' ( %s  )' % com4
        com7 = str_double_sym('%sa^2`+`%sab`+`%sb^2' % (int_str_converter(D, True, True), E, F))

        stem = stem.format(stem1=stem1, stem2=stem2, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
        answer = answer.format(asw_num=multiple_choice_nums[K])
        comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7)

    return stem, answer, comment


# 3-1-2-25
def factorization312_Stem_022():
    stem = "$$수식$${stem1}`=`{stem2}$$/수식$$이고 " \
           "$$수식$${stem3}$$/수식$$일 때, 상수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$, $$수식$$C$$/수식$$의 값을 각각 구하시오.\n"
    answer = "(답) : $$수식$${ans1}$$/수식$$, $$수식$${ans2}$$/수식$$, $$수식$${ans3}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}`=`{com1}$$/수식$$이므로\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$\n" \
              "따라서 $$수식$${com4}$$/수식$$이므로\n" \
              "$$수식$${com5}$$/수식$$, $$수식$${com6}$$/수식$$, $$수식$${com7}$$/수식$$\n\n"

    while True:
        Z, Y, X = np.random.choice(np.arange(1, 10), 3)
        W = np.random.choice(np.arange(-9, 0), 1)[0]
        L = Z * Z
        M = 2 * W * Z
        N = W * W
        D = M - X
        E = M * Y
        F = N * Y * Y
        G = D * D

        if is_gcd(Y, G) and is_gcd(E, D) and is_gcd(F, G) and max([abs(Y), abs(D), abs(E), abs(F), abs(G)]) < 100 :
            break

    stem1 = '(%sx %sA)^2' % (int_str_converter(Z, True, True), int_str_converter(W, False, True))
    stem2 = '%sx^2`+`Bx`+`C' % int_str_converter(L, True, True)
    stem3 = 'B`=`%sA %s' % (int_str_converter(X, True, True), int_str_converter(Y, False, False))
    asws= ['{%d} over {%d}' % (Y, D), '{%d} over {%d}' % (E, D), '{%d} over {%d}' % (F, G)]
    asw_list = []
    for asw in asws:
        if asw.count('-') == 2:
            asw = asw.replace('-', '')
            asw_list.append(asw)
        elif asw.count('-') == 1:
            asw = asw.replace('-', '')
            asw = '- ' + asw
            asw_list.append(asw)
        else:
            asw_list.append(asw)


    com1 = '%sx^2 %sAx %sA^2' % (int_str_converter(L, True, True), int_str_converter(M, False, True), int_str_converter(N, False, True))
    com2 = '%dA`=`B' % M
    com3 = '%dA^2`=`C' % N
    com4 = '%dA`=`%dA`+`%d' % (M, X, Y)
    com5 = 'A`=`%s' % (asw_list[0])
    com6 = 'B`=`%dA`=`%s' % (M, asw_list[1])
    com7 = 'C`=`%dA^2`=`%s' % (N, asw_list[2])

    ans1 = 'A `=` %s' % (asw_list[0])
    ans2 = 'B `=` %s' % (asw_list[1])
    ans3 = 'C `=` %s' % (asw_list[2])

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3)
    answer = answer.format(ans1=ans1, ans2=ans2, ans3=ans3)
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6,com7=com7)

    return stem, answer, comment


# 3-1-2-26
def factorization312_Stem_023():
    stem = "다음은 왼쪽의 두 다항식으로부터 어떤 규칙에 의하여 오른쪽 다항식을 구한 것이다. $$수식$${box}$$/수식$$ 안에 알맞은 다항식은?\n" \
           "㈎ $$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$ ⇨ $$수식$${stem3}$$/수식$$\n" \
           "㈏ $$수식$${stem4}$$/수식$$, $$수식$${stem5}$$/수식$$ ⇨ $$수식$${stem6}$$/수식$$\n" \
           "㈐ $$수식$${stem7}$$/수식$$, $$수식$${stem8}$$/수식$$ ⇨ $$수식$${box}$$/수식$$\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "㈎ $$수식$${com1}`=`{com2}$$/수식$$ ⇨ $$수식$${stem3}$$/수식$$\n" \
              "㈏ $$수식$${com3}`=`{com4}$$/수식$$ ⇨ $$수식$${stem6}$$/수식$$\n" \
              "따라서 왼쪽의 두 다항식의 합을 인수분해 하면 오른쪽 다항식의 제곱이 된다.\n" \
              "㈐에서 $$수식$${stem7}$$/수식$$, $$수식$${stem8}$$/수식$$\n" \
              "$$수식$${com5}`+`{com6}$$/수식$$\n" \
              "$$수식$$=`{com7}$$/수식$$\n" \
              "$$수식$$=`{com9}$$/수식$$\n" \
              "따라서 $$수식$${box}`=`{com8}$$/수식$$\n\n"

    qu_eps = []

    while True:
        Z, X, U, V = np.random.choice(np.arange(1, 10), 4)
        Y, W = np.random.choice(np.arange(-9, 0), 2)
        R, S, T = np.random.choice(np.arange(-10, 51), 3)
        L = Z * Z
        M = 2 * Z * Y
        N = Y * Y
        O = X * X
        P = 2 * X * W
        Q = W * W
        D = U * U
        E = 2 * U * V
        F = V * V
        G = D - R
        H = E - S
        I = F - T
        n, k = np.random.choice(np.arange(1, 4), 2)
        qu_eps.append('%sx %s' % (int_str_converter(U-n, True, True), int_str_converter(V-k, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U-n, True, True), int_str_converter(k, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U, True, True), int_str_converter(V-k, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U, True, True), int_str_converter(V, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U, True, True), int_str_converter(V+k, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U+n, True, True), int_str_converter(V, False, False)))
        qu_eps.append('%sx %s' % (int_str_converter(U+n, True, True), int_str_converter(V+k, False, False)))

        np.random.shuffle(qu_eps)
        qu_eps = qu_eps[:5]

        cor_text = '%sx %s' % (int_str_converter(U, True, True), int_str_converter(V, False, False))
        if 0 not in [L, M, N, Z, Y, O, Q, P, X, W, G, H, I, R, S, T, U, V, U-n, U+n, V-k, k, V, V+k] \
                and cor_text in qu_eps :
            break

    com8 = '%sx %s' % (int_str_converter(U, True, True), int_str_converter(V, False, False))

    K = qu_eps.index(com8)

    stem1 = '%sx^2' % int_str_converter(L, True, True)
    stem2 = '%dx`+`%d' % (M, N)
    stem3 = '%dx`-`%s' % (Z, abs(Y))
    stem4 = '%dx^2`+`%d' % (O, Q)
    stem5 = '%dx' % P
    stem6 = '%dx`-`%d' % (X, abs(W))
    stem7 = '%sx^2 %sx %s' % (int_str_converter(G, True, True), int_str_converter(H, False, True), int_str_converter(I, False, False))
    stem8 = '%sx^2 %sx %s' % (int_str_converter(R, True, True), int_str_converter(S, False, True), int_str_converter(T, False, False))

    com1 = '%s %sx %s' % (stem1, int_str_converter(M, False, True), int_str_converter(N, False, False))
    com2 = '(%s)' % stem3
    com3 = '%sx^2 %sx %s' % (int_str_converter(Q, True, True), int_str_converter(P, False, True), int_str_converter(Q, False, False))
    com4 = '(%s)^2' % stem6
    com5 = '(%s)' % stem7
    com6 = '(%s)' % stem8
    com7 = '%sx^2 %sx %s' % (int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, False))
    com9 = '(%s)^2' % com8

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, stem4=stem4, stem5=stem5, stem6=stem6, stem7=stem7, stem8=stem8,
                       qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4], box=box)
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(box=box, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7, com8=com8
                             , com9=com9, stem3=stem3, stem6=stem6, stem7=stem7, stem8=stem8)

    return stem, answer, comment


# 3-1-2-27
def factorization312_Stem_024():
    stem = "다음 중 옳지 않은 것은?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "{asw_num} $$수식$${com1}`=`{com2}$$/수식$$\n\n\n"

    while True:
        qu_eps = []
        Z, X, W, V, T, A, B = np.random.choice(np.arange(-9, 10), 7)
        Y = -1 * Z
        L = Z * Y
        M = X * X
        U = -1 * W
        N = W * U
        O = V * V
        S = -1 * T
        R = S * T
        C = -1 * B
        D = A * A
        E = B * C
        asw_txt = ' ( `%s`+`x`  ) ( `%s`-`x`  )`=`x ^{2} %s' \
                  '' % (int_str_converter(X, True, False), int_str_converter(X, True, False),
                        int_str_converter(M, False, False))
        qu_eps.append(' ( `x %s`  ) ( `x %s`  )`=`x ^{2} %s'
                      '' % (int_str_converter(Z, False, False), int_str_converter(Y, False, False),
                            int_str_converter(L, False, False)))
        qu_eps.append(asw_txt)
        qu_eps.append(' ( `%sa %s`  ) ( `%sa %s`  )`=`%sa ^{2} %s'
                      '' % (int_str_converter(W, True, True), int_str_converter(V, False, False),
                            int_str_converter(U, True, True), int_str_converter(V, False, False),
                            int_str_converter(N, True, True), int_str_converter(O, False, False)))
        qu_eps.append(' ( `%sx`-`y`  ) ( `%sx`-`y`  )`=`y ^{2} %sx ^{2}'
                      '' % (int_str_converter(T, True, True), int_str_converter(S, True, True),
                            int_str_converter(R, False, True)))
        eps = []
        for n in [A, B, C, D, E]:
            if n < 0:
                eps.append('- {1} over {%d}' % abs(n))
            else:
                eps.append('{1} over {%d}' % abs(n))

        ep5 = ' ( `%sy`+`%s`  )  ( `%sy`+`%s`  ) `=`%sy ^{2} `+`%s' \
              '' % (eps[0], eps[1], eps[0], eps[2], eps[3], eps[4])
        ep5 = ep5.replace('`+`-', '`-`')
        qu_eps.append(ep5)
        np.random.shuffle(qu_eps)
        K = qu_eps.index(asw_txt)
        if 0 not in [Z, Y, L, X, M, W, V, U, N, O, T, S, R, A, B, C, D, E] and (abs(A) != 1) \
                and (abs(B) != 1) and (abs(C) != 1) and(abs(D) != 1) and(abs(E) != 1):
            break

    com1 = asw_txt.split('`=`')[0]
    com2 = '%d`-`x^2' % M

    stem = stem.format(qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(asw_num=multiple_choice_nums[K], com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-28
def factorization312_Stem_025():
    stem = "$$수식$${stem1}{stem2}$$/수식$${josa} 전개하면?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(정답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}{stem2}`=`{com1}$$/수식$$\n\n"


    while True:
        qu_eps = []
        Z = np.random.choice(np.arange(-9, 10), 1)[0]
        Y = np.random.choice(np.arange(1, 10), 1)[0]
        M = Z * Z
        X = -1 * Y
        N = Y * X
        O = 2 * Z * Y
        P = -2 * Z * Y
        Q = -1 * N
        R = -1 * M
        qu_eps.append('%sx ^{2} %sx `+` %d' % (int_str_converter(M, True, True), int_str_converter(O, False, True), abs(Q)))
        qu_eps.append('%sx ^{2} %sx `+` %d' % (int_str_converter(M, True, True), int_str_converter(P, False, True), abs(Q)))
        qu_eps.append('%sx ^{2} `-` %d' % (int_str_converter(R, True, True), abs(N)))
        qu_eps.append('%sx ^{2} `+` %d' % (int_str_converter(M, True, True), abs(Q)))
        qu_eps.append('%sx ^{2} `-` %d' % (int_str_converter(M, True, True), abs(N)))
        np.random.shuffle(qu_eps)
        K = qu_eps.index('%sx ^{2} `-` %d' % (int_str_converter(M, True, True), abs(N)))
        if (Z != 0) and len(set(qu_eps)) == 5 :
            break
    josa = '을' if abs(X) in have_jongsung_num else '를'

    stem1 = ' ( %sx %s  )' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False))
    stem2 = ' ( %sx %s  )' % (int_str_converter(Z, True, True), int_str_converter(X, False, False))

    com1 = ' ( %dx  )^2`-`%d^2`=`%sx`-`%s' % (Z, Y, M, abs(N))

    stem = stem.format(stem1=stem1, stem2=stem2, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2],
                       qu_ep4=qu_eps[3], qu_ep5=qu_eps[4], josa=josa)
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1)

    return stem, answer, comment


# 3-1-2-29
def factorization312_Stem_026():
    stem = "다음 중 $$수식$${stem1}$$/수식$$와 전개식이 같은 것은?\n" \
           "① $$수식$${qu_ep1}$$/수식$$\n" \
           "② $$수식$${qu_ep2}$$/수식$$\n" \
           "③ $$수식$${qu_ep3}$$/수식$$\n" \
           "④ $$수식$${qu_ep4}$$/수식$$\n" \
           "⑤ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "① $$수식$${com2}$$/수식$$\n" \
              "② $$수식$${com3}$$/수식$$\n" \
              "③ $$수식$${com4}$$/수식$$\n" \
              "④ $$수식$${com5}$$/수식$$\n" \
              "⑤ $$수식$${com6}$$/수식$$\n\n"


    while True :

        A, B = np.random.choice(np.arange(1, 10), 2)
        C = -1 * B
        L = A * A
        M = B * C
        D = -1 * A
        O = B * B
        P = 2 * B * D
        Q = -1 * L

        com_list = []
        com_list.append(' ( `%sx %sy`  ) ( `%sx %sy`  )`=`%sx ^{2} %sy ^{2} `'
                        '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                              int_str_converter(D, True, True), int_str_converter(B, False, True),
                              int_str_converter(Q, True, True), int_str_converter(O, False, True)))
        com_list.append(' ( `%sx %sy`  ) ( `%sx %s`y`  )`=`%sx ^{2} %sy ^{2}'
                        '' % (int_str_converter(D, True, True), int_str_converter(C, False, True),
                              int_str_converter(D, True, True), int_str_converter(B, False, True),
                              int_str_converter(L, True, True), int_str_converter(M, False, True)))
        com_list.append(' ( `%sx %sy`  ) ( `%sy %s`x`  )`=`%sx ^{2} %sxy %sy ^{2}'
                        '' % (int_str_converter(D, True, True), int_str_converter(B, False, True),
                              int_str_converter(B, True, True), int_str_converter(D, False, True),
                              int_str_converter(L, True, True), int_str_converter(P, False, True),
                              int_str_converter(O, False, True)))
        com_list.append(' ( `%sx %sy`  ) ( `%sx %sy`  )`=`%sx ^{2} %sxy`%sy ^{2}'
                        '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                              int_str_converter(D, True, True), int_str_converter(C, False, True),
                              int_str_converter(Q, True, True), int_str_converter(P, False, True),
                              int_str_converter(M, False, True)))
        com_list.append(' ( `%sx %sy`  ) ( `%sy %sx`  )`=`%sx ^{2} %sy ^{2}'
                        '' % (int_str_converter(A, True, True), int_str_converter(C, False, True),
                              int_str_converter(C, True, True), int_str_converter(D, False, True),
                              int_str_converter(Q, True, True), int_str_converter(M, False, True)))
        if 0 not in [A, B, C, L, M, O, P, Q] and len(set(com_list)) == 5 :
            break


    np.random.shuffle(com_list)
    K = com_list.index(' ( `%sx %sy`  ) ( `%sx %s`y`  )`=`%sx ^{2} %sy ^{2}'
                       '' % (int_str_converter(D, True, True), int_str_converter(C, False, True),
                             int_str_converter(D, True, True), int_str_converter(B, False, True),
                             int_str_converter(L, True, True), int_str_converter(M, False, True)))

    qu_eps = [com.split('`=`')[0] for com in com_list]
    stem1 = ' ( %sx %sy  ) ( %sx %sy  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(A, True, True), int_str_converter(C, False, True))
    com1 = ' ( `%sx %sy`  ) ( `%sx %s`y`  )`=`%sx ^{2} %sy ^{2}' \
           '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                 int_str_converter(A, True, True), int_str_converter(C, False, True),
                 int_str_converter(L, True, True), int_str_converter(M, False, True))

    stem = stem.format(stem1=stem1, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2],
                       qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(com1=com1, com2=com_list[0], com3=com_list[1], com4=com_list[2],
                             com5=com_list[3], com6=com_list[4])

    return stem, answer, comment


# 3-1-2-30
def factorization312_Stem_027():
    stem = "곱셈공식을 이용하여 $$수식$${s_exp1}$$/수식$${josa1} 계산하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s_exp1}$$/수식$$\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n\n"

    A = np.random.randint(1, 10)
    B = -1 * A
    C = A * B
    Z = 1000 + A
    Y = 1000 + B
    K = 1000000 + C
    josa1 = check_jongsung(Y)[2]

    s_exp1 = "%d `TIMES` %d" % (Z, Y)
    c_exp1 = "=`  ( 1000 `+` %d  )  ( 1000 `-` %d  )" % (A, A)
    c_exp2 = "=` 1000000 `-` %d `=` %d" % (-C, K)

    ans_int = "%d" % (K)

    stem = stem.format(s_exp1=s_exp1, josa1=josa1)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(s_exp1=s_exp1, c_exp1=c_exp1, c_exp2=c_exp2)

    return stem, answer, comment


# 3-1-2-31
def factorization312_Stem_028():
    stem = "곱셈 공식을 이용하여 $$수식$${s_exp1}$$/수식$${j1} 계산하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n\n"

    A = np.random.randint(1, 10)

    while True:
        B = np.random.randint(2, 10)
        if B != 4 and B != 9:
            break

    C = (A ** 2) - B
    j1 = '을' if abs(B) % 10 in have_jongsung_num else '를'
    s_exp1 = " ( %d `+` sqrt {%d}  )  ( %d `-` sqrt {%d}  )" % (A, B, A, B)
    c_exp1 = " ( %d `+` sqrt {%d}  )  ( %d `-` sqrt {%d}  ) " \
             "`=` %d ^{2} `-`  ( sqrt {%d}  ) ^{2} `=` %d" % (A, B, A, B, A, B, C)
    ans_int = "%d" % C

    stem = stem.format(s_exp1=s_exp1, j1=j1)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1)

    return stem, answer, comment


# 3-1-2-32
def factorization312_Stem_029():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 양수 $$수식$${s_exp2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$($$수식$${c_exp5}$$/수식$$)\n"

    A, K = np.random.choice(np.arange(2, 15), 2, False)

    B = A ** 2
    C = K ** 2

    s_exp1 = " ( `a`-` {1} over {%d} x`  ) `  ( {1} over {%d} x`+`a`  ) " \
             "`=`- {1} over {%d} x ^{2} `+` %d" % (A, A, B, C)
    s_exp2 = "a"
    c_exp1 = " ( `a`-` {1} over {%d} x`  )  ( ` {1} over {%d} x`+`a`  ) $$/수식$$\n" \
             "$$수식$$=` -  ( ` {1} over {%d} x`-`a`  )  ( ` {1} over {%d} x`+`a`  ) $$/수식$$\n" \
             "$$수식$$=`- {1} over {%d} x ^{2} `+`a ^{2}" % (A, A, A, A, B)
    c_exp2 = "=`- {1} over {%d} x ^{2} `+`%d" % (B, C)
    c_exp3 = "a ^{2} `=` %d" % (C)
    c_exp4 = "a `=` %d" % (K)
    c_exp5 = "BECAUSE`` a `&gt;` 0"

    ans_int = "%d" % K

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-34
def factorization312_Stem_030():
    stem = "$$수식$${s_exp1}$$/수식$$를 계산하면 $$수식$${s_exp2}$$/수식$$의 계수는 $$수식$$a$$/수식$$, " \
           "$$수식$${s_exp3}$$/수식$$의 계수는 $$수식$$b$$/수식$$이다. 이때 $$수식$${s_exp4}$$/수식$$의 값은?\n" \
           "① $$수식$${n1}$$/수식$$\n" \
           "② $$수식$${n2}$$/수식$$\n" \
           "③ $$수식$${n3}$$/수식$$\n" \
           "④ $$수식$${n4}$$/수식$$\n" \
           "⑤ $$수식$${n5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$이므로 $$수식$${c_exp6}$$/수식$$\n\n"

    while True :
        A, B, C, D, E = np.random.choice(np.arange(1, 10), 5, False)
        Z = -1 * B
        Y = -1 * D
        L = A ** 2
        M = B * Z
        N = C ** 2
        O = Y * D
        P = E * N
        Q = E * O
        R = L + P
        S = M + Q
        K = R - S
        if abs(R) < 100 and abs(S) < 100 :
            break


    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(K)
        elif i < ans_index:
            answers.append(K - abs(ans_index - i) * 2)
        else:
            answers.append(K + abs(ans_index - i) * 2)

    n1, n2, n3, n4, n5 = answers
    ans_num = multiple_choice_nums[ans_index]

    s_exp1 = " ( %sx `%s` %sy  )  ( %sx `%s` %sy  ) " \
             "`%s` %s  ( %sx `%s` %sy  )  ( %sx `%s` %sy  )" \
             % (post_variable(A), sign(B), post_variable(B), post_variable(A), sign(Z), post_variable(Z), sign(E),
                post_variable(E), post_variable(C), sign(Y), post_variable(Y), post_variable(C), sign(D),
                post_variable(D))
    s_exp2 = "x ^{2}"
    s_exp3 = "y ^{2}"
    s_exp4 = "a `-` b"

    c_exp1 = s_exp1
    c_exp2 = "=`  ( %sx ^{2} `%s` %sy ^{2}  ) `%s` %s  ( %sx ^{2} `%s` %sy ^{2} )" \
             % (post_variable(L), sign(M), post_variable(M), sign(E), post_variable(E),
                post_variable(N), sign(O), post_variable(O))
    c_exp3 = "=` %sx ^{2} `%s` %sy ^{2} `%s` %sx ^{2} `%s` %sy ^{2}" \
             % (post_variable(L), sign(M), post_variable(M), sign(P), post_variable(P), sign(Q), post_variable(Q))
    c_exp4 = "=` %sx ^{2} `%s` %sy ^{2}" % (post_variable(R), sign(S), post_variable(S))
    c_exp5 = "a `=` %d$$/수식$$, $$수식$$b `=` %d" % (R, S)
    c_exp6 = "a `-` b `=` %d" % K

    stem = stem.format(n1=n1, n2=n2, n3=n3, n4=n4, n5=n5, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-35
def factorization312_Stem_031():
    stem = "다음 등식에서 $$수식$${box}$$/수식$$ 안에 알맞은 수는?\n" \
           "$$수식$${s_exp1}{s_exp2}$$/수식$$\n" \
           "① $$수식$${n1}$$/수식$$\n" \
           "② $$수식$${n2}$$/수식$$\n" \
           "③ $$수식$${n3}$$/수식$$\n" \
           "④ $$수식$${n4}$$/수식$$\n" \
           "⑤ $$수식$${n5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n\n"

    A = np.random.choice([-2, -1, 1, 2], 1)[0]
    B = A ** 2
    C = B ** 2
    D = C ** 2
    E = D ** 2

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(16)
        elif i < ans_index:
            answers.append(16 - abs(ans_index - i) * 2)
        else:
            answers.append(16 + abs(ans_index - i) * 2)

    n1, n2, n3, n4, n5 = answers
    ans_num = multiple_choice_nums[ans_index]

    s_exp1 = " ( %d `-` a  )  ( `%d `+` a  )  ( %d `+` a ^{2}  )  ( %d `+` a ^{4}  )" \
             "  ( %d `+` a ^{8}  )" % (A, A, B, C, D)
    s_exp2 = "`=` %d `-` a ^{{BOX{~~}}}" % E

    c_exp1 = s_exp1
    c_exp2 = "=`  ( %d `-` a ^{2}  )  ( %d `+` a ^{2}  )  ( %d `+` a ^{4}  ) " \
             " ( %d `+` a ^{8}  )" % (B, B, C, D)
    c_exp3 = "=`  ( %d `-` a ^{4}  )  ( %d `+` a ^{4}  )  ( %d `+` a ^{8}  )" % (C, C, D)
    c_exp4 = "=`  ( %d `-` a ^{8}  )  ( %d `+` a ^{8}  )" % (D, D)
    c_exp5 = "=` %d `-` a ^{16}" % E

    stem = stem.format(box=box, s_exp1=s_exp1, s_exp2=s_exp2, n1=n1, n2=n2, n3=n3, n4=n4, n5=n5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-36
def factorization312_Stem_032():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$에 대하여 $$수식$${s_exp3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$이므로\n" \
              "$$수식$${c_exp7}$$/수식$$\n\n"

    A = np.random.randint(1, 3) * np.random.choice([-1, 1], 1)[0]
    Z = -1 * A
    B = A ** 2
    Y = -1 * B
    C = B ** 2
    X = -1 * C
    D = C ** 2
    W = -1 * D
    K = 8 - W

    s_exp1 = " ( x `%s` %d  )  ( x `%s` %d  )  ( x ^{2} `+` %d  ) " \
             " ( x ^{4} `+` %d  ) `=` x ^{a} `+`b`" % (sign(Z), abs(Z), sign(A), abs(A), B, C)
    s_exp2 = "a$$/수식$$, $$수식$$b"
    s_exp3 = "a `-` b"

    ans_int = K

    c_exp1 = " ( x `%s` %d  )  ( x `%s` %d  )  ( x ^{2} `+` %d  ) " \
             " ( x ^{4} `+` %d  )" % (sign(Z), abs(Z), sign(A), abs(A), B, C)
    c_exp2 = "=`  ( x ^{2} `%s` %d  )  ( x ^{2} `+` %d  )  ( x ^{4} `+` %d  )"\
             % (sign(Y), abs(Y), B, C)
    c_exp3 = "=`  ( x ^{4} `%s` %d  )  ( x ^{4} `+` %d  )" % (sign(X), abs(X), C)
    c_exp4 = "=` x ^{8} `-` %d" % abs(D)
    c_exp5 = "a `=` 8"
    c_exp6 = "b `=` %d" % W
    c_exp7 = "a `-` b `=` 8 `-`  ( %d  ) `=` %d" % (W, K)

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7)

    return stem, answer, comment


# 3-1-2-37
def factorization312_Stem_033():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$에 대하여 $$수식$${s_exp4}$$/수식$$의 값은?\n" \
           "① $$수식$${n1}$$/수식$$\n" \
           "② $$수식$${n2}$$/수식$$\n" \
           "③ $$수식$${n3}$$/수식$$\n" \
           "④ $$수식$${n4}$$/수식$$\n" \
           "⑤ $$수식$${n5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "따라서 $$수식$${c_exp7}$$/수식$$, $$수식$${c_exp8}$$/수식$$이므로\n" \
              "$$수식$${c_exp9}$$/수식$$"

    A = np.random.randint(1, 5)
    B = A * 2
    C = B * 2
    D = C * 2
    E = D - A

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(A)
        elif i < ans_index:
            answers.append(A - abs(ans_index - i) * 2)
        else:
            answers.append(A + abs(ans_index - i) * 2)

    n1, n2, n3, n4, n5 = answers
    ans_num = multiple_choice_nums[ans_index]

    s_exp1 = " ( 1 `+` {1} over {x ^{%d}}  )  ( 1 `+` {1} over {x ^{%d}}  ) " \
             " ( 1 `+` {1} over {x ^{%d}}  ) `=` {x ^{a} `-` 1} over {x ^{a} `-` x ^{b}}" % (A, B, C)
    s_exp2 = "a"
    s_exp3 = "b"
    s_exp4 = "a `-` b"

    c_exp1 = "{x ^{%d}} over {x ^{%d} `-`1} `  ( 1`-` {1} over {x ^{%d}}  ) " \
             " ( 1 `+` {1} over {x ^{%d}}  )  ( 1`+` {1} over {x ^{%d}}  ) " \
             " ( 1 `+` {1} over {x ^{%d}}  )" % (A, A, A, A, B, C)
    c_exp2 = "=` {x ^{%d}} over {x ^{%d} `-` 1} `  ( `1`-` {1} over {x ^{%d}}  ) " \
             " ( 1 `+` {1} over {x ^{%d}}  )  ( 1 `+` {1} over {x ^{%d}}  )" % (A, A, B, B, C)
    c_exp3 = "=` {x ^{%d}} over {x ^{%d} `-` 1}  ( 1 `-` {1} over {x ^{%d}}  ) " \
             " ( 1 `+` {1} over {x ^{%d}}  )" % (A, A, C, C)
    c_exp4 = "=` {x ^{%d}} over {x ^{%d} `-` 1}  ( 1 `-` {1} over {x ^{%d}}  )" % (A, A, D)
    c_exp5 = "=` {x ^{%d}} over {x ^{%d} `-` 1} ` TIMES ` {x ^{%d} `-` 1} over {x ^{%d}}" % (A, A, D, D)
    c_exp6 = "=` {x ^{%d} `-`1} over {x ^{%d} `-` x ^{%d}}" % (D, D, E)
    c_exp7 = "a `=` %d" % D
    c_exp8 = "b `=` %d" % E
    c_exp9 = "a - b `=` %d" % A

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, n1=n1, n2=n2, n3=n3, n4=n4, n5=n5)
    answer = answer.format(ans_num=ans_num)
    comment =comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6, c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9)

    return stem, answer, comment


# 3-1-2-38
def factorization312_Stem_034():
    stem = "다음 중 옳지 않은 것은?\n" \
           "① $$수식$${s_exp1}$$/수식$$\n" \
           "② $$수식$${s_exp2}$$/수식$$\n" \
           "③ $$수식$${s_exp3}$$/수식$$\n" \
           "④ $$수식$${s_exp4}$$/수식$$\n" \
           "⑤ $$수식$${s_exp5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "{ans_num} $$수식$${c_exp1}$$/수식$$\n\n"


    A, B, C, D, H, I, M, N, W, X = np.random.randint(1, 10, 10) * np.reshape(np.random.choice([-1, 1], 10), -1)
    R, S = np.random.randint(2, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)

    E = A * C
    F = B * C + A * D
    G = B * D
    J = H ** 2
    K = 2 * H * I
    L = I ** 2
    O = -1 * N
    P = M ** 2
    Q = O * N
    T = R * S
    U = 2 * (R // S)
    Y = W ** 2
    Z = - 2 * W * X
    AA = -1 * X ** 2
    BB = 2 * W * X
    CC = X ** 2

    VV = " ( %sx `%s` %d  )  ( %sx `%s` %d  ) `=` %sx ^{2} `%s` %sx `%s` %d" \
         % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D), ppost_variable(E), sign(F),
            post_variable(F), sign(G), abs(G))

    WW = " ( %sx `%s` %d  ) ^{2} `=` %sx ^{2} `%s` %sx `%s` %d" \
         % (ppost_variable(H), sign(I), abs(I), ppost_variable(J), sign(K), post_variable(K), sign(L), abs(L))

    XX = " ( %sa `%s` %d  )  ( %d `%s` %sa  ) `=` %sa^{2} `%s` %d" \
         % (ppost_variable(M), sign(N), abs(N), O, sign(M), post_variable(M), ppost_variable(P), sign(Q), abs(Q))

    YY = " ( %sx `%s` {1} over {%s} y  )  ( %sx `%s` {1} over {%s} y  ) " \
         "`=` %sx ^{2} `%s` %sxy `%s` {1} over {%s} y ^{2}" \
         % (ppost_variable(R), sign(S), post_variable(S), ppost_variable(S), sign(R), post_variable(R),
            ppost_variable(T), sign(U), post_variable(U), sign(T), post_variable(T))

    ZZ = " ( %sx `%s` %sy  ) ^{2} `=` %sx ^{2} `%s` %sxy `%s` %sy ^{2} " \
         % (ppost_variable(W), sign(X), post_variable(X), ppost_variable(Y), sign(Z), post_variable(Z),
            sign(AA), post_variable(AA))

    s_exp_list = [VV, WW, XX, YY, ZZ]
    np.random.shuffle(s_exp_list)

    s_exp1, s_exp2, s_exp3, s_exp4, s_exp5 = s_exp_list

    ans_num = multiple_choice_nums[s_exp_list.index(ZZ)]

    c_exp1 = " ( %sx `%s` %sy  ) ^{2} `=` %sx ^{2} `%s` %sxy `%s` %sy ^{2} " \
             % (ppost_variable(W), sign(X), post_variable(X), ppost_variable(Y), sign(BB), post_variable(BB),
             sign(CC), post_variable(CC))

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(ans_num=ans_num, c_exp1=c_exp1)

    return stem, answer, comment


# 3-1-2-39
def factorization312_Stem_035():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, " \
           "$$수식$${s_exp3}$$/수식$$에 대하여 $$수식$${s_exp4}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$이므로\n" \
              "$$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$\n" \
              "따라서 $$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$이므로 $$수식$${c_exp6}$$/수식$$\n\n"

    while True:
        int_list = np.random.choice(np.arange(-9, 10), 4, False)
        A, B, C, K = int_list
        D = A * B
        E = -1 * A * C
        F = -1 * C
        Z = K * F
        J = B * K + E
        I = K * J
        B, E = [abs(B), abs(E)] if B < 0 and E < 0 else [B, E]
        if 0 not in int_list :
            break



    s_exp1 = " ( %sx `-` a  )  ( %sx `%s` %d  ) `=` %sx ^{2} `-` bx `%s` %d" \
             % (ppost_variable(A), ppost_variable(B), sign(C), abs(C), ppost_variable(D), sign(Z), abs(Z))

    s_exp2 = "a"
    s_exp3 = "b"
    s_exp4 = "ab"

    c_exp1 = " ( %sx `-` a)  ( %sx `%s` %d  ) `=` %sx ^{2} " \
             "`-`  ( %sa `%s` %d  ) x `%s` %d" \
             % (ppost_variable(A), ppost_variable(B), sign(C), abs(C), ppost_variable(D), ppost_variable(B),
                sign(E), abs(E), sign(Z), abs(Z))
    c_exp2 = "`-`  ( %sa `%s` %d  ) `=` -b" % (ppost_variable(B), sign(E), abs(E))
    c_exp3 = "%sa `=` %d" % (ppost_variable(F), Z)
    c_exp4 = "a `=` %d" % K
    c_exp5 = "b `=` %d" % J
    c_exp6 = "ab `=` %d" % I

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_int=I)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-40
def factorization312_Stem_036():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$에 대하여 " \
           "$$수식$${s_exp4}$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$이므로\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$이므로\n" \
              "$$수식$${c_exp7}$$/수식$$\n\n"

    while True:
        # 중복 관련 조건 없음 / '공통 인수 없음' 조건 없음
        A, B, C, D = np.random.randint(-9, 10, size=4)
        E = A * C
        F = (A * B + C * D)
        # F // G 기호 값 결정
        G = D * B
        F_s = F * G
        H = B * D
        K = F * (G // get_gcd(abs(G), abs(H))) + (H // get_gcd(abs(G), abs(H)))
        L = H * (G // get_gcd(abs(G), abs(H)))
        # 변수 값 0 (x) / 기약 분수 / B, D : 1, -1 (x)
        if 0 not in [A, B, C, D, E, F, G, H, L, K] \
                and check_simFrac(abs(A), abs(D)) and check_simFrac(abs(C), abs(B)) \
                and check_simFrac(abs(G), abs(F)) and check_simFrac(abs(L), abs(K))\
                and abs(B) != 1 and abs(D) != 1 and L % G == 0 and abs(A) != abs(D) and abs(B) != abs(C):

            break

    s_exp1 = " ( %sx `%s` {1} over {%s} y  )  ( %sx `%s` {1} over {%s} y  ) " \
             "`=` %sx ^{2} `+` axy `+` by ^{2}" \
             % (ppost_variable(A), sign(B), post_variable(B), ppost_variable(C), sign(D), post_variable(D),
                ppost_variable(E))

    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = 'a `+` b'

    # 보기 및 답 생성
    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append("%s {%d} over {%d}" % (frac_sign(L * K), abs(K), abs(L)))
        elif i < ans_index:
            u = K - abs(ans_index - i)
            if u == 0:
                answers.append("0")
            else:
                if check_simFrac(abs(u), abs(L)):
                    answers.append("%s {%d} over {%d}" % (frac_sign(u * L), abs(u), abs(L)))
                else:
                    if u % L == 0:
                        answers.append("%s %d" % (frac_sign(u * L), abs(u // L)))
                    else:
                        answers.append("%s {%d} over {%d}" % (frac_sign(u * L),
                                                                           abs(u) // get_gcd(abs(u), abs(L)),
                                                                           abs(L) // get_gcd(abs(u), abs(L))))
        else:
            u = K + abs(ans_index - i)
            if u == 0:
                answers.append("0")
            else:
                if check_simFrac(abs(u), abs(L)):
                    answers.append("%s {%d} over {%d}" % (frac_sign(u * L), abs(u), abs(L)))
                else:
                    if u % L == 0:
                        answers.append("%s %d" % (frac_sign(u * L), abs(u) // abs(L)))
                    else:
                        answers.append("%s {%d} over {%d}" % (frac_sign(u), abs(u) // get_gcd(abs(u), abs(L)),
                                                              abs(L) // get_gcd(abs(u), abs(L))))

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]


    # 괄호 생성
    values = []
    for value in [B, D]:
        if frac_sign(value) == "-":
            values.append( " ( - {1} over {%s}  ) " % abs(value))
        else:
            values.append( "{1} over {%s}" % abs(value))

    B_, D_ = values


    c_exp1 = " ( %sx `%s` {1} over {%s} y  )  ( %sx `%s` {1} over {%s} y  )" \
             % (ppost_variable(A), sign(B), frac_variable(B), ppost_variable(C), sign(D), frac_variable(D))

    c_exp2 = "=` %sx ^{2} `+`  ( %s {%s} over {%s} `%s` {%s} over {%s}  ) xy `+` " \
             "%s `TIMES` %s y ^{2}" \
             % (ppost_variable(E), frac_sign(D * A), frac_variable(A), frac_variable(D), sign(B * C), frac_variable(C),
                abs(B), B_, D_)

    c_exp3 = "=` %sx ^{2} `%s` {%s} over {%s} xy `%s` {1} over {%s} y ^{2}" \
             % (ppost_variable(E), sign(F_s), frac_variable(F), frac_variable(G), sign(H), frac_variable(H))
    c_exp4 = "=` %sx ^{2} `+` axy `+` by ^{2}" % (int_str_converter(E, True, True))
    c_exp5 = "a `=` %s` {%s} over {%s}" % (frac_sign(F_s), frac_variable(F), frac_variable(G))
    c_exp6 = "b `=` %s` {1} over {%s}" % (frac_sign(H), frac_variable(H))
    c_exp7 = "a `+` b `=` %s` {%s} over {%s}" % (frac_sign(K), frac_variable(K), frac_variable(L))

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7)

    return stem, answer, comment


# 3-1-2-41
def factorization312_Stem_037():
    stem = "다음 중 $$수식$${box}$$/수식$$ 안에 들어갈 수가 가장 큰 것은?\n" \
           "① $$수식$${s_exp1}$$/수식$$\n" \
           "② $$수식$${s_exp2}$$/수식$$\n" \
           "③ $$수식$${s_exp3}$$/수식$$\n" \
           "④ $$수식$${s_exp4}$$/수식$$\n" \
           "⑤ $$수식$${s_exp5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "① $$수식$${c_int1}$$/수식$$\n" \
              "② $$수식$${c_int2}$$/수식$$\n" \
              "③ $$수식$${c_int3}$$/수식$$\n" \
              "④ $$수식$${c_int4}$$/수식$$\n" \
              "⑤ $$수식$${c_int5}$$/수식$$\n\n"

    while True:
        # 중복 관련 조건 없음 / 공통인수 조건 없음
        int_list = np.random.randint(-10, 11, size=14)
        A, B, E, F, I, J, K, L, O, P, S, T, U, V = int_list
        C = 2 * A * B
        D = B * B
        G = E * E
        H = F * F
        M = I * K
        N = J * L
        Q = -1 * O
        R = O * Q
        W = T * U
        X = T * V + S * U
        AA = A ** 2
        BB = 2 * E * F
        CC = J * K + I * L
        DD = P * P
        EE = -1 * S * V

        # 결과 범위 조정
        if S * V < 0 and 0 not in int_list and 0 not in [C, D, G, H, M, N, Q, R, W, X, AA, BB, CC, DD, EE] \
                and [True] * 5 == [abs(i) < 100 for i in [AA, BB, CC, DD, EE]] and len(set([AA, BB, CC, DD, EE])) == 5:
            break


    box = "{BOX{~~}}"

    tmp1 = " ( %sx `%s` %sy  ) ^{2} `=` {BOX{~~}} `x ^{2} `%s` %sxy `%s` %sy ^{2}" \
           % (ppost_variable(A), sign(B), post_variable(B), sign(C), post_variable(C), sign(D), post_variable(D))
    tmp2 = " ( %sx `%s` %sy  ) ^{2} `=` %sx ^{2} `+` {BOX{~~}}`xy `%s` %sy ^{2}" \
           % (ppost_variable(E), sign(F), post_variable(F), ppost_variable(G), sign(H), post_variable(H))
    tmp3 = " ( %sx `%s` %d  )  ( %sx `%s` %d  ) `=` %sx ^{2} `+` {BOX{~~}} `x `%s` %d" \
           % (ppost_variable(I), sign(J), abs(J), ppost_variable(K), sign(L), abs(L), ppost_variable(M), sign(N), abs(N))
    tmp4 = " ( %sx `%s` %d  )  ( %sx `%s` %d  ) `=` %sx ^{2} `+` {BOX{~~}}" \
           % (ppost_variable(O), sign(P), abs(P), ppost_variable(Q), sign(P), abs(P), ppost_variable(R))
    tmp5 = " ( %d `%s` %sx  )  ( %sx `%s` %d  ) `=` %sx ^{2} `%s` %sx `+` {{BOX{~~}}" \
           % (S, sign(T), post_variable(T), ppost_variable(U), sign(V), abs(V), ppost_variable(W),
              sign(X), post_variable(X))

    tmp1 = (tmp1, AA)
    tmp2 = (tmp2, BB)
    tmp3 = (tmp3, CC)
    tmp4 = (tmp4, DD)
    tmp5 = (tmp5, EE)

    tmp_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(tmp_list)

    s_list = [tmp[0] for tmp in tmp_list]
    s_exp1, s_exp2, s_exp3, s_exp4, s_exp5 = s_list
    c_list = [tmp[1] for tmp in tmp_list]
    c_int1, c_int2, c_int3, c_int4, c_int5 = c_list

    ans_num = multiple_choice_nums[c_list.index(max(c_list))]

    stem = stem.format(box=box, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_int1=c_int1, c_int2=c_int2, c_int3=c_int3, c_int4=c_int4, c_int5=c_int5)

    return stem, answer, comment


# 3-1-2-42
def factorization312_Stem_038():
    stem = "다음 중 전개하였을 때, $$수식$${s_exp0}$$/수식$$의 계수가 나머지 넷과 다른 하나는?\n" \
           "① $$수식$${s_exp1}$$/수식$$\n" \
           "② $$수식$${s_exp2}$$/수식$$\n" \
           "③ $$수식$${s_exp3}$$/수식$$\n" \
           "④ $$수식$${s_exp4}$$/수식$$\n" \
           "⑤ $$수식$${s_exp5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "① $$수식$${c_exp1}$$/수식$$\n" \
              "② $$수식$${c_exp2}$$/수식$$\n" \
              "③ $$수식$${c_exp3}$$/수식$$\n" \
              "④ $$수식$${c_exp4}$$/수식$$\n" \
              "⑤ $$수식$${c_exp5}$$/수식$$\n\n"

    while True:
        # 중복 관련 조건 없음 / 공통 인수 관련 조건 없음
        B = np.random.randint(-20, 20)
        int_list = np.random.randint(-9, 10, size=11)
        F, G, H, J, M, N, O, P, T, U, W = int_list

        A = B // 2
        C = A ** 2
        E = B - F
        D = E * F
        L = H * J
        I = (B - G * J) // H
        K = G * I
        Q = M * O
        S = N * P
        V = (B - T * W) // U
        R = (M * P) + (N * O)
        X = T * V
        Y = U * W

        # 해설 결과가 다 달라야 한다는 조건 삽입
        if B != 0 and B % 2 == 0 and B != R and 0 not in int_list \
            and (B - G * J) % H == 0 and (B - T * W) % U == 0 and I != 0 and V != 0 and B != F and B != K \
            and B != Q and B != X and K != Q and K != X and Q != X and R != 0:
            break


    ZZ = " ( x `%s` %d  ) ^{2}" % (sign(A), abs(A))
    YY = " ( x `%s` %d  )  ( x `%s` %d  )" % (sign(E), abs(E), sign(F), abs(F))
    XX = " ( %sx `%s` %d  ) ( %sx `%s` %d  )" \
         % (ppost_variable(G), sign(H), abs(H), ppost_variable(I), sign(J), abs(J))
    WW = " ( %sx `%s` %d  ) ( %sx `%s` %d  )" \
         % (ppost_variable(T), sign(U), abs(U), ppost_variable(V), sign(W), abs(W))
    UU = " ( %sx `%s` %d  ) ( %sx `%s` %d  )" \
         % (ppost_variable(M), sign(N), abs(N), ppost_variable(O), sign(P), abs(P))

    BB = "x ^{2} `%s` %sx `%s` %d" % (sign(B), post_variable(B), sign(C), abs(C))
    CC = "x ^{2} `%s` %sx `%s` %d" % (sign(B), post_variable(B), sign(D), abs(D))
    DD = "%sx ^{2} `%s` %sx `%s` %d" % (ppost_variable(K), sign(B), post_variable(B), sign(L), abs(L))
    AA = "%sx ^{2} `%s` %sx `%s` %d" % (ppost_variable(Q), sign(R), post_variable(R), sign(S), abs(S))
    EE = "%sx ^{2} `%s` %sx `%s` %d" % (ppost_variable(X), sign(B), post_variable(B), sign(Y), abs(Y))

    tmp1 = (ZZ, BB)
    tmp2 = (YY, CC)
    tmp3 = (XX, DD)
    tmp4 = (WW, EE)
    tmp5 = (UU, AA)

    tmp_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(tmp_list)

    s_list = [tmp[0] for tmp in tmp_list]
    s_exp1, s_exp2, s_exp3, s_exp4, s_exp5 = s_list
    c_list = [tmp[1] for tmp in tmp_list]
    c_exp1, c_exp2, c_exp3, c_exp4, c_exp5 = c_list

    s_exp0 = 'x'

    ans_num = multiple_choice_nums[c_list.index(AA)]

    stem = stem.format(s_exp0=s_exp0, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-43
def factorization312_Stem_039():
    stem = "$$수식$${s_exp1}$$/수식$$의 전개식에서 $$수식$${s_exp2}$$/수식$$의 계수를 $$수식$${s_exp3}$$/수식$$, " \
           "$$수식$${s_exp4}$$/수식$$의 전개식에서 상수항을 $$수식$${s_exp5}$$/수식$$라 할 때, " \
           "$$수식$${s_exp6}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$에서 $$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$\n\n"

    while True:
        # L 조건은 '엑셀 파일 조건'이 오류
        # 중복 관련 조건 없음 / 공통인수 조건 없음
        int_list = np.random.randint(-9, 10, size=8)
        A, B, C, D, H, I, J, K = int_list
        E = A * C
        F = B * C + A * D
        G = B * D
        K = H ** 2
        J = -1 * I
        L = I * J
        Z = F + L
        if 0 not in int_list and 0 not in [E, F, G, K, J, L, Z]:
            break


    s_exp1 = " ( %sx `%s` %d  )  ( %sx `%s` %d  )" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D))
    s_exp4 = " ( %sx `%s` %d  )  ( %sx `%s` %d  )" \
             % (ppost_variable(H), sign(I), abs(I), ppost_variable(H), sign(J), abs(J))

    s_exp2 = "x"
    s_exp3 = "a"
    s_exp5 = "b"
    s_exp6 = "a `+` b"

    c_exp1 = "%s `=` %sx ^{2} `%s` %sx `%s` %d" \
             % (s_exp1, ppost_variable(E), sign(F), post_variable(F), sign(G), abs(G))
    c_exp2 = "a `=` %d" % F
    c_exp3 = "%s `=` %sx ^{2} `%s` %d" % (s_exp4, ppost_variable(K), sign(L), abs(L))
    c_exp4 = "b `=` %d" % L
    c_exp5 = "a `+` b `=` %d" % Z
    ans_int = "%d" % Z

    s_exp1 = "%s" % s_exp1
    s_exp4 = "%s" % s_exp4

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-45
def factorization312_Stem_040():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$에 대하여 " \
           "$$수식$${s_exp4}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_frac}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "따라서 $$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$이므로\n" \
              "$$수식$${c_exp5}$$/수식$$\n\n" \


    while True:
        # 공통인수 조건 생성
        int_list = np.random.randint(-9, 10, size=4)
        A, B, C, Y = int_list
        D = A * B
        E = -1 * Y * C
        F = A * C
        Z = -1 * (F - B * Y)
        K = 2 * Y
        J = Z
        if 0 not in int_list and A * C != B * Y and check_simFrac(abs(K), abs(J)) and check_simFrac(abs(B), abs(C)) \
                and abs(J) != 1:
            break

    s_exp1 = " ( %sx `-` a`  )  ( %sx `%s` %s  ) `=` %sx ^{2} `-`bx `%s` %d" \
             % (ppost_variable(A), ppost_variable(B), sign(B), abs(C), ppost_variable(D), sign(E), abs(E))
    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = '{2a} over {b}'

    c_exp1 = " ( %sx `-` a`  )  ( %sx `%s` %s  ) `=` %sx ^{2} `+`  (%s `%s` %sa ) x `%s` %sa" \
             % (ppost_variable(A), ppost_variable(B), sign(B), abs(C), ppost_variable(D), ppost_variable(F),
                sign(B * -1), post_variable(B), sign(-1 * C), post_variable(C))

    c_exp2 = "`=` %sx ^{2} `-`bx `%s` %d" % (ppost_variable(D), sign(E), abs(E))
    c_exp3 = "a `=` %d" % Y
    c_exp4 = "b `=` %d" % Z
    c_exp5 = "{2a} over {b} `=` %s {%d} over {%d}" % (frac_sign(J * K), abs(K), abs(J))

    ans_frac = "%s {%d} over {%d}" % (frac_sign(J * K), abs(K), abs(J))

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_frac = ans_frac)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-46
def factorization312_Stem_041():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$에 대하여 " \
           "$$수식$${s_exp4}$$/수식$$의 값은?\n" \
           "① $$수식$${s_frac1}$$/수식$$\n" \
           "② $$수식$${s_frac2}$$/수식$$\n" \
           "③ $$수식$${s_frac3}$$/수식$$\n" \
           "④ $$수식$${s_frac4}$$/수식$$\n" \
           "⑤ $$수식$${s_frac5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "띠리서 $$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$이므로\n" \
              "$$수식$${c_exp6}$$/수식$$\n\n"

    while True:
        # 공통 인수 관련 조건 생성
        int_list = np.random.choice(np.arange(-9, 10), size=4, replace=False)
        A, B, C, D = int_list
        E = A * C
        F = B * D
        H = C * D + B * A
        K = H + 1

        # 기약 분수 조건 / 0 (X) 조건 / 분모 값 절대 값 1 초과 조건
        if 0 not in int_list and check_simFrac(abs(F), abs(K)) and abs(F) != 1 and abs(B) != 1 and abs(D) != 1 \
                and 0 not in [E, F, H, K] and check_simFrac(abs(A), abs(B)) and check_simFrac(abs(C), abs(D)) \
                and check_simFrac(abs(B), abs(C)) and check_simFrac(abs(A), abs(D)) and check_simFrac(abs(F), abs(H)):
            break

    s_exp1 = " ( %sx `%s` {1} over {%s} y  )  ( %sx `%s` {1} over {%s} y`  ) " \
             "`=` %sx ^{2} `+` axy `+` by ^{2}" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D), ppost_variable(E))

    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = 'a `+` b'

    c_exp1 = " ( %sx `%s` {1} over {%s} y  )  ( %sx `%s` {1} over {%s} y`  )" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D))
    c_exp2 = "=` %sx ^{2} `%s` {%s} over {%s} xy `%s` {%s} over {%s} xy `%s` {1} over {%s} y ^{2}" \
             % (ppost_variable(E), sign(C * B), abs(C), abs(B), sign(A * D), abs(A), abs(D), sign(F), abs(F))
    c_exp3 = "=` %sx ^{2} `%s` {%s} over {%s} xy `%s` {1} over {%s} y ^{2}" \
             % (ppost_variable(E), sign(H * F), abs(H), abs(F), sign(F), abs(F))
    c_exp4 = 'a `=` %s {%s} over {%s}' % (frac_sign(H * F), abs(H), abs(F))
    c_exp5 = 'b `=` %s {1} over {%s}' % (frac_sign(F), abs(F))
    c_exp6 = 'a `+` b `=` %s {%s} over {%s}' % (frac_sign(K * F), abs(K), abs(F))


    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append("%s {%d} over {%d}" % (frac_sign(F * K), abs(K), abs(F)))
        elif i < ans_index:
            u = K - abs(ans_index - i)
            if u == 0:
                answers.append(" 0 ")
            else:
                if check_simFrac(abs(u), abs(F)):
                    answers.append("%s {%d} over {%d}" % (frac_sign(u * F), abs(u), abs(F)))
                else:
                    if u % F == 0:
                        answers.append("%s %d" % (frac_sign(u * F), abs(u // F)))
                    else:
                        answers.append("%s {%d} over {%d}" % (frac_sign(u * F),
                                                                           abs(u // get_gcd(abs(u), abs(F))),
                                                                           abs(F // get_gcd(abs(u), abs(F)))))
        else:
            u = K + abs(ans_index - i)
            if u == 0:
                answers.append(" 0 ")
            else:
                if check_simFrac(abs(u), abs(F)):
                    answers.append("%s {%d} over {%d}" % (frac_sign(u * F), abs(u), abs(F)))
                else:
                    if u % F == 0:
                        answers.append("%s %d" % (frac_sign(u * F), abs(u // F)))
                    else:
                        answers.append("%s {%d} over {%d}" % (frac_sign(u * F),
                                                                           abs(u // get_gcd(abs(u), abs(F))),
                                                                           abs(F // get_gcd(abs(u), abs(F)))))

    s_frac1, s_frac2, s_frac3, s_frac4, s_frac5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_frac1=s_frac1, s_frac2=s_frac2, s_frac3=s_frac3, s_frac4=s_frac4, s_frac5=s_frac5,
                       s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-47
def factorization312_Stem_042():
    stem = "다음 중 $$수식$${box}$$/수식$$ 안의 수가 나머지 넷과 다른 하나는?\n" \
           "① $$수식$${s_exp1}$$/수식$$\n" \
           "② $$수식$${s_exp2}$$/수식$$\n" \
           "③ $$수식$${s_exp3}$$/수식$$\n" \
           "④ $$수식$${s_exp4}$$/수식$$\n" \
           "⑤ $$수식$${s_exp5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "① $$수식$${c_exp1}$$/수식$$에서 $$수식$${c1}$$/수식$$\n" \
              "② $$수식$${c_exp2}$$/수식$$에서 $$수식$${c2}$$/수식$$\n" \
              "③ $$수식$${c_exp3}$$/수식$$에서 $$수식$${c3}$$/수식$$\n" \
              "④ $$수식$${c_exp4}$$/수식$$에서 $$수식$${c4}$$/수식$$\n" \
              "⑤ $$수식$${c_exp5}$$/수식$$에서 $$수식$${c5}$$/수식$$\n\n"

    while True:
        # 공통 인수 관련 조건 없음
        int_list = np.random.choice(np.arange(-9, 10), size=8, replace=False)
        A, B, D, E, I, M, P, R = int_list
        Z = A + B
        C = A * B
        F = D + E
        G = D * E
        BB = -1 * G
        H = -1 * Z * I
        J = I * H + 1
        L = Z - M
        O = L * M
        Q = Z * P - R
        T = Q * R
        S = P ** 2

        # A: 0 이 아닌 정수로 조건 변경, B: 1자리 자연수
        if B > 0 and 0 not in int_list and 0 not in [Z, C, F, G, BB, H, J, L, O, Q, T, S] \
                and check_simFrac(abs(J), abs(I)) and check_simFrac(abs(T), abs(S)) and abs(P) != 1 \
                and abs(I) != 1 and [True] * 12 == [1 < abs(i) < 120 for i in [Z, C, F, G, BB, H, J, L, O, Q, T, S]]:
            break

    box = "{BOX{~~}}"
    s1 = " ( a %s  )  (a %s  ) `=` a ^{2} `+` {BOX{~~}} `a %s" \
         "" % (int_str_converter(A, False, False), int_str_converter(B, False, False),
               int_str_converter(C, False, False))
    s2 = " ( x `%s` %d  )  (x `%s` %d  ) `=` x ^{2} `%s` %sx `-` {BOX{~~}}" \
         % (sign(D), abs(D), sign(E), abs(E), sign(F), abs(F))
    s3 = " (x `%s` %d  )  ( x `%s` {1} over {%d}  ) `=` x ^{2} `%s` {%d} over {%d} " \
         "x `-` {BOX{~~}}" \
         % (sign(H), abs(H), sign(I), abs(I), sign(J * I), abs(J), abs(I))
    s4 = " (a `%s` %sb  )  ( a `%s` %sb  ) `=` a ^{2} `+` {BOX{~~}} `ab `%s` %sb ^{2}" \
         % (sign(L), post_variable(L), sign(M), post_variable(M), sign(O), post_variable(O))
    s5 = " ( -x `%s` {%d} over {%d} y  )  ( -x `%s` {%d} over {%d} y  )" \
         "`=` x ^{2} `-` {BOX{~~}} `xy `%s` {%d} over {%d} y ^{2}" \
         % (sign(Q * P), abs(Q), abs(P), sign(R * P), abs(R), abs(P), sign(S * T), abs(T), abs(S))

    t1 = " ( a %s  )  (a %s  ) `=` a ^{2} %sa %s`" \
         "" % (int_str_converter(A, False, False), int_str_converter(B, False, False),
               int_str_converter(Z, False, True), int_str_converter(C, False, False))
    t11 = "%s `=` %d" % (box, Z)

    t2 = " ( x `%s` %d  )  (x `%s` %d  ) `=` x ^{2} `%s` %sx `%s` %d`" \
         % (sign(D), abs(D), sign(E), abs(E), sign(F), post_variable(F), sign(G), abs(G))
    t22 = "%s `=` %d" % (box, BB)

    t3 = " (x `%s` %d  )  ( x `%s` {1} over {%d}  ) `=` x ^{2} `%s` {%d} over {%d} x " \
         "`-` %d`" \
         % (sign(H), abs(H), sign(I), abs(I), sign(J*I), abs(J), abs(I), abs(Z))
    t33 = "%s `=` %d" % (box, Z)

    t4 = " (a `%s` %sb  )  ( a `%s` %sb  ) `=` a ^{2} `%s` %sab `%s` %sb ^{2}`" \
         % (sign(L), post_variable(L), sign(M), post_variable(M), sign(Z), post_variable(Z), sign(O),
            post_variable(O))
    t44 = "%s `=` %d" % (box, Z)

    # 수식 태그 때문에 \n 제거
    t5 = " ( -x `%s` {%d} over {%d} y  )  ( -x `%s` {%d} over {%d} y  )" \
         "`=` x ^{2} `-` %sxy `%s` {%d} over {%d} y ^{2}`" \
         % (sign(Q * P), abs(Q), abs(P), sign(R * P), abs(R), abs(P), post_variable(Z), sign(S * T), abs(T), abs(S))
    t55 = "%s `=` %d" % (box, Z)

    tmp1 = (s1, t1, t11)
    tmp2 = (s2, t2, t22)
    tmp3 = (s3, t3, t33)
    tmp4 = (s4, t4, t44)
    tmp5 = (s5, t5, t55)

    tmp_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(tmp_list)

    s_exp1, s_exp2, s_exp3, s_exp4, s_exp5 = [tmp[0] for tmp in tmp_list]

    c_exp_list = [tmp[1] for tmp in tmp_list]
    c_exp1, c_exp2, c_exp3, c_exp4, c_exp5 = c_exp_list

    c1, c2, c3, c4, c5 = [tmp[2] for tmp in tmp_list]

    ans_num = multiple_choice_nums[c_exp_list.index(t2)]

    stem = stem.format(box=box, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5,
                             c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)

    return stem, answer, comment


# 3-1-2-48
def factorization312_Stem_043():
    stem = "$$수식$${s_exp1}$$/수식$$의 전개식에서 $$수식$${s_exp2}$$/수식$$의 계수가 상수항의 $$수식$${s_int1}$$/수식$$배일 때, " \
           "상수 $$수식$${s_exp3}$$/수식$$의 값은?\n" \
           "① $$수식$${s_num1}$$/수식$$\n" \
           "② $$수식$${s_num2}$$/수식$$\n" \
           "③ $$수식$${s_num3}$$/수식$$\n" \
           "④ $$수식$${s_num4}$$/수식$$\n" \
           "⑤ $$수식$${s_num5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = '(해설)\n' \
              '$$수식$${c_exp1}$$/수식$$\n' \
              '이므로 $$수식$${c_exp2}$$/수식$$\n' \
              '$$수식$${c_exp3}$$/수식$$\n' \
              '따라서 $$수식$${c_exp4}$$/수식$$\n\n'

    #----ver_1-----
    while True:
        # 공통 인수 관련 조건 생성
        int_list = np.random.choice(np.arange(-9, 10), size=6, replace=False)
        A, B, C, D, Z, N = int_list
        E = A * D
        F = Z * A
        G = B * D
        H = Z * B
        I = N * H
        J = -1 * F
        L = C * J + I
        if 0 not in int_list and N > 0 and A * C != B * N and check_simFrac(abs(G), abs(C)) \
            and check_simFrac(abs(H), abs(C)) and check_simFrac(abs(G), abs(L)) and check_simFrac(abs(B), abs(C)) \
            and check_simFrac(abs(A), abs(B)) and check_simFrac(abs(D), abs(Z)) \
            and C not in [0, -1, 1] and B != C and abs(L) not in [0, 1] \
            and [True] * 4 == [True for i in [A, B, C, N] if abs(i) in [2, 3, 5, 7]] and abs(L) < 100:
            break

    s_exp1 = " ( %sx `%s` {%d} over {%d}  )  ( %sx `%s` %sa  )" \
             % (ppost_variable(A), sign(B * C), abs(B), abs(C), ppost_variable(D), sign(Z), post_variable(Z))
    s_exp2 = 'x'
    s_exp3 = 'a'
    s_int1 = "%d" % N

    c_exp1 = " ( %sx `%s` {%d} over {%d}  )  ( %sx `%s` %sa  ) " \
             "`=` %sx ^{2} `+`  ( %sa `%s` {%d} over {%d}  ) `x `%s` {%d} over {%d} a" \
             % (ppost_variable(A), sign(B * C), abs(B), abs(C), ppost_variable(D), sign(Z), post_variable(Z),
                ppost_variable(E), ppost_variable(F), sign(G * C), abs(G), abs(C), sign(C * H), abs(H), abs(C))
    c_exp2 = "%sa `%s` {%d} over {%d} `=` %s {%d} over {%d} a ` TIMES ` %d" \
             % (ppost_variable(F), sign(G * C), abs(G), abs(C), frac_sign(C * H), abs(H), abs(C), N)
    c_exp3 = "%s {%d} over {%d} a `%s` %sa `=` %s {%d} over {%d}" \
             % (frac_sign(I * C), abs(I), abs(C), sign(J), post_variable(J), frac_sign(C * G), abs(G), abs(C))

    s = '-' if G * L < 0 else ''
    n = abs(G) // get_gcd(G, L)
    d = abs(L) // get_gcd(G, L)

    cor_text = "%s {%d} over {%d}" % (s, n, d)
    c_exp4 = "a `=` %s" % (cor_text)


    n = np.random.randint(1, 4)
    ans = [i for i in range(G-4*n, (G+4*n)+1, n) if i != 0]
    answers = []
    for a in ans :
        s = '-' if a * L < 0 else ''
        n = abs(a) // get_gcd(abs(a), abs(L))
        d = abs(L) // get_gcd(abs(a), abs(L))
        if n==d :
            answers.append('%s1' % (s))
        elif d == 1 :
            answers.append('%s%s' % (s, n))
        else :
            answers.append('%s {%d} over {%d}' % (s, n, d))

    if len(ans) == 9 :
        idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    else :
        idx = np.random.choice([0, 1, 2, 3], 1)[0]

    answers = answers[idx:idx+5]
    s_num1, s_num2, s_num3, s_num4, s_num5 = answers
    ans_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_int1=s_int1, s_num1=s_num1, s_num2=s_num2,
                       s_num3=s_num3, s_num4=s_num4, s_num5=s_num5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4)

    return stem, answer, comment


# 3-1-2-49
def factorization312_Stem_044():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$, " \
           "$$수식$${s_exp4}$$/수식$$에 대하여 $$수식$${s_exp5}$$/수식$$의 값은?\n" \
           "① $$수식$${s_num1}$$/수식$$\n" \
           "② $$수식$${s_num2}$$/수식$$\n" \
           "③ $$수식$${s_num3}$$/수식$$\n" \
           "④ $$수식$${s_num4}$$/수식$$\n" \
           "⑤ $$수식$${s_num5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "따라서 $$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$이므로\n" \
              "$$수식$${c_exp5}$$/수식$$\n\n"

    while True:
        # 중복 제외 조건 없음 / 공통 인수 관련 조건 없음
        int_list = np.random.randint(-9, 10, size=5)
        A, B, C, D, J = int_list
        E = A * C
        F = B * C + A * D
        G = B * D
        H = J * G
        K = E + F + H
        if 0 not in int_list and 0 not in [F, K] and abs(J) != 1 and abs(K) < 100 \
                and abs(E) < 100 and abs(F) < 100 and abs(G) < 100 \
                and is_gcd(get_gcd(get_gcd(abs(A), abs(B)), abs(C)), D):
            break

    s_exp1 = " ( %sx `%s` %d  )  ( %sx `%s` %d  ) `=` ax ^{2} `+` bx `+` c" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D))
    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = 'c'
    s_exp5 = 'a `+` b %sc' % int_str_converter(J, False, True)

    c_exp1 = " ( %sx %s  )  ( %sx %s  ) `=` %sx^2 %sx %s" \
             "" % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                   int_str_converter(C, True, True), int_str_converter(D, False, False),
                   int_str_converter(E, True, True), int_str_converter(F, False, True),
                   int_str_converter(G, False, False))
    c_exp2 = "a `=` %d" % E
    c_exp3 = "b `=` %d" % F
    c_exp4 = "c `=` %d" % G
    c_exp5 = "a `+` b %sc `=` %s %s %s `=` %d" \
             % (int_str_converter(J, False, True), int_str_converter(E, True, False),
                int_str_converter(F, False, False), int_str_converter(H, False, False), K)


    ans_index = np.random.randint(0, 5)
    answers = []
    n = np.random.randint(1, 4)
    for i in range(5):
        if i == ans_index:
            answers.append(K)
        elif i < ans_index:
            answers.append(K - abs(ans_index - i) * n)
        else:
            answers.append(K + abs(ans_index - i) * n)

    s_num1, s_num2, s_num3, s_num4, s_num5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_num1=s_num1,
                       s_num2=s_num2, s_num3=s_num3, s_num4=s_num4, s_num5=s_num5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-50
def factorization312_Stem_045():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, 상수 $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$, " \
           "$$수식$${s_exp4}$$/수식$$에 대하여 $$수식$${s_exp5}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "이므로 $$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$, $$수식$${c_exp7}$$/수식$$\n" \
              "따라서 $$수식$${c_exp8}$$/수식$$\n\n"


    while True:
        # '공통 인수 없음' 조건 생성
        int_list = np.random.choice(np.arange(-2, 7), size=7, replace=False)
        A, B, C, D, X, Y, Z = int_list
        H = A * C
        E = H * X
        I = A * D
        J = B * C
        F = (I * X * Y + J) // Z
        L = B * D
        K = X + Y + Z
        G = L * Y
        if 0 not in int_list and Z not in [-1, 1] and (I * X * Y + J) % Z == 0 and 0 not in [F, K]\
            and check_simFrac(abs(A), abs(B)) and check_simFrac(abs(C), abs(D)) and check_simFrac(abs(B), abs(C)) \
            and check_simFrac(abs(A), abs(D)) and check_simFrac(abs(A), abs(C)) and check_simFrac(abs(B), abs(D))\
            and check_simFrac(abs(E), abs(G)):
            break

    s_exp1 = " ( %sax `%s` %d  )  ( %sx `%s` %sb  ) `=` %sx ^{2} `%s` %scx `%s` %d" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), post_variable(D), ppost_variable(E),
                sign(F), post_variable(F), sign(G), abs(G))
    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = 'c'
    s_exp5 = 'a `+` b `+` c'

    c_exp1 = " ( %sax `%s` %d  )  ( %sx `%s` %sb  ) " \
             "`=` %sax ^{2} `+`  ( %sab `%s` %d  ) x `%s` %sb" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), post_variable(D), ppost_variable(H),
                ppost_variable(I), sign(J), abs(J), sign(L), post_variable(L))
    c_exp2 = "%sa `=` %d" % (ppost_variable(H), E)
    c_exp3 = "%sab `%s` %d `=` %sc" % (ppost_variable(I), sign(J), abs(J), ppost_variable(F))
    c_exp4 = "%sb `=` %d" % (ppost_variable(L), G)
    c_exp5 = 'a `=` %d' % X
    c_exp6 = 'b `=` %d' % Y
    c_exp7 = 'c `=` %d' % Z
    c_exp8 = 'a `+` b `+` c `=` %d' % K

    ans_int = "%d" % K

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-51
def factorization312_Stem_046():
    stem = "$$수식$${s_exp1}$$/수식$${josa1} 간단히 하면 $$수식$${s_exp2}$$/수식$$의 계수가 $$수식$${s_exp3}$$/수식$$이다. " \
           "$$수식$${s_exp4}$$/수식$$, $$수식$${s_exp5}$$/수식$$가 자연수일 때, 상수항은?\n" \
           "① $$수식$${s_num1}$$/수식$$\n" \
           "② $$수식$${s_num2}$$/수식$$\n" \
           "③ $$수식$${s_num3}$$/수식$$\n" \
           "④ $$수식$${s_num4}$$/수식$$\n" \
           "⑤ $$수식$${s_num5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$의 계수는 $$수식$${c_exp5}$$/수식$$이므로 $$수식$${c_exp6}$$/수식$$\n" \
              "이때, $$수식$${c_exp7}$$/수식$$, $$수식$${c_exp8}$$/수식$$는 자연수이므로 $$수식$${c_exp9}$$/수식$$, " \
              "$$수식$${c_exp10}$$/수식$$\n" \
              "따라서 상수항은 $$수식$${c_exp11}$$/수식$$\n\n"
    while True:
        # 중복 제외 조건 없음 / '공통 인수 없음' 조건 없음
        int_list = np.random.randint(-9, 10, size=7)
        A, B, C, D, E, R, S = int_list
        D = abs(D)
        F = A * B * B
        G = 2 * B * A
        H = C * D
        I = C * E
        J = F + H
        L = G * R + D * S
        M = A * R * R
        N = E * S
        T = G * R + D * S + I
        K = M + N
        # R, S: 한 자리 자연수로 지정
        if 0 not in int_list and R > 0 and S > 0 and 0 not in [L, T, K] and 1 < abs(T) < 100 and G < L < 2 * G\
                and abs(F) < 100 :
            break

    josa1 = check_jongsung(abs(E))[2]
    s_exp1 = "%s  ( %s x `+` a  ) ^{2} `+`  ( %sx `+` b  )  ( %sx `%s` %d`  )" \
             % (ppost_variable(A), ppost_variable(B), ppost_variable(C), ppost_variable(D), sign(E), abs(E))
    s_exp2 = 'x'
    s_exp3 = '%d' % T
    s_exp4 = 'a'
    s_exp5 = 'b'
    c_exp1 = s_exp1
    c_exp2 = "=` %sx ^{2} `%s` %sax `%s` %sa ^{2} `%s` %sx ^{2} `+`  ( %sb `%s` %d  )x `%s` %sb" \
             % (ppost_variable(F), sign(G), post_variable(G), sign(A), post_variable(A), sign(H), post_variable(H),
                ppost_variable(D), sign(I), abs(I), sign(E), post_variable(E))
    c_exp3 = "=` %sx ^{2} `+`  ( %sa `%s` %sb `%s` %d  )x `%s` %sa ^{2} `%s` %sb" \
             % (ppost_variable(J), ppost_variable(G), sign(D), post_variable(D), sign(I), abs(I), sign(A),
                post_variable(A), sign(E), post_variable(E))
    c_exp4 = "x"
    c_exp5 = "%sa `%s` %sb `%s` %d `=` %d" \
             % (ppost_variable(G), sign(D), post_variable(D), sign(I), abs(I), T)
    c_exp6 = "%sa `%s` %sb `=` %d" % (ppost_variable(G), sign(D), post_variable(D), L)
    c_exp7 = 'a'
    c_exp8 = 'b'
    c_exp9 = "a `=` %d" % R
    c_exp10 = "b `=` %d" % S
    c_exp11 = "%sa ^{2} `%s` %sb `=` %d `%s` %d `=` %d" \
              % (ppost_variable(A), sign(E), post_variable(E), M, sign(N), abs(N), K)
    ans_index = np.random.randint(0, 5)
    answers = []
    n = np.random.randint(1, 4)
    for i in range(5):
        if i == ans_index:
            answers.append(K)
        elif i < ans_index:
            answers.append(K - abs(ans_index - i) * n)
        else:
            answers.append(K + abs(ans_index - i) * n)
    s_num1, s_num2, s_num3, s_num4, s_num5 = answers
    ans_num = multiple_choice_nums[ans_index]
    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_num1=s_num1,
                       s_num2=s_num2, s_num3=s_num3, s_num4=s_num4, s_num5=s_num5, josa1=josa1)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11)
    return stem, answer, comment


# 3-1-2-52
def factorization312_Stem_047():
    stem = "다음 등식을 만족시키는 상수 $$수식$${s_exp1}$$/수식$$, $$수식$${s_exp2}$$/수식$$, $$수식$${s_exp3}$$/수식$$, " \
           "$$수식$${s_exp4}$$/수식$$에 대하여 $$수식$${s_exp5}$$/수식$$의 값을 구하시오.\n" \
           "$$수식$${s_exp6}$$/수식$$\n" \
           "$$수식$${s_exp7}$$/수식$$\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "따라서 $$수식$${c_exp6}$$/수식$$, $$수식$${c_exp7}$$/수식$$, $$수식$${c_exp8}$$/수식$$, $$수식$${c_exp9}$$/수식$$이므로\n" \
              "$$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        # 중복 제외 조건 생성
        int_list = np.random.choice(np.arange(-9, 10), size=2, replace=False)
        A, B = int_list
        C = -1 * B
        D = -1 * A
        E = A * D
        F = B * C
        G = E * F
        H = F + E
        K = -1 * H + -1 * G

        # 계산 결과 값 범위 조정
        if 0 not in int_list and 0 < abs(K) < 300 and A != C and 0 not in [H, K]:
            break


    s_exp1 = 'a'
    s_exp2 = 'b'
    s_exp3 = 'c'
    s_exp4 = 'd'
    s_exp5 = 'a `-` b `+` c `-` d'
    s_exp6 = ' ( x `%s` %d  )  ( x `%s` %d  )  ( x `%s` %d  ) ' \
             ' ( x `%s` %d  )' \
             % (sign(A), abs(A), sign(B), abs(B), sign(C), abs(C), sign(D), abs(D))
    s_exp7 = "=` x ^{4} `+` ax ^{3} `+` bx ^{2} `+` cx `+` d"

    c_exp1 = s_exp6
    c_exp2 = '=`  ( x `%s` %d  )  ( x `%s` %d  )  ( x `%s` %d  ) ' \
             ' ( x `%s` %d  )' \
             % (sign(A), abs(A), sign(D), abs(D), sign(B), abs(B), sign(C), abs(C))
    c_exp3 = "=`  ( x ^{2} `%s` %d  )  ( x ^{2} `%s` %d  )" \
             % (sign(E), abs(E), sign(F), abs(F))
    c_exp4 = "=` x ^{4} `%s` %sx ^{2} `%s` %sx ^{2} `%s` %d " \
             % (sign(F), post_variable(F), sign(E), post_variable(E), sign(G), abs(G))
    c_exp5 = "=` x ^{4} `%s` %sx ^{2} `%s` %d" % (sign(H), post_variable(H), sign(G), abs(G))
    c_exp6 = "a `=` 0"
    c_exp7 = "b `=` %d" % H
    c_exp8 = "c `=` 0"
    c_exp9 = "d `=` %d" % G
    c_exp10 = 'a `-` b `+` c `-` d `=` %d' % K

    ans_int = "%d" % K

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6, s_exp7=s_exp7)
    answer = answer.format(ans_int = ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                           c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)


    return stem, answer, comment


# 3-1-2-53
def factorization312_Stem_048():
    stem = "$$수식$${s_exp1}$$/수식$$에 $$수식$${s_exp2}$$/수식$${josa1} 곱해야 할 것을 잘못하여 " \
           "$$수식$${s_exp3}$$/수식$${josa2} 곱하였더니 $$수식$${s_exp4}$$/수식$${josa3} 되었다. 바르게 계산한 답은?\n" \
           "① $$수식$${s_exp5}$$/수식$$\n" \
           "② $$수식$${s_exp6}$$/수식$$\n" \
           "③ $$수식$${s_exp7}$$/수식$$\n" \
           "④ $$수식$${s_exp8}$$/수식$$\n" \
           "⑤ $$수식$${s_exp9}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$이므로 $$수식$${c_exp4}$$/수식$$\n" \
              "바르게 계산하면\n" \
              "$$수식$${c_exp5}$$/수식$$"

    while True:
        # 공통인수 없음 조건 생성
        int_list = np.random.choice(np.arange(-9, 10), size=4, replace=False)
        A, B, C, P = int_list

        D = A * B
        Q = A * C
        N = C * P
        M = B * P + Q
        R = P * C + A * B
        S = P * B
        T = -1 * R
        U = -1 * S
        V = C ** 2
        W = -1 * D
        X = -1 * V

        if 0 not in int_list and check_simFrac(abs(B), abs(C)) and check_simFrac(abs(A), abs(C)) \
            and check_simFrac(abs(A), abs(B)) and 0 not in [M, R] and C != 1:
            break


    s_exp1 = "%sx `+` a" % ppost_variable(A)
    s_exp2 = "%sx `%s` %d" % (ppost_variable(C), sign(B), abs(B))
    s_exp3 = "%sx `%s` %d" % (ppost_variable(B), sign(C), abs(C))
    s_exp4 = "%sx ^{2} `%s` %sx `%s` %d" % (ppost_variable(D), sign(M), post_variable(M), sign(N), abs(N))

    josa1 = check_jongsung(B)[2]
    josa2 = check_jongsung(C)[2]
    josa3 = check_jongsung(N)[3]

    c_exp1 = " ( %sx `+` a  )  ( %sx `%s` %s  ) " \
             "`=` %sx ^{2} `+`  ( %sa `%s` %d )x `%s` %sa" \
             % (ppost_variable(A), ppost_variable(B), sign(C), abs(C), ppost_variable(D), ppost_variable(B), sign(Q),
                abs(Q), sign(C), post_variable(C))
    c_exp2 = "=` %sx ^{2} `%s` %sx `%s` %d" \
             % (ppost_variable(D), sign(M), post_variable(M), sign(N), abs(N))
    c_exp3 = "%sa `=` %d" % (ppost_variable(C), N)
    c_exp4 = "a `=` %d" % P
    c_exp5 = " ( %sx `%s` %d  )  ( %sx `%s` %s  ) " \
             "`=` %sx ^{2} `%s` %sx `%s` %s" \
             % (ppost_variable(A), sign(P), abs(P), ppost_variable(C), sign(B), abs(B), ppost_variable(Q),
                sign(R), post_variable(R), sign(S), abs(S))

    tmp1 = "%sx ^{2} `%s` %d" % (ppost_variable(W), sign(V), abs(V))
    tmp2 = "x ^{2} `%s` %d" % (sign(X), abs(X))
    tmp3 = "%sx ^{2} `%s` %d" % (ppost_variable(D), sign(V), abs(V))
    tmp4 = "%sx ^{2} `%s` %sx `%s` %s" % (ppost_variable(Q), sign(R), post_variable(R), sign(S), abs(S))
    tmp5 = "%sx ^{2} `%s` %sx `%s` %s" % (ppost_variable(Q), sign(T), post_variable(T), sign(U), abs(U))

    s_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(s_list)
    s_exp5, s_exp6, s_exp7, s_exp8, s_exp9 = s_list
    ans_num = multiple_choice_nums[s_list.index(tmp4)]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6,
                       s_exp7=s_exp7, s_exp8=s_exp8, s_exp9=s_exp9, josa1=josa1, josa2=josa2, josa3=josa3)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-54
def factorization312_Stem_049():
    stem = "넓이가 $$수식$${s_exp1}$$/수식$$인 마름모의 한 대각선의 길이가 $$수식$${s_exp2}$$/수식$$일 때, 상수 $$수식$${s_exp3}$$/수식$$의 값은 ?\n" \
           "① $$수식$${s_num1}$$/수식$$\n" \
           "② $$수식$${s_num2}$$/수식$$\n" \
           "③ $$수식$${s_num3}$$/수식$$\n" \
           "④ $$수식$${s_num4}$$/수식$$\n" \
           "⑤ $$수식$${s_num5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "마름모의 다른 대각선의 길이를 $$수식$${c_exp1}$$/수식$$($$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$는 상수)라 하면\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$, $$수식$${c_exp7}$$/수식$$이므로\n" \
              "$$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        # 공통인수 없음 조건 생성
        int_list = np.random.choice(np.arange(-9, 10), size=4, replace=False)
        A, B, T, S = int_list
        C = (A * T) // 2
        D = (B * S) // 2
        K = (B * T + A * S) // 2
        if 0 not in int_list and (A * T) % 2 == 0 and (B * S) % 2 == 0 and (B * T + A * S) % 2 == 0 \
            and check_simFrac(abs(C), abs(D)) and check_simFrac(abs(A), abs(B)) and K != 0:
            break

    s_exp1 = "%sx ^{2} `+` mx `%s` %s" % (ppost_variable(C), sign(D), abs(D))
    s_exp2 = "%sx `%s` %d" % (ppost_variable(A), sign(B), abs(B))
    s_exp3 = "m"


# --- 괄호 생성 ------
    tmp_list = []
    for value in [B, T, A, S]:
        if value < 0:
            value = " ( %s  )" % value
            tmp_list.append(value)
        else:
            tmp_list.append(value)

    B_, T_, A_, S_ = tmp_list


    c_exp1 = "ax `+` b"
    c_exp2 = "a"
    c_exp3 = "b"
    c_exp4 = "{ ( %sx `%s` %s  )  ( ax `+` b )} over {2} $$/수식$$\n" \
             "$$수식$$=` {%sax ^{2} `+`  ( %sa `%s` %sb  )x `%s` %sb} over {2}" \
             % (ppost_variable(A), sign(B), abs(B), ppost_variable(A), ppost_variable(B),
                sign(A), post_variable(A), sign(B), post_variable(B))
    c_exp5 = "=` %sx ^{2} `+` m`x `%s` %s" % (ppost_variable(C), sign(D), abs(D))

    c_exp6 = "a `=` %d" % T
    c_exp7 = "b `=` %d" % S
    c_exp8 = "m `=` {%sa `%s` %sb} over {2} `=` {%s ` TIMES ` %s `+` %s ` TIMES ` %s} over {2} `=` %d" \
             % (ppost_variable(B), sign(A), post_variable(A), B_, T_, A_, S_, K)


    ans_index = np.random.randint(0, 5)
    answers = []
    n = np.random.randint(1, 4)
    for i in range(5):
        if i == ans_index:
            answers.append(K)
        elif i < ans_index:
            answers.append(K - abs(ans_index - i) * n)
        else:
            answers.append(K + abs(ans_index - i) * n)

    s_num1, s_num2, s_num3, s_num4, s_num5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_num1=s_num1, s_num2=s_num2, s_num3=s_num3,
                       s_num4=s_num4, s_num5=s_num5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-55
def factorization312_Stem_050():
    stem = "$$수식$${s_exp1}$$/수식$$의 전개식에서 $$수식$${s_exp2}$$/수식$$의 계수가 $$수식$${s_exp3}$$/수식$$일 때, " \
           "한 자리 자연수 $$수식$${s_exp4}$$/수식$$, $$수식$${s_exp5}$$/수식$$에 대하여 $$수식$${s_exp6}$$/수식$$의 값은? " \
           "(단, $$수식$${s_exp7}$$/수식$$)\n" \
           "① $$수식$${s_num1}$$/수식$$\n" \
           "② $$수식$${s_num2}$$/수식$$\n" \
           "③ $$수식$${s_num3}$$/수식$$\n" \
           "④ $$수식$${s_num4}$$/수식$$\n" \
           "⑤ $$수식$${s_num5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "이므로 $$수식$${c_exp3}$$/수식$$에서\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "이때, $$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$는 한 자리의 자연수이고 $$수식$${c_exp7}$$/수식$$이므로\n" \
              "$$수식$${c_exp8}$$/수식$$, $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 $$수식$${c_exp10}$$/수식$$\n\n"
    while True:
        int_list = np.random.randint(-9, 10, size=4)
        A, B, T, S = int_list
        C = A * B
        L = T * S
        D = L + C
        K = (T ** 2) - (S ** 2)
        # L의 값을 어떤 수의 제곱이 아닌 값으로 설정 (ex: 4, 9, 16, 25, 36....과 같은 수가 아닌 값으로 설정)
        if 0 not in int_list and 1 < S <= T and abs(L) not in [i ** 2 for i in range(1, 10)] \
            and ((T * S) % 5 == 0 or (T * S) % 7 == 0):
            break
    s_exp1 = " ( ax `%s` %s  )  ( %sx `+` b  )" % (sign(A), post_variable(A), ppost_variable(B))
    s_exp2 = 'x'
    s_exp3 = '%d' % D
    s_exp4 = 'a'
    s_exp5 = 'b'
    s_exp6 = 'a ^{2} `-` b ^{2}'
    s_exp7 = 'a `GEQ` b'
    c_exp1 = s_exp1
    c_exp2 = '=` %sax ^{2} `+`  ( ab `%s` %s  ) x `%s` %sb' \
             % (ppost_variable(B), sign(C), abs(C), sign(A), post_variable(A))
    c_exp3 = 'ab `%s` %s `=` %d' % (sign(C), abs(C), D)
    c_exp4 = "ab `=` %d" % L
    c_exp5 = "a"
    c_exp6 = "b"
    c_exp7 = s_exp7
    c_exp8 = "a `=` %d" % T
    c_exp9 = "b `=` %d" % S
    c_exp10 = "a ^{2} `-` b ^{2} `=` %d" % K
    ans_index = np.random.randint(0, 5)
    answers = []
    n = np.random.randint(1, 4)
    for i in range(5):
        if i == ans_index:
            answers.append(K)
        elif i < ans_index:
            answers.append(K - abs(ans_index - i) * n)
        else:
            answers.append(K + abs(ans_index - i) * n)
    s_num1, s_num2, s_num3, s_num4, s_num5 = answers
    ans_num = multiple_choice_nums[ans_index]
    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6,
                       s_exp7=s_exp7, s_num1=s_num1, s_num2=s_num2, s_num3=s_num3, s_num4=s_num4, s_num5=s_num5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)
    return stem, answer, comment


# 3-1-2-56
def factorization312_Stem_051():
    stem = "가로, 세로의 길이가 각각 $$수식$${s_exp1}$$/수식$$, $$수식$${s_exp2}$$/수식$$인 직사각형에서 " \
           "가로의 길이는 $$수식$${s_exp3}$$/수식$$만큼 늘리고 세로의 길이는 $$수식$${s_exp4}$$/수식$$만큼 줄였다. 이때 직사각형의 넓이는?\n" \
           "① $$수식$${s_exp5}$$/수식$$\n" \
           "② $$수식$${s_exp6}$$/수식$$\n" \
           "③ $$수식$${s_exp7}$$/수식$$\n" \
           "④ $$수식$${s_exp8}$$/수식$$\n" \
           "⑤ $$수식$${s_exp9}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$"

    while True:
        int_list = np.random.randint(1, 10, size=4)
        A, B, C, D = int_list
        E = -1 * D
        F = A * B
        G = B * C + A * E
        H = E * C
        I = -1 * H
        J = -1 * G
        L = B * C + -1 * A * E
        M = -1 * L
        # A=B이면 직사각형이 아님, C와 D는 양수가 되어야 함
        if A != B and C != E and 0 not in [G, L] and len(set([G, J, L, M])) == 4 :
            break


    s_exp1 = "%sx" % (ppost_variable(A))
    s_exp2 = "%sx" % (ppost_variable(B))
    s_exp3 = "%d" % C
    s_exp4 = "%d" % D

    c_exp1 = ' ( %sx %s  )  ( %sx %s  ) `=` %sx^2 %sx %s' \
             '' % (int_str_converter(A, True, True), int_str_converter(C, False, False),
                   int_str_converter(B, True, True), int_str_converter(E, False, False),
                   int_str_converter(F, True, True), int_str_converter(G, False, True),
                   int_str_converter(H, False, False))
    tmp1 = '%sx^2 %sx %s' % (int_str_converter(F, True, True), int_str_converter(G, False, True), int_str_converter(H, False, False))
    tmp2 = '%sx^2 %sx %s' % (int_str_converter(F, True, True), int_str_converter(G, False, True), int_str_converter(I, False, False))
    tmp3 = '%sx^2 %sx %s' % (int_str_converter(F, True, True), int_str_converter(J, False, True), int_str_converter(H, False, False))
    tmp4 = '%sx^2 %sx %s' % (int_str_converter(F, True, True), int_str_converter(L, False, True), int_str_converter(H, False, False))
    tmp5 = '%sx^2 %sx %s' % (int_str_converter(F, True, True), int_str_converter(M, False, True), int_str_converter(H, False, False))

    tmp_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(tmp_list)

    s_exp5, s_exp6, s_exp7, s_exp8, s_exp9 = tmp_list

    ans_num = multiple_choice_nums[tmp_list.index(tmp1)]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6,
                       s_exp7=s_exp7, s_exp8=s_exp8, s_exp9=s_exp9)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1)

    return stem, answer, comment


# 3-1-2-57
def factorization312_Stem_052():
    stem = "$$수식$${s_exp1}$$/수식$${josa1} 전개하면?\n" \
           "① $$수식$${s_exp2}$$/수식$$\n" \
           "② $$수식$${s_exp3}$$/수식$$\n" \
           "③ $$수식$${s_exp4}$$/수식$$\n" \
           "④ $$수식$${s_exp5}$$/수식$$\n" \
           "⑤ $$수식$${s_exp6}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n\n"



    while True:
        int_list = np.random.randint(-9, 10, size=3)
        E, F, G = int_list
        H = -1 * F
        I = F * H
        L = E * E
        M = 2 * E * G
        N = G * G
        O = -1 * N
        P = -1 * I
        Q = -1 * M
        if 0 not in int_list and 0 not in [H, I, L, M, N, O, P, Q]:
            break


    josa1 = check_jongsung(abs(G))[2]
    s_exp1 = " ( %sx `%s` %sy `%s` %s  )  ( %sx `%s` %sy `%s` %s  )" \
             % (ppost_variable(E), sign(F), post_variable(F), sign(G), abs(G),
                ppost_variable(E), sign(H), post_variable(H), sign(G), abs(G))

    c_exp1 = "%sx `%s` %s `=` A" % (ppost_variable(E), sign(G), abs(G))
    c_exp2 = "=`  ( A `%s` %sy  )  ( A `%s` %sy  )" \
             % (sign(F), post_variable(F), sign(H), post_variable(H))
    c_exp3 = "=` A ^{2} `%s` %sy ^{2}" % (sign(I), post_variable(I))
    c_exp4 = "=`  ( %sx `%s` %s  ) ^{2} `%s` %sy ^{2}" \
             % (ppost_variable(E), sign(G), abs(G) ,sign(I), post_variable(I))
    c_exp5 = "=` %sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
             % (ppost_variable(L), sign(M), post_variable(M), sign(I), post_variable(I), sign(N), abs(N))

    tmp1 = "%sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
           % (ppost_variable(L), sign(M), post_variable(M), sign(I), post_variable(I), sign(N), abs(N))
    tmp2 = "%sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
           % (ppost_variable(L), sign(M), post_variable(M), sign(I), post_variable(I), sign(O), abs(O))
    tmp3 = "%sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
           % (ppost_variable(L), sign(M), post_variable(M), sign(P), post_variable(P), sign(N), abs(N))
    tmp4 = "%sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
           % (ppost_variable(L), sign(Q), post_variable(Q), sign(P), post_variable(P), sign(O), abs(O))
    tmp5 = "%sx ^{2} `%s` %sx `%s` %sy ^{2} `%s` %d" \
           % (ppost_variable(L), sign(Q), post_variable(Q), sign(I), post_variable(I), sign(O), abs(O))

    tmp_list = [tmp1, tmp2, tmp3, tmp4, tmp5]
    np.random.shuffle(tmp_list)

    s_exp2, s_exp3, s_exp4, s_exp5, s_exp6 = tmp_list

    ans_num = multiple_choice_nums[tmp_list.index(tmp1)]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6,
                       josa1=josa1)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5)

    return stem, answer, comment


# 3-1-2-58
def factorization312_Stem_053():
    stem = "$$수식$${problem1}$$/수식$$를 전개하면?\n" \
           "① $$수식$${problem2}$$/수식$$\n" \
           "② $$수식$${problem3}$$/수식$$\n" \
           "③ $$수식$${problem4}$$/수식$$\n" \
           "④ $$수식$${problem5}$$/수식$$\n" \
           "⑤ $$수식$${problem6}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n\n"

    num1, num2 = random.sample(range(1, 6), 2)
    num3 = random.randint(1, 9)

    num2 = num2 * random.choice([-1, 1])
    num4 = -num1
    num5 = -num2

    equ1 = '{0}x `{1}` {2}'.format(post_variable(num1), sign(num2), abs(num2),)

    problem1 = '( {0} )({1}y `{2}` {3}x `{4}` {5} )'\
        .format(equ1, post_variable(num3), sign(num4), post_variable(num4), sign(num5), abs(num5))

    explain1 = '{0} `=` A'.format(equ1)
    explain2 = 'A ( {0}y `-` A )'.format(post_variable(num3))
    explain3 = '{0}Ay `-` A^{{ 2 }}'.format(post_variable(num3))
    explain4 = '{1}( {0} )y `-` ( {0} )^{{ 2 }}'.format(equ1, post_variable(num3))
    explain5 = '{0}xy `{1}` {2}y `{3}` ( {4}x^{{ 2 }} `{5}` {6}x `{7}` {8} )'\
        .format(post_variable(num1*num3), sign(num2), post_variable(num2*num3), sign(num4), post_variable(num4*num4),
                sign(2*num4*num5), post_variable(2*num4*num5), sign(num5*num5), abs(num5*num5))
    explain6 = '-{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}'\
        .format(post_variable(num4*num4), sign(-2*num4*num5), post_variable(2*num4*num5), sign(num1),
                post_variable(num1*num3), sign(num2), post_variable(num2*num3), sign(-num5*num5), abs(num5*num5))

    problem2 = '-{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}' \
        .format(post_variable(num4 * num4), sign(-2 * num4 * num5), post_variable(2 * num4 * num5), sign(num1),
                post_variable(num1 * num3), sign(num2), post_variable(num2 * num3), sign(-num5 * num5),
                abs(num5 * num5))
    problem3 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}' \
        .format(post_variable(num4 * num4), sign(2 * num4 * num5), post_variable(2 * num4 * num5), sign(num1),
                post_variable(num1 * num3), sign(num2), post_variable(num2 * num3), sign(-num5 * num5),
                abs(num5 * num5))
    problem4 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}' \
        .format(post_variable(num4 * num4), sign(-2 * num4 * num5), post_variable(2 * num4 * num5), sign(num1),
                post_variable(num1 * num3), sign(num2), post_variable(num2 * num3), sign(num5 * num5),
                abs(num5 * num5))
    problem5 = '-{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}' \
        .format(post_variable(num4), sign(-2 * num5), post_variable(2 * num4 * num5), sign(num1),
                post_variable(num1 * num3), sign(num2), post_variable(num2 * num3), sign(-num5 * num5),
                abs(num5 * num5))
    problem6 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4}xy `{5}` {6}y `{7}` {8}' \
        .format(post_variable(num4), sign(-2 * num4 * num5), post_variable(2 * num4 * num5), sign(num1),
                post_variable(num1 * num3), sign(num2), post_variable(num2 * num3), sign(-num5 * num5),
                abs(num5 * num5))

    lst = [[problem2, 1], [problem3, 0], [problem4, 0], [problem5, 0], [problem6, 0]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i
    problem2, problem3, problem4, problem5, problem6 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3,
                       problem4=problem4, problem5=problem5, problem6=problem6)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-59
def factorization312_Stem_054():
    stem = "$$수식$${problem1}$$/수식$$의 전개식에서 상수항을 포함한 모든 항의 계수의 합은?\n" \
           "① $$수식$${problem2}$$/수식$$\n" \
           "② $$수식$${problem3}$$/수식$$\n" \
           "③ $$수식$${problem4}$$/수식$$\n" \
           "④ $$수식$${problem5}$$/수식$$\n" \
           "⑤ $$수식$${problem6}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "따라서 상수항을 포함한 모든 항의 계수의 합은\n" \
              "$$수식$${explain6}$$/수식$$\n\n"

    while 1:
        num1, num3 = random.sample(range(1, 10), 2)
        num2, num4 = random.sample(range(1, 10), 2)

        num2 = num2 * random.choice([-1, 1])
        num3 = num3 * random.choice([-1, 1])
        num4 = num4 * random.choice([-1, 1])
        answer_num = num1 * num1 + 2 * num1 * num3 + num3 * num3 + (num2 + num4) * num1 + (
                    num2 + num4) * num3 + num2 * num4
        if -3 <= answer_num <= 5:
            break


    problem1 = '( {0}x `{1}` {2}y `{3}` {4} ) ( {0}x `{5}` {6}y `{3}` {4} )'\
        .format(post_variable(num1), sign(num2), post_variable(num2),
                sign(num3), abs(num3), sign(num4), post_variable(num4))
    explain1 = '{0}x `{1}` {2} `=` A'.format(post_variable(num1), sign(num3), abs(num3))
    explain2 = '( A `{0}` {1}y ) ( A `{2}` {3}y )'.format(sign(num2), post_variable(num2),
                                                                            sign(num4), post_variable(num4))
    explain3 = 'A^{{ 2 }} `{0}` {1}Ay `{2}` {3}y^{{ 2 }}'\
        .format(sign(num2+num4), post_variable(num2+num4), sign(num2*num4), post_variable(num2*num4))
    explain4 = '( {0}x `{1}` {2} )^{{ 2 }} `{3}` {4}y ( {0}x `{1}` {2} ) `{5}` {6}y^{{ 2 }}'\
        .format(post_variable(num1), sign(num3), abs(num3),
                sign(num2+num4),
                post_variable(num2+num4),
                sign(num2*num4), post_variable(num2*num4))
    explain5 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `{5}` {6}xy `{7}` {8}y `{9}` {10}y^{{ 2 }}'\
        .format(post_variable(num1*num1),
                sign(num1*num3), post_variable(2*num1*num3),
                sign(num3*num3), abs(num3*num3),
                sign((num2+num4)*num1), post_variable((num2+num4)*num1),
                sign((num2+num4)*num3), post_variable((num2+num4)*num3), sign(num2*num4), post_variable(num2*num4))

    result = num1 * num1 + 2 * num1 * num3 + num3 * num3 + (num2 + num4) * num1 + (num2 + num4) * num3 + num2 * num4
    explain6 = '{0} `{1}` {2} `{3}` {4} `{5}` {6} `{7}` {8} `{9}` {10} `=` {11}'\
        .format(num1 * num1, sign(2 * num1 * num3), abs(2 * num1 * num3), sign(num3 * num3), abs(num3 * num3),
                sign((num2 + num4) * num1), abs((num2 + num4) * num1), sign((num2 + num4) * num3),
                abs((num2 + num4) * num3), sign(num2 * num4), abs(num2 * num4), result)

    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    for i in range(5):
        lst.append(result + (i - answer_num))
    a1, a2, a3, a4, a5 = lst
    stem = stem.format(problem1=problem1, problem2=a1, problem3=a2,
                       problem4=a3, problem5=a4, problem6=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-60
def factorization312_Stem_055():
    stem = "$$수식$${problem1}$$/수식$$를 전개하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "$$수식$${explain2}$$/수식$$이므로\n" \
              "(주어진 식)\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "$$수식$$=`{explain7}$$/수식$$\n\n"

    while 1:
        E = random.randint(1, 6)
        F, G = random.sample(range(1, 7), 2)
        F = F * random.choice([-1, 1])
        G = G * random.choice([-1, 1])
        break
    H, I = -F, -G
    problem1 = '( {0}x `{1}` {2}y `{3}` {4} ) ( {0}x `{5}` {6}y `{7}` {8} )'\
        .format(post_variable(E), sign(F), post_variable(F), sign(G), abs(G), sign(H), post_variable(H),
                sign(I), abs(I))
    explain1 = '{0}{1}y `{2}` {3} `=` A'.format(sign(F) if F < 0 else '', post_variable(F), sign(G), abs(G))
    explain2 = '{0}{1}y `{2}` {3} `=` -( {5}y `{6}` {7} ) `=` -A'\
        .format(sign(H) if H < 0 else '', post_variable(H), sign(I), abs(I), sign(F), ppost_variable(F), sign(G), abs(G))
    explain3 = '( {0}x `+` A ) ( {0}x `-` A )'.format(ppost_variable(E))
    explain4 = '{0}x^{{ 2 }} `-` A^{{ 2 }}'.format(post_variable(E*E))
    explain5 = '{0}x^{{ 2 }} `-` ( {2}y `{3}` {4} )^{{ 2 }}'\
        .format(post_variable(E * E), sign(F), ppost_variable(F), sign(G), abs(G))
    explain6 = '{0}x^{{ 2 }} `-` ( {2}y^{{ 2 }} `{3}` {4}y `{5}` {6} )' \
        .format(post_variable(E * E), sign(F*F), ppost_variable(F*F), sign(F*G), post_variable(2*F*G), sign(G*G), abs(G*G))
    explain7 = '{0}x^{{ 2 }} `{1}` {2}y^{{ 2 }} `{3}` {4}y `{5}` {6}' \
        .format(post_variable(E * E), sign(-F * F), post_variable(-F * F), sign(-F * G), post_variable(-2 * F * G),
                sign(-G * G), abs(-G * G))
    a1 = explain7
    a2 = '{0}x^{{ 2 }} `{1}` {2}y^{{ 2 }} `{3}` {4}y `{5}` {6}' \
        .format(post_variable(E * E), sign(-F * F), post_variable(-F * F), sign(-F * G), post_variable(-2 * F * G),
                sign(G * G), abs(-G * G))
    a3 = '{0}x^{{ 2 }} `{1}` {2}y^{{ 2 }} `{3}` {4}y `{5}` {6}' \
        .format(post_variable(E * E), sign(-F * F), post_variable(-F * F), sign(F * G), post_variable(-2 * F * G),
                sign(-G * G), abs(-G * G))
    a4 = '{0}x^{{ 2 }} `{1}` {2}y^{{ 2 }} `{3}` {4}y `{5}` {6}' \
        .format(post_variable(E * E), sign(F * F), post_variable(-F * F), sign(-F * G), post_variable(-2 * F * G),
                sign(-G * G), abs(-G * G))
    a5 = '{0}x^{{ 2 }} `{1}` {2}y^{{ 2 }} `{3}` {4}y `{5}` {6}' \
        .format(post_variable(E * E), sign(F * F), post_variable(-F * F), sign(F * G), post_variable(-2 * F * G),
                sign(-G * G), abs(-G * G))
    lst = [[a1, 1], [a2, 0], [a3, 0], [a4, 0], [a5, 0]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i

    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-61
def factorization312_Stem_056():
    stem = "다음 식의 전개에서 $$수식$${boxblank}$$/수식$$ 안에 알맞은 것은?\n" \
           "$$수식$${problem1}{boxblank}$$/수식$$" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n\n"

    while 1:
        E = random.randint(1, 6)
        F, G = random.sample(range(1, 7), 2)
        F = F * random.choice([-1, 1])
        G = G * random.choice([-1, 1])
        break
    H = E * E
    I = 2 * E * F
    L = F * F
    M = 2 * G
    N = G * G
    O = -N
    P = M * E
    Q = M * F
    R = -Q
    S = G * E
    T = G * F

    problem1 = '( {0}x `{1}` {2}y `{3}` {4} )^{{ 2 }} `=` {5}x^{{ 2 }} `{6}` {7}xy `{8}` {9}y^{{ 2 }} `+` '\
        .format(ppost_variable(E), sign(F), post_variable(F), sign(G), abs(G), ppost_variable(H),
                sign(I), post_variable(I), sign(L), post_variable(L))
    explain1 = '{0}x `{1}` {2}y `=` A'.format(ppost_variable(E), sign(F), post_variable(F))
    explain2 = '( A `{0}` {1} )^{{ 2 }}'.format(sign(G), abs(G))
    explain3 = 'A^{{ 2 }} `{0}` {1}A `{2}` {3}'.format(sign(M), post_variable(M), sign(N), abs(N))
    explain4 = '( {0}x `{1}` {2}y )^{{ 2 }} `{3}` {4} ( {0}x `{1}` {2}y ) `{5}` {6}'\
        .format(ppost_variable(E), sign(F), post_variable(F), sign(M), post_variable(M), sign(N), abs(N))
    explain5 = '{0}x^{{ 2 }} `{1}` {2}xy `{3}` {4}y^{{ 2 }} `{5}` {6}x `{7}` {8}y `{9}` {10}'\
        .format(ppost_variable(H), sign(I), post_variable(I), sign(L), post_variable(L), sign(P), post_variable(P),
                sign(Q), post_variable(Q), sign(N), abs(N))

    a1 = N
    a2 = O
    a3 = '{0}x `{1}` {2}y `{3}` {4}'.format(ppost_variable(P), sign(R), post_variable(R), sign(N), abs(N))
    a4 = '{0}x `{1}` {2}y `{3}` {4}'.format(ppost_variable(P), sign(Q), post_variable(Q), sign(N), abs(N))
    a5 = '{0}x `{1}` {2}y `{3}` {4}'.format(ppost_variable(S), sign(T), post_variable(T), sign(N), abs(N))

    lst = [[a1, 0], [a2, 0], [a3, 0], [a4, 1], [a5, 0]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i

    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, boxblank=box)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5)

    return stem, answer, comment


# 3-1-2-62
def factorization312_Stem_057():
    stem = "$$수식$${problem1}$$/수식$$의 전개식에서 $$수식$$xy`$$/수식$$의 계수, $$수식$$yz`$$/수식$$의 계수, " \
           "$$수식$$xz`$$/수식$$의 계수의 합을 $$수식$$a`$$/수식$$라 하고, " \
           "$$수식$${problem2}$$/수식$$의 전개식에서 $$수식$$x^{{ 2 }}`$$/수식$$의 계수, $$수식$$y^{{ 2 }}`$$/수식$$의 계수, " \
           "$$수식$$z^{{ 2 }}`$$/수식$$의 계수의 합을 라 할 때, $$수식$$a `+` b$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$로 놓으면\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "이므로 $$수식$${explain7}$$/수식$$\n" \
              "$$수식$${explain8}$$/수식$$에서 $$수식$${explain9}$$/수식$$로 놓으면\n" \
              "$$수식$${explain10}$$/수식$$\n" \
              "$$수식$$=`{explain11}$$/수식$$\n" \
              "$$수식$$=`{explain12}$$/수식$$\n" \
              "$$수식$$=`{explain13}$$/수식$$\n" \
              "이므로 $$수식$${explain14}$$/수식$$\n" \
              "따라서 $$수식$${explain15}$$/수식$$\n\n"

    while 1:
        E = random.randint(1, 6)
        F, G = random.sample(range(1, 7), 2)
        F = F * random.choice([-1, 1])
        G = G * random.choice([-1, 1])
        Q = random.randint(1, 6)
        R, S = random.sample(range(1, 7), 2)
        R = R * random.choice([-1, 1])
        S = S * random.choice([-1, 1])
        # break
        H = 2 * G
        I = G * G
        L = E * E
        M = 2 * E * F
        N = F * F
        O = E * H
        P = F * H
        J = M + O + P
        T = 2 * S
        U = S * S
        V = Q * Q
        W = 2 * Q * R
        X = R * R
        Y = T * Q
        Z = T * R
        K = V + X + U
        if -5 <= J + K < 15:
            break

    problem1 = '( {0}x `{1}` {2}y `{3}` {4}z )^{{ 2 }}'\
        .format(ppost_variable(E), sign(F), post_variable(F), sign(G), post_variable(G))
    problem2 = '( {0}x `{1}` {2}y `{3}` {4}z )^{{ 2 }}' \
        .format(ppost_variable(Q), sign(R), post_variable(R), sign(S), post_variable(S))

    explain1 = problem1
    explain2 = '{0}x `{1}` {2}y `=` A'.format(ppost_variable(E), sign(F), post_variable(F))
    explain3 = '( A `{0}` {1}z )^{{ 2 }}'.format(sign(G), post_variable(G))
    explain4 = 'A^{{ 2 }} `{0}` {1}Az `{2}` {3}z^{{ 2 }}'.format(sign(H), post_variable(H), sign(I), post_variable(I))
    explain5 = '( {0}x `{1}` {2}y )^{{ 2 }} `{3}` {4} ( {5}x `{6}` {7}y )z `{8}` {9}^{{ 2 }}'\
        .format(ppost_variable(E), sign(F), post_variable(F), sign(H), post_variable(H), ppost_variable(E), sign(F),
                post_variable(F), sign(I), post_variable(I))
    explain6 = '{0}x^{{ 2 }} `{1}` {2}xy `{3}` {4}y^{{ 2 }} `{5}` {6}xz `{7}` {8}yz `{9}` {10}z^{{ 2 }}'\
        .format(ppost_variable(L), sign(M), post_variable(M), sign(N), post_variable(N), sign(O), post_variable(O),
                sign(P), post_variable(P), sign(I), post_variable(I))
    a = J
    explain7 = 'a `=` {0} `{1}` {2} `{3}` {4} `=` {5}'.format(M, sign(O), abs(O), sign(P), abs(P), a)

    explain8 = problem2
    explain9 = '{0}x `{1}` {2}y `=` B'.format(ppost_variable(Q), sign(R), post_variable(R))
    explain10 = '( B `{0}` {1}z )^{{ 2 }}'.format(sign(S), post_variable(S))
    explain11 = 'B^{{ 2 }} `{0}` {1}Bz `{2}` {3}z^{{ 2 }}'.format(sign(T), post_variable(T), sign(U), post_variable(U))
    explain12 = '( {0}x `{1}` {2}y )^{{ 2 }} `{3}` {4} ( {5}x `{6}` {7}y )z `{8}` {9}^{{ 2 }}' \
        .format(ppost_variable(Q), sign(R), post_variable(R), sign(T), post_variable(T), ppost_variable(Q), sign(R),
                post_variable(R), sign(U), post_variable(U))
    explain13 = '{0}x^{{ 2 }} `{1}` {2}xy `{3}` {4}y^{{ 2 }} `{5}` {6}xz `{7}` {8}yz `{9}` {10}z^{{ 2 }}' \
        .format(ppost_variable(V), sign(W), post_variable(W), sign(X), post_variable(X), sign(Y), post_variable(Y),
                sign(Z), post_variable(Z), sign(U), post_variable(U))
    b = K
    explain14 = 'b `=` {0} `{1}` {2} `{3}` {4} `=` {5}'.format(V, sign(X), abs(X), sign(U), abs(U), b)
    result = a + b
    explain15 = 'a `+` b `=` {0}'.format(result)


    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    interval = random.randint(2, 4)
    for i in range(5):
        lst.append(result + (i - answer_num) * interval)
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15)

    return stem, answer, comment


# 3-1-2-63
def factorization312_Stem_058():
    stem = "$$수식$${problem1}$$/수식$$를 전개한 식에서 상수항을 포함한 모든 항의 계수의 합을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "$$수식$$=`{explain7}$$/수식$$\n" \
              "따라서 주어진 식은\n" \
              "$$수식$${explain8}$$/수식$$이다.\n" \
              "$$수식$${explain9}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=` {explain10}$$/수식$$\n" \
              "$$수식$$=`{explain11}$$/수식$$\n" \
              "$$수식$$=`{explain12}$$/수식$$\n" \
              "$$수식$$=`{explain13}$$/수식$$\n" \
              "$$수식$$=`{explain14}$$/수식$$\n" \
              "따라서 상수항을 포함한 모든 항의 계수의 합은\n" \
              "$$수식$${explain15}$$/수식$$\n\n"

    while 1:
        E = random.randint(1, 4)
        F, G = random.sample(range(1, 4), 2)
        F = F * random.choice([-1, 1])
        G = G * random.choice([-1, 1])
        H = -1 * G
        I = G * H
        L = E * E
        M = E * F * 2
        N = F * F
        O = M + I
        if O == 0:
            continue
        P = -1 * O
        Q = O * P
        R = L * L
        S = L * N * 2
        T = N * N
        U = Q + S
        K = R + U + T
        break

    problem1 = '( {0} `{1}` {2}x `{3}` {4}x^{{ 2 }} ) ' \
               '( {5} `{6}` {7}x `{8}` {9}x^{{ 2 }} ) ' \
               '( {10} `{11}` {12}x^{{ 2 }} `{13}` {14}x^{{ 4 }} )'\
        .format(E, sign(G), post_variable(G), sign(F), post_variable(F),
                E, sign(H), post_variable(H), sign(F), post_variable(F),
                L, sign(P), post_variable(P), sign(N), post_variable(N))

    explain1 = '{0} `{1}` {2}x^{{ 2 }} `=` A'.format(E, sign(F), post_variable(F))
    explain2 = '( {0} `{1}` {2}x `{3}` {4}x^{{ 2 }} ) ' \
               '( {5} `{6}` {7}x `{8}` {9}x^{{ 2 }} )'\
        .format(E, sign(G), post_variable(G), sign(F), post_variable(F),
                E, sign(H), post_variable(H), sign(F), post_variable(F))
    explain3 = '( A `{0}` {1}x ) ( A `{2}` {3}x )'\
        .format(sign(G), post_variable(G), sign(H), post_variable(H))
    explain4 = 'A^{{ 2 }} `{0}` {1}x^{{ 2 }}'.format(sign(I), post_variable(I))
    explain5 = '( {0} `{1}` {2}x^{{ 2 }} )^{{ 2 }} `{3}` {4}x^{{ 2 }}'\
        .format(E, sign(F), post_variable(F), sign(I), post_variable(I))
    explain6 = '{0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }} `{5}` {6}x^{{ 2 }}'\
        .format(L, sign(M), post_variable(M), sign(N), post_variable(N), sign(I), post_variable(I))
    explain7 = '{0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }}' \
        .format(L, sign(O), post_variable(O), sign(N), post_variable(N))
    explain8 = '( {0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }} ) ' \
               '( {5} `{6}` {7}x^{{ 2 }} `{8}` {9}x^{{ 4 }} )' \
        .format(L, sign(O), post_variable(O), sign(N), post_variable(N),
                L, sign(P), post_variable(P), sign(N), post_variable(N))

    explain9 = '{0} `{1}` {2}x^{{ 4 }} `=` B'.format(L, sign(N), post_variable(N))
    explain10 = '( B `{0}` {1}x^{{ 2 }} ) ( B `{2}` {3}x^{{ 2 }} )' \
        .format(sign(O), post_variable(O), sign(P), post_variable(P))
    explain11 = 'B^{{ 2 }} `{0}` {1}x^{{ 4 }}'.format(sign(Q), post_variable(Q))
    explain12 = '( {0} `{1}` {2}x^{{ 4 }} )^{{ 2 }} `{3}` {4}x^{{ 4 }}' \
        .format(L, sign(N), post_variable(N), sign(Q), post_variable(Q))
    explain13 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }} `{5}` {6}x^{{ 4 }}' \
        .format(R, sign(S), post_variable(S), sign(T), post_variable(T), sign(Q), post_variable(Q))
    explain14 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }}' \
        .format(R, sign(U), post_variable(U), sign(T), post_variable(T))
    explain15 = '{0} `{1}` {2} `{3}` {4} `=` {5}'.format(R, sign(U), abs(U), sign(T), abs(T), K)
    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15)

    return stem, answer, comment


# 3-1-2-64
def factorization312_Stem_059():
    stem = "$$수식$${problem1}$$/수식$$를 전개한 식에서 $$수식$$x^{{ 3 }}$$/수식$$의 계수와 " \
           "$$수식$$x^{{ 2 }}$$/수식$$의 계수의 합을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$로 놓으면\n" \
              "$$수식$${explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "$$수식$$=`{explain7}$$/수식$$\n" \
              "$$수식$$=`{explain8}$$/수식$$이다.\n" \
              "따라서 구하는 계수의 합은\n" \
              "$$수식$${explain9}$$/수식$$\n\n"

    while 1:
        E, F = random.sample(range(1, 9), 2)
        I = random.randint(1, 9)
        G = I - E
        H = I - F
        if G == 0 or H == 0:
            continue
        L = E * G
        M = F * H
        N = L + M
        if N == 0:
            continue
        O = L * M
        P = 2 * I
        Q = I * I + N
        if Q == 0:
            continue
        R = N * I
        K = P + Q
        if O < 100:
            break

    problem1 = '( x `{0}` {1} ) ( x `{2}` {3} ) ( x `{4}` {5} ) ( x `{6}` {7} )'\
        .format(sign(E), abs(E), sign(F), abs(F), sign(G), abs(G), sign(H), abs(H))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( x `{2}` {3} ) ( x `{4}` {5} ) ( x `{6}` {7} )'\
        .format(sign(E), abs(E), sign(G), abs(G), sign(F), abs(F), sign(H), abs(H))
    explain3 = '( x^{{ 2 }} `{0}` {1}x `{2}` {3} ) ( x^{{ 2 }} `{4}` {5}x `{6}` {7} )'\
        .format(sign(I), post_variable(I), sign(L), post_variable(L),
                sign(I), post_variable(I), sign(M), post_variable(M))
    explain4 = 'x^{{ 2 }} `{0}` {1}x `=` A'.format(sign(I), post_variable(I))
    explain5 = '( A `{0}` {1} ) ( A `{2}` {3} )'\
        .format(sign(L), abs(L), sign(M), abs(M))
    explain6 = 'A^{{ 2 }} `{0}` {1}A `{2}` {3}'.format(sign(N), post_variable(N), sign(O), abs(O))
    explain7 = '( x^{{ 2 }} `{0}` {1}x )^{{ 2 }} `{2}` {3}( x^{{ 2 }} `{4}` {5}x ) `{6}` {7}'\
        .format(sign(I), post_variable(I), sign(N), post_variable(N), sign(I), post_variable(I), sign(O), abs(O))
    explain8 = 'x^{{ 4 }} `{0}` {1}x^{{ 3 }} `{2}` {3}x^{{ 2 }} `{4}` {5}x `{6}` {7}'\
        .format(sign(P), post_variable(P), sign(Q), post_variable(Q), sign(R), post_variable(R), sign(O), abs(O))
    explain9 = '{0} `{1}` {2} `=` {3}'.format(P, sign(Q), abs(Q), K)
    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9)

    return stem, answer, comment


# 3-1-2-65
def factorization312_Stem_060():
    stem = "$$수식$${problem1}$$/수식$$을 전개하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "$$수식$$=`{explain7}$$/수식$$\n" \
              "따라서 주어진 식은\n" \
              "$$수식$${explain8}$$/수식$$이다.\n" \
              "$$수식$${explain9}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=` {explain10}$$/수식$$\n" \
              "$$수식$$=`{explain11}$$/수식$$\n" \
              "$$수식$$=`{explain12}$$/수식$$\n" \
              "$$수식$$=`{explain13}$$/수식$$\n" \
              "$$수식$$=`{explain14}$$/수식$$\n\n"

    while 1:
        P, Q = random.sample(range(1, 3), 2)
        Q = Q * random.choice([-1, 1])
        R = random.randint(1, 4)
        E = P * P
        G = Q * Q
        U = 2 * P * Q
        S = -1 * R
        T = R * S
        H = U + T
        if H == 0:
            continue
        F = -1 * H
        I = F * H
        L = E * E
        M = G * 2 * E
        N = G * G
        O = M + I
        if O == 0:
            continue
        V = O * 4
        W = O * 2
        X = -2 * O
        break

    problem1 = '( {0} `{1}` {2}x `{3}` {4}x^{{ 2 }} ) ' \
               '( {5} `{6}` {7}x `{8}` {9}x^{{ 2 }} ) ' \
               '( {10} `{11}` {12}x^{{ 2 }} `{13}` {14}x^{{ 4 }} )'\
        .format(P, sign(R), post_variable(R), sign(Q), post_variable(Q),
                P, sign(S), post_variable(S), sign(Q), post_variable(Q),
                E, sign(F), post_variable(F), sign(G), post_variable(G))

    explain1 = '{0} `{1}` {2}x^{{ 2 }} `=` A'.format(P, sign(Q), post_variable(Q))
    explain2 = '( {0} `{1}` {2}x `{3}` {4}x^{{ 2 }} ) ' \
               '( {5} `{6}` {7}x `{8}` {9}x^{{ 2 }} )'\
        .format(P, sign(R), post_variable(R), sign(Q), post_variable(Q),
                P, sign(S), post_variable(S), sign(Q), post_variable(Q))
    explain3 = '( A `{0}` {1}x ) ( A `{2}` {3}x )'\
        .format(sign(R), post_variable(R), sign(S), post_variable(S))
    explain4 = 'A^{{ 2 }} `{0}` {1}x^{{ 2 }}'.format(sign(T), post_variable(T))
    explain5 = '( {0} `{1}` {2}x^{{ 2 }} )^{{ 2 }} `{3}` {4}x^{{ 2 }}'\
        .format(P, sign(Q), post_variable(Q), sign(T), post_variable(T))
    explain6 = '{0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }} `{5}` {6}x^{{ 2 }}'\
        .format(E, sign(U), post_variable(U), sign(G), post_variable(G), sign(T), post_variable(T))
    explain7 = '{0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }}' \
        .format(E, sign(H), post_variable(H), sign(G), post_variable(G))
    explain8 = '( {0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }} ) ' \
               '( {5} `{6}` {7}x^{{ 2 }} `{8}` {9}x^{{ 4 }} )' \
        .format(E, sign(H), post_variable(H), sign(G), post_variable(G),
                E, sign(F), post_variable(F), sign(G), post_variable(G))

    explain9 = '{0} `{1}` {2}x^{{ 4 }} `=` B'.format(E, sign(G), post_variable(G))
    explain10 = '( B `{0}` {1}x^{{ 2 }} ) ( B `{2}` {3}x^{{ 2 }} )' \
        .format(sign(H), post_variable(H), sign(F), post_variable(F))
    explain11 = 'B^{{ 2 }} `{0}` {1}x^{{ 4 }}'.format(sign(I), post_variable(I))
    explain12 = '( {0} `{1}` {2}x^{{ 4 }} )^{{ 2 }} `{3}` {4}x^{{ 4 }}' \
        .format(E, sign(G), post_variable(G), sign(I), post_variable(I))
    explain13 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }} `{5}` {6}x^{{ 4 }}' \
        .format(L, sign(M), post_variable(M), sign(N), post_variable(N), sign(I), post_variable(I))
    explain14 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }}' \
        .format(L, sign(O), post_variable(O), sign(N), post_variable(N))
    a1 = explain14
    a2 = '{0} `{1}` {2}x^{{ 4 }}' \
        .format(L, sign(N), post_variable(N))
    # a3 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }}' \
    #     .format(L, sign(V), post_variable(V), sign(N), post_variable(N))
    # V 값이 너무 커서 제외
    a3 = '{0} `{3}` {4}x^{{ 8 }}' \
        .format(L, sign(V), post_variable(V), sign(N), post_variable(N))
    a4 = '{0} `{1}` {2}x^{{ 4 }} `{3}` {4}x^{{ 8 }}' \
        .format(L, sign(W), post_variable(W), sign(N), post_variable(N))
    a5 = '{0} `{1}` {2}x^{{ 2 }} `{3}` {4}x^{{ 4 }}' \
        .format(L, sign(X), post_variable(X), sign(N), post_variable(N))

    lst = [[a1, 1], [a2, 0], [a3, 0], [a4, 0], [a5, 0]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i
    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14)

    return stem, answer, comment


# 3-1-2-66
def factorization312_Stem_061():
    stem = "곱셈 공식을 이용하여 $$수식$${problem1}$$/수식$${post} 계산하려고 할 때, 어떤 공식을 이용하는 것이 가장 편리한가?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$이므로\n" \
              "{answer_num} $$수식$${explain2}$$/수식$$을 이용하는 것이 가장 편리하다. \n\n"

    while 1:
        E = random.randint(2, 9)
        F = random.randint(1, 9)
        post_num = str(E * 10 - F)[-1]
        F = F / 10
        I = E + F
        H = -F
        J = E + H
        break

    problem1 = '{0} `TIMES` {1}'.format(I, J)
    post = '를' if josa_check(post_num) == ' ' else '을'

    explain1 = '{0} `=` ( {1} `+` {2} ) ( {3} `-` {4} )'.format(problem1, E, F, E, abs(H))

    a1 = '( a `+` b )^{2} `=` a^{2} `+` 2ab `+` b^{2}'
    a2 = '( a `-` b )^{2} `=` a^{2} `-` 2ab `+` b^{2}'
    a3 = '( a `+` b ) ( a `-` b ) `=` a^{2} `-` b^{2}'
    a4 = '( x `+` a ) ( x `+` b ) `=` x^{2} `+` ( a `+` b)x `+` ab'
    a5 = '( ax `+` b ) ( cx `+` d ) `=` acx^{2} `+` ( ad `+` bc ) x `+` bd'
    explain2 = a3
    lst = [[a1, 0], [a2, 0], [a3, 1], [a4, 0], [a5, 0]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i
    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, post=post)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, answer_num=multiple_choice_nums[cor_num])

    return stem, answer, comment


# 3-1-2-67
def factorization312_Stem_062():
    stem = "수의 계산을 간편하게 하기 위하여 이용되는 곱셈 공식을 바르게 연결한 것을 보기에서 모두 고른 것은?\n" \
           "㈀ $$수식$${problem1}$$/수식$$\n" \
           "㈁ $$수식$${problem2}$$/수식$$\n" \
           "㈂ $$수식$${problem3}$$/수식$$\n" \
           "㈃ $$수식$${problem4}$$/수식$$\n" \
           "① {a1}\n" \
           "② {a2}\n" \
           "③ {a3}\n" \
           "④ {a4}\n" \
           "⑤ {a5}\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "{giho} $$수식$${explain1}$$/수식$$이므로\n" \
              "$$수식$${explain2}$$/수식$$를 이용한다.\n" \
              "따라서 바르게 연결한 것은 {answer_lst}이다.\n\n"

    while 1:
        B = random.randint(1, 100)
        D, I, K, L = random.sample(range(1, 10), 4)
        n = random.randint(1, 9)
        O = 1000 * n
        N = 100 * n
        M = 10 * n
        A = O + B
        C = N - D
        E = M - I
        J = I + 2
        F = M + J
        G = N + K
        H = 100 * n + L
        break
    equ1 = '( a `+` b )^{2} `=` a^{2} `+` 2ab `+` b^{2}'
    equ2 = '( a `-` b )^{2} `=` a^{2} `-` 2ab `+` b^{2}'
    equ3 = '( a `+` b ) ( a `-` b ) `=` a^{2} `-` b^{2}'
    equ4 = '( x `+` a ) ( x `+` b ) `=` x^{2} `+` ( a `+` b)x `+` ab'

    problem1 = '{0}^{{ 2 }} ``` RARROW ``` {1}'.format(A, equ1)
    problem2 = '{0}^{{ 2 }} ``` RARROW ``` {1}'.format(C, equ2)
    problem3 = '{0} `TIMES` {1} ``` RARROW ``` {2}'.format(E, F, equ3)
    problem4 = '{0} `TIMES` {1} ``` RARROW ``` {2}'.format(G, H, equ4)

    explain1 = '{0} `TIMES` {1} `=` ( {2} `{3}` {4} ) ( {5} `{6}` {7} )'\
        .format(E, F, M, sign(-I), abs(I), M, sign(J), abs(J))
    explain2 = equ4

    select_lst = [[problem1, 0], [problem2, 0], [problem3, 1], [problem4, 0]]
    random.shuffle(select_lst)
    problem1, problem2, problem3, problem4 = select_lst[0][0], select_lst[1][0], select_lst[2][0], select_lst[3][0]
    select = ['(ㄱ)', '(ㄴ)', '(ㄷ)', '(ㄹ)']
    answer_lst = []
    giho = ''
    for idx in range(4):
        if select_lst[idx][1] == 0:
            answer_lst.append(select[idx])
        else:
            giho = select[idx]

    answer_lst = ', '.join(answer_lst)
    a_lst = [['(ㄱ), (ㄴ)', '(ㄱ), (ㄴ), (ㄷ)', '(ㄱ), (ㄴ), (ㄹ)', '(ㄱ), (ㄷ), (ㄹ)', '(ㄴ), (ㄷ), (ㄹ)'],
             ['(ㄱ), (ㄴ), (ㄷ)', '(ㄱ), (ㄴ), (ㄹ)', '(ㄱ), (ㄷ), (ㄹ)', '(ㄴ), (ㄷ), (ㄹ)', '(ㄱ), (ㄴ), (ㄷ), (ㄹ)']]
    a_lst = a_lst[random.randint(0, 1)]
    a1, a2, a3, a4, a5 = a_lst
    for idx, value in enumerate(a_lst):
        if value == answer_lst:
            answer_num = idx

    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3, problem4=problem4,
                       a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, giho=giho, answer_lst=answer_lst)

    stem = stem.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')
    answer = answer.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')
    comment = comment.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')

    return stem, answer, comment


# 3-1-2-68
def factorization312_Stem_063():
    stem = "곱셈 공식 $$수식$${problem1}$$/수식$$을 이용하면 편리한 수의 계산을 보기에서 모두 고른 것은?\n" \
           "㈀ $$수식$${problem1}$$/수식$$\n" \
           "㈁ $$수식$${problem2}$$/수식$$\n" \
           "㈂ $$수식$${problem3}$$/수식$$\n" \
           "㈃ $$수식$${problem4}$$/수식$$\n" \
           "① {a1}\n" \
           "② {a2}\n" \
           "③ {a3}\n" \
           "④ {a4}\n" \
           "⑤ {a5}\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "{explain1}\n" \
              "{explain2}\n\n"

    while 1:
        I, J = random.sample(range(1, 10), 2)
        M = random.randint(1, 9)
        I, J, M = I * random.choice([-1, 1]), J * random.choice([-1, 1]), M * random.choice([-1, 1])
        K, L, N, P = random.randint(1, 9), -random.randint(1, 9), random.randint(1, 9), random.randint(1, 9)
        A = K * 100 + L
        A = A / 100
        B = 100 + M
        C = 100 - M
        D = N * 100 + P
        D = D / 100
        E = N * 100 - P
        E = E / 100
        F = 100 + I
        G = 100 + J
        break

    equ1 = '$$수식$${0}^{{ 2 }} `=` ( {1} `{2}` {3} )^{{ 2 }} ``` RARROW ``` ( a `-` b )^{{ 2 }}$$/수식$$'\
        .format(A, K, sign(L), abs(L / 100))

    equ2 = '$$수식$${0} `TIMES` {1} `=` ( 100 `{2}` {3} ) ( 100 `{4}` {5} ) #' \
           'RARROW ``` ( x `+` a ) ( x `+` b )$$/수식$$' \
        .format(F, G, sign(I), abs(I), sign(J), abs(J))

    problem1 = '( a `+` b ) ( a `-` b ) `=` a^{2} `-` b^{2}'

    prob1 = '{0}^{{ 2 }}'.format(A)
    prob2 = '{0} `TIMES` {1}'.format(B, C)
    prob3 = '{0} `TIMES` {1}'.format(D, E)
    prob4 = '{0} `TIMES` {1}'.format(F, G)


    select_lst = [[prob1, equ1], [prob4, equ2], [prob2, 'answer'], [prob3, 'answer']]
    random.shuffle(select_lst)
    problem2, problem3, problem4, problem5 = select_lst[0][0], select_lst[1][0], select_lst[2][0], select_lst[3][0]
    select = ['(ㄱ)', '(ㄴ)', '(ㄷ)', '(ㄹ)']
    answer_lst = []
    explain_lst = []
    for idx in range(4):
        if select_lst[idx][1] == 'answer':
            answer_lst.append(select[idx])
        else:
            explain_lst.append(select[idx] + ' ' + select_lst[idx][1])

    explain1, explain2 = explain_lst

    answer_lst = ', '.join(answer_lst)

    a_lst = [['(ㄱ), (ㄴ)', '(ㄱ), (ㄷ)', '(ㄱ), (ㄹ)', '(ㄴ), (ㄷ)', '(ㄴ), (ㄹ)', '(ㄷ), (ㄹ)'],
             ['(ㄱ), (ㄴ), (ㄷ)', '(ㄱ), (ㄴ), (ㄹ)', '(ㄱ), (ㄷ), (ㄹ)', '(ㄴ), (ㄷ), (ㄹ)']]

    tmp1 = [1, 1, 1, 0, 0, 0]
    tmp2 = [1, 1, 0, 0]

    while 1:
        view_lst = []
        random.shuffle(tmp1)
        random.shuffle(tmp2)
        for idx, value in enumerate(tmp1):
            if value == 1:
                view_lst.append(a_lst[0][idx])
        for idx, value in enumerate(tmp2):
            if value == 1:
                view_lst.append(a_lst[1][idx])
        if answer_lst in view_lst:
            break

    a1, a2, a3, a4, a5 = view_lst
    for idx, value in enumerate(view_lst):
        if value == answer_lst:
            answer_num = idx

    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3, problem4=problem4, problem5=problem5,
                       a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2)

    stem = stem.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')
    answer = answer.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')
    comment = comment.replace('(ㄱ)', '㈀').replace('(ㄴ)', '㈁').replace('(ㄷ)', '㈂').replace('(ㄹ)', '㈃')

    return stem, answer, comment


# 3-1-2-69
def factorization312_Stem_064():
    stem = "곱셈 공식을 이용하여 $$수식$${problem1}$$/수식$$을 계산하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n\n"

    while 1:
        A = random.choice([40, 50, 60, 70, 80, 90])
        B, D = random.sample(range(1, 9), 2)
        if D == 1:
            continue
        C = -1 * B
        D = D * random.choice([-1, 1])
        E = 2 * A * D
        F = -1 * E
        G = -1 * B * B
        H = -1 * D * D
        K = G + F + H
        Z = A + B
        Y = A + C
        X = A + D
        if -200 <= K <= 200:
            break

    problem1 = '{0} `TIMES` {1} `-` {2}^{{ 2 }}'.format(Z, Y, X)

    explain1 = problem1
    explain2 = '( {0} `{1}` {2} ) ( {3} `{4}` {5} ) `-` ( {6} `{7}` {8} )^{{ 2 }}$$/수식$$\n' \
               '$$수식$$=` {9}^{{ 2 }} `-` {10}^{{ 2 }} `-` ( {11}^{{ 2 }} `{12}` {13} `{14}` {15}^{{ 2 }} )'\
        .format(A, sign(B), abs(B), A, sign(C), abs(C), A, sign(D), abs(D), A, B, A, sign(E), abs(E), sign(D*D), abs(D))
    explain3 = '{0}^{{ 2 }} `-` {1}^{{ 2 }} `-` {0}^{{ 2 }} `{2}` {3} `-` {4}^{{ 2 }}'\
        .format(A, B, sign(F), abs(F), abs(D))
    explain4 = '{0} `{1}` {2} `{3}` {4} `=` {5}'.format(G, sign(F), abs(F), sign(H), abs(H), K)

    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4)

    return stem, answer, comment


# 3-1-2-70
def factorization312_Stem_065():
    stem = "곱셈 공식을 이용하여 $$수식$${problem1}$$/수식$$를 계산하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$\n\n"

    while 1:
        E = random.randint(100, 899) * 10
        H = random.randint(1, 9) * random.choice([-1, 1])
        G = -1 * H * H
        J = H * H
        I = 2 * H
        F = E + H
        K = E + I
        break

    problem1 = '{{ {0}^{{ 2 }} `{1}` {2} }} OVER {{ {3} }}'\
        .format(F, sign(G), abs(G), E)

    explain1 = '{0} `=` A'.format(E)
    explain2 = '{0} `=` {{ ( A `{1}` {2} )^{{ 2 }} `{3}` {4} }} OVER {{ A }}'\
        .format(problem1, sign(H), abs(H), sign(G), abs(G))
    explain3 = '{{ A^{{ 2 }} `{0}` {1}A `{2}` {3} `{4}` {5} }} OVER {{ A }}' \
        .format(sign(I), post_variable(I), sign(J), abs(J), sign(G), abs(G))
    explain4 = '{{ A^{{ 2 }} `{0}` {1}A }} OVER {{ A }}'.format(sign(I), post_variable(I))
    explain5 = 'A `{0}` {1}'.format(sign(I), abs(I))
    explain6 = '{0} `{1}` {2} `=` {3}'.format(E, sign(I), abs(I), K)

    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-71
def factorization312_Stem_066():
    stem = "$$수식$${problem1}$$/수식$$일 때, 자연수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$$a `+` b$$/수식$$의 값을 구하시오. (단, $$수식$$b$$/수식$$는 가능한 한 작은 자연수이다.)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$로 놓으면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n" \
              "따라서 $$수식$${explain7}$$/수식$$, $$수식$${explain8}$$/수식$$이므로 $$수식$${explain9}$$/수식$$\n\n"

    while 1:
        A = random.randint(3, 9)
        B = A - 1
        K = 16 * B + 1
        if is_gcd(B, K):
            break

    problem1 = '( {0} `+` 1 ) ( {0}^{{ 2 }} `+` 1 ) ( {0}^{{ 4 }} `+` 1 ) ' \
               '( {0}^{{ 8 }} `+` 1 ) `=` {1}{0}^{{ a }} `-` b'.format(A, frac(1, B))
    explain1 = '( {0} `+` 1 ) ( {0}^{{ 2 }} `+` 1 ) ( {0}^{{ 4 }} `+` 1 ) ' \
               '( {0}^{{ 8 }} `+` 1 )'.format(A)
    explain2 = '{{ 1 }} OVER {{ {0} `-` 1 }} `TIMES` ( {0} `-` 1 ) ( {0} `+` 1 ) ' \
               '( {0}^{{ 2 }} `+` 1 ) ( {0}^{{ 4 }} `+` 1 ) ( {0}^{{ 8 }} `+` 1 )'.format(A)
    explain3 = '{1} ( {0}^{{ 2 }} `-` 1 ) ( {0}^{{ 2 }} `+` 1 ) ' \
               '( {0}^{{ 4 }} `+` 1 ) ( {0}^{{ 8 }} `+` 1 )'.format(A, frac(1, B))
    explain4 = '{1} ( {0}^{{ 4 }} `-` 1 ) ( {0}^{{ 4 }} `+` 1 ) ' \
               '( {0}^{{ 8 }} `+` 1 )'.format(A, frac(1, B))
    explain5 = '{1} ( {0}^{{ 8 }} `-` 1 ) ( {0}^{{ 8 }} `+` 1 )'\
        .format(A, frac(1, B))
    explain6 = '{1} ( {0}^{{ 16 }} `-` 1 )'.format(A, frac(1, B))
    explain7 = 'a `=` 16'
    explain8 = 'b `=` {{ 1 }} OVER {{ {0} }}'.format(B)
    explain9 = 'a `+` b `=` {{ {0} }} OVER {{ {1} }}'.format(K, B)

    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9)

    return stem, answer, comment


# 3-1-2-72
def factorization312_Stem_067():
    stem = "$$수식$${problem1}$$/수식$$일 때, 자연수 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$에 대하여 " \
           "$$수식$$x `+` y$$/수식$$의 값을 구하시오. (단, $$수식$$y$$/수식$$는 가능한 한 작은 자연수이다.)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "따라서 $$수식$${explain5}$$/수식$$, $$수식$${explain6}$$/수식$$이므로\n" \
              "$$수식$${explain7}$$/수식$$\n\n"

    while 1:
        D = random.randint(2, 4) * random.choice([-1, 1])
        Z = random.choice([2, 4])
        E = -1 * D
        X = int(Z * 1 / 2)
        T = 10 ** X
        A = T + D
        B = T + E
        S = T * T
        F = D * E
        C = -1 * F
        G = F * C
        H = -1 * G
        Y = Z * 2
        K = Y + H
        break

    problem1 = '{0} `TIMES` {1} `TIMES` ( 10^{{ {2} }} `{3}` {4} ) `=` 10^{{ x }} `-` y'\
        .format(A, B, Z, sign(C), abs(C))

    explain1 = '{0} `TIMES` {1} `TIMES` ( 10^{{ {2} }} `{3}` {4} )'.format(A, B, Z, sign(C), abs(C))
    explain2 = '( {0} `{1}` {2} ) ( {0} `{3}` {4} ) ( 10^{{ {5} }} `{6}` {7} ) $$/수식$$\n' \
               '$$수식$$=` ( {8} `{9}` {10} ) ( 10^{{ {5} }} `{6}` {7} )'\
        .format(T, sign(D), abs(D), sign(E), abs(E), Z, sign(C), abs(C), S, sign(F), abs(F))
    explain3 = '( 10^{{ {0} }} `{1}` {2} ) ( 10^{{ {0} }} `{3}` {4} )'\
        .format(Z, sign(F), abs(F), sign(C), abs(C))
    explain4 = '10^{{ {0} }} `{1}` {2}'.format(Y, sign(G), abs(G))
    explain5 = 'x `=` {0}'.format(Y)
    explain6 = 'y `=` {0}'.format(H)
    explain7 = 'x `+` y `=` {0}'.format(K)

    answer_num = K

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-73
def factorization312_Stem_068():
    stem = "$$수식$${problem1}$$/수식$$을 계산하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n\n"

    while 1:
        A = random.randint(1, 9)
        C = -random.randint(1, 9)
        B = random.choice([2, 3, 5, 6, 7, 10, 11])
        D = A * A * B
        E = 2 * C * A
        F = C * C
        G = D + F
        H = D - F
        I = -1 * E
        J = A * C
        K = A * B - C * C
        L = -1 * G
        break

    problem1 = '( {0} sqrt {{ {1} }} `{2}` {3} ) ^{{ 2 }}'.format(ppost_variable(A), B, sign(C), abs(C))

    explain1 = '{0} `=` ( {1} sqrt {{ {2} }} ) ^{{ 2 }} `{3}` 2 `TIMES` ( {1} sqrt {{ {2} }} ) ' \
               '`TIMES` {4} `+` ( {5} )^{{ 2 }}'.format(problem1, ppost_variable(A), B, sign(C), abs(C), C)
    explain2 = '{0} `{1}` {2} sqrt {{ {3} }} `{4}` {5}'.format(D, sign(E), post_variable(E), B, sign(F), abs(F))
    explain3 = '{0} `{1}` {2} sqrt {{ {3} }}'.format(G, sign(E), post_variable(E), B)

    lst = ['{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(E), post_variable(E), B),
           '{0}'.format(G),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(K, sign(J), post_variable(J), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(J), post_variable(J), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(K, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(L, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(L, sign(E), post_variable(E), B)]
    answer_lst = [explain3] + list(random.sample(lst, 4))
    random.shuffle(answer_lst)
    for idx, value in enumerate(answer_lst):
        if value == explain3:
            cor_num = idx
    a1, a2, a3, a4, a5 = answer_lst
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-74
def factorization312_Stem_069():
    stem = "$$수식$${problem1}$$/수식$$의 분모를 유리화하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n\n"

    while 1:
        A, B = random.sample([2, 6, 10, 12, 14, 18], 2)
        if B > A:
            A, B = B, A
        C = A * B
        D = A + B
        E = A - B
        F = int(C / 4)
        if is_prime_number(F):
            break
    problem1 = '{{ sqrt {{ {0} }} `-` sqrt {{ {1} }} }} OVER {{ sqrt {{ {0} }} `+` sqrt {{ {1} }} }}'.format(A, B)

    explain1 = problem1
    explain2 = '{{ ( sqrt {{ {0} }} `-` sqrt {{ {1} }} )^{{ 2 }} }} OVER ' \
               '{{ ( sqrt {{ {0} }} `+` sqrt {{ {1} }} ) ( sqrt {{ {0} }} `-` sqrt {{ {1} }} ) }}'\
        .format(A, B)
    explain3 = '{{ {0} `-` 2 sqrt{{ {1} }} `+` {2} }} OVER {{ {0} `-` {2} }}'.format(A, C, B)
    explain4 = '{{ {0} `-` 4 sqrt{{ {1} }} }} OVER {{ {2} }}'.format(D, F, E)
    explain5 = '{0} `-` {1}'.format(frac(D, E), frac(4, E, F))

    lst = ['{0} `+` {1}'.format(frac(D, E), frac(4, E, F)),
           '{0} `-` {1}'.format(frac(D * 2, E), frac(4, E, F)),
           '{0} `+` {1}'.format(frac(D * 2, E), frac(4, E, F)),
           '{0} `-` {1}'.format(frac(D, E), frac(2, E, F)),
           '{0} `+` {1}'.format(frac(D, E), frac(2, E, F)),
           '{0} `-` {1}'.format(frac(D, E * 2), frac(4, E, F)),
           '{0} `+` {1}'.format(frac(D, E * 2), frac(4, E, F))]

    answer_lst = [explain5] + list(random.sample(lst, 4))
    random.shuffle(answer_lst)
    for idx, value in enumerate(answer_lst):
        if value == explain5:
            cor_num = idx
    a1, a2, a3, a4, a5 = answer_lst
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5)

    return stem, answer, comment


# 3-1-2-75
def factorization312_Stem_070():
    stem = "$$수식$${problem1}$$/수식$$을 계산하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n\n"

    while 1:
        A = random.randint(1, 9)
        C = -random.randint(1, 9)
        B = random.choice([2, 3, 5, 6, 7, 10, 11])
        D = A * A * B
        E = 2 * C * A
        F = C * C
        G = D + F
        H = D - F
        I = -1 * E
        J = A * C
        K = A * B - C * C
        L = -1 * G
        break

    problem1 = '( {0} sqrt {{ {1} }} `{2}` {3} ) ^{{ 2 }}'.format(ppost_variable(A), B, sign(C), abs(C))

    explain1 = '{0}$$/수식$$\n' \
               '$$수식$$=` ( {1} sqrt {{ {2} }} ) ^{{ 2 }} `{3}` 2 `TIMES` ( {1} sqrt {{ {2} }} ) ' \
               '`TIMES` {4} `+` ( {5} )^{{ 2 }}'.format(problem1, ppost_variable(A), B, sign(C), abs(C), C)
    explain2 = '{0} `{1}` {2} sqrt {{ {3} }} `{4}` {5}'.format(D, sign(E), post_variable(E), B, sign(F), abs(F))
    explain3 = '{0} `{1}` {2} sqrt {{ {3} }}'.format(G, sign(E), post_variable(E), B)

    lst = ['{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(E), post_variable(E), B),
           '{0}'.format(G),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(K, sign(J), post_variable(J), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(H, sign(J), post_variable(J), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(K, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(L, sign(I), post_variable(I), B),
           '{0} `{1}` {2} sqrt {{ {3} }}'.format(L, sign(E), post_variable(E), B)]
    answer_lst = [explain3] + list(random.sample(lst, 4))
    random.shuffle(answer_lst)
    for idx, value in enumerate(answer_lst):
        if value == explain3:
            cor_num = idx
    a1, a2, a3, a4, a5 = answer_lst
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-76
def factorization312_Stem_071():
    stem = "$$수식$${problem1}$$/수식$$을 계산하면?\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n\n"

    while 1:
        A = random.randint(1, 6)
        C = random.randint(1, 9) * random.choice([-1, 1])
        B = random.choice([2, 3, 5, 6, 7, 10, 11])
        D = -1 * C
        E = A * A * B
        F = C * C
        K = E - F
        break

    problem1 = '( {0} sqrt {{ {1} }} `{2}` {3} ) ( {0} sqrt {{ {1} }} `{4}` {5} )'\
        .format(ppost_variable(A), B, sign(C), abs(C), sign(D), abs(D))

    explain1 = problem1
    explain2 = '( {0} sqrt{{ {1} }} )^{{ 2 }} `-` {2}^{{ 2 }}'.format(ppost_variable(A), B, abs(C))
    explain3 = '{0} `-` {1} `=` {2}'.format(E, F, K)
    answer_num = K
    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-77
def factorization312_Stem_072():
    stem = "$$수식$${problem1}$$/수식$$일 때, 유리수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$$a `-` b$$/수식$$의 값을 구하시오.\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "따라서 $$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$이므로\n" \
              "$$수식$${explain5}$$/수식$$\n\n"

    while 1:
        A, D = random.randint(1, 9), random.randint(1, 9)
        C, E = random.randint(1, 9) * random.choice([-1, 1]), random.randint(1, 9) * random.choice([-1, 1])
        if C < 0 and E < 0:
            continue
        if A == D and C == E:
            continue
        B = random.choice([2, 3, 5, 6, 7, 10, 11])
        F = A * D * B
        G = A * E
        H = C * D
        if G * H < 0:
            if H > G:
                G, H = H, G
        I = C * E
        X = F + I
        Y = G + H
        if Y == 0:
            continue
        Z = X - Y
        if -5 <= Z <= 20:
            break

    problem1 = '( {0} sqrt {{ {1} }} `{2}` {3} ) ( {4} sqrt {{ {1} }} `{5}` {6} ) ' \
               '`=` a `+` b sqrt{{ {1} }}' \
        .format(ppost_variable(A), B, sign(C), abs(C), ppost_variable(D), sign(E), abs(E))

    explain1 = '( {0} sqrt {{ {1} }} `{2}` {3} ) ( {4} sqrt {{ {1} }} `{5}` {6} ) $$/수식$$\n' \
               '$$수식$$=` {7} `+` ( {8} `{9}` {10} ) sqrt{{ {1} }} `{11}` {12}' \
        .format(ppost_variable(A), B, sign(C), abs(C), ppost_variable(D),
                sign(E), abs(E), F, G, sign(H), abs(H), sign(I), abs(I))
    explain2 = '{0} `{1}` {2} sqrt{{ {3} }}'.format(X, sign(Y), post_variable(Y), B)
    explain3 = 'a `=` {0}'.format(X)
    explain4 = 'b `=` {0}'.format(Y)
    explain5 = 'a `-` b `=` {0}'.format(Z)
    result = Z
    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    for i in range(5):
        lst.append(result + (i - answer_num) * random.randint(1, 3))
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5)

    return stem, answer, comment


# 3-1-2-78
def factorization312_Stem_073():
    stem = "$$수식$${problem1}$$/수식$$일 때, 유리수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$$a `+` b$$/수식$$의 값을 구하시오.\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "따라서 $$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$이므로\n" \
              "$$수식$${explain5}$$/수식$$, $$수식$${explain6}$$/수식$$\n" \
              "$$수식$$THEREFORE `` {explain7}$$/수식$$\n\n"

    while 1:
        A, D = random.randint(1, 9) * random.choice([-1, 1]), random.randint(1, 9) * random.choice([-1, 1])
        C, X = random.randint(1, 9), random.randint(1, 9) * random.choice([-1, 1])
        B = random.choice([2, 3, 5, 6, 7, 10, 11])
        F = A * C
        G = A * D * B
        H = D * X
        Y = D * X + A * C
        E = C * X + G
        Z = X + Y
        if -5 <= Z <= 20:
            break

    problem1 = '( a `{0}` {1} sqrt {{ {2} }} ) ( {3} `{4}` {5} sqrt {{ {2} }} ) ' \
               '=` {6} `+` b sqrt{{ {2} }}' \
        .format(sign(A), post_variable(A), B, C, sign(D), post_variable(D), E)

    explain1 = '( a `{0}` {1} sqrt {{ {2} }} ) ( {3} `{4}` {5} sqrt {{ {2} }} ) $$/수식$$\n' \
               '$$수식$$=` {6}a `{7}` {8}a sqrt{{ {2} }} `{9}` {10} sqrt{{ {2} }} `{11}` {12}' \
        .format(sign(A), post_variable(A), B, C, sign(D), post_variable(D), ppost_variable(C),
                sign(D), post_variable(D), sign(F), post_variable(F), sign(G), abs(G))
    explain2 = '( {0}a `{1}` {2} ) `+` ( {3}a `{4}` {5} ) sqrt {{ {6} }}' \
        .format(ppost_variable(C), sign(G), abs(G), ppost_variable(D), sign(F), abs(F), B)
    explain3 = '{0}a `{1}` {2} `=` {3}'.format(ppost_variable(C), sign(G), abs(G), E)
    explain4 = '{0}a `{1}` {2} `=` b'.format(ppost_variable(D), sign(F), abs(F))
    explain5 = 'a `=` {0}'.format(X)
    explain6 = 'b `=` {0} `{1}` {2} `=` {3}'.format(H, sign(F), abs(F), Y)
    explain7 = 'a `+` b `=` {0}'.format(Z)

    result = Z
    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    for i in range(5):
        lst.append(result + (i - answer_num) * random.randint(1, 3))
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-79
def factorization312_Stem_074():
    stem = "두 수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$가 다음과 같을 때, $$수식$$A `+` B$$/수식$$의 값을 구하시오.\n" \
           "$$수식$${problem1}$$/수식$$,    $$수식$${problem2}$$/수식$$\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$$THEREFORE `` {explain3}$$/수식$$\n\n"

    while 1:
        C, F = random.randint(1, 9), random.randint(1, 9)
        E, G = random.randint(1, 9) * random.choice([-1, 1]), random.randint(1, 9) * random.choice([-1, 1])
        D = random.choice([2, 3, 5, 6, 7, 10, 11])
        H = C * C * D
        I = 2 * C * E
        J = E * E
        K = H + J
        M = F * F
        N = F * G * 2
        O = G * G * D
        P = M + O
        Z = K + P
        Y = I + N
        if Y == 0 or Z == 0:
            continue
        if -50 <= Z < 100 and -50 <= Y < 100:
            break

    problem1 = 'A `=` ( {0} sqrt {{ {1} }} `{2}` {3} )^{{ 2 }}'.format(ppost_variable(C), D, sign(E), abs(E))
    problem2 = 'B `=` ( {0} `{1}` {2} sqrt {{ {3} }} )^{{ 2 }}'.format(F, sign(G), post_variable(G), D)

    explain1 = 'A `=` {0} `{1}` {2} sqrt {{ {3} }} `{4}` {5} `=` {6} `{7}` {8} sqrt {{ {3} }}' \
        .format(H, sign(I), post_variable(I), D, sign(J), abs(J), K, sign(I), post_variable(I), D)
    explain2 = 'B `=` {0} `{1}` {2} sqrt {{ {3} }} `{4}` {5} `=` {6} `{7}` {8} sqrt {{ {3} }}' \
        .format(M, sign(N), post_variable(N), D, sign(O), abs(O), P, sign(N), post_variable(N), D)
    explain3 = 'A `+` B `=` ( {0} `{1}` {2} sqrt{{ {3} }} ) `+` ( {4} `{5}` {6} sqrt{{ {3} }} ) ' \
               '`=` {7} `{8}` {9} sqrt{{ {3} }}'\
        .format(K, sign(I), post_variable(I), D, P, sign(N), post_variable(N), Z, sign(Y), post_variable(Y))
    answer_num = '{0} `{1}` {2} sqrt{{ {3} }}'.format(Z, sign(Y), post_variable(Y), D)
    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-80
def factorization312_Stem_075():
    stem = "$$수식$${problem1}$$/수식$$을 계산한 결과가 유리수가 되도록 하는 유리수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "유리수가 되려면 $$수식$${explain2}$$/수식$$이어야 하므로 $$수식$${explain3}$$/수식$$\n\n"

    while 1:
        A = random.choice([2, 3, 5, 6, 7, 10, 11])
        C = random.randint(1, 6)
        B, D = random.randint(1, 9) * random.choice([-1, 1]), random.randint(1, 9) * random.choice([-1, 1])
        if -B == D:
            continue
        E = A * C
        F = B * C
        G = B * D
        break

    problem1 = '( a sqrt {{ {0} }} `{1}` {2} ) ( {3} sqrt {{ {0} }} `{4}` {5} )'\
        .format(A, sign(B), abs(B), ppost_variable(C), sign(D), abs(D))

    explain1 = '{0} `=` {1}a `{2}` ( {3}a `{4}` {5} ) sqrt{{ {6} }} `{7}` {8}'\
        .format(problem1, ppost_variable(E), sign(D), ppost_variable(abs(D)), sign(int(F * (D / abs(D)))), abs(F), A,
                sign(G), abs(G))
    explain2 = '{0}a `{1}` {2} `=` 0'.format(ppost_variable(abs(D)), sign(int(F * (D / abs(D)))), abs(F))
    explain3 = 'a `=` {0}{1}'.format(answer_sign(-int((F / abs(F)) * (D / abs(D)))), frac(F, D))

    answer_num = '{0}{1}'.format(answer_sign(-int((F / abs(F)) * (D / abs(D)))), frac(F, D))
    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-81
def factorization312_Stem_076():
    stem = "$$수식$${problem1}$$/수식$$일 때, 유리수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$$a `-` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "따라서 $$수식$${explain6}$$/수식$$, $$수식$${explain7}$$/수식$$이므로\n" \
              "$$수식$${explain8}$$/수식$$\n\n"

    while 1:
        A = random.randint(1, 9)
        B = random.choice([2, 6, 10, 12, 14, 18])
        C = A * A
        D = -2 * A
        E = 2 * A
        F = C - B
        G = C + B
        H = D - E
        break
    problem1 = '{{ {0} `-` sqrt {{ {1} }} }} OVER {{ {0} `+` sqrt {{ {1} }} }} `-` ' \
               '{{ {0} `+` sqrt {{ {1} }} }} OVER {{ {0} `-` sqrt {{ {1} }} }} `=` ' \
               'a `+` b sqrt{{ {1} }}'.format(A, B)

    explain1 = '{{ {0} `-` sqrt {{ {1} }} }} OVER {{ {0} `+` sqrt {{ {1} }} }} `-` ' \
               '{{ {0} `+` sqrt {{ {1} }} }} OVER {{ {0} `-` sqrt {{ {1} }} }}'.format(A, B)
    explain2 = '{{ ( {0} `-` sqrt {{ {1} }} )^{{ 2 }} }} OVER ' \
               '{{ ( {0} `+` sqrt {{ {1} }} ) ( {0} `-` sqrt {{ {1} }} ) }} `-` ' \
               '{{ ( {0} `+` sqrt {{ {1} }} )^{{ 2 }} }} OVER ' \
               '{{ ( {0} `-` sqrt {{ {1} }} ) ( {0} `+` sqrt {{ {1} }} ) }}'.format(A, B)
    explain3 = '{{ {0} `{1}` {2} sqrt{{ {3} }} `{4}` {3} }} OVER {{ {0} `-` {3} }} `-` ' \
               '{{ {0} `{5}` {6} sqrt{{ {3} }} `{4}` {3} }} OVER {{ {0} `-` {3} }}'\
        .format(C, sign(D), post_variable(D), B, sign(B), sign(E), post_variable(E))
    explain4 = '{{ {0} `{1}` {2} sqrt{{ {3} }} `-` {4}  `-` {6} sqrt{{ {3} }} }} OVER {{ {7} }}' \
        .format(G, sign(D), post_variable(D), B, abs(G), sign(E), post_variable(E), F)
    explain5 = '{{ {0} sqrt{{ {1} }} }} OVER {{ {2} }}'.format(ppost_variable(H), B, F)
    explain6 = 'a = 0'
    explain7 = 'b `=` {0}{1}'.format(answer_sign(H * F), frac(H, F))
    explain8 = 'a `-` b `=` {0}{1}'.format(answer_sign(-H * F), frac(H, F))
    answer_num = '{0}{1}'.format(answer_sign(-H * F), frac(H, F))

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8)

    return stem, answer, comment


# 3-1-2-82
def factorization312_Stem_077():
    stem = "$$수식$${problem1}$$/수식$$일 때, 유리수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$\n" \
              "$$수식$$=`{explain2}$$/수식$$\n" \
              "$$수식$$=`{explain3}$$/수식$$\n" \
              "$$수식$$=`{explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "따라서 $$수식$${explain6}$$/수식$$, $$수식$${explain7}$$/수식$$이므로\n" \
              "$$수식$${explain8}$$/수식$$\n\n"

    while 1:
        A, B = random.sample([2, 3, 5, 6, 7, 10, 11, 13, 14], 2)
        if B > A:
            A, B = B, A
        C, D = random.randint(1, 9), random.randint(1, 9)
        if C == D:
            continue
        E = -1 * C
        F = A - B
        G = C - D
        H = E - D
        K = G + H
        break
    problem1 = '{{ {0} }} OVER {{ sqrt {{ {1} }} `+` sqrt {{ {2} }} }} `-` ' \
               '{{ {3} }} OVER {{ sqrt {{ {1} }} `-` sqrt {{ {2} }} }} `=` ' \
               'a sqrt{{ {1} }} `+` b sqrt{{ {2} }}'.format(C, A, B, D)

    explain1 = '{{ {0} }} OVER {{ sqrt {{ {1} }} `+` sqrt {{ {2} }} }} `-` ' \
               '{{ {3} }} OVER {{ sqrt {{ {1} }} `-` sqrt {{ {2} }} }}'.format(C, A, B, D)
    explain2 = '{{ {0} ( sqrt {{ {1} }} `-` sqrt {{ {2} }} ) }} OVER ' \
               '{{ ( sqrt {{ {1} }} `+` sqrt {{ {2} }} ) ( sqrt {{ {1} }} `-` sqrt {{ {2} }} ) }} `-` ' \
               '{{ {3} ( sqrt {{ {1} }} `+` sqrt {{ {2} }} ) }} OVER ' \
               '{{ ( sqrt {{ {1} }} `-` sqrt {{ {2} }} ) ( sqrt {{ {1} }} `+` sqrt {{ {2} }} ) }}'\
        .format(ppost_variable(C), A, B, D)
    explain3 = '{{ {0} sqrt{{ {1} }} `{2}` {3} sqrt{{ {4} }} }} OVER {{ {5} }} `-` ' \
               '{{ {6} sqrt{{ {1} }} `{7}` {8} sqrt{{ {4} }} }} OVER {{ {5} }}'\
        .format(ppost_variable(C), A, sign(E), post_variable(E), B, F, ppost_variable(D), sign(D), post_variable(D))
    explain4 = '{{ {0} sqrt{{ {1} }} `{2}` {3} sqrt{{ {4} }} `-` ( {6} sqrt{{ {1} }} `{7}` {8} sqrt{{ {4} }} )' \
               ' }} OVER {{ {5} }}' \
        .format(ppost_variable(C), A, sign(E), post_variable(E), B, F, ppost_variable(D), sign(D), post_variable(D))
    explain5 = '{{ {0} sqrt{{ {1} }} `{2}` {3} sqrt{{ {4} }} }} OVER {{ {5} }}'\
        .format(ppost_variable(G), A, sign(H), post_variable(H), B, F)
    explain6 = 'a = {0}{1}'.format(answer_sign(G * F), frac(G, F))
    explain7 = 'b `=` {0}{1}'.format(answer_sign(H * F), frac(H, F))
    explain8 = 'a `+` b `=` {0}{1}'.format(answer_sign(K * F), frac(K, F))
    answer_num = '{0}{1}'.format(answer_sign(K * F), frac(K, F))

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8)

    return stem, answer, comment


# 3-1-2-83
def factorization312_Stem_078():
    stem = "$$수식$${problem1}$$/수식$$일 때, $$수식$${problem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}# &amp; =`{explain2}$$/수식$$\n" \
              "따라서 $$수식$${explain3}$$/수식$$\n\n"

    while 1:
        C = random.choice([3, 5, 6, 7, 11])
        B = random.randint(1, 9) * random.choice([-1, 1])
        A = B * B * C + 1
        if not is_square_number(A):
            continue
        A = int(A ** 0.5)
        D = -B
        K = 2 * A

        break

    problem1 = 'x `=` {0} `{1}` {2} sqrt{{ {3} }}'.format(A, sign(B), post_variable(B), C)
    problem2 = 'x `+` {{ 1 }} OVER {{ x }}'

    explain1 = '{{ 1 }} OVER {{ x }} ` &amp; =` {{ 1 }} OVER {{ {0} `{1}` {2} sqrt{{ {3} }} }} #' \
               '&amp; =` {{ {0} `{4}` {5} sqrt{{ {3} }} }} OVER {{ ( {0} `{1}` {2} sqrt{{ {3} }} ) ' \
               '( {0} `{4}` {5} sqrt{{ {3} }} )}}'\
        .format(A, sign(B), post_variable(B), C, sign(D), post_variable(D))
    explain2 = '{0} `{1}` {2} sqrt{{ {3} }}'.format(A, sign(D), post_variable(D), C)
    explain3 = '{0} `=` {1} `{2}` {3} sqrt{{ {4} }} `+` {5} `{6}` {7} sqrt{{ {4} }} `=` {8}'\
        .format(problem2, A, sign(B), post_variable(B), C, A, sign(D), post_variable(D), K)
    answer_num = K
    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-84
def factorization312_Stem_079():
    stem = "$$수식$${exp1}$$/수식$${exp1_josa} 계산하시오.\n"
    answer = "(답) : $$수식$${L}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp1}$$/수식$$\n" \
              "$$수식$$=` {exp2}$$/수식$$\n" \
              "$$수식$$=` {exp4}$$/수식$$\n" \
              "$$수식$$=` {exp5}$$/수식$$\n" \
              "$$수식$$=` {L}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice([2, 3, 5, 6, 7, 10, 11], 1)[0]
        B, C = np.random.choice(range(1, 10), 2, False)
        D, F = np.random.choice(range(1, 10), 2, False)
        exp1_josa = num_josa(A)[2]
        D_sign = check_sign(D)

        E = D
        G = F
        H = B * B
        I = D * D * A
        J = C * C
        K = F * F * A
        L = (H - I) * (J - K)


        if B != C and D != F and -500 <= L <= 500:
            flag = False

            # 자주 등장하는 sqrt {A} 의 경우 변수를 새로 만들었음
            sqrt_a = "sqrt {{ {A} }}".format(A=A)

            # D와 F가 1인 경우 루트 앞 자연수가 생략되는 것 반영 (1 sqrt {3} -> sqrt {3})
            if D == 1:
                D, E = '', ''
            if F == 1:
                F, G = '', ''

            exp1 = " ( {B} `+` {D} {sqrt_a}  )  ( {B} `-` {E} {sqrt_a}  )  ( {C} `+` {F} {sqrt_a}  )  ( {C} `-` {G} {sqrt_a}  )".format(
                    B=B, C=C, D=D, E=E, F=F, G=G, sqrt_a=sqrt_a
            )
            exp2 = " {{  ( {B} `+` {D} {sqrt_a}  )  ( {B} `-` {E} {sqrt_a}  )  }} ` TIMES `  {{  ( {C} `+` {F} {sqrt_a}  )  ( {C} `-` {G} {sqrt_a}  )  }}".format(
                B=B, C=C, D=D, E=E, F=F, G=G, sqrt_a=sqrt_a
            )
            exp4 = " {{ {B} ^{{2}} `-`  ( {D} {sqrt_a}  ) ^{{2}}  }}  ( {{ {C} ^{{2}} `-`  ( {F} {sqrt_a}  ) ^{{2}}  }}".format(
                B=B, C=C, D=D, F=F, sqrt_a=sqrt_a
            )
            exp5 = " ( {H} `-` {I}  )  ( {J} `-` {K}  )".format(
                H=H, I=abs(I), J=J, K=abs(K)
            )

    stem = stem.format(exp1=exp1, exp1_josa=exp1_josa)
    answer = answer.format(L=L)
    comment = comment.format(exp1=exp1, exp2=exp2, exp4=exp4, exp5=exp5, L=L)


    return stem, answer, comment


# 3-1-2-85
def factorization312_Stem_080():
    stem = "다음 식을 계산하시오.\n" \
           "$$수식$${exp_1} {exp_2}$$/수식$$\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} {exp_2}$$/수식$$\n" \
              "$$수식$${exp_3} # &amp;{exp_4} # &amp;{exp_5} # &amp;{exp_6}$$/수식$$\n" \
              "$$수식$${exp_7} {exp_8}$$/수식$$\n" \
              "$$수식$${exp_9} {exp_10}$$/수식$$\n" \
              "$$수식$${exp_11}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(1, 10))
        B, C, D = list(range(A+1, A+4))
        E = A + 14
        F = A + 15

        exp_1 = "{{1}} over {{ {A} `+` sqrt {{ {B} }} }} `+` {{1}} over {{sqrt {{ {B} }} `+` sqrt {{ {C} }} }} `+` {{1}} over {{sqrt {{ {C} }} `+` sqrt {{ {D} }} }}".format(
            A=A, B=B, C=C, D=D)
        exp_2 = "`+` CDOTS `+` {{1}} over {{sqrt {{ {E} }} `+` sqrt {{ {F} }} }}".format(E=E, F=F)
        exp_3 = "=` &amp; {{ {A} `-` sqrt {{ {B} }} }} over {{  ( {A} `+` sqrt {{ {B} }}  )  ( {A} `-` sqrt {{ {B} }}  ) }} `".format(A=A, B=B)
        exp_4 = "+` {{sqrt {{ {B} }} `-` sqrt {{ {C} }} }} over {{  ( sqrt {{ {B} }} `+` sqrt {{ {C} }}  )  ( sqrt {{ {B} }} `-` sqrt {{ {C} }}  ) }}".format(
            B=B, C=C)
        exp_5 = "+` {{sqrt {{ {C} }} `-` sqrt {{ {D} }} }} over {{  ( sqrt {{ {C} }} `+` sqrt {{ {D} }}  )  ( sqrt {{ {C} }} `-` sqrt {{ {D} }}  ) }}".format(
            C=C, D=D)
        exp_6 = "+` CDOTS `+` {{sqrt {{ {E} }} `-` sqrt {{ {F} }} }} over {{  ( sqrt {{ {E} }} `+` sqrt {{ {F} }}  )  ( sqrt {{ {E} }}`-` sqrt {F}  ) }}".format(
            E=E, F=F)
        exp_7 = "=` &amp;- ( {A} `-` sqrt {{ {B} }}  ) `-`  ( sqrt {{ {B} }} `-` sqrt {{ {C} }}  ) `-`  ( sqrt {{ {C} }} `-` sqrt {{ {D} }}  )".format(
            A=A, B=B, C=C, D=D)
        exp_8 = "# &amp; +` CDOTS `-`  ( sqrt {{ {E} }} `-` sqrt {{ {F} }}  )".format(E=E, F=F)
        exp_9 = "=` &amp; -{A} `+` sqrt {{ {B} }} `-` sqrt {{ {B} }} `+` sqrt {{ {C} }} `-` sqrt {{ {C} }} `+` sqrt {{ {D} }}".format(
            A=A, B=B, C=C, D=D)
        exp_10 = "# &amp; -` CDOTS `-` sqrt {{ {E} }} `+` sqrt {{ {F} }}".format(E=E, F=F)
        exp_11 = "=`-{A} `+` sqrt {{ {F} }}".format(A=A, F=F)

        # F가 제곱근이거나 제곱근이 포함되어 있어 루트를 빠져나갈 수 있거나 제곱근이 아닌 경우 3개 체크
        # 제곱근인 경우
        if math.sqrt(F) == int(math.sqrt(F)):
            K = - A + int(math.sqrt(F))
            ans = K
            exp_11 = "%s `=` %s" % (exp_11, K)
        else:
            pow, sqrt = sqrt_pow(F)
            # 제곱근이 아닌 경우
            if pow == 1:
                ans = "-{A} `+` sqrt {{ {F} }}".format(A=A, F=F)
            # 제곱근이 포함되어 있는 경우
            else:
                K = "-{A} `+` {pow} sqrt {{ {sqrt} }}".format(A=A, pow=pow, sqrt=sqrt)
                ans = K
                exp_11 = "%s `=` %s" % (exp_11, K)

        flag = False


    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(ans=ans)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, exp_5=exp_5, exp_6=exp_6, exp_7=exp_7,
                             exp_8=exp_8, exp_9=exp_9, exp_10=exp_10, exp_11=exp_11)

    return stem, answer, comment


# 3-1-2-86
def factorization312_Stem_081():
    stem = "$$수식$${exp_1}$$/수식$$일 때, " \
           "$$수식$${exp_2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${{1}} over {{f(`x`)}}$$/수식$$\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$${exp_4}$$/수식$$\n" \
              "$$수식$${exp_5}$$/수식$$\n" \
              "$$수식$${exp_6}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$${exp_7}$$/수식$$\n" \
              "$$수식$$=` {exp_8}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(2, 10))
        Z = np.random.choice(range(1, 10))
        B = A - 1
        Y = Z + 1
        X = Y + 1

        c = Z + A
        d = Z + B
        e = Y + A
        f = Y + B
        g = X + A
        h = X + B

        exp_1 = "f(`x`) `=` sqrt{{ x `+` {A} }} `+` sqrt{{ x `+` {B} }}".format(A=A, B=B)
        exp_2 = "{{1}} over {{f(` {Z} `)}} `+` {{1}} over {{f(` {Y} `)}} `+` {{1}} over {{f(` {X} `)}}".format(Z=Z, Y=Y, X=X)
        exp_3 = "=` {{1}} over {{sqrt {{x `+` {A} }} `+` sqrt {{x `+` {B} }}".format(A=A, B=B)
        exp_4 = "=` {{sqrt {{x `+` {A} }} `-` sqrt {{x `+` {B} }} over {{  ( sqrt {{x `+` {A} }} `+` " \
                "sqrt {{x `+` {B} }}  )  ( sqrt {{x `+` {A} }} `-` sqrt {{x `+` {B} }}  ) }}".format(A=A, B=B)
        exp_5 = "=` {{sqrt {{x `+` {A} }} `-` sqrt {{x `+` {B} }} over {{x `+` {A} `-`  ( x `+` {B}  ) }}".format(A=A, B=B)
        exp_6 = "=` sqrt {{x `+` {A} }} `-` sqrt {{x `+` {B} }}".format(A=A, B=B)

        exp_7 = "=`  ( sqrt {{ {c} }} `-` sqrt {{ {d} }}  ) `+`  ( sqrt {{ {e} }} `-` sqrt {{ {f} }}  ) " \
                "`+`  ( sqrt {{ {g} }} `-` sqrt {{ {h} }}  )".format(c=c, d=d, e=e, f=f, g=g, h=h)
        exp_8 = "- sqrt {{ {d} }} `+` sqrt {{ {g} }}".format(d=d, g=g)

        # 정답 유형에 따라서 처리
        d_pow, d_sqrt = sqrt_pow(d)
        g_pow, g_sqrt = sqrt_pow(g)
        if d_sqrt == 1:
            if g_sqrt == 1:
                # d와 g 모두 제곱근인 경우 (d=4, g=9)
                ans = -int(math.sqrt(d)) + int(math.sqrt(g))
                exp_8 += " `=` {ans}".format(ans=ans)
            elif g_pow == 1:
                # d는 제곱근이고 g는 제곱근이 아닌 경우 (d=4, g=5)
                ans = "-{d_pow} `+` sqrt {{ {g} }}".format(d_pow=d_pow, g=g)
                exp_8 += " `=` {ans}".format(ans=ans)
            elif g_pow > 1 and g_sqrt > 1:
                # d는 제곱근이고 g는 제곱근인 수를 포함하고 있는 경우 (d=4, g=18)
                ans = "-{d_pow} `+` {g_pow} sqrt {{ {g_sqrt} }}".format(d_pow=d_pow, g_pow=g_pow, g_sqrt=g_sqrt)
                exp_8 += " `=` {ans}".format(ans=ans)
        elif d_pow == 1:
            if g_sqrt == 1:
                # d는 제곱근이 아니고 g는 제곱근인 경우 (d=5, g=9)
                ans = "- sqrt {{ {d} }} `+` {g_pow}".format(d=d, g_pow=g_pow)
                exp_8 += " `=` {ans}".format(ans=ans)
            elif g_pow == 1:
                # d는 제곱근이 아니고 g는 제곱근이 아닌 경우 (d=5, g=7)
                ans = exp_8
            elif g_pow > 1 and g_sqrt > 1:
                # d는 제곱근이 아니고 g는 제곱근인 수를 포함하고 있는 경우 (d=5, g=18)
                ans = "-sqrt {{ {d} }} `+` {g_pow} sqrt {{ {g_sqrt} }}".format(d=d, g_pow=g_pow, g_sqrt=g_sqrt)
                exp_8 += " `=` {ans}".format(ans=ans)
        elif d_sqrt > 1 and d_pow > 1:
            if g_sqrt == 1:
                # d는 제곱근인 수를 포함하고 g는 제곱근인 경우 (d=8, g=9)
                ans = "-{d_pow} sqrt {{ {d_sqrt} }} `+` {g_pow}".format(d_pow=d_pow, d_sqrt=d_sqrt, g_pow=g_pow)
                exp_8 += " `=` {ans}".format(ans=ans)
            elif g_pow == 1:
                # d는 제곱근인 수를 포함하고 g는 제곱근이 아닌 경우 (d=8, g=10)
                ans = "-{d_pow} sqrt {{ {d_sqrt} }} `+` {g}".format(d_pow=d_pow, d_sqrt=d_sqrt, g=g)
                exp_8 += " `=` {ans}".format(ans=ans)
            elif g_pow > 1 and g_sqrt > 1:
                # d는 제곱근인 수를 포함하고 g는 제곱근인 수를 포함하는 경우 (d=8, g=12)
                ans = "-{d_pow} sqrt {{ {d_sqrt} }} `+` {g_pow} sqrt {{ {g_sqrt} }}".format(d_pow=d_pow, d_sqrt=d_sqrt, g_pow=g_pow, g_sqrt=g_sqrt)
                exp_8 += " `=` {ans}".format(ans=ans)

        flag = False


    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(ans=ans)
    comment = comment.format(exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, exp_5=exp_5, exp_6=exp_6, exp_7=exp_7, exp_8=exp_8)

    return stem, answer, comment


# 3-1-2-87
def factorization312_Stem_082():
    stem = '$$수식$$x `+` y `=` {A}$$/수식$$, $$수식$$xy `=` {B}$$/수식$$일 때, $$수식$${stem_condition}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(5, 10))
        B = np.random.choice(range(2, 12))

        if A != B:
            Z = (A * A) - (2 * B)
            n = np.random.choice(range(1, 4))
            tmp = random.randint(0, 4)
            nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
            nums = nums[tmp:tmp+5]

            ans = multiple_choice_nums[nums.index(Z)]
            a1, a2, a3, a4, a5 = nums

            flag = False

    stem_condition = 'x ^2 `+` y^2'
    c1 = 'x ^2 `+` y^2'
    c2 = ' ( x `+` y  )^2 `-` 2xy'
    c3 = '%d^2 `-` 2 `TIMES` %d' % (A, B)

    stem = stem.format(A=A, B=B, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, stem_condition=stem_condition)
    answer = answer.format(ans=ans)
    comment = comment.format(c1=c1, c2=c2, c3=c3, Z=Z)

    return stem, answer, comment


# 3-1-2-88
def factorization312_Stem_083():
    stem = '$$수식$$a `-` b `=` {A}$$/수식$$, $$수식$$ab `=` {B}$$/수식$$일 때, 다음 식의 값을 구하시오.\n' \
           '⑴ $$수식$${a1}$$/수식$$\n' \
           '⑵ $$수식$${a2}$$/수식$$\n'
    answer = "(답) : ⑴ $$수식$${E}$$/수식$$, ⑵ $$수식$${G}$$/수식$$\n"
    comment = "(해설)\n" \
              "⑴ $$수식$${c1}$$/수식$$\n" \
              "⑵ $$수식$${c2}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(5, 10))
        B = np.random.choice(range(2, 12))

        if A != B:
            C = A * A
            D = 2 * B
            E = C + D
            F = 4 * B
            G = C + F

            # B가 음수인경우 곱셈과정에서 괄호로 감싸줌
            if B < 0: B = " ( {B}  )".format(B=B)

            flag = False

    c1 = 'a ^2 `+` b^2 ` &amp; =`  ( a `-` b  ) ^2 `+` 2ab #' \
         '&amp; =` %d^2 `+` 2 `TIMES` %d #' \
         '&amp; =` %d %s `=` %d' % (A, B, C, int_str_converter(D, False, False), E)
    c2 = ' ( a `+` b  ) ^2 `&amp; =`  ( a `-` b  ) ^2 `+` 4ab #' \
         '&amp; =` %d^2 `+` 4 `TIMES` %d #' \
         '&amp; =` %d %s `=` %d' % (A, B, C, int_str_converter(F, False, False), G)

    a1 = 'a ^{2} `+` b ^{2}'
    a2 = ' ( a `+` b  ) ^ {2}'

    stem = stem.format(A=A, B=B, a1=a1, a2=a2)
    answer = answer.format(E=E, G=G)
    comment = comment.format(c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-89
def factorization312_Stem_084():
    stem = '$$수식$$x `+` y `=` {A}$$/수식$$, $$수식$$xy `=` {B}$$/수식$$일 때, $$수식$${stem_condition}$$/수식$$의 값을 구하시오.\n'
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {ans}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(5, 10))
        B = np.random.choice(range(2, 12))

        if A != B:
            K = (A * A) - (2 * B)
            ans = reduction(K, B)

            flag = False

    c1 = '{y} over {x} `+` {x} over {y}'
    c2 = '{x^2 `+` y^2} over {xy}'
    c3 = '{  ( x `+` y  ) ^2 `-` 2xy } over {xy}'
    c4 =  '{ %d^2 `-` 2 `TIMES` %d } over {%d}' % (A, B, B)
    stem_condition = '{y} over {x} `+` {x} over {y}'

    stem = stem.format(A=A, B=B, stem_condition=stem_condition)
    answer = answer.format(ans=ans)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, ans=ans)

    return stem, answer, comment


# 3-1-2-90
def factorization312_Stem_085():
    stem = '$$수식$$x `=` sqrt{{ {A} }} `+` sqrt{{ {B} }}$$/수식$$, $$수식$$y `=` sqrt{{ {A} }} `-` sqrt{{ {B} }}$$/수식$$일 때, $$수식$$x ^{{2}} `+` y ^{{2}}$$/수식$$의 값을 구하시오.\n'
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x `+` y `=` sqrt{{ {A} }} `+` sqrt{{ {B} }} `+` sqrt{{ {A} }} `-` sqrt{{ {B} }} `=` 2 sqrt{{ {A} }}$$/수식$$\n" \
              "$$수식$$xy `=`  ( sqrt{{ {A} }} `+` sqrt{{ {B} }}  )  ( sqrt{{ {A} }} `-` sqrt{{ {B} }}  ) `=` {A} `-` {B} `=` {C}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$$x ^{{2}} `+` y ^{{2}} `=`  ( x `+` y  ) ^{{2}} `-` 2xy `=`  ( 2 sqrt{{ {A} }}  ) ^{{2}} `-` 2 `TIMES` {_C} `=` {K}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B = np.random.choice([2, 3, 5, 6, 7, 10, 11, 13, 15, 17, 19], 2, replace=False)
        C = A-B
        K = (2 * 2 * A) - (2 * C)

        # C가 음수인 경우 곱셈 식에서 괄호 표기 추가
        if C < 0:
            _C = " ( {C}  )".format(C=C)
        else:
            _C = C

        flag = False

    stem = stem.format(A=A, B=B)
    answer = answer.format(K=K)
    comment = comment.format(A=A, B=B, C=C, _C=_C, K=K)

    return stem, answer, comment


# 3-1-2-91
def factorization312_Stem_086():
    stem = '$$수식$$a `-` b `=` {A}$$/수식$$, $$수식$$a ^{{2}} `+` b ^{{b}} `=` {B}$$/수식$$일 때, $$수식$$ab$$/수식$$의 값을 구하시오.\n'
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$a ^{{2}} `+` b ^{{b}} `=`  ( a `-` b  ) ^ {{2}} `+` 2ab$$/수식$$이므로\n" \
              "$$수식$${B} `=` {A} ^{{2}} `+` 2ab$$/수식$$에서 $$수식$$ab `=` {ans}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(5, 10))
        B = np.random.choice(range(10, 31))

        if A != B:
            K = B - (A * A)
            ans = reduction(K, 2)

            flag = False

    stem = stem.format(A=A, B=B)
    answer = answer.format(ans=ans)
    comment = comment.format(A=A, B=B, ans=ans)

    return stem, answer, comment


# 3-1-2-92
def factorization312_Stem_087():
    stem = '$$수식$$a `+` b `=` {A}$$/수식$$, $$수식$$a ^{{2}} `+` b ^{{2}} `=` {B}$$/수식$$일 때, $$수식$${{1}} over {{a}} `+` {{1}} over {{b}}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$$a ^{{2}} `+` b ^{{2}} `=`  ( a `+` b  ) ^{{2}} `-` 2ab$$/수식$$에서\n" \
              "$$수식$${B} `=` {_A} ^{{2}} `-` 2ab$$/수식$$에서 $$수식$$ab `=` {L}$$/수식$$\n" \
              "따라서 $$수식$${{1}} over {{a}} `+` {{1}} over {{b}} `=` {{a `+` b}} over {{ab}} `=` {ans}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-20, 20))
        B = np.random.choice(range(2, 31))

        if A != 0 and pow(A, 2) != B:
            K = (A * A) - B
            L = reduction(K, 2)

            if abs(K) < 100 :
                # A가 음수인경우 곱셈에서 괄호 추가
                if A < 0:
                    _A = " ( {A}  )".format(A=A)
                else:
                    _A = A

                # L이 분수 형태가 아닌 경우만 진행
                if "{" not in str(L):
                    ans = reduction(A, L)

                    n = np.random.choice(range(1, 4))
                    # 보기 후보 리스트 생성
                    answers = [reduction(A - (4*n), L),
                               reduction(A - (3*n), L),
                               reduction(A - (2*n), L),
                               reduction(A - n, L),
                               ans,
                               reduction(A + n, L),
                               reduction(A + (2*n), L),
                               reduction(A + (3*n), L),
                               reduction(A + (4*n), L)]

                    # 분자가 0인 분수가 있는 경우 제외
                    if "{{0}} over {{{L}}}".format(L=L) not in answers:
                        tmp = np.random.choice(4)
                        answers = answers[tmp: tmp+5]

                        a1, a2, a3, a4, a5 = answers
                        ans_num = multiple_choice_nums[answers.index(ans)]

                        flag = False

    stem = stem.format(A=A, B=B, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(A=A, _A=_A, B=B, L=L, ans=ans)

    return stem, answer, comment


# 3-1-2-93
def factorization312_Stem_088():
    stem = '$$수식$${exp_1}$$/수식$$, $$수식$$xy `=` {D}$$/수식$$일 때, ' \
           '$$수식$${c7}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "이므로 $$수식$${c5}$$/수식$$\n" \
              "$$수식$${c6}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {c9}$$/수식$$\n" \
              "$$수식$$=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(1, 10))
        C, D = np.random.choice(range(-10, 11), 2, replace=False)

        if C != 0 and D != 0:
            B = -1 * A
            E = A * B
            F = D + E
            G = C - F
            C1 = reduction(G, B)

            # C1이 정수인 경우에만 진행
            if "{" not in str(C1):
                Z = (C1 * C1) + (3 * D)
                if abs(Z) < 100 :

                    if C1 < 0:
                        _C1 = " ( {C1}  )".format(C1=C1)
                    else:
                        _C1 = C1

                    if D < 0:
                        D = " ( {D}  )".format(D=D)

                    # 보기 리스트 생성
                    n = np.random.choice(range(1, 4))
                    tmp = random.randint(0, 4)
                    nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
                    nums = nums[tmp:tmp + 5]

                    ans = multiple_choice_nums[nums.index(Z)]
                    a1, a2, a3, a4, a5 = nums

                    flag = False

    exp_1 = ' ( x %s  )  ( y %s  ) `=` %d' % (int_str_converter(A, False, False), int_str_converter(B, False, False), C)
    c1 = ' ( x %s  )  ( y %s  )' % (int_str_converter(A, False, False), int_str_converter(B, False, False))
    c2 = 'xy %sx %sy %s' % (int_str_converter(B, False, True), int_str_converter(A, False, True), int_str_converter(E, False, False))
    c3 = 'xy %s  ( x `-` y  ) %s' % (int_str_converter(B, False, True), int_str_converter(E, False, False))
    c4 = '%s  ( x `-` y  ) %s' % (int_str_converter(B, True, True), int_str_converter(F, False, False))
    c5 = '%s `=` %d' % (c4, C)
    c6 = 'x `-` y `=` %s' % (C1)
    c7 = 'x ^2 `+` xy `+` y ^2'
    c8 = ' ( x `-` y  ) ^2 `+` 3xy'
    c9 = '%s ^{2} `+` 3 `TIMES` %s' % (_C1, D)
    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, c7=c7, D=D)
    answer = answer.format(ans=ans)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, Z=Z)

    return stem, answer, comment


# 3-1-2-94
def factorization312_Stem_089():
    stem = '$$수식$$a `+` {{1}} over {{a}} `=` {A}$$/수식$$일 때, $$수식$$a ^{{2}} `+` {{1}} over {{a ^{{2}} }}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$$a ^{{2}} `+` {{1}} over {{a ^{{2}} }} `=`  ( a `+` {{1}} over {{a}}  ) ^{{2}} `-` 2 `=` " \
              "{_A} ^{{2}} `-` 2 `=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-20, 20))

        if A < 0:
            _A = " ( {A}  )".format(A=A)
        else:
            _A = A

        if A != 0:
            Z = (A * A) - 2

            # 정답 음수 제외
            if Z > 0:

                # 보기 후보군 생성
                n = np.random.choice(range(1, 4))
                tmp = random.randint(0, 4)
                nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
                nums = nums[tmp:tmp + 5]

                ans = multiple_choice_nums[nums.index(Z)]
                a1, a2, a3, a4, a5 = nums
                if min(nums) > 0 and max(nums) < 100 :
                    flag = False

    stem = stem.format(A=A, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans=ans)
    comment = comment.format(A=A, _A=_A, Z=Z)

    return stem, answer, comment


# 3-1-2-95
def factorization312_Stem_090():
    stem = '$$수식$$a `-` {{1}} over {{a}} `=` {A}$$/수식$$일 때, $$수식$$a ^{{2}} `+` {{1}} over {{a ^{{2}} }}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$$a ^{{2}} `+` {{1}} over {{a ^{{2}} }} `=`  ( a `-` {{1}} over {{a}}  ) ^{{2}} `+` 2 `=` " \
              "{_A} ^{{2}} `+` 2 `=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-20, 20))

        # A가 음수인 경우 괄호로 감싸줌
        if A < 0:
            _A = " ( {A}  )".format(A=A)
        else:
            _A = A

        if A != 0:
            Z = (A * A) + 2

            if abs(Z) < 100 :
                # 보기 후보군 생성
                n = np.random.choice(range(1, 4))
                tmp = random.randint(0, 4)
                nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
                nums = nums[tmp:tmp + 5]

                ans = multiple_choice_nums[nums.index(Z)]
                a1, a2, a3, a4, a5 = nums

                if abs(min(nums)) < 100 and max(nums) < 100 :
                    flag = False

    stem = stem.format(A=A, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans=ans)
    comment = comment.format(A=A, _A=_A, Z=Z)

    return stem, answer, comment


# 3-1-2-96
def factorization312_Stem_091():
    stem = '$$수식$$x `+` {{1}} over {{x}} `=` {A}$$/수식$$일 때, $$수식$${exp_1}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}`=` {c2} `=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-20, 20))

        # A가 음수인 경우 괄호 처리
        if A < 0:
            _A = " ( {A}  )".format(A=A)
        else:
            _A = A

        if A != 0:
            Z = (A * A) - 4

            # 정답 음수 제외
            if Z > 0:

                # 보기 후보군 생성
                n = np.random.choice(range(1, 4))
                tmp = random.randint(0, 4)
                nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
                nums = nums[tmp:tmp + 5]

                ans = multiple_choice_nums[nums.index(Z)]
                a1, a2, a3, a4, a5 = nums
                if max(nums) < 100 :
                    flag = False

    exp_1 = ' ( x ^{2} `-` {1} over {x}  ) ^{2}'
    c1 = ' ( x ^{2} `+` {1} over {x}  ) ^{2} `-` 4 '
    c2 = '%s ^{2} `-` 4' % (_A)

    stem = stem.format(A=A, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, exp_1=exp_1)
    answer = answer.format(ans=ans)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, Z=Z)

    return stem, answer, comment


# 3-1-2-97
def factorization312_Stem_092():
    stem = '$$수식$$x `+` {{1}} over {{x}} `=` {A} `+` {B} sqrt {{ {C} }}$$/수식$$일 때, $$수식$$x ^{{2}} `+` {{1}} over {{x ^{{2}} }}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x ^{{2}} `+` {{1}} over {{x ^{{2}} }}$$/수식$$\n" \
              "$$수식$$=`  ( x `+` {{1}} over {{x}}  ) ^{{2}} `-` 2$$/수식$$\n" \
              "$$수식$$=`  ( {A} `+` {B} sqrt {{ {C} }}  ) ^{{2}} `-` 2$$/수식$$\n" \
              "$$수식$$=` {D} `+` {E} sqrt {{ {C} }} `+` {K} `-` 2$$/수식$$\n" \
              "$$수식$$=` {F} `+` {E} sqrt {{ {C} }}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B = np.random.choice(range(1, 10), 2, replace=False)
        C = np.random.choice([2, 3, 5, 6, 7, 10, 11])

        D = A * A
        K = C * B * B

        E = 2 * A * B
        G = -1 * E
        H = A * B

        F = D + K - 2
        I = D + C
        J = D + C + 2

        # 보기 후보군 생성
        if 1 not in [E, G, H] and -1 not in [E, G, H] and abs(F) < 50 :

            # 보기와 정답간의 차이가 크지 않게 하기 위해 조건 추가
            if F * 2 > I and F * 2 > J:
                ans = "{F} `+` {E} sqrt {{ {C} }}".format(C=C, E=E, F=F)
                ans_float = F + (E * math.sqrt(C))

                answers = []
                for i in [F, I, J]:
                    for j in [E, G, H]:
                        # 정답은 제외하고 보기 후보 리스트 생성
                        if i != F and j != E:
                            sign = check_sign(j)
                            real_float = i + (j * math.sqrt(C))

                            # 보기 후보군에 음수 제거
                            if real_float > 0:
                                answers.append(["{i} {sign} {j} sqrt {{ {C} }}".format(i=i, j=abs(j), C=C, sign=sign), real_float])

                if len(answers) >= 4:
                    # 후보군에서 4개만 추출 후 정답 추가, 오름차순 정렬 조건이 없어서 랜덤으로 섞었음
                    answers = random.sample(answers, 4)
                    answers.append([ans, ans_float])
                    random.shuffle(answers)

                    # 실제 값 제거
                    answers = [a[0] for a in answers]

                    a1, a2, a3, a4, a5 = answers
                    ans_num = multiple_choice_nums[answers.index(ans)]

                    flag = False

        # 루트 밖 자연수가 1인 경우 생략하는 것 반영
        if B == 1:
            B = ''

    stem = stem.format(A=A, B=B, C=C, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(A=A, B=B, C=C, D=D, E=E, F=F, K=K)

    return stem, answer, comment


# 3-1-2-98
def factorization312_Stem_093():
    stem = '$$수식$$x `-` {{1}} over {{x}} `=` {A}$$/수식$$일 때, $$수식$$x ^{{4}} `-` {{1}} over {{x ^{{4}} }}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans}\n"
    comment = "(해설)\n" \
              "$$수식$$x ^{{2}} `+` {{1}} over {{x ^{{2}} }} `=` " \
              " ( x `-` {{1}} over {{x}}  ) ^{{2}} `+` 2 `=` {_A} ^{{2}} `+` 2 `=` {B}$$/수식$$\n" \
              "$$수식$$x ^{{4}} `+` {{1}} over {{x ^{{4}} }} `=` " \
              " ( x ^{{2}} `-` {{1}} over {{x ^{{2}} }}  ) ^{{2}} `+` 2 `=` {B} ^{{2}} `+` 2 `=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-5, 5))

        # A가 음수인 경우 괄호 추가
        if A < 0:
            _A = " ( {A}  )".format(A=A)
        else:
            _A = A

        if A != 0:
            B = (A * A) + 2
            Z = (B * B) + 2


            # 보기 후보군 생성
            n = np.random.choice(range(1, 4))
            tmp = random.randint(0, 4)
            nums = [Z - (4 * n), Z - (3 * n), Z - (2 * n), Z - n, Z, Z + n, Z + (2 * n), Z + (3 * n), Z + (4 * n)]
            nums = nums[tmp:tmp + 5]

            ans = multiple_choice_nums[nums.index(Z)]
            a1, a2, a3, a4, a5 = nums

            if abs(min(nums)) < 100 and max(nums) < 100 :
                flag = False

    stem = stem.format(A=A, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans=ans)
    comment = comment.format(A=A, _A=_A, B=B, Z=Z)

    return stem, answer, comment


# 3-1-2-99
def factorization312_Stem_094():
    stem = '$$수식$$x ^{{2}} {A_sign} {A}x `+` 1 `=` 0$$/수식$$일 때, $$수식$$x `-` {{1}} over {{x}}$$/수식$$의 값은?\n' \
           '① $$수식$${a1}$$/수식$$\n' \
           '② $$수식$${a2}$$/수식$$\n' \
           '③ $$수식$${a3}$$/수식$$\n' \
           '④ $$수식$${a4}$$/수식$$\n' \
           '⑤ $$수식$${a5}$$/수식$$\n'
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x != 0$$/수식$$이므로 $$수식$$x ^{{2}} {A_sign} {A}x `+` 1 `=` 0$$/수식$$의 양변을 $$수식$$x$$/수식$$로 나누면\n" \
              "$$수식$$x {A_sign} {A} `+` {{1}} over {{x}} `=` 0$$/수식$$    $$수식$$THEREFORE ``x `+` {{1}} over {{x}} `=` {B}$$/수식$$\n" \
              "따라서 $$수식$$ ( x `-` {{1}} over {{x}}  ) ^{{2}} `=`  ( x `+` {{1}} over {{x}}  ) ^{{2}} `-` 4 `=` {_B} ^{{2}} `-` 4 `=` {Z}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$$x `-` {{1}} over {{x}} `=` {ans}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-9, 10))
        A_sign = check_sign(A)
        B = -A

        # B가 음수인 경우 추가
        if B < 0:
            _B = " ( {B}  )".format(B=B)
        else:
            _B = B

        if A not in [-2, -1, 0, 1, 2]:
            Z = (A * A) - 4

            # 정답 생성
            Z_s, Z_p = sqrt_pow(Z)
            if Z_s == 1:
                ans = "+- `sqrt {{ {0} }}".format(Z_p)
            elif Z_p == 1:
                ans = "+- `{0}".format(Z_s)
            else:
                ans = "+- `{0} sqrt {{ {1} }}".format(Z_s, Z_p)

            flag = False

            # 정답 후보군 생성
            n = np.random.choice(range(1, 4))
            nums = []
            for i in range(1, 7):
                s, p = sqrt_pow(Z + (i * n))
                if s == 1:
                    nums.append("+- `sqrt {{ {0} }}".format(p))
                elif p == 1:
                    nums.append("+- `{0}".format(s))
                else:
                    nums.append("+- `{0} sqrt {{ {1} }}".format(s, p))

            # 보기 만들고 랜덤 루프 (무작위 추출 배치)
            nums = random.sample(nums, 4)
            nums.append(ans)
            random.shuffle(nums)

            ans_num = multiple_choice_nums[nums.index(ans)]
            a1, a2, a3, a4, a5 = nums

    stem = stem.format(A=abs(A), A_sign=A_sign, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(A=abs(A), A_sign=A_sign, B=B, _B=_B, Z=Z, ans=ans)

    return stem, answer, comment


# 3-1-2-102
def factorization312_Stem_095():
    stem = "$$수식$$x`=` {{ sqrt {{ {A} }} `-` sqrt {{ {B} }} }} over {{sqrt {{ {A} }} `+` sqrt {{ {B} }} }}$$/수식$$일 때, " \
           "$$수식$$x ^{{2}} {F_sign} {F}x `+` {X}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x ` &amp; =` {{ sqrt {{ {A} }} `-` sqrt {{ {B} }} }} over {{sqrt {{ {A} }} `+` sqrt {{ {B} }} }}" \
              " `=` {{  ( sqrt {{ {A} }} `-` sqrt {{ {B} }}  ) ^{{2}} }} over {{  ( sqrt {{ {A} }} `+` sqrt {{ {B} }}  )  ( sqrt {{ {A} }} `-` sqrt {{ {B} }}  ) }} #" \
              "&amp; =`  ( sqrt {{ {A} }} `-` sqrt {{ {B} }}  ) ^{{2}} `=` {C} `-` 2 sqrt {{ {D} }}$$/수식$$\n" \
              "$$수식$$x `=` {C} `-` 2 sqrt {{ {D} }}$$/수식$$이므로 $$수식$$ ( x {I_sign} {I}  ) ^{{2}} `=` {E}$$/수식$$\n" \
              "$$수식$$x ^{{2}} {F_sign} {F}x `+` {G} `=` {E}$$/수식$$,    $$수식$$x ^{{2}} {F_sign} {F}x `=` {H}$$/수식$$\n" \
              "$$수식$$THEREFORE`` x ^{{2}} {F_sign} {F}x `+` {X} `=` {H} `+` {X} `=` {Z}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice([3, 5, 7, 11])
        X = np.random.choice(range(1, 10))

        B = A - 1
        C = A + B
        D = A * B
        I = -1 * C
        E = 4 * D
        F = 2 * I
        G = I * I
        H = E - G
        Z = H + X

        I_sign = check_sign(I)
        F_sign = check_sign(F)

        flag = False

    stem = stem.format(A=A, B=B, F=abs(F), X=X, F_sign=F_sign)
    answer = answer.format(ans=Z)
    comment = comment.format(A=A, B=B, C=C, D=D, E=E, F=abs(F), G=G, H=H, I=abs(I), X=X, Z=Z, I_sign=I_sign, F_sign=F_sign)

    return stem, answer, comment


# 3-1-2-103
def factorization312_Stem_096():
    stem = '$$수식$$x `-` y `=` {A}$$/수식$$일 때, 다음 등식을 만족시키는 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$의 값을 구하면?\n' \
           '$$수식$$ ( x `+` y  )  ( x ^{{2}} `+` y ^{{2}}  )  ( x ^{{4}} `+` y ^{{4}}  ) `=` ' \
           'a  ( x ^{{b}} `-` y ^{{b}}  )$$/수식$$\n' \
           '① {a1}\n' \
           '② {a2}\n' \
           '③ {a3}\n' \
           '④ {a4}\n' \
           '⑤ {a5}\n'
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x `-` y `=` {A}$$/수식$$이므로\n" \
              "(좌변)\n" \
              "$$수식$$=` {{1}} over {{ {A} }} ` TIMES `{A}` TIMES `  ( x `+` y  )  ( x ^{{2}} `+` y ^{{2}}  )  ( x ^{{4}} `+` y ^{{4}}  )$$/수식$$\n" \
              "$$수식$$=` {{1}} over {{ {A} }} ` TIMES `  ( x `-` y  ) `TIMES`  ( x `+` y  )  ( x ^{{2}} `+` y ^{{2}}  )  ( x ^{{4}} `+` y ^{{4}}  )$$/수식$$\n" \
              "$$수식$$=` {{1}} over {{ {A} }} ` TIMES `  ( x ^{{2}} `-` y ^{{2}}  )  ( x ^{{2}} `+` y ^{{2}}  )  ( x ^{{4}} `+` y ^{{4}}  )$$/수식$$\n" \
              "$$수식$$=` {{1}} over {{ {A} }}  ( x ^{{4}} `-` y ^{{4}}  )  ( x ^{{4}} `+` y ^{{4}}  )$$/수식$$\n" \
              "$$수식$$=` {{1}} over {{ {A} }}  ( x ^{{8}} `-` y ^{{8}}  )$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(2, 10))

        # 보기 생성
        a_list = ['1', '{{1}} over {{ {A} }}'.format(A=A), '{{1}} over {{ {0} }}'.format(A*A)]
        b_list = ['4', '8', '16']

        answers = list(product(a_list, b_list))
        for i, (a, b) in enumerate(answers):
            answers[i] = "$$수식$$a `=` {0}$$/수식$$, $$수식$$b `=` {1}$$/수식$$".format(a, b)
        answers = random.sample(answers, 5)

        # 보기 수식 추가
        if "$$수식$$a `=` {{1}} over {{ {A} }}$$/수식$$, $$수식$$b `=` 8$$/수식$$".format(A=A) not in answers:
            answers = answers[:4]
            answers.append("$$수식$$a `=` {{1}} over {{ {A} }}$$/수식$$, $$수식$$b `=` 8$$/수식$$".format(A=A))
            random.shuffle(answers)

        a1, a2, a3, a4, a5 = answers
        ans_num = multiple_choice_nums[answers.index("$$수식$$a `=` {{1}} over {{ {A} }}$$/수식$$, $$수식$$b `=` 8$$/수식$$".format(A=A))]

        flag = False

    stem = stem.format(A=A, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(A=A)

    return stem, answer, comment


# 3-1-2-104
def factorization312_Stem_097():
    stem = "$$수식$$x ^{{2}} `+` {{1}} over {{x ^{{2}}}} `=` {K}$$/수식$$일 때, $$수식$$x `+` {{1}} over {{x}}$$/수식$$의 값을 구하시오. (단, $$수식$$x `&gt;` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x ^{{2}} `+` {{1}} over {{x ^{{2}}}} `=`  ( x `+` {{1}} over {{x}}  ) ^ {{2}} `-` 2$$/수식$$이므로\n" \
              "$$수식$${K} `=`  ( x `+` {{1}} over {{x}}  ) ^ {{2}} `-` 2$$/수식$$\n" \
              "$$수식$$ ( x `+` {{1}} over {{x}}  ) ^ {{2}} `=` {J}$$/수식$$\n" \
              "그런데 $$수식$$x &gt; 0$$/수식$$이므로 $$수식$$x `+` {{1}} over {{x}} `&gt;` 0$$/수식$$\n" \
              "따라서 $$수식$$x `+` {{1}} over {{x}} `=` {I}$$/수식$$\n\n"

    flag = True
    while flag:
        K = np.random.choice([2, 7, 14, 23, 34, 47, 62])
        J = K + 2
        I = int(math.sqrt(J))

        flag = False

    stem = stem.format(K=K)
    answer = answer.format(ans=I)
    comment = comment.format(K=K, J=J, I=I)

    return stem, answer, comment


# 3-1-2-105
def factorization312_Stem_098():
    stem = "$$수식$$x `+` {{1}} over {{x}} `=` {K} sqrt {{ {Z} }}$$/수식$$일 때, $$수식$$x `-` {{1}} over {{x}}$$/수식$$의 값을 구하시오. (단, $$수식$$0 `&lt;` x `&lt;` 1$$/수식$$)\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$ ( x `-` {{1}} over {{x}}  ) ^{{2}}$$/수식$$\n" \
              "$$수식$$=`  ( x `+` {{1}} over {{x}}  ) ^ {{2}} `-` 4$$/수식$$\n" \
              "$$수식$$=` {I} `-` 4 `=` {J}$$/수식$$\n" \
              "그런데 $$수식$$0 `&lt;` x `&lt;` 1$$/수식$$이므로 $$수식$$x `-` {{1}} over {{x}} `&lt;` 0$$/수식$$\n" \
              "따라서 $$수식$$x `-` {{1}} over {{x}} `=` {L}$$/수식$$\n\n"

    flag = True
    while flag:
        K = np.random.choice(range(2, 10))
        Z = np.random.choice([2, 3, 5, 6, 7])
        I = K * K * Z
        J = I - 4
        L = -1 * int(math.sqrt(J))

        # 원본문항 참고하여 정수만 정답으로 간주
        if int(math.sqrt(J)) == math.sqrt(J):
            flag = False

    stem = stem.format(K=K, Z=Z)
    answer = answer.format(ans=L)
    comment = comment.format(K=K, J=J, I=I, L=L)

    return stem, answer, comment


# 3-1-2-106
def factorization312_Stem_099():
    stem = "$$수식$$x ^{{2}} `+` {M}x `+` 1 `=` 0$$/수식$$일 때, $$수식$$x ^{{2}} `+` {Z} `+` {{1}} over {{x ^{{2}} }}$$/수식$$의 값을 구하시오. (단, $$수식$$x `!=` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x `!=` 0$$/수식$$이므로 $$수식$$x ^{{2}} `+` {M}x `+` 1 `=` 0$$/수식$$의 양변을 $$수식$$x$$/수식$$로 나누면\n" \
              "$$수식$$x `+` {M} `+` {{1}} over {{x}} `=` 0$$/수식$$ 이므로 $$수식$$x `+` {{1}} over {{x}} `=` {N}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$x ^{{2}} `+` {Z} `+` {{1}} over {{x ^{{2}} }} `&amp; =`  ( x `+` {{1}} over {{x}}  ) ^ {{2}} `-` 2 `+` {Z} #" \
              "&amp; =` {O} `-` 2 `+` {Z} `=` {P}$$/수식$$\n\n"

    flag = True
    while flag:
        M, Z = np.random.choice(range(2, 10), 2)
        N = -1 * M
        O = N * N
        P = O + Z - 2

        if P > 0:
            flag = False

    stem = stem.format(M=M, Z=Z)
    answer = answer.format(ans=P)
    comment = comment.format(N=N, M=M, Z=Z, O=O, P=P)

    return stem, answer, comment


# 3-1-2-107
def factorization312_Stem_100():
    stem = "$$수식$$x ^{{2}} `+` {M}x `-` 1 `=` 0$$/수식$$일 때, $$수식$$x ^{{2}} `+` x `-` {{1}} over {{x}} `+` {{1}} over {{x ^{{2}} }}$$/수식$$의 값을 구하시오. (단, $$수식$$x `!=` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x `!=` 0$$/수식$$이므로 $$수식$$x ^{{2}} `+` {M}x `-` 1 `=` 0$$/수식$$의 양변을 $$수식$$x$$/수식$$로 나누면\n" \
              "$$수식$$x `+` {M} `-` {{1}} over {{x}} `=` 0$$/수식$$ 이므로 $$수식$$x `-` {{1}} over {{x}} `=` {N}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$x ^{{2}} `+` x `-` {{1}} over {{x}} `+` {{1}} over {{x ^{{2}} }}$$/수식$$\n" \
              "$$수식$$=`  ( x ^{{2}} `+` {{1}} over {{x ^{{2}} }}  ) `+`  ( x `-` {{1}} over {{x}}  )$$/수식$$\n" \
              "$$수식$$=`  ( x `-` {{1}} over {{x}}  ) ^ {{2}} `+` 2 `+`  ( x `-` {{1}} over {{x}}  )$$/수식$$\n" \
              "$$수식$$=` {O} `+` 2 {N_sign} {N}$$/수식$$\n" \
              "$$수식$$=` {P}$$/수식$$\n\n"

    flag = True
    while flag:
        M = np.random.choice(range(2, 10))
        N = -1 * M
        O = N * N
        P = O + 2 + N

        N_sign = check_sign(N)

        flag = False

    stem = stem.format(M=M)
    answer = answer.format(ans=P)
    comment = comment.format(N=abs(N), N_sign=N_sign, M=M, O=O, P=P)

    return stem, answer, comment


# 3-1-2-108
def factorization312_Stem_101():
    stem = "$$수식$$a `=` {{1}} over {{ {M} `+` sqrt {{ {N} }} }}$$/수식$$, $$수식$$b `=` {{1}} over {{ {M} `-` sqrt {{ {N} }} }}$$/수식$$일 때, " \
           "$$수식$$a ^{{2}} `+` b ^{{2}} `+` {Z}ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$a `=` {{1}} over {{ {M} `+` sqrt {{ {N} }} }} `=` {{ {M} `-` sqrt {{ {N} }} }} over {{  ( {M} `+` sqrt {{ {N} }}  )  ( {M} `-` sqrt {{ {N} }}  ) }} `=` {OP}$$/수식$$\n" \
              "$$수식$$b `=` {{1}} over {{ {M} `-` sqrt {{ {N} }} }} `=` {{ {M} `+` sqrt {{ {N} }} }} over {{  ( {M} `-` sqrt {{ {N} }}  )  ( {M} `+` sqrt {{ {N} }}  ) }} `=` {QP}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$a `+` b `=` {OP} `+` {QP} `=` {RP}$$/수식$$\n" \
              "$$수식$$ab `=` {ST}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$$a ^{{2}} `+` b ^{{2}} `+` {Z}ab$$/수식$$\n" \
              "$$수식$$=`  ( a `+` b  ) ^ {{2}} `+` {Y}ab$$/수식$$\n" \
              "$$수식$$=` {UT} {VT_sign} {VT}$$/수식$$\n" \
              "$$수식$$=` {WT}$$/수식$$\n\n"

    flag = True
    while flag:
        M, N = np.random.choice(range(2, 10), 2, replace=False)
        Z = np.random.choice(range(3, 10))
        Y = Z - 2

        O = "{0} `-` sqrt {{ {1} }}".format(M, N)
        Q = "{0} `+` sqrt {{ {1} }}".format(M, N)
        P = (M * M) - N

        if P != 0:
            # 분모(P)가 +-1인 경우 분모 표시 없앴음
            # OP = {O} over {P}, QP = {Q} over {P}
            if P == 1:
                OP = O
                QP = Q
            elif P == -1:
                OP = "-{0} `+` sqrt {{ {1} }}".format(M, N)
                QP = "-{0} `-` sqrt {{ {1} }}".format(M, N)
            else:
                OP = "{{ {0} `-` sqrt {{ {1} }} }} over {{ {2} }}".format(M, N, P)
                QP = "{{ {0} `+` sqrt {{ {1} }} }} over {{ {2} }}".format(M, N, P)

            # RP = {R} over {P}
            R = 2 * M
            RP = reduction(R, P)

            # ST = {S} over {T}
            S = (M * M) - N
            T = P * P
            ST = reduction(S, T)

            U = 2 * 2 * M * M
            V = Y * ( (M * M) - N)

            # 분모 T가 1인 경우 분모 표시 없앴음 (T는 P^2여서 무조건 양수)
            if T == 1:
                UT = U
                VT = abs(V)
                VT_sign = check_sign(V)
            else:
                # UT = {U} over {T}
                UT = "{{ {U} }} over {{ {T} }}".format(U=U, T=T)

                # UT가 음수인 경우 부호 바깥으로 빼기 (- 기호가 1개, 3개면 음수)
                if UT.count('-') % 2 == 1:
                    UT = UT.replace("-", "")
                    UT = "-" + UT

                # VT = {V} over {T}
                VT = "{{ {V} }} over {{ {T} }}".format(V=V, T=T)

                # VT 부호 지정 (- 기호가 1개, 3개면 음수)
                if VT.count('-') % 2 == 1:
                    VT_sign = '`-`'
                    VT = VT.replace("-", "")
                else:
                    VT_sign = '`+`'

            W = (4 * M * M) + (Y * M * M) - (Y * N)

            # 정답 범위 지정
            if abs(W) < 100 and abs(T) < 100 and W != 0:
                # WT = {W} over {T}
                WT = reduction(W, T)

                flag = False

                # {Y}ab에서 Y == 1인 경우 1 생략
                if Y == 1:
                    Y = ''

    stem = stem.format(M=M, N=N, Z=Z)
    answer = answer.format(ans=WT)
    comment = comment.format(M=M, N=N, Z=Z, OP=OP, QP=QP, RP=RP, ST=ST, Y=Y, UT=UT, VT=VT, VT_sign=VT_sign, T=T, WT=WT)

    return stem, answer, comment


# 3-1-2-114
def factorization312_Stem_102():
    stem = "{t1}{j1}는 $$수식$${exp_1}$$/수식$${j2} 전개하는 데 상수항 $$수식$${S}$$/수식$${j2} " \
           "$$수식$$A$$/수식$$로 잘못 보아서 $$수식$${exp_2}$$/수식$$로 전개하였고, " \
           "{t2}{j3}는 $$수식$${exp_6}$$/수식$${j4} 전개하는 데 $$수식$$x$$/수식$$의 계수 $$수식$${H}$$/수식$${j5} " \
           "$$수식$$C$$/수식$$로 잘못 보아서 $$수식$${exp_7}$$/수식$${j6}로 전개하였다. " \
           "이때 상수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$, $$수식$$C$$/수식$$에 대하여 $$수식$$A `+` B `+` C$$/수식$$의 값은?\n" \
           "① $$수식$${AA}$$/수식$$\n" \
           "② $$수식$${BB}$$/수식$$\n" \
           "③ $$수식$${CC}$$/수식$$\n" \
           "④ $$수식$${DD}$$/수식$$\n" \
           "⑤ $$수식$${EE}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1a} `=` {exp_3}$$/수식$$이므로\n" \
              "$$수식$${exp_4}$$/수식$$, $$수식$${exp_5}$$/수식$$\n" \
              "즉, $$수식$$A `=` {X}$$/수식$$, $$수식$$B `=` {Y}$$/수식$$\n" \
              "$$수식$${exp_6a} `=` {exp_8}$$/수식$$이므로\n" \
              "$$수식$${exp_9}$$/수식$$에서 $$수식$$C `=` {Z}$$/수식$$\n" \
              "따라서 $$수식$${exp_10}$$/수식$$\n\n"

    while True :
        P, Q, R, S, U, H, I, J, K, M = np.random.choice(np.arange(1, 10), 10) * np.reshape(np.random.choice([-1, 1], 10), -1)

        T, N, W, F = [P, I, R, I] * np.reshape([R, K, Q, J], -1)
        X = (U - W) // P
        Y = -Q * X
        Z = (M - F) // K
        D = X + Y + Z

        if (U - W) % P == 0 and (M - F) % K == 0 and abs(X) < 200 and abs(Y) < 200 and abs(Z) < 200 and abs(D) < 200 :
            break

    t1, t2 = np.random.choice(person_nam + person_yeo, 2)
    j1= '' if josa_check(t1[-1]) == ' ' else '이'
    j2 = '을' if abs(S) % 10 in have_jongsung_num else '를'
    j3 = '' if josa_check(t2[-1]) == ' ' else '이'
    j4 = '을' if abs(K) % 10 in have_jongsung_num else '를'
    j5 = '을' if abs(H) % 10 in have_jongsung_num else '를'
    j6 = '으' if abs(N) % 10 in have_jongsung_num else ''


    exp_1 = ' ( %sx %s  )  ( %sx %s  )' \
            '' % (int_str_converter(P, True, True), int_str_converter(Q, False, False),
                  int_str_converter(R, True, True), int_str_converter(S, False, False))

    exp_1a = ' ( %sx %s  )  ( %sx `+` A  )' \
            '' % (int_str_converter(P, True, True), int_str_converter(Q, False, False),
                  int_str_converter(R, True, True))
    exp_2 = '%sx ^2 %sx `-` B' \
            '' % (int_str_converter(T, True, True), int_str_converter(U, False, True))

    exp_3 = '%sx ^2 `+`  ( %s %sA  ) x %sA' \
            '' % (int_str_converter(T, True, True), int_str_converter(W, True, False),
                  int_str_converter(P, False, True), int_str_converter(Q, False, True))
    exp_4 = '%s %sA `=` %d' % (int_str_converter(W, True, False), int_str_converter(P, False, True), U)
    exp_5 = '%sA `=` -B' % (int_str_converter(Q, True, True))


    exp_6 = ' ( %sx %s  )  ( %sx %s  )' \
            '' % (int_str_converter(H, True, True), int_str_converter(I, False, False),
                  int_str_converter(J, True, True), int_str_converter(K, False, False))
    exp_6a = ' ( Cx %s  )  ( %sx %s  )' \
            '' % (int_str_converter(I, False, False),
                  int_str_converter(J, True, True), int_str_converter(K, False, False))
    exp_7 = '%sCx^2 %sx %s' % (int_str_converter(J, True, True), int_str_converter(M, False, True), int_str_converter(N, False, False))
    exp_8 = '%sCx^2  ( %sC %s  )x %s' \
            '' % (int_str_converter(J, True, True), int_str_converter(K, True, True),
                  int_str_converter(F, False, False), int_str_converter(N, False, False))
    exp_9 = '%sC %s `=` %s' % (int_str_converter(K, True, True), int_str_converter(F, False, False), int_str_converter(M, True, False))
    exp_10 = 'A `+` B `+` C `=` %s %s %s `=` %d' \
             '' % (int_str_converter(X, True, False), int_str_converter(Y, False, False), int_str_converter(Z, False, False), D)


    idx = np.random.choice(np.arange(0, 5), 1)[0]
    answers = [D + i for i in range(-8, 10, 2)]
    answers = answers[idx:idx+5]
    AA, BB, CC, DD, EE = answers
    cor_num = multiple_choice_nums.get(answers.index(D))

    stem = stem.format(exp_1=exp_1, S=S, exp_2=exp_2, exp_6=exp_6, H=H, exp_7=exp_7, AA=AA, BB=BB, CC=CC, DD=DD, EE=EE, t1=t1, t2=t2, j1=j1, j2=j2, j3=j3, j4=j4, j5=j5, j6=j6)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1a=exp_1a, exp_3=exp_3, exp_4=exp_4, exp_5=exp_5, exp_6a=exp_6a, exp_7=exp_7, exp_8=exp_8, exp_9=exp_9, exp_10=exp_10, X=X, Y=Y, Z=Z)


    return stem, answer, comment


# 3-1-2-116
def factorization312_Stem_103():
    stem = "다음 중 인수분해를 바르게 한 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "{c1}\n" \
              "{c2}\n" \
              "{c3}\n" \
              "{c4}\n\n"

    A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    exp_1 = '%sx^2y %sxy^2 `=` %sxy  (x %sy  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(A, True, True), int_str_converter(B, False, True))
    exp_2 = '%sx^2y %sxy^2 `=` xy  (%sx %sy  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(A, True, True), int_str_converter(B, False, True))

    while True :
        C, D = np.random.randint(1, 10, 2)
        E, F = [C, D] * np.reshape([C, D], -1)
        if is_gcd(C, D) :
            break
    exp_3 = '%sx^2 %sx `=`  ( %sx `+` %d  )  ( %sx `-` %d  )' \
            '' % (int_str_converter(E, True, True), int_str_converter(F, False, True),
                  int_str_converter(C, True, True), D, int_str_converter(C, True, True), D)
    exp_4 = '%sx^2 %sx `=` x  ( %sx %s  )' \
            '' % (int_str_converter(E, True, True), int_str_converter(F, False, True),
                  int_str_converter(E, True, True), int_str_converter(F, False, False))

    J, L = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([1, -1], 2), -1)
    G = J + L
    H, K, I = [J, -1, -1] * np.reshape([L, J, L], -1)
    exp_5 = 'x^2 %sx %s `=`  (x %s  )  ( x %s  )' \
            '' % (int_str_converter(G, False, True), int_str_converter(H, False, False),
                  int_str_converter(K, False, False), int_str_converter(I, False, False))
    exp_6 = 'x^2 %sx %s `=`  (x %s  )  ( x %s  )' \
            '' % (int_str_converter(G, False, True), int_str_converter(H, False, False),
                  int_str_converter(J, False, False), int_str_converter(L, False, False))

    N, M = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    exp_7 = ' ( %sx %s  )y `-` x  ( %sx %s  ) `=`  ( %sx %s  )  ( x `-` y  )' \
            '' % (int_str_converter(N, True, True), int_str_converter(M, False, True),
                  int_str_converter(N, True, True), int_str_converter(M, False, True),
                  int_str_converter(N, True, True), int_str_converter(M, False, True),)
    exp_8 = ' ( %sx %s  )y `-` x  ( %sx %s  ) `=`  ( %sx %s  )  ( y `-` x  )' \
            '' % (int_str_converter(N, True, True), int_str_converter(M, False, True),
                  int_str_converter(N, True, True), int_str_converter(M, False, True),
                  int_str_converter(N, True, True), int_str_converter(M, False, True),)

    while True :
        O, P, Q = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        Q = abs(Q)
        if get_gcd(get_gcd(abs(O), abs(P)), Q) == 1 :
            break

    exp_9 = '%sx^2y %sxy^2 %sxy `=` xy  ( %sx %sy %s  )' \
            '' % (int_str_converter(Q, True, True), int_str_converter(O, False, True),
                  int_str_converter(P, False, True),
                  int_str_converter(Q, True, True), int_str_converter(O, False, True),
                  int_str_converter(P, False, False))

    bogi_pair = {0 : [exp_1, exp_2], 1 : [exp_3, exp_4], 2 : [exp_5, exp_6], 3 : [exp_7, exp_8], 4 : [exp_9, '']}
    keys = list(bogi_pair.keys())
    np.random.shuffle(keys)
    answers, comments = [], []
    for i, k in enumerate(keys) :
        ans, com = bogi_pair.get(k)
        answers.append(ans)
        if com == '' :
            cor_num = multiple_choice_nums.get(i)
        else :
            comments.append('%s $$수식$$%s$$/수식$$' % (multiple_choice_nums.get(i), com))

    a1, a2, a3, a4, a5 = answers
    c1, c2, c3, c4 = comments

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-117
def factorization312_Stem_104():
    stem = "아래 식에 대한 다음 설명 중 옳지 않은 것은?\n" \
           "$$수식$${left_exp} {mid_exp} {right_exp}$$/수식$$\n" \
           "① {a1}\n" \
           "② {a2}\n" \
           "③ {a3}\n" \
           "④ {a4}\n" \
           "⑤ {a5}\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "{c1}\n\n"


    C, D, E = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
    A, B = [C, D] * np.reshape([D, E], -1)
    left_exp = '%sxy^2 %sxy' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    right_exp = '%sxy  ( %sy %s  )' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, True, True), int_str_converter(E, True, True))
    mid_exp = 'rlarrows ^㉠_㉡'

    e1 = '%sxy' % (int_str_converter(C, True, True))
    e2 = '%sxy^2' % (int_str_converter(A, True, True))
    e3 = '%sxy' % (int_str_converter(B, True, True))
    a1 = '$$수식$$%s$$/수식$$는 $$수식$$%s$$/수식$$, $$수식$$%s$$/수식$$의 공통인수이다.' % (e1, e2, e3)

    e4 = '%sx' % (int_str_converter(C, True, True))
    e5 = '%s  ( %sy %s  )' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, True, True), int_str_converter(E, False, False))
    j1 = '은' if abs(E) % 10 in have_jongsung_num else '는'
    a2 = '$$수식$$%s$$/수식$$, $$수식$$y$$/수식$$, $$수식$$%s$$/수식$$%s 모두 $$수식$$%s$$/수식$$의 인수이다.' % (e4, e5, j1, left_exp)
    a3 = '㉠의 과정을 인수분해한다고 한다.'
    a4 = '㉡의 과정을 전개한다고 한다.'
    a5 = '㉡의 과정에서 결합법칙이 이용된다.'

    answers = [a1, a2, a3, a4, a5]
    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(a5))
    a1, a2, a3, a4, a5 = answers
    c1 = '%s : ㉡의 과정에서 분배법칙이 이용된다.' % (cor_num)

    stem = stem.format(left_exp=left_exp, mid_exp=mid_exp, right_exp=right_exp, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1)

    return stem, answer, comment


# 3-1-2-119
def factorization312_Stem_105():
    stem = "다음 중 다항식 $$수식$${exp_1}$$/수식$$의 각 항에 들어 있는 공통인 인수는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "따라서 공통인 인수는 $$수식$$xy$$/수식$$이다.\n\n"

    M, N, O = np.random.choice([1, 2, 3, 5, 7], 3, False)
    Z, Y, U, V = np.random.choice([2, 3, 4], 4)
    P, Q, R, S = [Z, Y, U, V] - np.reshape([1, 1, 1, 1], -1)
    exp_1 = '%sx^%dy %sxy^%d %sx^%dy^%d' \
            '' % (int_str_converter(M, True, True), Z, int_str_converter(N, False, True), Y,
                  int_str_converter(O, False, True), U, V)
    exp_1 = exp_1.replace('^1', '')
    c1 = '%s `=` xy  (%sx^%d %sy^%d %sx^%dy^%d  )' \
         '' % (exp_1, int_str_converter(M, True, True), P, int_str_converter(N, False, True), Q,
               int_str_converter(O, False, True), R, S)
    c1 = c1.replace('^1', '')

    answers = ['x^2', 'y^2', 'xy', 'x^2y', 'xy^2']
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index('xy'))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1)

    return stem, answer, comment


# 3-1-2-120
def factorization312_Stem_106():
    stem = "다음 중 두 다항식 $$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$의 공통인 인수는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "따라서 공통인 인수는 $$수식$${cor_text}$$/수식$$이다.\n\n"

    A, C, D = np.random.choice([1, 3, 5, 7], 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
    B, E = [A, C] * np.reshape([C, D], -1)
    exp_1 = '%sx^2 %sxy' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    exp_2 = '%sxy %sy^2' % (int_str_converter(D, True, True), int_str_converter(E, False, True))
    c1 = '%s `=` %sx  ( x %sy  )' % (exp_1, int_str_converter(A, True, True), int_str_converter(C, False, True))
    c2 = '%s `=` %sy  ( x %sy  )' % (exp_2, int_str_converter(D, True, True), int_str_converter(C, False, True))

    answers = ['x', '%sy' % (int_str_converter(D, True, True)),
               'xy', 'x %sy' % (int_str_converter(C, False, True)),
               '%sxy  ( x %sy  )' % (int_str_converter(D, True, True), int_str_converter(C, False, True))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_text = 'x %sy' % (int_str_converter(C, False, True))
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-121
def factorization312_Stem_107():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "따라서 인수인 것은 $$수식$${cor_text1}$$/수식$$, $$수식$${cor_text2}$$/수식$$이다.\n\n"

    while True :
        A, B, C = np.random.randint(1, 10, 3)
        D = A * B + C
        E = -1 * B
        if is_gcd(A, C) :
            break

    exp_1 = '%s  ( x %s  ) ^ 2 %s  ( x %s  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                  int_str_converter(C, False, True), int_str_converter(B, False, False))

    c1 = ' ( x %s  )  { %s  ( x %s  ) %s  }' \
         '' % (int_str_converter(B, False, False), int_str_converter(A, True, True),
               int_str_converter(B, False, False), int_str_converter(C, False, False))
    cor_text1 = 'x %s' % (int_str_converter(B, False, False))
    cor_text2 = '%sx %s' % (int_str_converter(A, True, True), int_str_converter(D, False, False))
    c2 = ' ( %s  )  ( %s  )' % (cor_text1, cor_text2)

    answers = ['-x %s' % (int_str_converter(E, False, False)),
               'x %s' % (int_str_converter(B, False, False)),
               '%sx %s' % (int_str_converter(A, True, True), int_str_converter(D, False, False)),
               '%sx %s' % (int_str_converter(A, True, True), int_str_converter(B, False, False)),
               'x  (x %s  )' % (int_str_converter(B, False, False))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = sorted([multiple_choice_nums.get(answers.index(cor_text1)), multiple_choice_nums.get(answers.index(cor_text2))])
    cor_num = ', '.join(cor_num)

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text1=cor_text1, cor_text2=cor_text2)

    return stem, answer, comment


# 3-1-2-122
def factorization312_Stem_108():
    stem = "$$수식$${exp_1}$$/수식$$를 인수분해하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        C, D = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        A, B = [-1, -1] * np.reshape([D, C] ,-1)
        if is_gcd(abs(C), abs(D)) :
            break

    exp_1 = '-a  ( %sx %s  ) `+` b  ( %s %sx  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                  int_str_converter(C, True, False), int_str_converter(D, False, True))
    c1 = 'a  ( %s %sx  ) `+` b  ( %s %sx  )' \
         '' % (int_str_converter(C, True, False), int_str_converter(D, False, True),
               int_str_converter(C, True, False), int_str_converter(D, False, True))
    c2 = ' ( a `+` b  )  ( %s %sx  )' \
         '' % (int_str_converter(C, True, False), int_str_converter(D, False, True))

    answers = [' ( a `+` b  )  ( %sx %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False)),
               ' ( a `+` b  )  ( %s %sx  )'
               '' % (int_str_converter(C, True, False), int_str_converter(D, False, True)),
               ' ( a `-` b  )  ( %sx %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False)),
               ' ( a `-` b  )  ( %s %sx  )'
               '' % (int_str_converter(C, True, False), int_str_converter(D, False, True)),
               ' ( b `-` a  )  ( 1 `-` x  )']

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(c2))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-123
def factorization312_Stem_109():
    stem = "다음 중 두 다항식 $$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$의 공통 인수는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "$$수식$${exp_2} `=` {c2}$$/수식$$\n\n"

    while True :
        A, B, E = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        A, B = [abs(A), B] if A < 0 and B < 0 else [A, B]
        C, D, F = [E, E, -1] * np.reshape([A, B, B], -1)
        if is_gcd(abs(A), abs(B)) :
            break

    exp_1 = '%sa^2b %sab^2' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    exp_2 = '%sa %sb' % (int_str_converter(C, True, True), int_str_converter(D, False, True))
    cor_text = ' ( %sa %sb  )' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    c1 = 'ab %s' % (cor_text)
    c2 = '%s %s' % (int_str_converter(E, True, True), cor_text)

    answers = ['ab', 'a ^{2} b', cor_text,
               ' ( %sa %sb  )' % (int_str_converter(A, True, True), int_str_converter(F, False, True)),
               ' ( %sa^2 %sb^2  )' % (int_str_converter(A, True, True), int_str_converter(B, False, True))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-124
def factorization312_Stem_110():
    stem = "$$수식$${exp_1}$$/수식$$를 인수분해하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        A, B, G, H = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        C = A + G
        D = B + H
        E, F = [-1, -1] * np.reshape([B, D], -1)
        if abs(B) != abs(H) :
            break

    exp_1 = ' ( %sx %sy  ) ^ {2} `+`  ( %sx %sy  )  ( %sx %sy  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(G, True, True), int_str_converter(H, False, True))
    c1 = ' ( %sx %sy  ) ^ {2} `+`  {  ( %sx %sy  ) `+`  ( %sx %sy  )  }' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(G, True, True), int_str_converter(H, False, True))
    c2 = ' ( %sx %sy  )  ( %sx %sy  )' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(C, True, True), int_str_converter(D, False, True))

    answers = [c2,
               ' ( %sx %sy  )  ( %sx %sy  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(E, False, True),
                     int_str_converter(C, True, True), int_str_converter(F, False, True)),
               ' ( %sx %sy  )  ( %sx %sy  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                     int_str_converter(C, True, True), int_str_converter(F, False, True)),
               ' ( %sx %sy  )  ( %sx %sy `+` 1  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                     int_str_converter(G, True, True), int_str_converter(H, False, True)),
               ' ( %sx %sy  )  ( %sx %sy `+` 1  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(E, False, True),
                     int_str_converter(G, True, True), int_str_converter(H, False, True))]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(c2))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-125
def factorization312_Stem_111():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "따라서 인수인 것은 $$수식$${cor_text1}$$/수식$$, $$수식$${cor_text2}$$/수식$$이다.\n\n"

    A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    C = A * B
    exp_1 = 'ab %sa %sb %s' % (int_str_converter(A, False, True), int_str_converter(B, False, True),
                               int_str_converter(C, False, False))
    c1 = 'a  ( b %s  ) %s  ( b %s  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(B, False, True), int_str_converter(A, False, False))
    cor_text1 = 'a %s' % (int_str_converter(B, False, False))
    cor_text2 = 'b %s' % (int_str_converter(A, False, False))
    c2 = ' ( %s  )  ( %s  )' % (cor_text1, cor_text2)

    answers = ['a `-` b',
               'a %s' % (int_str_converter(B, False, False)),
               'b %s' % (int_str_converter(A, False, False)),
               '%s `-` a' % (int_str_converter(B, True, False)),
               '%s `-` b' % (int_str_converter(A, True, False))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = sorted([multiple_choice_nums.get(answers.index(cor_text1)), multiple_choice_nums.get(answers.index(cor_text2))])
    cor_num = ', '.join(cor_num)

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text1=cor_text1, cor_text2=cor_text2)

    return stem, answer, comment


# 3-1-2-126
def factorization312_Stem_112():
    stem = "$$수식$${exp_1}$$/수식$${j1} $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 두 일차식의 곱으로 인수분해된다. " \
           "이때 두 일차식의 합을 $$수식$$ax `+` b$$/수식$$로 나타낼 수 있다. " \
           "$$수식$$ab$$/수식$$의 값을 구하시오. (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수이다.)\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "이므로 두 일차식의 합은\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "따라서 $$수식$$a `=` 2$$/수식$$, $$수식$$b `=` {E}$$/수식$$이므로 $$수식$$ab `=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        D = A - C
        E = A + B
        K = 2 * E
        if D != 0 :
            break

    exp_1 = ' ( x %s  )  (x %s  ) %s  ( x %s  )' \
            '' % (int_str_converter(C, False, False), int_str_converter(B, False, False),
                  int_str_converter(D, False, True), int_str_converter(B, False, False))
    c1 = ' ( x %s %s  )  ( x %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
               int_str_converter(B, False, False))
    cor_text1 = 'x %s' % (int_str_converter(A, False, False))
    cor_text2 = 'x %s' % (int_str_converter(B, False, False))
    c2 = ' ( %s  )  ( %s  )' % (cor_text1, cor_text2)
    exp_2 = '%s `+` %s `=` 2x %s' % (cor_text1, cor_text2, int_str_converter(E, False, False))
    cor_text = K
    j1 = '은' if abs(B) % 10 in have_jongsung_num else '는'
    stem = stem.format(exp_1=exp_1, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, cor_text=cor_text, E=E)

    return stem, answer, comment


# 3-1-2-127
def factorization312_Stem_113():
    stem = "$$수식$$x$$/수식$$, $$수식$$y$$/수식$$가 자연수일 때, $$수식$${exp_1}$$/수식$${j1} " \
           "만족시키는 순서쌍 $$수식$$ ( x, ~ y )$$/수식$$의 개수를 구하시오.\n"
    answer = "(답) : $$수식$$1$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {exp_2}$$/수식$$\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$${exp_4}$$/수식$$이므로\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "이때 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$가 자연수이므로\n" \
              "$$수식$${exp_3}$$/수식$$, $$수식$${exp_4}$$/수식$$일 때 $$수식$$x `=` {Z}$$/수식$$, $$수식$$y `=` {Y}$$/수식$$\n" \
              "따라서 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$의 순서쌍 $$수식$$ ( x,~ y )$$/수식$$는 $$수식$${cor_text}$$/수식$$의 $$수식$$1$$/수식$$개이다."

    A, B, C, D = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
    Z, Y = np.random.choice([1, 2, 3, 5, 7], 2)
    I = A * Z + B
    J = Y * C + D
    K, E, F, G, H = [I, A, A, B, B] * np.reshape([J, C, D, C, D], -1)

    exp_1 = '%sx %sy %sxy %s' \
            '' % (int_str_converter(F, True, True), int_str_converter(G, False, True),
                  int_str_converter(E, False, True), int_str_converter(H, False, False))
    c1 = '%sxy %sx %sy %s' \
         '' % (int_str_converter(E, True, True), int_str_converter(F, False, True),
               int_str_converter(G, False, True), int_str_converter(H, False, False))
    c2 = '%sx  ( %sy %s  ) %s  ( %sy %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(C, True, True), int_str_converter(D, False, False),
               int_str_converter(B, False, True), int_str_converter(C, True, True), int_str_converter(D, False, False))
    c3 = ' ( %sx %s  )  ( %sy %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(C, True, True), int_str_converter(D, False, False))
    exp_2 = '%s `=` %d' % (c3, K)
    exp_3 = '%sx %s `=` %d' % (int_str_converter(A, True, True), int_str_converter(B, False, False), I)
    exp_4 = '%sx %s `=` %d' % (int_str_converter(C, True, True), int_str_converter(D, False, False), J)
    cor_text = ' ( %d, ~ %d  )' % (Z, Y)
    j1 = '을' if abs(K) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, j1=j1)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, cor_text=cor_text, Z=Z, Y=Y)

    return stem, answer, comment


# 3-1-2-128
def factorization312_Stem_114():
    stem = "두 다항식 $$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$의 공통인수가 $$수식$${exp_3}$$/수식$$이다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$로 놓으면\n" \
              "$$수식$${c2}$$/수식$$, $$수식$${c3}$$/수식$$에서 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$\n" \
              "$$수식$${exp_2}`$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$로 놓으면\n" \
              "$$수식$${c8}$$/수식$$, $$수식$${c9}$$/수식$$에서\n" \
              "$$수식$${c10}$$/수식$$, $$수식$${c11}$$/수식$$\n" \
              "$$수식$${c12}$$/수식$$\n\n"

    while True :
        A, B, C, D, E, I, G, K, O = np.random.randint(1, 10, 9) * np.reshape(np.random.choice([-1, 1], 9), -1)
        F, J, H = [I, B, B] * np.reshape([A, I, K], -1)
        L = A * K + J
        M = G
        N, P= [D, B] * np.reshape([L, O], -1)
        R = N // (A * M)
        S = B * R
        T = L * E + S * M
        U = M * E
        if N % (A*M) == 0 and is_gcd(L, M) and is_gcd(N, M) and is_gcd(S, E) and is_gcd(T, U) \
                and min([L, M, N, S, E, T, U]) > 0 and max([L, M, N, S, E, T, U]) < 100  :
            break

    exp_1 = '%sx^2 %sax %s' % (int_str_converter(F, True, True), int_str_converter(G, False, True),
                               int_str_converter(H, False, False))
    c1 = ' ( %sx %s  )  ( %sx `+` k  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(I, True, True))
    c2 = '%sk %s `=` %sa' \
         '' % (int_str_converter(A, True, True), int_str_converter(J, False, False), int_str_converter(G, True, True))
    c3 = '%sk `=` %d' % (int_str_converter(B, True, True), H)
    c4 = 'k `=` %d' % (K)
    frac_1 = '{%d} over {%d}' % (L, M) if M != 1 else str(L)
    c5 = 'a `=` %s' % (frac_1)

    exp_2 = '%sx^2 %sax %sb' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                                int_str_converter(E, False, True))


    frac_3 = '{%d} over {%d}' % (N, M) if M != 1 else str(N)
    c6 = '%sx^2 `+` %s x %sb' % (int_str_converter(C, True, True), frac_3, int_str_converter(E, False, True))
    c7 = ' ( %sx %s  )  ( %sx `+` l  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(O, True, True))
    c8 = '%sl %s `=` %s' % (int_str_converter(A, True, True), int_str_converter(P, False, False), frac_3)
    c9 = '%sl `=` %sb' % (int_str_converter(B, True, True), int_str_converter(E, True, True))
    c10 = 'l `=` %d' % (R)
    frac_2 = '{%d} over {%d}' % (S, E) if E != 1 else str(S)
    c11 = 'b `=` %s' % (frac_2)
    cor_text = '{%d} over {%d}' % (T, U) if U != 1 else str(T)
    c12 = 'a `+` b `=` %s `+` %s `=` %s' % (frac_1, frac_2, cor_text)

    exp_3 = '%sx %s' % (int_str_converter(A, True, True), int_str_converter(B, False, False))
    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10, c11=c11, c12=c12)

    return stem, answer, comment


# 3-1-2-129
def factorization312_Stem_115():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n\n"

    while True :
        M, N = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        O = -1 * N
        P = M * M
        Q = N * O
        R = -1 * Q
        S = -1 * 1

        if is_gcd(abs(M), abs(N)) and (M != 1 and N != -1):
            break

    exp_1 = '%sx^2  ( x `-` 1  ) %sx %s' \
            '' % (int_str_converter(P, True, True),
                  int_str_converter(Q, False, True), int_str_converter(R, False, False))
    j1 = '을' if R % 10 in have_jongsung_num else '를'
    c1 = '%sx^2  ( x `-` 1  ) %s  ( x `-` 1  )' \
         '' % (int_str_converter(P, True, True), int_str_converter(Q, False, True))
    c2 = ' ( x `-` 1  )  ( %sx^2 %s  )' \
         '' % (int_str_converter(P, True, True), int_str_converter(Q, False, False))
    c3 = ' ( x `-` 1  )  ( %sx %s  )  ( %sx %s  )' \
         '' % (int_str_converter(M, True, True), int_str_converter(N, False, False),
               int_str_converter(M, True, True), int_str_converter(O, False, False))

    answers = [c3, ' ( x `+` 1  )  ( %sx^2 %s  )'
               '' % (int_str_converter(P, True, True), int_str_converter(S, False, False))]
    temp = ' ( x %s  )  ( %sx %s  )  ( %sx %s  )'
    items = [[1, M, N, M, O], [1, M, N, M, N], [-1, P, 1, M, Q]]
    for [a, b, c, d, e] in items :
        answers.append(temp % (int_str_converter(a, False, False),
                               int_str_converter(b, True, True), int_str_converter(c, False, False),
                               int_str_converter(d, True, True), int_str_converter(e, False, False)))

    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(c3))
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3)

    return stem, answer, comment


# 3-1-2-130
def factorization312_Stem_116():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수가 아닌 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n\n"

    A = np.random.randint(1, 21) * np.random.choice([-1, 1], 1)[0]
    C = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
    B = A * C

    exp_1 = '%sa^2x %sa^3y' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    c1 = '%sa^2  ( x %say  )' % (int_str_converter(A, True, True), int_str_converter(C, False, True))
    cor_text= 'ax %sy' % (int_str_converter(B, False, True))
    answers = [1, cor_text, '%sa^2' % (int_str_converter(A, True, True)),
               '%s  ( x %say  )' % (int_str_converter(A, True, True), int_str_converter(C, False, True)),
               'a^2  ( x %say  )' % (int_str_converter(C, False, True))]
    np.random.shuffle(answers)

    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1)

    return stem, answer, comment


# 3-1-2-131
def factorization312_Stem_117():
    stem = "$$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        A, B, C, D = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        E = A * C
        F = B * C + A * D
        G = B * D
        H = -1 * B
        if is_gcd(abs(A), abs(B)) and is_gcd(abs(C), abs(D)) and A != C and B != D:
            break

    exp_1 = '%sx^2  ( x `-` y  ) %sxy  ( x `-` y  ) %sy^2  ( x `-` y  )' \
            '' % (int_str_converter(E, True, True), int_str_converter(F, False, True),
                  int_str_converter(G, False, True))
    c1 = ' ( x `-` y  )  ( %sx^2 %sxy %sy^2  )' \
         '' % (int_str_converter(E, True, True), int_str_converter(F, False, True), int_str_converter(G, False, True))
    c2 = ' ( x `-` y  )  ( %sx %sy  )  ( %sx %sy  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(C, True, True), int_str_converter(D, False, True))
    answers = ['x `-` y']
    items = [[C, D], [C, B], [A, D], [A, H]]
    for i, item in enumerate(items) :
        answers.append('%sx %sy' % (int_str_converter(item[0], True, True), int_str_converter(item[1], False, True)))

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = [multiple_choice_nums.get(answers.index('x `-` y')),
               multiple_choice_nums.get(answers.index('%sx %sy' % (int_str_converter(C, True, True),
                                                                   int_str_converter(D, False, True))))]
    cor_num = ', '.join(sorted(cor_num))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-132
def factorization312_Stem_118():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수가 아닌 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n\n"

    A, C = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
    B, D = [-1, -1] * np.reshape([A, C], -1)
    E, F = [A, C] * np.reshape([B, D], -1)
    G = F - E
    H, I = [-1, -1] * np.reshape([G, E], -1)

    exp_1 = ' ( x^2 %s  )^2 %s  ( %s - x^2  )' \
            '' % (int_str_converter(E, False, False), int_str_converter(H, False, True),
                  int_str_converter(I, True, False))
    c1 = ' ( x^2 %s  )^2 %s  ( x^2 %s  )' \
         '' % (int_str_converter(E, False, False), int_str_converter(G, False, True),
               int_str_converter(E, False, False))
    c2 = ' ( x^2 %s  )  ( x^2 %s %s  )' \
         '' % (int_str_converter(E, False, False), int_str_converter(E, False, False),
               int_str_converter(G, False, False))
    c3 = ' ( x^2 %s  )  ( x^2 %s  )' \
         '' % (int_str_converter(E, False, False), int_str_converter(F, False, False))
    c4 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(B, False, False),
               int_str_converter(C, False, False), int_str_converter(D, False, False))

    answers = ['x %s' % (int_str_converter(i, False, False)) for i in [C, B, G, A, D]]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index('x %s' % (int_str_converter(G, False,False))))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-133
def factorization312_Stem_119():
    stem = "다음 두 다항식 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$의 공통 인수는?\n" \
           "$$수식$$A `=` {exp_1}$$/수식$$\n" \
           "$$수식$$B `=` {exp_2}$$/수식$$\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$A `&amp;=` {c1}#&amp;=`{c2}$$/수식$$\n" \
              "$$수식$$B `&amp;=` {c3}#&amp;=`{c4}$$/수식$$\n" \
              "따라서 두 다항식의 공통인수는 $$수식$$a `-` b$$/수식$$이다.\n\n"

    Z, Y = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    X = -1 * Z
    exp_1 = '%sa %sb a  ( a `-` b  ) `-` b  ( a `-` b  )' \
            '' % (int_str_converter(Z, True, True), int_str_converter(X, False, True))
    c1 = '%s  (  a `-` b  ) `+` a  ( a `-` b  ) `-` b  ( a `-` b  )' \
         '' % (int_str_converter(Z, True, True))
    c2 = ' ( a `-` b  )  ( a `-` b %s  )' % (int_str_converter(Z, False, False))

    exp_2 = 'a^2  ( a %s  ) `-` b^2  ( a %s  )' \
            '' % (int_str_converter(Y, False, False), int_str_converter(Y, False, False))
    c3 = ' ( a %s  )  ( a^2 `-` b^2  )' % (int_str_converter(Y, False, False))
    c4 = ' ( a %s  )  ( a `-` b  )  ( a `+` b  )' % (int_str_converter(Y, False, False))


    answers = ['a %s' % (int_str_converter(Y, False, False)),
               'a `-` b %s' % (int_str_converter(Z, False, False)),
               'a `+` b %s' % (int_str_converter(X, False, False)),
               'a `+` b', 'a `-` b']
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index('a `-` b'))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-134
def factorization312_Stem_120():
    stem = "아래 식에 대한 다음 설명 중 옳지 않은 것은?\n" \
           "$$수식$${left_exp} {mid_exp} {right_exp}$$/수식$$\n" \
           "① {a1}\n" \
           "② {a2}\n" \
           "③ {a3}\n" \
           "④ {a4}\n" \
           "⑤ {a5}\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "{c1}\n\n"

    A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    D, C = [B, A] * np.reshape([B, A], -1)
    E = 2 * A * B
    left_exp = '%sa^2b^2 %sa^3b %sab^3' \
           '' % (int_str_converter(E, True, True), int_str_converter(C, False, True), int_str_converter(D, False, True))
    right_exp = 'ab  ( %sa %sb  )^2' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    mid_exp = '구현불가'
    cor_text = '$$수식$$a^2b$$/수식$$는 ' \
               '$$수식$$%sa^2b^2$$/수식$$, $$수식$$%sa^3b$$/수식$$, $$수식$$%sab^3$$/수식$$의 공통인수이다.' \
               '' % (int_str_converter(E, True, True), int_str_converter(C, True, True),
                     int_str_converter(D, True, True))

    answers = ['㉠의 과정을 인수분해한다고 한다.', '㉡의 과정을 전개한다고 한다.', '㉡의 과정에서 분배법칙이 이용된다.',
               cor_text,
               '$$수식$$ab$$/수식$$, $$수식$$ ( %sa %sb  )$$/수식$$, '
               '$$수식$$ab  ( %sa %sb  )$$/수식$$는 모두 $$수식$$%sa^2b^2 %sa^3b %sab^3$$/수식$$'
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                     int_str_converter(A, True, True), int_str_converter(B, False, True),
                     int_str_converter(E, True, True), int_str_converter(C, False, True),
                     int_str_converter(D, False, True))]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    c1 = '%s $$수식$$a^2b$$/수식$$는 $$수식$$ab  ( %sa %sb  )$$/수식$$의 인수가 아니다.' \
         '' % (cor_num, int_str_converter(A, True, True), int_str_converter(B, False, True))

    stem = stem.format(left_exp=left_exp, right_exp=right_exp, mid_exp=mid_exp, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1)

    return stem, answer, comment


# 3-1-2-136
def factorization312_Stem_121():
    stem = "다음 식을 인수분해하면?\n" \
           "$$수식$${exp_1}$$/수식$$\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        A, B, C = np.random.randint(2, 10, 3)
        D, G, H, F, E = [A, B, C, 2, A] * np.reshape([A, B, C, C, B], -1)
        if is_gcd(abs(F), abs(E)) and F < E and H < G and is_gcd(H, G):
            break

    exp_1 = '{1} over {%d} a^2 `+` {%d} over {%d}ab `+` {%d} over {%d}b^2' % (D, F, E, H, G)
    c1 = ' ( {1} over {%d}a  )^2 `+` 2 `TIMES` {1} over {%d}a ' \
         '`TIMES` {%d} over {%d}b `+`  ( {%d} over {%d}b )^2' \
         '' % (A, A, C, B, C, B)
    c2 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (A, C, B)

    a1 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (D, H, G)
    a2 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (D, B, C)
    a3 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (B, C, D)
    a4 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (A, H, G)
    a5 = ' ( {1} over {%d}a `+` {%d} over {%d}b  )^2' % (A, C, C)

    answers = [a1, a2, a3, a4, a5]
    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(a5))
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-137
def factorization312_Stem_122():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "따라서 인수인 것은 $$수식$${cor_text}$$/수식$$이다.\n\n"

    while True :
        A, B = np.random.randint(2, 10, 2)
        C = A * A
        D = 2 * A * B
        E = B * B
        F = B // 2
        G = A - 1
        H = B - 1
        if is_gcd(A, B) and B % 2 == 0 and len(set([B, F, H])) == 3 :
            break

    exp_1 = '%sx^2 %sxy %sy^2' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                                  int_str_converter(E, False, True))
    cor_text = '%sx %sy' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    c1 = ' ( %s  )^2' % (cor_text)
    answers = ['%sx %sy' % (int_str_converter(G, True, True), int_str_converter(B, False, True)),
               '%sx %sy' % (int_str_converter(G, True, True), int_str_converter(F, False, True)),
               '%sx %sy' % (int_str_converter(A, True, True), int_str_converter(F, False, True)),
               '%sx %sy' % (int_str_converter(A, True, True), int_str_converter(H, False, True)),
               cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-138
def factorization312_Stem_123():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(2, 10, 2)
        C, D, E, F = [A, 2, B, -1] * np.reshape([A, B, B, B], -1)
        if is_gcd(D, A) and is_gcd(B, A) :
            break

    exp_1 = '{1} over {%d} `+` {%d} over {%d}ab `+` %db^2' % (C, D, A, E)
    c1 = ' ( {1} over {%d}a %sb  )^2' % (A, int_str_converter(B, False, True))
    answers = [' ( {1} over {%d}a %sb  )^2' % (A, int_str_converter(F, False, True)),
               ' ( {1} over {%d}a %sb  )^2' % (C, int_str_converter(E, False, True)),
               ' ( {%d} over {%d}a `+` b  )^2' % (B, A),
               ' ( {1} over {%d}a %sb  )^2' % (A, int_str_converter(D, False, True)),
               c1]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(c1))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1)

    return stem, answer, comment


# 3-1-2-139
def factorization312_Stem_124():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n\n"

    while True :
        A = np.random.randint(2, 10)
        B = np.random.randint(2, 10) * -1
        C, D, E, F = [A, 2, B, -1] * np.reshape([A, B, B, B], -1)
        G = -1 * E
        if is_gcd(abs(A), abs(D)) :
            break
    s1 = '-' if D * A < 0 else '+'
    exp_1 = '{1} over {%d}x^2 `%s` {%d} over {%d}x %s' % (C, s1, abs(D), abs(A), int_str_converter(E, False, False))
    c1 = ' ( {1} over {%d}x %s  ) ^2' % (A, int_str_converter(B, False, False))
    answers = [' ( {1} over {%d} %s  ) ^2' % (C, int_str_converter(B, False, False)),
               ' ( {1} over {%d} %s  ) ^2' % (C, int_str_converter(G, False, False)),
               ' ( {1} over {%d} %s  ) ^2' % (C, int_str_converter(E, False, False)),
               ' ( {1} over {%d} %s  ) ^2' % (C, int_str_converter(F, False, False)), c1]
    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(c1))
    j1 = '을' if abs(E) % 10 in have_jongsung_num else '를'
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1)

    return stem, answer, comment


# 3-1-2-140
def factorization312_Stem_125():
    stem = "다음 중 완전제곱식이 아닌 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "{c1}\n\n"

    while True :
        A, D, H, I, J, P = np.random.randint(2, 10, 6) * np.reshape(np.random.choice([-1, 1], 6), -1)
        I, H, P = abs(I), abs(H), abs(P)
        B, C, F, G, K, = [2, A, 2, H, -1] * np.reshape([A, A, D, H, J], -1)
        L, M, O = [I, J, P] * np.reshape([I, K, P], -1)
        if is_gcd(2, abs(P)) and is_gcd(2, abs(H)) :
            break
    s1 = '-' if H < 0 else '+'
    s2 = '-' if P < 0 else '+'

    exp_1 = 'x^2 %sx %s' % (int_str_converter(B, False, True), int_str_converter(C, False, False))
    exp_2 = '%sy^2 %s %sy' % (int_str_converter(D, True, True), int_str_converter(D, False, False), int_str_converter(F, False, True))
    exp_3 = '%sx^2 %sy^2' % (int_str_converter(L, True, True), int_str_converter(M, False, True))
    exp_4 = 'x^2 `%s` {2} over {%d}xy `+` {1} over {%d}y^2' % (s1, H, G)
    exp_5 = 'a^2 `%s {2} over {%d}a `+` {1} over {%d}' % (s2, P, O)

    answers = [exp_1, exp_2, exp_3, exp_4, exp_5]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(exp_3))
    c1 = '%s $$수식$$%s `=`  ( %sx %sy  )  ( %sx %sy  )$$/수식$$' \
         '' % (cor_num, exp_3, int_str_converter(I, True, True), int_str_converter(J, False, True),
               int_str_converter(I, True, True), int_str_converter(K, False, False))

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1)

    return stem, answer, comment


# 3-1-2-141
def factorization312_Stem_126():
    stem = "$$수식$${exp_1}$$/수식$$이고 $$수식$$b$$/수식$$가 양수일 때 " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 " \
           "$$수식$$a `+` b `+` c$$/수식$$의 값을 구하시오\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$이므로 $$수식$${c4}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$이고 $$수식$${c6}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$\n" \
              "따라서 $$수식$${c9}$$/수식$$\n\n"

    A = np.random.randint(1, 10)
    E = np.random.randint(-9, 0)
    B, C, D = [A, 2, E] * np.reshape([A, A, E], -1)
    F = -1 * C * E
    K = B + F + E

    exp_1 = 'ax^2 `-` bx %s `=`  ( %sx `+` c  )^2' \
            '' % (int_str_converter(D, False, False), int_str_converter(A, True, True))
    c1 = '%sx^2 %scx `+` c^2' % (int_str_converter(B, True, True), int_str_converter(C, False, True))
    c2 = 'a `=` %d' % (B)
    c3 = '%d `=` c^2' % (D)
    c4 = 'c `=` +- %d' % (abs(E))
    c5 = '-b `=` %sc' % (int_str_converter(C, True, True))
    c6 = 'b `%s` 0' % (left)
    c7 = 'b `=` %d' % (F)
    c8 = 'c `=` %d' % (E)
    c9 = 'a `+` b `+` c `=` %d %s %s `=` %d' \
         '' % (B, int_str_converter(F, False, False), int_str_converter(E, False, False), K)

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9)

    return stem, answer, comment


# 3-1-2-142
def factorization312_Stem_127():
    stem = "$$수식$${exp_1}$$/수식$$이 완전제곱식이 될 때, 정수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "이때 $$수식$${c2}$$/수식$$이므로\n" \
              "$$수식$${c3}$$/수식$$ 또는 $$수식$${c4}$$/수식$$\n" \
              "이때 $$수식$$a$$/수식$$는 정수이므로 $$수식$${c4}$$/수식$$\n\n"

    while True :
        K = np.random.randint(1, 10)
        C, D = np.random.randint(2, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        E = C * K + D
        G = -E -D
        A = (C * K + D) // 2
        B = A * A
        if (C * K + D) % 2 == 0 and G % C != 0 and is_gcd(abs(G), abs(C)):
            break

    exp_1 = 'x^2  ( %sa %s  ) xy %sy^2' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, False, False),
                  int_str_converter(B, False, True))
    s1 = '-' if C * G < 0 else ''
    c1 = ' ( x +- %d  )' % (abs(A))
    c2 = '%sa %s `=` +- %d' % (int_str_converter(C, True, True), int_str_converter(D, False, False), abs(E))
    c3 = 'a `=` %s{%d} over {%d}' % (s1, abs(G), abs(C))
    c4 = 'a `=` %d' % (K)

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-143
def factorization312_Stem_128():
    stem = "$$수식$${exp_1}$$/수식$$가 완전제곱식이 되도록 하는 상수 $$수식$$A$$/수식$$의 값은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$이므로\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "따라서 $$수식$$A `=` {cor_text}$$/수식$$\n\n"

    while True :
        E, F = np.random.randint(2, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)

        F1 = abs(F) // get_gcd(abs(F), abs(E))
        E1 = abs(E) // get_gcd(abs(F), abs(E))

        H = pow(F1, 2)
        G = pow(E1 * 2, 2)

        H1 = abs(H) // get_gcd(abs(H), abs(G))
        G1 = abs(G) // get_gcd(abs(H), abs(G))

        I = E * H1
        I1 = abs(I) // get_gcd(abs(I), abs(G1))
        G2 = abs(G1) // get_gcd(abs(I), abs(G1))

        if I < 100 :
            break

    exp_1 = '%sx^2 %sx `+` A' % (int_str_converter(E, True, True), int_str_converter(F, False, True))
    s1 = '-' if F * E < 0 else '+'
    s2 = '-' if E < 0 else '+'
    frac_1 = '{%d} over {%d}' % (F1, E1) if E1 != 1 else str(F1)
    c1 = '%s  ( x^2 `%s` %sx `%s` {A} over {%d}  )' \
         '' % (int_str_converter(E, True, True), s1, frac_1, s2, abs(E))

    s3 = '-' if E < 0 else ''
    s4 = '-' if F * E < 0 else ''
    b3, b4 = [' { ', ' } '] if s4 == '-' else [' ( ', ' ) ']
    b1, b2 = [' ( ', ' ) '] if s4 == '-' else ['', '']

    frac_2 = '{%d} over {%d}' % (H1, G1) if G1 != 1 else str(H1)
    c2 = '%s{A} over {%d} `=` %s {1} over {2} `TIMES` %s %s%s %s %s ^2 `=` %s' % (s3, abs(E), b3, b1, s4, frac_1, b2, b4, frac_2)

    cor_text = '%s{%d} over {%d} '% (s3, I1, G2) if G2 != 1 else '%s%d' % (s3, I1)

    n = np.random.choice([1, 2, 3], 1)[0]
    nums = [i for i in range(I1-4*n, (I1+4*n)+1, n)]
    answers = []
    for n in nums :
        if n == I1 :
            answers.append(cor_text)
        elif n != 0 :
            n1 = abs(n) // get_gcd(abs(n), abs(G2))
            d1 = abs(G2) // get_gcd(abs(n), abs(G2))
            if d1 == 1 :
                answers.append('%s%d' % (s3, n1))
            else :
                answers.append('%s{%d} over {%d}' % (s3, n1, d1))
    idx = np.random.randint(0, 5) if len(answers) == 9 else np.random.randint(0, 4)
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-144
def factorization312_Stem_129():
    stem = "$$수식$${exp_1}$$/수식$$이 완전제곱식이 될 때, 양수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 식이 완전제곱식이 되므로\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=`{c1}$$/수식$$\n" \
              "$$수식$$=`{c2}$$/수식$$\n" \
              "$$수식$$=`{c3}$$/수식$$\n" \
              "이때 $$수식$$a$$/수식$$는 양수이므로 $$수식$${c4}$$/수식$$\n\n"

    while True :
        C = np.random.randint(1, 10)
        D = np.random.randint(2, 10)
        A, B, E = [C, D, 2] * np.reshape([C, D, C], -1)
        if is_gcd(E, D) :
            break

    exp_1 = '%sx^2 `+` ax `+` {1} over {%d}' % (int_str_converter(A, True, True), B)
    c1 = ' ( %sx  )^2 `+` ax `+`  ( {1} over {%d}  ) ^2' % (int_str_converter(C, True, True), D)
    c2 = ' ( %sx `+-` {1} over {%d}  ) ^2' % (int_str_converter(C, True, True), D)

    cor_text = '{%d} over {%d}' % (E, D) if D != 1 else str(E)
    cor_text_1 = '' if cor_text == '1' else cor_text
    c3 = '%sx^2 `+-` %sx `+` {1} over {%d}' % (int_str_converter(A, True, True), cor_text_1, B)
    c4 = 'a `=` %s' % (cor_text)

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-145
def factorization312_Stem_130():
    stem = "두 다항식 $$수식$${exp_1}$$/수식$${j1} $$수식$${exp_2}$$/수식$$가 모두 완전제곱식이 될 때, " \
           "$$수식$$ab$$/수식$$의 값은? (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 양수)\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1} `=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "이때 $$수식$$a$$수식$$는 양수이므로 $$수식$${c4}$$/수식$$\n" \
              "$$수식$${exp_2}$$/수식$$가 완전제곱식으로 인수분해되려면\n" \
              "$$수식$${c5}$$/수식$$\n" \
              "따라서 $$수식$${c6}$$/수식$$\n\n"


    while True :
        A, F, K, Z = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        B = np.random.randint(1, 10)
        C = B * B
        D = A * A
        E = 2 * A * B
        Y = 2 * F

        Z1 = abs(Z) // get_gcd(abs(Z), abs(F))
        F1 = abs(F) // get_gcd(abs(Z), abs(F))

        Z2 = abs(Z1) // get_gcd(abs(Z1), abs(Y))
        Y1 = abs(Y) // get_gcd(abs(Z1), abs(Y))

        K = Z2 * Z2
        G = Y1 * Y1
        K1 = abs(K) // get_gcd(abs(K), abs(G))
        G1 = abs(G) // get_gcd(abs(K), abs(G))

        I = E * K
        I1 = abs(I) // get_gcd(abs(I), abs(G1))
        G2 = abs(G1) // get_gcd(abs(I), abs(G1))

        if G1 < 100 and K1 < 100 and I1 < 100 and Z2 != Y1 :
            break

    j1 = '과' if C % 10 in have_jongsung_num else '와'
    exp_1 = '%sx^2 `+` ax `+` %d' % (int_str_converter(D, True, True), C)
    c1 = ' ( %sx  ) ^2 `+` ax `+` %d ^2' % (int_str_converter(A, True, True), B)
    c2 = ' ( %sx `+-` %d  ) ^2' % (int_str_converter(A, True, True), B)
    c3 = 'a `=` +- %d' % (abs(E))
    c4 = 'a `=` %d' % (abs(E))

    s1 = '-' if Z * F < 0 else '+'
    s2 = '-' if Z * Y < 0 else ''
    frac_1 = '{%d} over {%d}' % (Z1, F1) if F1 != 1 else str(Z1)
    frac_2 = '{%d} over {%d}' % (Z2, Y1) if Y1 != 1 else str(Z2)
    frac_3 = '{%d} over {%d}' % (K1, G1) if G1 != 1 else str(K1)
    frac_4 = '{%d} over {%d}' % (I1, G2) if G2 != 1 else str(I1)
    exp_2 = 'x^2 `%s` %s `+` b' % (s1, frac_1)
    c5 = 'b `=`  ( %s%s `TIMES` {1} over {2}  ) ^2 `=`  ( %s%s  )^2 `=` %s' \
         '' % (s1, frac_1, s2, frac_2, frac_3)

    s3 = '-' if E < 0 else ''
    cor_text = '%s%s' % (s3, frac_4)
    c6 = 'ab `=` %s `TIMES` %s `=` %s' % (int_str_converter(E, True, False), frac_3, cor_text)

    while True :
        n = np.random.choice([1, 2, 3], 1)[0]
        nums = [i for i in range(I1-4*n, (I1+4*n)+1, n)]
        answers = []
        for n in nums :
            if n == I1 :
                answers.append(cor_text)
            elif n != 0 :
                n1 = abs(n) // get_gcd(abs(n), abs(G2))
                d1 = abs(G2) // get_gcd(abs(n), abs(G2))
                if d1 == 1 :
                    t = '%s%d' % (s3, n1)
                    if t not in answers :
                        answers.append(t)
                else :
                    t = '%s{%d} over {%d}' % (s3, n1, d1)
                    if t not in answers :
                        answers.append(t)

        idx = np.random.randint(0, 5) if len(answers) == 9 else np.random.randint(0, 4)
        answers = answers[idx:idx + 5]

        if len(answers) == 5 and cor_text in answers :
            break
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6)

    return stem, answer, comment

#3-1-3-146
def factorization312_Stem_131():
    stem= "이차식 $$수식$$a`{{x}}^{{2}}`+`{a1}x`+`{a2}`$$/수식$$   이 완전제곱식이 될 때, 상수 $$수식$$a`$$/수식$$  의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "주어진 이차식에서 완전제곱식이 되려면 $$수식$$a`&gt;`0$$/수식$$  이어야 하므로\n"\
             "$$수식$$a`{{x}}^{{2}}`+`{a1}x`+`{a2}`=`{{(sqrt{{ax}})}}^{{2}}`+`{{2}}`TIMES`{c1}`TIMES`{{sqrt{{a}}}}`x`+`{c1}^{{2}}$$/수식$$\n"\
             "이므로 $$수식$${c2}{{sqrt{{a}}}}`=`{a1}$$/수식$$   에서$$수식$${{sqrt{{a}}}}`=`{c3}$$/수식$$ \n"\
             "$$수식$$THEREFORE~a`=`{c4}$$/수식$$\n\n"
    tmp=random.randint(2,10)
    a2=tmp*tmp
    a1=2*tmp*random.randint(3,5)
    c1=tmp
    c2=2*tmp
    c3=int(a1/c2)
    c4=c3*c3
    l=made_answer_cand_1(c4)
    random.shuffle(l)
    a=answer_dict[l.index(c4)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-147
def factorization312_Stem_132():
    stem= "다음 식이 모두 완전제곱식으로 인수분해될 때,  $$수식$${{box{{~~}}}}$$/수식$$  안에 알맞은 수 중 그 절댓값이 가장 큰 것은?\n"\
          "① {x1}	\n② {x2}	  \n\n③ {x3}\n④ {x4}     \n⑤ {x5}\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "① {c1}\n② {c2}\n\n③ {c3}\n④ {c4}\n⑤ {c5}\n\n"
    
    tmp1=random.randint(2,5)
    a2=tmp1*tmp1
    a1=random.randrange(4,11,2)*tmp1
    cc1=int(a1/(2*tmp1))
    
    cc1=int(a1/(2*tmp1))
    cc2=tmp1
    cc3=cc1*cc1
    
    x1="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a1}x`+`{a2}`$$/수식$$".format(a1=a1,a2=a2)
    c1="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a1}x`+`{a2}`=`{{({cc1}x`+`{cc2})}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`{cc3}$$/수식$$".format(a1=a1,a2=a2,cc1=cc1,cc2=cc2,cc3=cc3)

    
    tmp2=random.randrange(4,11,2)

    a3=Fraction(1,tmp2*tmp2)
    sa3=made_fraction_string(a3)
    cc4=Fraction(1,tmp2)
    scc4=made_fraction_string(cc4)
    cc5=2*cc4
    scc5=made_fraction_string(cc5) 
    x2="$$수식$${{a}}^{{2}}`+`{{box{{~~}}}}`{{a}}`+`{sa3}`$$/수식$$".format(sa3=sa3)
    c2="$$수식$${{a}}^{{2}}`+`{{box{{~~}}}}`{{a}}`+`{sa3}`=`{{(a`+-`{scc4}`)}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`+-`{scc5}$$/수식$$".format(sa3=sa3,scc4=scc4,scc5=scc5)
    
    a4=random.randrange(2,11,2)
    c6=int(a4/2)
    c7=c6*c6
    x3="$$수식$${{x}}^{{2}}`-`{a4}x`+`{{box{{~~}}}}$$/수식$$".format(a4=a4)
    c3="$$수식$${{x}}^{{2}}`-`{a4}x`+`{{box{{~~}}}}`=`{{(x`-`{c6})}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`{c7}`$$/수식$$".format(a4=a4,c6=c6,c7=c7)



    a5=random.randrange(2,11,2)
    c8=int(a5/2)
    c9=c8*c8
    x4="$$수식$${{a}}^{{2}}`+`{a5}a`+`{{box{{~~}}}}$$/수식$$".format(a5=a5)
    c4="$$수식$${{a}}^{{2}}`+`{a5}a`+`{{box{{~~}}}}`=`{{(a`+`{c8})}}^{{2}}$$/수식$$                           에서 $$수식$${{box{{~~}}}}`=`{c9}$$/수식$$".format(a5=a5,c8=c8,c9=c9)
    
    
    a6=random.randrange(2,11,2)
    c10=int(a6/2)
    c11=c10*c10
    x5="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a6}x`+`1`$$/수식$$".format(a6=a6)
    c5="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a6}x`+`1`=`{{({c10}x`+`1)}}^{{2}}$$/수식$$                         에서 $$수식$${{box{{~~}}}}`=`{c11}$$/수식$$".format(a6=a6,c10=c10,c11=c11)
    
    answer_cand=[cc3,cc5,c7,c9,c11]
    count=0
    for i in range(5):
        if max(answer_cand)==answer_cand[i]:
            count=count+1
    if count>1:
        while count >1 :
            tmp1=random.randint(2,5)
            a2=tmp1*tmp1
            a1=random.randrange(4,11,2)*tmp1
            cc1=int(a1/(2*tmp1))
    
            cc1=int(a1/(2*tmp1))
            cc2=tmp1
            cc3=cc1*cc1
    
            x1="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a1}x`+`{a2}`$$/수식$$".format(a1=a1,a2=a2)
            c1="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a1}x`+`{a2}`=`{{({cc1}x`+`{cc2})}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`{cc3}$$/수식$$".format(a1=a1,a2=a2,cc1=cc1,cc2=cc2,cc3=cc3)

    
            tmp2=random.randrange(4,11,2)

            a3=Fraction(1,tmp2*tmp2)
            sa3=made_fraction_string(a3)
            cc4=Fraction(1,tmp2)
            scc4=made_fraction_string(cc4)
            cc5=2*cc4
            scc5=made_fraction_string(cc5) 
            x2="$$수식$${{a}}^{{2}}`+`{{box{{~~}}}}`{{a}}`+`{sa3}`$$/수식$$".format(sa3=sa3)
            c2="$$수식$${{a}}^{{2}}`+`{{box{{~~}}}}`{{a}}`+`{sa3}`=`{{(a`+-`{scc4}`)}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`+-`{scc5}$$/수식$$".format(sa3=sa3,scc4=scc4,scc5=scc5)
    
            a4=random.randrange(2,11,2)
            c6=int(a4/2)
            c7=c6*c6
            x3="$$수식$${{x}}^{{2}}`-`{a4}x`+`{{box{{~~}}}}$$/수식$$".format(a4=a4)
            c3="$$수식$${{x}}^{{2}}`-`{a4}x`+`{{box{{~~}}}}`=`{{(x`-`{c6})}}^{{2}}$$/수식$$                             에서 $$수식$${{box{{~~}}}}`=`{c7}`$$/수식$$".format(a4=a4,c6=c6,c7=c7)



            a5=random.randrange(2,11,2)
            c8=int(a5/2)
            c9=c8*c8
            x4="$$수식$${{a}}^{{2}}`+`{a5}a`+`{{box{{~~}}}}$$/수식$$".format(a5=a5)
            c4="$$수식$${{a}}^{{2}}`+`{a5}a`+`{{box{{~~}}}}`=`{{(a`+`{c8})}}^{{2}}$$/수식$$                           에서 $$수식$${{box{{~~}}}}`=`{c9}$$/수식$$".format(a5=a5,c8=c8,c9=c9)
    
    
            a6=random.randrange(2,11,2)
            c10=int(a6/2)
            c11=c10*c10
            x5="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a6}x`+`1`$$/수식$$".format(a6=a6)
            c5="$$수식$${{box{{~~}}}}`{{x}}^{{2}}`+`{a6}x`+`1`=`{{({c10}x`+`1)}}^{{2}}$$/수식$$                         에서 $$수식$${{box{{~~}}}}`=`{c11}$$/수식$$".format(a6=a6,c10=c10,c11=c11)
    
            answer_cand=[cc3,cc5,c7,c9,c11]
            count=0
            for i in range(5):
                if max(answer_cand)==answer_cand[i]:
                    count=count+1

    a=answer_dict[answer_cand.index(max(answer_cand))]


    stem=stem.format(x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

    
#3-1-2-148
def factorization312_Stem_133():
    stem= "$$수식$${{({a1}x`+`{a2})({a1}x`+`{a3})}}`+`k`$$/수식$$                        가 완전제곱식이 되기 위한 상수 $$수식$$k`$$/수식$$의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{({a1}x`+`{a2})({a1}x`+`{a3})}}`+`k`$$/수식$$\n"\
             "$$수식$$`=`{c1}`{{x}}^{{2}}`+`{c2}x`+`{c3}`+`k`$$/수식$$\n"\
             "$$수식$$`=`{c1}{{({{x}}^{{2}}`+`{c4}x`+`{c5})}}`{c6}`+`k`$$/수식$$\n"\
             "$$수식$${c1}`{{(x`+`{c7})}}^{{2}}`{c6}`+`k`$$/수식$$\n"\
             "따라서 $$수식$${c6}`+k`=`0$$/수식$$\n"\
             "$$수식$$THEREFORE~k`=`{c8}$$/수식$$\n\n"
    a1=random.randrange(3,14,2)
    a2=random.randrange(2,13,2)
    a3=random.randrange(2,13,2)
    while a2==a3 or a2>a3 or int((a2+a3)/(2*a1)*10)%10!=0:
        a1=random.randrange(3,12,2)
        a2=random.randrange(2,9,2)
        a3=random.randrange(2,9,2)
    c1=a1*a1
    c2=a1*(a2+a3)
    c3=a2*a3
    c4=int(c2/c1)
    c5=int(c4/2)**2
    c6=-c5*c1
    c7=int(c4/2)
    c8=-c6
    l=made_answer_cand_1(c8)
    random.shuffle(l)
    a=answer_dict[l.index(c8)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,c7=c7,c8=c8)
    return stem,answer,comment

#3-1-2-149
def factorization312_Stem_134():
    stem= "$$수식$$A`{{x}}^{{2}}`+`{a1}x`+`{sa2}$$/수식$$가 완전제곱식이 되도록 하는 상수의 값은?\n\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "주어진 이차식에서 완전제곱식이 되려면 $$수식$$A`&gt;`0`$$/수식$$  이어야 하므로\n"\
             "$$수식$$A`{{x}}^{{2}}`+`{a1}x`+`{sa2}`=`{{(sqrt{{A}}x)}}^{{2}}`+`{{2}}TIMES{{sqrt{{{sa2}}}}}TIMES{{sqrt{{A}}x}}`+`{{ ( sqrt{{{sa2}}}  )}}^{{2}}$$/수식$$이므로\n\n"\
             "$$수식$${{2}}TIMES{{sqrt{{{sa2}}}}}TIMES{{sqrt{{A}}}}`=`{a1}$$/수식$$                     에서$$수식$$sqrt{{A}}`=`{c1}$$/수식$$\n\n"\
             "$$수식$$THEREFORE~A`=`{c2}`$$/수식$$\n\n"
    tmp1=random.randint(3,5)
    tmp2=random.randint(3,5)
    while tmp1==tmp2:
        tmp1=random.randint(3,5)
        tmp2=random.randint(3,5)
    a2=Fraction(tmp1*tmp1,tmp2*tmp2)
    sa2=made_fraction_string(a2)
    a1=tmp1*random.randrange(2,5,2)
    c1=int(a1/(2*math.sqrt(a2)))
    c2=c1*c1
    l=made_answer_cand_1(c2)
    random.shuffle(l)
    a=answer_dict[l.index(c2)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,sa2=sa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,sa2=sa2,c1=c1,c2=c2)
    return stem,answer,comment

#3-1-2-150
def factorization312_Stem_135():
    stem= "$$수식$${{x}}^{{2}}`+`({a1}a`+`{a2})xy`+`{a3}{{y}}^{{2}}$$/수식$$                       이 완전제곱식이 될 때, 양수 $$수식$$a`$$/수식$$의 값을 구하시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`+`({a1}a`+`{a2})xy`+`{a3}{{y}}^{{2}}`=`{{(x`+-`{c1}y)}}^{{2}}`$$/수식$$\n"\
             "이때 $$수식$${a1}a`+`{a2}`=`+-`{c2}$$/수식$$    이고 $$수식$$a`$$/수식$$는 양수 이므로\n"\
             "$$수식$$a`=`{c3}$$/수식$$\n\n"
    a1=random.randint(2,5)
    a2=a1*random.randint(2,3)
    while a2>10:
        a2=a1*random.randint(2,3)
    c1=random.randint(2,5)*a1
    a3=c1*c1
    c2=2*c1
    c3=int((c2-a2)/a1)
    
    a=c3
    
    stem=stem.format(a1=a1,a2=a2,a3=a3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-152
def factorization312_Stem_136():
    stem= "넓이가 $$수식$${a1}{{a}}^{{2}}`-`{a2}a`+`{a3}$$/수식$$     인 정사각형의 둘레의 길이가 $$수식$${a4}$$/수식$$일 때, 양수 $$수식$$a`$$/수식$$의 값을 소수로 나타내시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{a}}^{{2}}`-`{a2}a`+`{a3}`=`{{({c1}a`-`{c2})}}^{{2}}`=`{{({mc1}a`{sc2})}}^{{2}}$$/수식$$              이므로 정사각형의 한 변의 길이는\n"\
             "$$수식$$({c1}a`{sc2})$$/수식$$    또는 $$수식$$({mc1}a`{sc2})$$/수식$$     이다.\n"\
             "이때 둘레의 길이가 $$수식$${a4}$$/수식$$ 이므로\n"\
             "$$수식$$4({c1}a`-`{c2})`=`{a4}`$$/수식$$         즉 $$수식$${c1}a`=`{c3}$$/수식$$  에서\n"\
             "$$수식$$a`=`{sc4}`CDOTS CDOTS (ㄱ)$$/수식$$\n\n"\
             "$$수식$$4({mc1}a`{sc2})`=`{a4}$$/수식$$        즉 $$수식$${mc1}a`=`{c5}$$/수식$$\n"\
             "$$수식$$a`=`{sc6}`CDOTS CDOTS (ㄴ)$$/수식$$\n\n"\
             "(ㄱ), (ㄴ)에서 $$수식$$a`&gt;`0$$/수식$$  이므로 $$수식$$a`=`{sc7}`=`{c8}$$/수식$$\n\n"
    tmp1=random.randint(0,2)*2
    tmp2=random.randint(0,1)*2
    a1=(2**tmp1)*(5**tmp2)
    tmp3=random.randint(3,5)
    a3=tmp3*tmp3
    a2=int(math.sqrt(a3)*math.sqrt(a1)*2)
    a4=random.randint(13,50)*4
    c1=int(math.sqrt(a1))
    c2=int(math.sqrt(a3))
    
    while (int(a4/4)+c2)%c1==0 or (int(a4/2)-c2)%c1==0:
        tmp1=random.randint(0,2)*2
        tmp2=random.randint(0,1)*2
        a1=(2**tmp1)*(5**tmp2)
        tmp3=random.randint(3,5)
        a3=tmp3*tmp3
        a2=int(math.sqrt(a3)*math.sqrt(a1)*2)
        a4=random.randint(13,50)*4
        c1=int(math.sqrt(a1))
        c2=int(math.sqrt(a3))
    sc2=made_sign_string(c2)
    mc1=-c1
    mc2=-c2
    smc2=made_sign_string(mc2)
    c3=int(a4/4)+c2

    c4=Fraction(c3,c1)
    sc4=made_fraction_string(c4)
    c5=int(a4/4)+mc2
    c6=Fraction(c5,mc1)
    sc6=made_fraction_string(c6)
    if c4>0:
        c7=c4
    else:
        c7=c6
    sc7=made_fraction_string(c7)
    c8=float(c7)
    a=c8
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,c1=c1,c2=c2,sc2=sc2,mc1=mc1,smc2=smc2,sc4=sc4,c3=c3,c5=c5,sc6=sc6,sc7=sc7,c8=c8)
    return stem,answer,comment

#3-1-153
def factorization312_Stem_137():
    stem= "$$수식$${a1}{{a}}^{{2}}`+`m`a`+`{a3}$$/수식$$    {proa3} 완전제곱식이 되도록 하는 모든 상수 $$수식$$m`$$/수식$$의 값을 구하시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{a}}^{{2}}`+`m`a`+`{a3}`=`{{({c1}a)}}^{{2}}`+`m`a`+`{c2}^{{2}}$$/수식$$          이므로\n"\
             "$$수식$${{({c1}a`+`{c2})}}^{{2}}$$/수식$$         또는 $$수식$${{({c1}a`-`{c2})}}^{{2}}$$/수식$$         으로 인수분해 된다.\n"\
             "$$수식$${{({c1}a`+`{c2})}}^{{2}}$$/수식$$          으로 인수분해 되는 경우\n"\
             "$$수식$$m`=`{{2}}TIMES{c1}TIMES{c2}`=`{c3}$$/수식$$\n"\
             "$$수식$${{({c1}a`-`{c2})}}^{{2}}$$/수식$$          으로 인수분해 되는 경우\n"\
             "$$수식$$m`=`{{2}}TIMES{c1}TIMES{{(-{c2})}}`=`-`{c3}$$/수식$$\n"\
             "따라서 구하는 상수 $$수식$${c3},~`-`{c3}$$/수식$$    이다.\n\n"
    c1=random.randint(2,10)
    c2=random.sample([1,3,6,7,8,10],1)[0]
    a1=c1*c1
    a3=c2*c2
    c3=2*c1*c2
    proa3=proc_jo(a3,0)

    a="$$수식$${}, ~`-`{}$$/수식$$".format(c3,c3)
    stem=stem.format(a1=a1,a3=a3,proa3=proa3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a3=a3,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-155
def factorization312_Stem_138():
    stem= "$$수식$$({a1}a`+`{a2}){{b}}^{{2}}`+`({a3}a`+`{a4})b`+`{a5}a`+`{a6}$$/수식$$            {proa6} 인수분해 하여 구한 일차식들을 모두 더하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$({a1}a`+`{a2}){{b}}^{{2}}`+`({a3}a`+`{a4})b`+`{a5}a`+`{a6}$$/수식$$\n"\
             "$$수식$$`=`({a1}a`+`{a2}){{b}}^{{2}}`+`{c1}({a1}a`+`{a2})b`+`{c2}({a1}a`+`{a2})$$/수식$$\n"\
             "$$수식$$`=`({a1}a`+`{a2})({{b}}^{{2}}`+`{c1}b`+`{c2})$$/수식$$\n"\
             "$$수식$$`=`({a1}a`+`{a2}){{(`b`+{c3})}}^{{2}}$$/수식$$\n"\
             "따라서 일차식들의 합은\n"\
             "$$수식$${a1}a`+`{a2}`+`2(b`+`{c3})`=`{a1}a`+`2b`+`{c4}$$/수식$$\n\n"
    a1=random.randint(2,5)
    a2=random.randint(2,5)
    tmp=random.randint(2,8)
    a3=2*tmp*a1
    a4=2*tmp*a2
    a5=a1*tmp*tmp
    a6=a2*tmp*tmp
    proa6=proc_jo(a6,3)
    c1=2*tmp
    c2=tmp*tmp
    c3=tmp
    c4=a2+2*c3
    xa="{a1}a`+`2b`+`{c4}".format(a1=a1,c4=c4)
    x1="{a1}a`-`2b`+`{c4}".format(a1=a1,c4=c4)
    x2="{a1}a`+`2b`-`{c4}".format(a1=a1,c4=c4)
    x3="{a1}a`-`2b`-`{c4}".format(a1=a1,c4=c4)
    x4="-{a1}a`+`2b`+`{c4}".format(a1=a1,c4=c4)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5,proa6=proa6)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment             


#3-1-2-157
def factorization312_Stem_139():
    stem= "$$수식$$0`&lt;`x`&lt;`{a1}$$/수식$$     일 때, $$수식$$sqrt{{{{x}}^{{2}}}}`+`sqrt{{{{x}}^{{2}}`{a2}x`+`{a3}}}$$/수식$$    {proa3} 간단히 하면?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$0`&lt;`x`&lt;`{a1}$$/수식$$    이므로\n"\
             "$$수식$$sqrt{{{{x}}^{{2}}}}`+`sqrt{{{{x}}^{{2}}`{a2}x`+`{a3}}}`=`x`-`(x`-`{a1})`=`{a1}$$/수식$$\n\n"
    a1=random.randint(2,9)
    a2=-2*a1
    a3=a1*a1
    proa3=proc_jo(a3,3)
    x1=a1
    x2=-a1
    x3="{a2}x".format(a2=a2)
    x4="{a2}x".format(a2=-a2)
    x5="{a2}x`-`{a1}".format(a2=a2,a1=a1)
    l=[x1,x2,x3,x4,x5]
    random.shuffle(l)
    a=answer_dict[l.index(x1)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5,proa3=proa3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3)
    return stem,answer,comment

#3-1-2-158
def factorization312_Stem_140():
    stem= "$$수식$$0`&lt;`a`&lt;`{a1}b$$/수식$$     일 때, $$수식$$sqrt{{{{a}}^{{2}}`+`{a2}ab`+`{a3}{{b}}^{{2}}}}`-`sqrt{{{{a}}^{{2}}`-`{a2}ab`+`{a3}{{b}}^{{2}}}}$$/수식$$        을 간단히 하면?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$0`&lt;`a`&lt;`{a1}b$$/수식$$      이므로\n"\
             "$$수식$$sqrt{{{{a}}^{{2}}`+`{a2}ab`+`{a3}{{b}}^{{2}}}}`-`sqrt{{{{a}}^{{2}}`-`{a2}ab`+`{a3}{{b}}^{{2}}}}$$/수식$$\n"\
             "$$수식$$`=`sqrt{{{{(a`+`{a4}b)}}^{{2}}}}`-`sqrt{{{{(a`-`{a4}b)}}^{{2}}}}$$/수식$$\n"\
             "$$수식$$`=`(a`+`{a4}b)`+`(a`-`{a4}b)`=`2a`$$/수식$$\n\n"
    a1=random.randint(2,9)
    a2=2*a1
    a3=a1*a1
    a4=a1
    l=["2b","2a","-2a","-2b",0]
    random.shuffle(l)
    a=answer_dict[l.index("2a")]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4)
    return stem,answer,comment

#3-1-2-159
def factorization312_Stem_141():
    stem= "$$수식$$0`&lt;`{a1}x`&lt;`1`$$/수식$$    일 때,\n$$수식$$sqrt{{{{x}}^{{2}}`-`{a2}`x`+`{a3}}}`-`sqrt{{{{x}}^{{2}}`+`{a2}`x`+`{a3}}}$$/수식$$  {proa3} 간단히 하면?\n\n"\
          "① $$수식$${x1}$$/수식$$	    ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n\n④ $$수식$${x4}$$/수식$$      ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$0`&lt;`{a1}x`&lt;`1`$$/수식$$     , 즉 $$수식$$0`&lt;`x`&lt;`{c1}`$$/수식$$ 이므로\n\n"\
             "$$수식$$sqrt{{{{x}}^{{2}}`-`{a2}`x`+`{a3}}}`-`sqrt{{{{x}}^{{2}}`+`{a2}`x`+`{a3}}}$$/수식$$\n\n"\
             "$$수식$$`=`sqrt{{{{(x`-`{c1}`)}}^{{2}}}}`-`sqrt{{{{(x`+`{c1}`)}}^{{2}}}}$$/수식$$\n\n"\
             "$$수식$$`=`-(x`-`{c1}`)`-`(x`+`{c1}`)$$/수식$$\n\n"\
             "$$수식$$`=`-2x`$$/수식$$\n\n"
    a1=random.randrange(3,10,2)
    a2=Fraction(2,a1)
    proa3=proc_jo(a1*a1,3)
    a3=Fraction(1,a1*a1)
    c1=Fraction(1,a1)
    a2=made_fraction_string(a2)
    a3=made_fraction_string(a3)
    c1=made_fraction_string(c1)
    l=["-2x","2x",0,a2,"`-`"+a2]
    random.shuffle(l)
    a=answer_dict[l.index("-2x")]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5,proa3=proa3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1)
    return stem,answer,comment

#3-1-2-160
def factorization312_Stem_142():
    stem= "$$수식$$sqrt{{{a1}{{x}}^{{2}}``{a2}x`+`{a3}}}`+`sqrt{{{{x}}^{{2}}`+`{a4}`x`+`{a5}}}$$/수식$$ {proa5} 간단히 하면?\n\n"\
          "(단, $$수식$$0`&lt;`x`&lt;`1`$$/수식$$    )\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$sqrt{{{a1}{{x}}^{{2}}``{a2}x`+`{a3}}}`+`sqrt{{{{x}}^{{2}}`+`{a4}`x`+`{a5}}}$$/수식$$\n\n"\
             "$$수식$$`=`{c1}sqrt{{{{(x`-`{c2}`)}}^{{2}}}}`+`sqrt{{{{(x`+`{c3}`)}}^{{2}}}}$$/수식$$\n\n"\
             "이때 $$수식$$0`&lt;`x`&lt;`1`$$/수식$$       이므로\n"\
             "$$수식$${c1}sqrt{{{{(x`-`{c2}`)}}^{{2}}}}`+`sqrt{{{{(x`+`{c3}`)}}^{{2}}}}$$/수식$$\n\n"\
             "$$수식$$`=`-{c1}(x`-`{c2})`+`(x`+`{c3}`)$$/수식$$\n\n"\
             "$$수식$$`=`{c4}x`+`{c5}`$$/수식$$\n\n"
    tmp=random.randint(3,6)
    a1=tmp*tmp
    tmp2=random.randint(2,5)
    a3=tmp*tmp*tmp2*tmp2
    a2=-tmp*tmp*2*tmp2
    tmp3=random.randint(3,6)
    a5=Fraction(1,tmp3*tmp3)
    a4=Fraction(2,tmp3)
    proa5=proc_jo(tmp3*tmp3,3)
    c2=tmp2
    c3=Fraction(1,tmp3)
    c1=tmp
    c4=-c1+1
    c5=c3+c2*c1
    a5=made_fraction_string(a5)
    a4=made_fraction_string(a4)
    c3=made_fraction_string(c3)
    c5=made_fraction_string(c5)
    xa="{c4}x`+`{c5}".format(c4=c4,c5=c5)
    x1="{mc4}x`+`{c5}".format(mc4=-c4,c5=c5)
    x2="{c4}x`-`{c5}".format(c4=c4,c5=c5)
    x3="{mc4}x`-`{c5}".format(mc4=-c4,c5=c5)
    x4="{wmc4}x`+`{c5}".format(wmc4=2*c4,c5=c5)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5,proa5=proa5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment


#3-1-2-161
def factorization312_Stem_143():
    stem= "$$수식$${a1}`&lt;`a`&lt;`{a2}`$$/수식$$     이고 $$수식$$sqrt{{x}}`=`{a3}`+`a$$/수식$$    일 때, 다음을 간단히 하면?\n"\
          "$$수식$$sqrt{{{{x}}`{a4}`a`{a5}}}`-`sqrt{{{{x}}`-`{a6}a`{a7}}}$$/수식$$\n"\
          "① $$수식$${x1}$$/수식$$	    ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$        ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$sqrt{{x}}`=`{a3}`+`a$$/수식$$   에서 $$수식$$x`=`{{({a3}`+`a)}}^{{2}}`=`{{a}}^{{2}}`+`{c1}a`+`{c2}$$/수식$$          이므로\n"\
             "$$수식$$sqrt{{{{x}}`{a4}`a`{a5}}}`=`sqrt{{{{a}}^{{2}}`+`{c1}a`+`{c2}`{a4}a`{a5}}}$$/수식$$\n"\
             "                  $$수식$$`=`sqrt{{{{a}}^{{2}}`+`{c3}`a`+`{c4}}}$$/수식$$\n"\
             "                  $$수식$$`=`sqrt{{{{(a`+`{c5})}}^{{2}}}}`$$/수식$$\n"\
             "$$수식$$sqrt{{{{x}}`-`{a6}a`{a7}}}`=`sqrt{{{{a}}^{{2}}`+`{c1}a`+`{c2}`-`{a6}a`{a7}$$/수식$$\n"\
             "                  $$수식$$`=`sqrt{{{{a}}^{{2}}`{c6}a`+`{c7}`$$/수식$$\n"\
             "                  $$수식$$`=`sqrt{{{{(a`{c8})}}^{{2}}}}`$$/수식$$\n"\
             "이때 $$수식$${a1}`&lt;`a`&lt;`{a2}$$/수식$$      이므로\n"\
             "$$수식$$sqrt{{{{x}}`{a4}`a`{a5}}}`-`sqrt{{{{x}}`-`{a6}a`{a7}}}$$/수식$$\n"\
             "$$수식$$`=`sqrt{{{{(a`+`{c5})}}^{{2}}}}`-`sqrt{{{{(a`{c8})}}^{{2}}}}`$$/수식$$\n"\
             "$$수식$$`=`(a`+`{c5})`+`(a`{c8}`)$$/수식$$\n"\
             "$$수식$$`=`2a`{c9}$$/수식$$"
    c5=random.randint(2,9)
    c8=random.randint(-9,-2)
    a3=random.randint(2,8)
    while c5==abs(c8) or c5==a3 or abs(c8)==a3:
        c5=random.randint(2,9)
        c8=random.randint(-9,-2)
        a3=random.randint(2,8)
    
    c1=2*a3
    c2=a3*a3
    a4=2*c5-c1
    
    c3=c1+a4
    c4=c5*c5
    a5=c4-c2
    a6=c1-2*c8
    c7=c8*c8
    c9=c5+c8
    a7=c7-c2
    x1=c9
    x2=-c9
    a1=-c5+1
    a2=-c8-1
    x3=a2
    c6=2*c8
    c8=made_sign_string(c8)
    c9=made_sign_string(c9)
    a5=made_sign_string(a5)
    a7=made_sign_string(a7)
    a4=made_sign_string(a4)
    ttt=random.sample([-4,-2,4],1)[0]
    xa="2a`{c9}".format(c9=c9)
    x4="{ttt}a`{c9}".format(ttt=ttt,c9=c9)
    l1=[x1,x2,x3]
    l1.sort()
    if ttt==-4 or ttt==-2:
        l2=[x4,xa]
    else:
        l2=[xa,x4]
    l=l1+l2
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,c7=c7,c8=c8,c9=c9)
    return stem,answer,comment

    
#3-1-2-162
def factorization312_Stem_144():
    stem= "$$수식$$0`&lt;`x`&lt;`1`$$/수식$$    일 때,\n"\
          "$$수식$$sqrt{{{a1}over{{x}}^{{2}}`}}`+`sqrt{{{{x}}^{{2}}`+`{a2}over{{x}}^{{2}}`-`{a3}}}`+`sqrt{{{{x}}^{{2}}`+`{a4}over{{x}}^{{2}}`+`{a5}}}$$/수식$$  {proa5} 간단히 하면?\n\n"\
          "① $$수식$${x1}$$/수식$$	    ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n\n④ $$수식$${x4}$$/수식$$      ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$sqrt{{`{a1}over{{x}}^{{2}}`}}`+`sqrt{{`{{x}}^{{2}}`+`{a2}over{{x}}^{{2}}`-`{a3}}}`+`sqrt{{`{{x}}^{{2}}`+`{a4}over{{x}}^{{2}}`+`{a5}}}$$/수식$$\n\n"\
             "$$수식$$`=`sqrt{{{{`(`{c1}over{{x}})`}}^{{2}}}}`+`sqrt{{{{(x`-`{c2}over{{x}})}}^{{2}}}}`+`sqrt{{{{(x`+`{c3}over{{x}})}}^{{2}}}}$$/수식$$\n\n"\
             "$$수식$$0`&lt;`x`&lt;`1`$$/수식$$    이므로\n\n"\
             "$$수식$$sqrt{{{{`(`{c1}over{{x}})`}}^{{2}}}}`+`sqrt{{{{(x`-`{c2}over{{x}})}}^{{2}}}}`+`sqrt{{{{(x`+`{c3}over{{x}})}}^{{2}}}}$$/수식$$\n\n"\
             "$$수식$$`=`{c1}over{{x}}`-`(x`-`{c2}over{{x}})`+`(x`+`{c3}over{{x}})$$/수식$$\n\n"\
             "$$수식$$`=`{c4}over{{x}}$$/수식$$\n\n"
    c1=random.randint(2,9)
    c2=random.randint(2,9)
    c3=random.randint(2,9)
    while c1==c2 or c2==c3 or c1==c3:
        c1=random.randint(2,9)
        c2=random.randint(2,9)
        c3=random.randint(2,9)
    a1=c1*c1
    a3=2*c2
    a2=c2*c2
    a4=c3*c3
    a5=2*c3
    c4=c1+c2+c3
    proa5=proc_jo(a5,3)
    xa="{c4}over{{x}}".format(c4=c4)
    n=random.randint(1,3)
    can1="{ca1}over{{x}}".format(ca1=c4-2*n)
    can2="{ca2}over{{x}}".format(ca2=c4-n)
    can3="x`+`{n}over{{x}}".format(n=n)
    can4="{n}x`+`{n}over{{x}}".format(n=n)
    can5="{n}x`+`{twn}over{{x}}".format(n=n,twn=2*n)
    can6="{n}x".format(n=n)
    ca=[can1,can2,can3,can4,can5,can6]
    l=random.sample(ca,4)
    l.append(xa)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5,proa5=proa5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-163
def factorization312_Stem_145():
    stem= "서로 다른 두 개의 주사위를 동시에 던져서 나오는 눈의 수를 각각 $$수식$$x`,~y`$$/수식$$  라 할 때, $$수식$$sqrt{{`xy`+`{a1}x`+`{a2}y`+`{a3}`}}$$/수식$$     의 값이 자연수가 될 확률을 구하여 소수 셋째 자리에서 반올림하여 나타내시오.\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "주사위 두 개를 동시에 던져서 나올 수 있는 모든 경우의 수는  $$수식$${{6}}TIMES{{6}}`=`36`$$/수식$$          (가지)\n"\
             "$$수식$$sqrt{{`xy`+`{a1}x`+`{a2}y`+`{a3}`}}`=`sqrt{{`(x`+`{c1}`)(y`+`{c2}`)}}$$/수식$$             이므로\n"\
             "근호 안의 식인 $$수식$$(x`+`{c1}`)(y`+`{c2}`)$$/수식$$       의 값이 자연수의 제곱인 수일 때 자연수가 된다.\n"\
             "이때 $$수식$$1`LEQ`x`LEQ`6`$$/수식$$ 이고 $$수식$$1`LEQ`y`LEQ`6`$$/수식$$ 이므로\n"\
             "$$수식$${c3}`LEQ`x`+`{c1}`LEQ`{c4}`,~{c5}`LEQ`y`+`{c2}`LEQ`{c6}$$/수식$$    이다.\n"\
             "{c7}\n\n"
    a1=random.randint(2,10)
    a2=random.randint(2,10)
    c1=a2
    c2=a1
    a3=c1*c2
    c3=c1+1
    c4=c1+6
    c5=c2+1
    c6=c2+6
    storage=[]
    for i in range(1,7):
        for j in range(1,7):
            if int(math.sqrt((i+c1)*(j+c2))*1000000)%1000000==0:
                storage.append([i,j])
    c7=""
    tmp_s=""
    count=0
    for i in storage:
        count=count+1
        tmp_s=tmp_s+"$$수식$$x`=`{i}`,~y`=`{j}`$$/수식$$      인 경우\n$$수식$$(`{i}`+`{c1}`)(`{j}`+`{c2}`)`=`{ans}$$/수식$$\n".format(i=i[0],j=i[1],c1=c1,c2=c2,ans=(i[0]+c1)*(i[1]+c2))
    tmp=Fraction(count,36)
    mtmp=made_fraction_string(tmp)
    flotmp=int(float(tmp)*10**4)/10**4
    roundtmp=round(flotmp,2)
    c7=tmp_s+"따라서 $$수식$${count}$$/수식$$ 가지 경우가 있으므로 구하는 확률은 $$수식$${mtmp}$$/수식$$ 이고 소수로 나타내면 $$수식$${flotmp} CDOTS$$/수식$$이다.\n따라서 소수 셋째 자리에서 반올림 하면 $$수식$${roundtmp}$$/수식$$".format(count=count,mtmp=mtmp,flotmp=flotmp,roundtmp=roundtmp)
    a=roundtmp
    stem=stem.format(a1=a1,a2=a2,a3=a3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,c7=c7)
    return stem,answer,comment

#3-1-2-164
def factorization312_Stem_146():
    stem= "다음 중 인수분해가 바르게 된 것을 모두 고르면? (정답 $$수식$$2`$$/수식$$개)\n"\
          "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "{c1}\n\n"
    tmp=random.randint(2,5)
    a1=tmp*tmp
    xa1="{{x}}^{{2}}`-`{a1}`=`(`x`-`{tmp}`)(`x`+`{tmp}`)".format(a1=a1,tmp=tmp)
    
    tmp2=random.randint(2,5)
    tmp3=random.randint(3,6)

    a2=Fraction(1,tmp2*tmp2)
    sa2=made_fraction_string(a2)
    rta2=Fraction(1,tmp2)
    srta2=made_fraction_string(rta2)
    a3=tmp3*tmp3

    xa2="{sa2}`{{x}}^{{2}}`-`{a3}`{{y}}^{{2}}`=`(`{srta2}`x`+`{tmp3}`y`)(`{srta2}`x`-`{tmp3}`y`)".format(sa2=sa2,a3=a3,srta2=srta2,tmp3=tmp3)


    tmp4=random.randint(3,6)
    tmp5=random.randint(2,4)

    a4=tmp4*tmp4
    a5=tmp5*tmp5
    x3="{a4}`{{a}}^{{2}}`-`{a5}`{{b}}^{{2}}`=`({a4}`a`+`{a5}`b`)(a`-`b)".format(a4=a4,a5=a5)
    
    tmp6=random.randint(2,4)
    tmp7=random.randint(5,8)
    a6=tmp6*tmp6
    a7=tmp7*tmp7

    x4="{a6}`{{a}}^{{2}}`-`{a7}`{{b}}^{{2}}`=`(`{rta6}`a`+`{a7}`b`)(`{rta6}`a`-`{a7}`b`)".format(a6=a6,a7=a7,rta6=tmp6)
    
    tmp8=random.randint(2,5)
    tmp9=random.randint(6,9)
    a8=tmp8*tmp8
    a9=tmp9*tmp9
    
    
    x5="{a8}`{{x}}^{{2}}`-`{a9}`{{y}}^{{2}}`=`({rta8}x`+`{rta9})({rta8}x`-`{rta9})".format(a8=a8,a9=a9,rta8=tmp8,rta9=tmp9)


    

    c5="{asd5} $$수식$${a8}`{{x}}^{{2}}`-`{a9}`{{y}}^{{2}}`=``({rta8}x`+`{rta9}y`)({rta8}x`-`{rta9}y`)$$/수식$$"

    c4="{asd4} $$수식$${a6}`{{a}}^{{2}}`-`{a7}`{{b}}^{{2}}`=`({rta6}a`-`{rta7}b`)({rta6}a`+`{rta7}b`)$$/수식$$\n"

    c3="{asd3} $$수식$${a4}`{{a}}^{{2}}`-`{a5}`{{b}}^{{2}}`=`(`{tmp4}`a`-`{tmp5}`b`)(`{tmp4}`a`+`{tmp5}`b`)$$/수식$$\n"


    l=[xa1,xa2,x3,x4,x5]
    random.shuffle(l)
    a=""
    if l.index(xa1) > l.index(xa2):
        a="{}".format(answer_dict[l.index(xa2)])+", {}".format(answer_dict[l.index(xa1)])
    else:
        a="{}".format(answer_dict[l.index(xa1)])+", {}".format(answer_dict[l.index(xa2)])
    asd5=answer_dict[l.index(x5)]
    asd4=answer_dict[l.index(x4)]
    asd3=answer_dict[l.index(x3)]
    c5=c5.format(asd5=asd5,a8=a8,a9=a9,rta8=tmp8,rta9=tmp9)
    c4=c4.format(asd4=asd4,rta6=tmp6,rta7=tmp7,a6=a6,a7=a7)
    c3=c3.format(a4=a4,a5=a5,tmp4=tmp4,tmp5=tmp5,asd3=asd3)
    c1=c3+c4+c5
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(c1=c1)
    return stem,answer,comment

#3-1-2-165
def factorization312_Stem_147():
    stem= "$$수식$${a1}{{x}}^{{2}}`-`{a2}`$$/수식$$  {proa2}  $$수식$$x`$$/수식$$의 계수와 상수항 모두 $$수식$$1`$$/수식$$이 아닌 정수인 두 일차식의 곱으로 인수분해 된다. 두 일차식의 합은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`-`{a2}`=`({c1}x`+`{c2})({c1}x`-`{c2})$$/수식$$\n"\
             "따라서 두 일차식의 합은\n"\
             "$$수식$$({c1}x`+`{c2})`+`({c1}x`-`{c2})`=`{c3}x`$$/수식$$\n\n"
    c1=random.randint(2,9)
    c2=random.randint(2,9)
    while c1==c2 or gcd(c1,c2)!=1:
        c1=random.randint(2,9)
        c2=random.randint(2,9)
    a1=c1*c1
    a2=c2*c2
    proa2=proc_jo(a2,3)
    c3=2*c1
    x1="{c2}x".format(c2=c2)
    xa="{c3}x".format(c3=c3)
    x2="{c1}x".format(c1=c1)
    x3=c2
    x4=0
    l=[x1,xa,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,proa2=proa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment


#3-1-2-167
def factorization312_Stem_148():
    stem= "$$수식$${{x}}^{{4}}`-`{a1}`$$/수식$$         {proa1} 인수분해하면\n$$수식$$({{x}}^{{2}}`+`a`)(x`+`b`)(x`+`c`)$$/수식$$        로 나타낼 수 있다. 이때 정수 $$수식$$a`,~b`,~c`$$/수식$$     에 대하여 $$수식$${a2}$$/수식$$   의 값을 구하시오. (단, $$수식$$b`&gt;`c`$$/수식$$  )\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{4}}`-`{a1}`=`({{x}}^{{2}}`+`{c1})({{x}}^{{2}}`-`{c1})$$/수식$$\n"\
             "       $$수식$$`=`({{x}}^{{2}}`+`{c1})(x`+`{c2})(x`-`{c2})$$/수식$$\n"\
             "$$수식$$b`&gt;`c$$/수식$$  이므로 $$수식$$a`=`{c1},~b`=`{c2},~c`=`-`{c2}$$/수식$$\n"\
             "$$수식$$THEREFORE~{a2}`=`{c3}`$$/수식$$\n\n"
    c2=random.randint(2,5)
    c1=c2*c2
    a1=c1*c1
    l1="a`+`b`+`c"
    as1="{c1}`+`{c2}`+`(-{c2})`=`{c4}"
    a1c4=c1

    l2="a`-`b`+`c"
    as2="{c1}`-`{c2}`+`(-{c2})`=`{c4}"
    a2c4=c1-2*c2

    l3="a`+`b`-`c"
    as3="{c1}`+`{c2}`-`(-{c2})`=`{c4}"
    a3c4=c1+2*c2

    l4="a`-`b`-`c"
    as4="{c1}`-`{c2}`-`(-{c2})`=`{c4}"
    a4c4=c1

    l5="-`a`+`b`+`c"
    as5="-{c1}`+`{c2}`+`(-{c2})`=`{c4}"
    a5c4=-c1

    l6="-`a`+`b`-`c"
    as6="-{c1}`+`{c2}`-`(-{c2})`=`{c4}"
    a6c4=-c1+2*c2

    l7="-`a`-`b`+c"
    as7="-{c1}`-`{c2}`+`(-{c2})`=`{c4}"
    a7c4=-c1-2*c2

    l8="-`a`-`b`-`c"
    as8="-{c1}`-`{c2}`-`(-{c2})`=`{c4}"
    a8c4=-c1

    
    cand=[l1,l2,l3,l4,l5,l6,l7,l8]
    a2=random.sample(cand,1)[0]
    ans=[as1,as2,as3,as4,as5,as6,as7,as8]
    anc4=[a1c4,a2c4,a3c4,a4c4,a5c4,a6c4,a7c4,a8c4]
    c3=""
    for i in range(8):
        if a2==cand[i]:
            c3=ans[i].format(c1=c1,c2=c2,c3=c3,c4=anc4[i])
            c4=anc4[i]
    
    proa1=proc_jo(a1,3)
    a=c4
    stem=stem.format(a1=a1,proa1=proa1,a2=a2)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-168
def factorization312_Stem_149():
    stem= "다음 중 $$수식$${{x}}^{a1}`-`{a2}$$/수식$$         의 인수인 것을 모두 고르면?(정답 {a3}개)\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "{c1}\n"\
             "따라서 인수인 것은 {a} 이다.\n\n"
    a1=random.sample([2,4,8],1)[0]
    if a1==2:
        a2=random.sample([4,9,16,25,81],1)[0]
        a4=int(math.sqrt(a2))
        c1="$$수식$${{x}}^{a1}`-`{a2}$$/수식$$\n$$수식$$`=`(x`+`{a4})(x`-`{a4})$$/수식$$".format(a1=a1,a2=a2,a4=a4)
        a3=2
        x1="x`+`{a4}".format(a4=a4)
        x2="x`-`{a4}".format(a4=a4)
        x3="x`+`{ta4}".format(ta4=a4*2)
        x4="x`-`{ta4}".format(ta4=2*a4)
        x5=5
        a="{}, {}".format(answer_dict[0],answer_dict[1])

    elif a1==4:
        a2=random.sample([16,81,256],1)[0]
        a4=int(math.sqrt(a2))
        a5=int(math.sqrt(a4))
        a3=3
        c1="$$수식$${{x}}^{a1}`-`{a2}$$/수식$$\n$$수식$$`=`({{x}}^{{2}}+`{a4})({{x}}^{{2}}`-`{a4})$$/수식$$\n$$수식$$`=`({{x}}^{{2}}`+`{a4})(x`+`{a5})(x`-`{a5})$$/수식$$".format(a1=a1,a2=a2,a4=a4,a5=a5)
        x1="{{x}}^{{2}}`+`{a4}".format(a4=a4)
        x2="x`+`{a5}".format(a5=a5)
        x3="x`-`{a5}".format(a5=a5)
        x4="x`-`{ta5}".format(ta5=2*a5)
        x5="x`+`{ta5}".format(ta5=2*a5)
        a="{}, {}, {}".format(answer_dict[0],answer_dict[1],answer_dict[2])

    else:
        a2=256
        a4=16
        a5=4
        a6=2
        a3=4
        c1="$$수식$${{x}}^{a1}`-`{a2}$$/수식$$\n$$수식$$`=`({{x}}^{{4}}+`{a4})({{x}}^{{4}}`-`{a4})$$/수식$$\n$$수식$$`=`({{x}}^{{4}}`+`{a4})({{x}}^{{2}}`+`{a5})({{x}}^{{2}}`-`{a5})$$/수식$$\n$$수식$$`=`({{x}}^{{4}}`+`{a4})({{x}}^{{2}}`+`{a5})(x`+`{a6})(x`-`{a6})`$$/수식$$".format(a1=a1,a2=a2,a4=a4,a5=a5,a6=a6)
        x1="{{x}}^{{4}}`+`{a4}".format(a4=a4)
        x2="{{x}}^{{2}}`+`{a5}".format(a5=a5)
        x3="x`+`{a6}".format(a6=a6)
        x4="x`-`{a6}".format(a6=a6)
        x5="{{x}}^{{2}}`-`{a6}".format(a6=a6)
        a="{}, {}, {}, {}".format(answer_dict[0],answer_dict[1],answer_dict[2],answer_dict[3])
   
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,a=a)
    return stem,answer,comment

#3-1-2-169
def factorization312_Stem_150():
    stem= "$$수식$${a1}`{{x}}^{{2}}`-`{a2}`{{y}}^{{2}}`=`C(Ax`+`By)(Ax`-`By )$$/수식$$           일 때, 정수 $$수식$$A,~B,~C`$$/수식$$     의 곱 $$수식$$ABC$$/수식$$ 의 값을 구하시오.\n(단, $$수식$$A`&gt;`0,~B`&gt;`0$$/수식$$       )\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{2}}`-`{a2}`{{y}}^{{2}}$$/수식$$\n"\
             "$$수식$$`=`{c1}({c2}{{x}}^{{2}}`-`{c3}{{y}}^{{2}})$$/수식$$\n"\
             "$$수식$$`=`{c1}({c4}x`+`{c5}y)({c4}x`-`{c5}y)$$/수식$$\n"\
             "$$수식$$THEREFORE~A`=`{c4}`,~B`=`{c5}`,~C`=`{c1}$$/수식$$\n"\
             "$$수식$$THEREFORE~ABC`=`{c4}TIMES{c5}TIMES{c1}`=`{c6}$$/수식$$\n\n"
    tmp1=random.randint(2,5)
    tmp2=random.randrange(3,8,2)
    tmp3=random.randrange(2,9,2)
    while tmp3==6:
        tmp3=random.randrange(2,9,2)
    a1=tmp1*tmp2*tmp2
    a2=tmp1*tmp3*tmp3
    c1=tmp1
    c2=tmp2*tmp2
    c3=tmp3*tmp3
    c4=tmp2
    c5=tmp3
    c6=c4*c5*c1
    
    a=c6
    stem=stem.format(a1=a1,a2=a2)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6)
    return stem,answer,comment

#3-1-2-170
def factorization312_Stem_151():
    stem= "$$수식$${a1}{{x}}^{{2}}`-`{a2}{{y}}^{{2}}`=`a(bx`+`cy)(bx`+`dy)$$/수식$$           일 때, 정수 $$수식$$a`,~b`,~c`,~d`$$/수식$$        에 대하여 식 $$수식$${{ab}}over{{c}}`+`{{1}}over{{d}}$$/수식$$        의 값은?(단, $$수식$$b`&gt;`0,~c`&gt;`0,~d`&lt;`0$$/수식$$           )\n\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`-`{a2}{{y}}^{{2}}$$/수식$$\n"\
             "$$수식$$`=`{c1}({c2}`x`+`{c3}`y`)({c2}`x``-`{c3}`y`)$$/수식$$\n"\
             "따라서 $$수식$$a`=`{c1},~b`=`{c2},~c={c3},~d`=`-{c3}$$/수식$$             이므로\n"\
             "$$수식$${{ab}}over{{c}}`+`{{1}}over{{d}}`=`{{{c1}TIMES{c2}}}over{c3}`-`{{1}}over{c3}`=`{c4}$$/수식$$\n\n"
    tmp1=random.randint(2,5)
    tmp2=random.randrange(3,7,2)
    tmp3=random.randrange(2,9,2)
    while tmp3==6:
        tmp3=random.randrange(2,9,2)
    a1=tmp1*tmp2*tmp2
    a2=tmp1*tmp3*tmp3
    c1=tmp1
    c2=tmp2
    c3=tmp3
    c4=Fraction(c1*c2,c3)-Fraction(1,c3)
    
    l=made_answer_cand_2(c4.numerator,c4.denominator)
    k=l[2]
    if (c4*10)%10==0:
        c4=int(c4)
        l=made_answer_cand_1(c4)
        random.shuffle(l)
        a=answer_dict[l.index(c4)]
    else:
        c4=made_fraction_string(c4)
        random.shuffle(l)
        a=answer_dict[l.index(k)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-171
def factorization312_Stem_152():
    stem= "다음 중 $$수식$${{x}}^{{3}}`-`{a1}`x`$$/수식$$          의 인수인 것은?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$        ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{3}}`-`{a1}`x`=`x(`{{x}}^{{2}}`-`{a1}`)`=`x(`x`-`{c1})(`x`+{c1})`$$/수식$$\n"\
             "따라서 인수인 것은 $$수식$${answer_re}$$/수식$$        이다.\n\n"
    tmp=random.randint(2,5)
    a1=tmp*tmp
    c1=tmp
    tem1="x"
    tem2="x`+`{c1}".format(c1=c1)
    tem3="x`-`{c1}".format(c1=c1)

    answer_cand=[tem1,tem2,tem3,tem1+"("+tem2+")",tem1+"("+tem3+")","("+tem2+")"+"("+tem3+")","x"+"("+tem2+")"+"("+tem3+")"]
    answer_re=random.sample(answer_cand,1)[0]
    tmp4=random.randint(6,10)
    tmp5=random.randint(6,10)
    while tmp4==tmp5:
        tmp4=random.randint(6,10)
        tmp5=random.randint(6,10)
    wt1="{{x}}^{{2}}"
    wt2="x`-`{}".format(tmp4)
    wt3="x`+`{}".format(tmp4)
    wt4="x(x`+`{})".format(tmp5)
    wt5="(x`+`{})(x`+{})".format(tmp4,tmp5)
    wl=[wt1,wt2,wt3,wt4,wt5]
    wll=random.sample(wl,4)
    l=wll[:]
    l.append(answer_re)
    random.shuffle(l)
    a=answer_dict[l.index(answer_re)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,c1=c1,answer_re=answer_re)
    return stem,answer,comment

#3-1-2-172
def factorization312_Stem_153():
    stem= "$$수식$${a1}`{{x}}^{{3}}`y`-`{a2}`x`y`$$/수식$$    를 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{3}}`y`-`{a2}`x`y`=`x`y`({a1}`{{x}}^{{2}}`-`{a2})`=`x`y`({c1}`x`+`{c2})`({c1}x`-`{c2})$$/수식$$\n\n"
    tmp1=random.randint(2,9)
    tmp2=random.randint(2,9)
    while tmp1==tmp2 or gcd(tmp1,tmp2)!=1:
        tmp1=random.randint(2,9)
        tmp2=random.randint(2,9)
    a1=tmp1*tmp1
    a2=tmp2*tmp2
    c1=tmp1
    c2=tmp2
    xa="x`y`({c1}`x`+`{c2})`({c1}x`-`{c2})".format(c1=c1,c2=c2)
    x1="x`({c1}`x`+`{c2}`y`)`({c1}x`-`{c2}`y`)".format(c1=c1,c2=c2)
    x2="x`y`({c1}`x`+`{c2})`({c1}y`-`{c2})".format(c1=c1,c2=c2)
    x3="{{x}}^{{2}}`y`({c1}`x`+`{c2})".format(c1=c1,c2=c2)
    x4="{{x}}^{{2}}({c1}`x`+`{c2})`({c1}y`-`{c2})".format(c1=c1,c2=c2)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2)
    return stem,answer,comment

#3-1-2-173
def factorization312_Stem_154():
    stem= "$$수식$${a1}`{{a}}^{{2}}`(y`-`x)`+`{a2}`{{b}}^{{2}}`(x`-`y)`$$/수식$$         를 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{a}}^{{2}}`(y`-`x)`+`{a2}`{{b}}^{{2}}`(x`-`y)`$$/수식$$\n"\
             "$$수식$$`=`-`{a1}`{{a}}^{{2}}`(x`-`y)`+`{a2}`{{b}}^{{2}}`(x`-`y)$$/수식$$\n"\
             "$$수식$$`=`-`(x`-`y)({a1}`{{a}}^{{2}}`-`{a2}`{{b}}^{{2}})$$/수식$$\n"\
             "$$수식$$`=(y`-`x)({c1}`a`+`{c2}`b`)`({c1}a`-`{c2}`b`)$$/수식$$\n\n"
    tmp1=random.randint(2,9)
    tmp2=random.randint(2,9)
    while tmp1==tmp2 or gcd(tmp1,tmp2)!=1:
        tmp1=random.randint(2,9)
        tmp2=random.randint(2,9)
    a1=tmp1*tmp1
    a2=tmp2*tmp2
    c1=tmp1
    c2=tmp2
    xa="(y`-`x)({c1}`a`+`{c2}`b`)`({c1}a`-`{c2}`b`)".format(c1=c1,c2=c2)
    x1="(x`-`y)({c1}`a`+`{c2}`b`)`({c1}a`-`{c2}`b`)".format(c1=c1,c2=c2)
    x2="(y`-`x){{({c1}`a`+`{c2}`b`)}}^{{2}}".format(c1=c1,c2=c2)
    x3="(x`-`y)({a1}`{{a}}^{{2}}`+`{a2}`{{b}}^{{2}})".format(a1=a1,a2=a2)
    x4="(y`-`x)({a1}`{{a}}^{{2}}`+`{a2}`{{b}}^{{2}})".format(a1=a1,a2=a2)
    l1=[x2,x3,x4]
    l2=[xa,x1]
    random.shuffle(l1)
    random.shuffle(l2)
    l=l1+l2
    
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2)
    return stem,answer,comment

#3-1-2-174
def factorization312_Stem_155():
    stem= "자연수 $$수식$$a`,~b$$/수식$$   에 대하여 $$수식$$a`&gt;`b`$$/수식$$    이고, $$수식$$sqrt{{{{a}}^{{2}}`-`{a1}}}`=`b`$$/수식$$    가 성립할 때, $$수식$${a2}`a`$$/수식$$의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$sqrt{{{{a}}^{{2}}`-`{a1}}}`=`b`$$/수식$$   의 양변을 제곱하면\n"\
             "$$수식$${{a}}^{{2}}`-`{a1}`=`{{b}}^{{2}}`,~{{a}}^{{2}}`-`{{b}}^{{2}}`=`{a1}$$/수식$$\n"\
             "$$수식$$(a`+`b)`(a`-`b)`=`{a1}$$/수식$$\n"\
             "$$수식$$a`,~b$$/수식$$    가 자연수이고 $$수식$$a`&gt;`b`$$/수식$$   이므로\n"\
             "$$수식$$cases{{``a`+`b`=`{a1}#``a`-`b`=`1`$$/수식$$\n\n"\
             "연립방정식을 풀면 $$수식$$a`=`{c1}`,~b`=`{c2}$$/수식$$\n"\
             "따라서 $$수식$${a2}a`=`{c3}$$/수식$$\n\n"
    num=[11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
    a1=random.sample(num,1)[0]
    a2=random.randint(2,4)
    c1=int((a1+1)/2)
    c2=int((a1-1)/2)
    c3=a2*c1
    l=made_answer_cand_1(c3)
    random.shuffle(l)
    a=answer_dict[l.index(c3)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-175
def factorization312_Stem_156():
    stem= "다음 중 $$수식$${{x}}^{{2}}`{a1}x`y`{a2}`{{y}}^{{2}}$$/수식$$                  의 인수인 것을 모두 고르면? (정답 $$수식$$2`$$/수식$$개)\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`{a1}x`y`{a2}`{{y}}^{{2}}`=`(`x`{c1}`y`)(`x`{c2}`y`)$$/수식$$\n"\
             "따라서 인수인 것은 $$수식$$`x`{c1}`y`$$/수식$$  , $$수식$$`x`{c2}`y`$$/수식$$   이다.\n\n"
    c1=random.randint(-9,9)
    c2=random.randint(-9,9)
    while abs(c1)==abs(c2) or abs(c1)==1 or abs(c2)==1 or c1*c2==0:
        c1=random.randint(-9,9)
        c2=random.randint(-9,9)
    a1=c1+c2
    while abs(a1)==1:
        c1=random.randint(-9,9)
        c2=random.randint(-9,9)
        while abs(c1)==abs(c2) or abs(c1)==1 or abs(c2)==1 or c1*c2==0:
            c1=random.randint(-9,9)
            c2=random.randint(-9,9)
        a1=c1+c2
    a2=c1*c2
    rand=a1*a2
    ce=[a1,a2,rand,c2,c1]
    ce.sort()
    l=[0,0,0,0,0]
    sa1=made_sign_string(a1)
    sa2=made_sign_string(a2)
    sc1=made_sign_string(c1)
    sc2=made_sign_string(c2)
    xa1="`x`{c1}`y".format(c1=sc1)
    xa2="`x`{c2}`y".format(c2=sc2)
    x3="`x`{a1}`y".format(a1=sa1)
    x4="x`{a2}`y`".format(a2=sa2)
    x5="x``{rand}`y`".format(rand=made_sign_string(rand))
    l[ce.index(c1)]=xa1
    l[ce.index(c2)]=xa2
    l[ce.index(a1)]=x3
    l[ce.index(a2)]=x4
    l[ce.index(rand)]=x5
    
    if l.index(xa1) > l.index(xa2):
        a="{}, {}".format(answer_dict[l.index(xa2)],answer_dict[l.index(xa1)])
    else:
         a="{}, {}".format(answer_dict[l.index(xa1)],answer_dict[l.index(xa2)])
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=sa1,a2=sa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=sa1,a2=sa2,c1=sc1,c2=sc2)
    return stem,answer,comment

#3-1-2-176
def factorization312_Stem_157():
    stem= "일차항의 계수가 $$수식$$1`$$/수식$$인 두 일차식의 곱이 $$수식$${{x}}^{{2}}`{a1}x`{a2}$$/수식$$              일 때, 이 두 일차식의 합은?\n"\
          "① $$수식$${x1}$$/수식$$	    ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$        ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`{a1}x`{a2}`=`(x`{c1}`)(x`{c2})`$$/수식$$\n"\
             "따라서 두 일차식은 $$수식$$x`{c1}`,~x`{c2}`$$/수식$$      이므로 이들의 합은\n"\
             "$$수식$$x`{c1}`+`x`{c2}`=`2x`{c3}$$/수식$$\n\n"
    c1=random.randint(-9,9)
    c2=random.randint(-9,9)
    while abs(c1)==abs(c2) or abs(c1)==1 or abs(c2)==1 or c1*c2==0 or abs(c1+c2)==1:
        c1=random.randint(-9,9)
        c2=random.randint(-9,9)
    a1=c1+c2
    a2=c1*c2
    c3=a1
    c3=made_sign_string(c3)
    xa="2x`{c3}`".format(c3=c3)
    x1="{c3}".format(c3=a1)
    x2="x`{c3}".format(c3=c3)
    x3="2x`{mc3}".format(mc3=made_sign_string(-a1))
    x4="2x`{tc3}".format(tc3=made_sign_string(2*a1))
    
    a2=made_sign_string(a2)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    if a1>0:
        ll=[x3,xa,x4]
    else:
        ll=[x4,xa,x3]
    l=[x1,x2]+ll
    a1=made_sign_string(a1)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-177
def factorization312_Stem_158():
    stem= "$$수식$${{x}}^{{2}}`{a1}xy`{a2}`{{y}}^{{2}}$$/수식$$                  을 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`{a1}xy`{a2}`{{y}}^{{2}}`=`(`x`{c1}`y`)(`x`{c2}`y`)$$/수식$$\n\n"
    a2=random.sample([24,30,40,42,54,56,66,70,78,88],1)[0]
    cd=[]
    
    for i in range(1,a2+1):
        if a2%i==0:
            cd.append(i)
    tmp2=cd[:]
    tmp3=cd[1:7]
    si=random.sample([-1,1],1)[0]
    a2=a2*si
    tmp=random.sample(tmp3,1)[0]
    ind=tmp3.index(tmp)
    c1=tmp
    c2=tmp3[5-ind]
    if si==-1:
        c1=-tmp
    a1=c1+c2
    tmp2.remove(abs(c1))
    tmp2.remove(c2)
    tmp2.pop(0)
    tmp2.pop(len(tmp2)-1)

    a1=made_sign_string(a1)
    a2=made_sign_string(a2)
    mc1=made_sign_string(-c1)
    mc2=made_sign_string(-c2)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    xa="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=c1,c2=c2)
    x1="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=mc1,c2=mc2)
    x2="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=made_sign_string(tmp2[0]),c2=made_sign_string(si*tmp2[3]))
    x3="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=made_sign_string(tmp2[1]),c2=made_sign_string(si*tmp2[2]))
    x4="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=made_sign_string(tmp2[0]),c2=made_sign_string(-si*tmp2[3]))
    x5="(`x`{c1}`y`)(`x`{c2}`y`)".format(c1=made_sign_string(tmp2[1]),c2=made_sign_string(-si*tmp2[2]))
    l=random.sample([x1,x2,x3,x4,x5],4)
    l.append(xa)
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2)
    return stem,answer,comment
   
#3-1-2-178
def factorization312_Stem_159():
    stem= "$$수식$${{x}}^{{2}}`+`ax`{a1}`=`(`x`+`{a2}`)(`x`+`b`)~$$/수식$$                            일 때, 상수 $$수식$$a`,~b`$$/수식$$    에 대하여 $$수식$$a`+`b$$/수식$$         의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`+`ax`{a1}`=`(`x`+`{a2}`)(`x`+`b)$$/수식$$                             에서\n"\
             "$$수식$$a`=`{a2}`+`b$$/수식$$    이고 $$수식$${a1}`=`{a2}TIMES{{b}}$$/수식$$ 이므로\n"\
             "$$수식$$b`=`{c1}`,~a`=`{a2}`{c1}`=`{c2}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`+`b`=`{c1}`{sc2}`=`{c3}$$/수식$$\n\n"
    a2=random.randint(2,4)
    a1=a2*random.randint(-5,-2)
    c1=int(a1/a2)
    c2=a2+c1
    c3=c1+c2
    a1=made_sign_string(a1)
    c1=made_sign_string(c1)
    sc2=made_sign_string(c2)
    l=made_answer_cand_1(c3)
    random.shuffle(l)
    a=answer_dict[l.index(c3)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3,sc2=sc2)
    return stem,answer,comment

#3-1-2-179
def factorization312_Stem_160():
    stem= "$$수식$$(x`{a1})(x`{a2})`{a3}`$$/수식$$              {proa3} 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$(x`{a1})(x`{a2})`{a3}`$$/수식$$\n"\
             "$$수식$$`=`{{x}}^{{2}}`{c1}x``{c2}`{a3}$$/수식$$\n"\
             "$$수식$$`=`{{x}}^{{2}}`{c1}x`{c3}`$$/수식$$\n"\
             "$$수식$$`=`(`x`{c4}`)(`x`{c5}`)$$/수식$$\n\n"
    c4=random.randint(-9,9)
    c5=random.randint(-9,9)
    while abs(c4)==abs(c5) or abs(c4)==1 or abs(c5)==1 or c4*c5==0 or abs(c4+c5)==1:
        c4=random.randint(-9,9)
        c5=random.randint(-9,9)
    c3=c4*c5
    c1=c4+c5
    a1=random.randint(-9,9)
    while abs(a1)==1 or a1==0 or abs(c1)==abs(a1) or c3-a1*(c1-a1)==0:
        a1=random.randint(-9,9)
    a2=c1-a1
    c2=a1*a2
    a3=c3-c2
    proa3=proc_jo(a3,3)
    a1=made_sign_string(a1)
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    mc1=made_sign_string(-c1)
    mc2=made_sign_string(-c2)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    
    c3=made_sign_string(c3)
    mc5=made_sign_string(-c5)
    mc4=made_sign_string(-c4)
    twc5=made_sign_string(2*c5)
    twc4=made_sign_string(2*c4)
    mtwc5=made_sign_string(-2*c5)
    mtwc4=made_sign_string(-2*c4)
    c4=made_sign_string(c4)
    c5=made_sign_string(c5)
    xa="(`x`{c4}`)(`x`{c5}`)".format(c4=c4,c5=c5)
    x1="(`x`{c4}`)(`x`{c5}`)".format(c4=mc4,c5=mc5)
    x2="(`x`{c4}`)(`x`{c5}`)".format(c4=mc1,c5=mc2)
    x3="(`x`{c4}`)(`x`{c5}`)".format(c4=twc4,c5=twc5)
    x4="(`x`{c4}`)(`x`{c5}`)".format(c4=mtwc4,c5=mtwc5)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,proa3=proa3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

#3-1-2-180
def factorization312_Stem_161():
    stem= "일차항의 계수가 $$수식$$1`$$/수식$$인 두 일차식의 곱이 $$수식$$(`x`{a1}`)(`x`{a2})`{a3}x`$$/수식$$          일 때, 이 두 일차식의 합은?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$(`x`{a1}`)(`x`{a2})`{a3}x`=`({{x}}^{{2}}`{c1}`x`{c2}){a3}x$$/수식$$\n"\
             "$$수식$$`=`{{x}}^{{2}}`{c3}x`{c2}`$$/수식$$\n"\
             "$$수식$$`=`(x`{c4}`)(x`{c5}`)$$/수식$$\n"\
             "$$수식$$THEREFORE~(`x`{c4}`)`+`(`x`{c5}`)`=`2x`{c6}`$$/수식$$\n\n"
    a1=random.randint(-9,9)
    a2=random.randint(-9,9)
    while abs(a1)==abs(a2) or abs(a1)==1 or abs(a2)==1 or a1*a2==0 or a2 > a1 or abs(a1+a2)==1:
        a1=random.randint(-9,9)
        a2=random.randint(-9,9)
    a3=random.sample([-2*(a1+a2),a1*a2+1-a1-a2],1)[0]
    c1=a2+a1
    c2=a1*a2
    c3=c1+a3
    if a3==-2*(a1+a2):
        c4=-a1
        c5=-a2
    else:
        c4=a1*a2
        c5=1
    c6=c4+c5
    a1=made_sign_string(a1)
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    c3=made_sign_string(c3)
    c4=made_sign_string(c4)
    c5=made_sign_string(c5)
    abc6=abs(c6)
    tmp=c6
    dc6=made_sign_string(2*c6)
    c6=made_sign_string(c6)
    xa="2x`{c6}".format(c6=c6)
    x1="{abc6}".format(abc6=abc6)
    x3="x`{a1}".format(a1=a1)
    x2="x`{a2}".format(a2=a2)
    x5="2x`{dc6}".format(dc6=dc6)
    x4=xa
    if tmp > tmp*2:
        x5,x4=xa,x5
        a=answer_dict[4]
    else:
        a=answer_dict[3]
    
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6)
    return stem,answer,comment


#3-1-2-181
def factorization312_Stem_162():
    stem= "다음 식을 인수분해 하면?\n"\
          "$$수식$$({a1}`-`{a2}y`)`{{x}}^{{2}}`+`({a2}`y`-`{a1})x`+`{a3}y`-`{a4}$$/수식$$\n"\
          "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$({a1}`-`{a2}y`)`{{x}}^{{2}}`+`({a2}`y`-`{a1})x`+`{a3}y`-`{a4}$$/수식$$\n"\
             "$$수식$$`=`-`({a2}y`-`{a1}){{x}}^{{2}}`+`({a2}`y`-`{a1})x`+`{c1}({a2}`y`-`{a1})$$/수식$$\n"\
             "$$수식$$`=`-`({a2}y`-`{a1})({{x}}^{{2}}`-`x`-{c1})`$$/수식$$\n"\
             "$$수식$$`=`-`({a2}y`-`{a1})(x`+`{c2})(x`-`{c3})$$/수식$$\n\n"
    a1=random.randint(2,9)
    a2=random.randint(2,9)
    while abs(a1)==abs(a2) or abs(a1)==1 or abs(a2)==1 or a1*a2==0:
        a1=random.randint(2,9)
        a2=random.randint(2,9)
    tmp=random.randint(2,4)
    a3=tmp*(tmp+1)*a2
    a4=tmp*(tmp+1)*a1
    c1=tmp*(tmp+1)
    c2=tmp
    c3=tmp+1
    xa="`-`({a2}y`-`{a1})(x`+`{c2})(x`-`{c3})".format(a1=a1,a2=a2,c2=c2,c3=c3)
    x1="({a2}y`-`{a1})(x`+`{c2})(x`-`{c3})".format(a1=a1,a2=a2,c2=c2,c3=c3)
    x2="`-`({a2}y`-`{a1})(x`-`{c2})(x`+`{c3})".format(a1=a1,a2=a2,c2=c2,c3=c3)
    x3="`-`({a2}y`+`{a1})(x`-`{c2})(x`+`{c3})".format(a1=a1,a2=a2,c2=c2,c3=c3)
    x4="({a2}y`-`{a1})(x`-`{c2})(x`-`{c3})".format(a1=a1,a2=a2,c2=c2,c3=c3)
    l=[x1,x2,x3,x4,xa]
    
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,c1=c1,c2=c2,c3=c3)
    return stem,answer,comment

#3-1-2-183
def factorization312_Stem_163():
    stem= "$$수식$${{x}}^{{2}}`+`ax`{sa1}$$/수식$$            이 $$수식$$(x`+`b)(x`+`c)$$/수식$$       로 인수분해될 때, 실수 $$수식$$a`$$/수식$$의 최댓값을 구하시오. (단, $$수식$$b`,~c`$$/수식$$   는 정수이다.)\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`+`ax`{sa1}`=`(x`+`b)(x`+`c)$$/수식$$                             에서\n"\
             "$$수식$$a`=`b`+`c`,~bc={a1}$$/수식$$\n"\
             "곱이 $$수식$${a1}$$/수식$$ 이 되는 두 정수 $$수식$$b`,~c`$$/수식$$   는\n"\
             "$$수식$${a1}`,~1`$$/수식$$   과 $$수식$${ma1}`,~-1`$$/수식$$   이므로\n"\
             "$$수식$$a`$$/수식$$ 의 최댓값은\n"\
             "$$수식$${c1}$$/수식$$\n\n"
    num=[11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
    a1=(random.sample([-1,1],1)[0])*random.sample(num,1)[0]
    ma1=-a1
    c1=abs(a1+1)
    a=c1
    sa1=made_sign_string(a1)
    
    stem=stem.format(sa1=sa1)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,c1=c1,ma1=ma1,sa1=sa1)
    return stem,answer,comment

3-1-2-184
def factorization312_Stem_164():
    stem= "$$수식$${{x}}^{{2}}`+`Ax`+`{a1}`=`(x`+`a)(x`+`b)$$/수식$$                              일 때, 다음 중 상수 $$수식$$A`$$/수식$$의 값이 될 수 없는 것은? (단, $$수식$$a`,~b`$$/수식$$    는 정수이다.)\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`+`Ax`+`{a1}`=`(x`+`a)(x`+`b)$$/수식$$\n"\
             "$$수식$$`=`{{x}}^{{2}}`+`(a`+`b)x`+`ab`$$/수식$$\n"\
             "에서 $$수식$$A`=`a`+b`,~{a1}`=`ab`$$/수식$$\n"\
             "이때 곱이 $$수식$${a1}`$$/수식$$인 두 정수는  {c1}     이므로\n"\
             "$$수식$$A`$$/수식$$ 의 값은 {c2}      {proendc2} 될 수 있다.\n"\
             "따라서 $$수식$$A`$$/수식$$의 값이 될 수 없는 수는 $$수식$${c3}$$/수식$$ 이다.\n\n"
    a1=random.randint(12,99)
    fac=get_factor(a1)
    while len(fac) <= 4:
        a1=random.randint(12,99)
        fac=get_factor(a1)
    fac_pair=made_facotr_pair(fac)
    c1=""
    canl=[]
    for i in range(len(fac_pair)):
        if i==len(fac_pair)-1:
            c1=c1+"\n"+"$$수식$${}`,~{}$$/수식$$     또는      $$수식$${}`,~{}$$/수식$$".format(fac_pair[i][0],fac_pair[i][1],-fac_pair[i][0],-fac_pair[i][1])
            canl.append(fac_pair[i][0]+fac_pair[i][1])
            canl.append(-fac_pair[i][0]+(-fac_pair[i][1]))
        else:
            c1=c1+"\n"+"$$수식$${}`,~{}$$/수식$$     또는      $$수식$${}`,~{}$$/수식$$".format(fac_pair[i][0],fac_pair[i][1],-fac_pair[i][0],-fac_pair[i][1])+"        또는 "
            canl.append(fac_pair[i][0]+fac_pair[i][1])
            canl.append(-fac_pair[i][0]+(-fac_pair[i][1]))
    c2="$$수식$${}$$/수식$$".format(canl[0])
    for i in range(1,len(canl)):
        c2=c2+"  ,   $$수식$${}$$/수식$$".format(canl[i])
    wa=random.sample(canl,1)[0]
    wa=wa+3
    while (wa in canl) or (wa==0) :
        wa=wa+random.randint(3,10)
    proendc2=proc_jo(canl[-1],0)
    
    l=random.sample(canl,4)
    l.append(wa)
    c3=wa
    random.shuffle(l)
    a=answer_dict[l.index(wa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,c1=c1,c2=c2,c3=c3,proendc2=proendc2)
    return stem,answer,comment

#3-1-2-185
def factorization312_Stem_165():
    stem= "다음 중 $$수식$${a1}`{{x}}^{{2}}`{{y}}^{{2}}`{a2}`{{x}}`{{y}}^{{2}}`{a3}`{{y}}^{{2}}$$/수식$$            의 인수가 아닌 것은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{2}}`{{y}}^{{2}}`{a2}`{{x}}`{{y}}^{{2}}`{a3}`{{y}}^{{2}}$$/수식$$\n"\
             "$$수식$$`=`{{y}}^{{2}}({a1}`{{x}}^{{2}}`{a2}{{x}}`{a3})`$$/수식$$\n"\
             "$$수식$$`=`{{y}}^{{2}}({c1}x`{c2})({c3}x`{c4})$$/수식$$\n"\
             "따라서 인수가 아닌 것은$$수식$${wa}$$/수식$$   이다.\n\n"
    c1=random.randint(2,9)
    c2=random.randint(-9,9)
    c3=random.randint(2,9)
    c4=random.randint(-9,9)
    a1=c1*c3
    a2=c1*c4+c2*c3
    a3=c2*c4
    while abs(c1)==1 or abs(c2)==1 or abs(c3)==1 or abs(c4)==1 or c1*c2*c3*c4==0 or c1*c4+c2*c3==0 or c2==c4 or c1==c3 or abs(gcd(a1,a2))!=1 or abs(gcd(a1,a3))!=1 or abs(gcd(a2,a3))!=1:
        c1=random.randint(2,9)
        c2=random.randint(-9,9)
        c3=random.randint(2,9)
        c4=random.randint(-9,9)
        a1=c1*c3
        a2=c1*c4+c2*c3
        a3=c2*c4
    
    tmpc2=c2
    tmpc4=c4
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c2=made_sign_string(c2)
    c4=made_sign_string(c4)
    xa1="y`"
    xa2="{{y}}^{{2}}"
    xa3="{c1}x`{c2}".format(c1=c1,c2=c2)
    xa4="{c3}x`{c4}".format(c3=c3,c4=c4)
    wa="{c1}x`{c4}".format(c1=c1,c4=c4)
    if c1>c3:
        if tmpc2>tmpc4:
            l=[xa4,wa,xa3,xa1,xa2]
        else:
            l=[xa4,xa3,wa,xa1,xa2]
    else:
        if tmpc2>tmpc4:
            l=[wa,xa3,xa4,xa1,xa2]
        else:
            l=[xa3,wa,xa4,xa1,xa2]
    a=answer_dict[l.index(wa)]
    
   
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,wa=wa)
    return stem,answer,comment

#3-1-2-186
def factorization312_Stem_166():
    stem= "$$수식$${a1}`{{x}}^{{2}}`{a2}`x`{a3}`$$/수식$$     {proa3} 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{2}}`{a2}`x`{a3}`=`({c1}`x`{c2})({c3}`x`{c4})$$/수식$$\n\n"
    c1=random.randint(2,9)
    c2=random.randint(-9,9)
    c3=random.randint(2,9)
    c4=random.randint(-9,9)
    while abs(c1)==1 or abs(c2)==1 or abs(c3)==1 or abs(c4)==1 or c1*c2*c3*c4==0 or c1*c4+c2*c3==0 or c2==c4 or c1==c3 or gcd(c1,c2)!=1 or gcd(c3,c4)!=1 or c1/c2==c3/c4:
        c1=random.randint(2,9)
        c2=random.randint(-9,9)
        c3=random.randint(2,9)
        c4=random.randint(-9,9)
    a1=c1*c3
    a2=c1*c4+c2*c3
    a3=c2*c4
    if a1>0 and a2>0 and a3>0:
        c1,c2,c3,c4=abs(c1),abs(c2),abs(c3),abs(c4)
    tmpc2=c2
    tmpc4=c4
    proa3=proc_jo(a3,3)
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c2=made_sign_string(c2)
    c4=made_sign_string(c4)
    
    
    xa="({c1}`x`{c2})({c3}`x`{c4})".format(c1=c1,c2=c2,c3=c3,c4=c4)
    x1="({c1}`x`{c2})({c3}`x`{c4})".format(c1=c1,c2=made_sign_string(-tmpc2),c3=c3,c4=c4)
    x2="({c1}`x`{c2})({c3}`x`{c4})".format(c1=c1,c2=c2,c3=c3,c4=made_sign_string(-tmpc4))
    x3="({c1}`x`{c2})({c3}`x`{c4})".format(c1=-c1,c2=c2,c3=c3,c4=c4)
    x4="({c1}`x`{c2})({c3}`x`{c4})".format(c1=c1,c2=c2,c3=-c3,c4=c4)
    l=[xa,x1,x2,x3,x4]
    
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,proa3=proa3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-187
def factorization312_Stem_167():
    stem= "$$수식$${{(x`{a1})}}^{{2}}`+`({a2}x`{a3}`)(x`{a4}`)`{a5}$$/수식$$                                 {proa5} 인수분해 하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{(x`{a1})}}^{{2}}`+`({a2}x`{a3}`)(x`{a4}`)`{a5}$$/수식$$\n"\
             "$$수식$$`=`({{x}}^{{2}}`{c1}x`{c2})`+`({a2}{{x}}^{{2}}`{c3}x`{c4})`{a5}$$/수식$$\n"\
             "$$수식$$`=`{c5}`{{x}}^{{2}}`{c6}`x`{c7}`$$/수식$$\n"\
             "$$수식$$`=`3`(x`{c8}`)(x`{c9}`)$$/수식$$\n\n"
    a2=2
    a4=random.randint(-4,4)*2
    a3=random.sample([-9,-7,-5,-3,-1,1,3,5,7,9],1)[0]
    a1=int(a4/2)+a3
    while a4*a3==0 or abs(a3)==1 or abs(a4)==1 or abs(a4)==abs(a3) or -a1**2+2*a3*a4==0 or abs(a2*a4+a3)==1:
        a4=random.randint(-4,4)*2
        a3=random.sample([-9,-7,-5,-3,-1,1,3,5,7,9],1)[0]
        a1=int(a4/2)+a3
    a5=-a1**2+2*a3*a4
    proa5=proc_jo(a5,3)
    c1=2*a1
    c2=a1*a1
    c3=a3+a2*a4
    c4=a3*a4
    c5=1+a2
    c6=c1+c3
    c7=c2+c4+a5
    c8=a3
    c9=a4
    tmc8=c8
    tmc9=c9
    a1=made_sign_string(a1)
    a3=made_sign_string(a3)
    a4=made_sign_string(a4)
    a5=made_sign_string(a5)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    c3=made_sign_string(c3)
    c4=made_sign_string(c4)
    c6=made_sign_string(c6)
    c7=made_sign_string(c7)
    c8=made_sign_string(c8)
    c9=made_sign_string(c9)
    xa="`3`(x`{c8}`)(x`{c9}`)".format(c8=c8,c9=c9)
    x1="(x`{c8}`)(x`{c9}`)".format(c8=c8,c9=c9)
    x2="(x`{mc8}`)(x`{mc9}`)".format(mc8=made_sign_string(-tmc8),mc9=made_sign_string(tmc9))
    x3="`3`(x`{mc8}`)(x`{mc9}`)".format(mc8=made_sign_string(-tmc8),mc9=made_sign_string(-tmc9))
    x4="`2`(x`{c8}`)(x`{c9}`)".format(c8=c8,c9=c9)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,proa5=proa5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,c7=c7,c8=c8,c9=c9)
    return stem,answer,comment

#3-1-2-188
def factorization312_Stem_168():
    stem= "$$수식$${a1}`{{x}}^{{2}}+`{a2}x`-`A$$/수식$$     가$$수식$$({a3}x`-`{a4})({a5}x`+`B)`$$/수식$$       로 인수분해될 때, $$수식$$A`+`B$$/수식$$  의 값을 구하시오. (단, $$수식$$A`,~B`$$/수식$$   는 상수이다.)\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{2}}`+`{a2}x`-`A`=`({a3}x`-`{a4})({a5}x`+`B)`$$/수식$$            에서\n"\
             "$$수식$${a3}B`-`{c1}`=`{a2}`$$/수식$$    이므로\n"\
             "$$수식$$B`=`{c2}$$/수식$$\n"\
             "$$수식$$A`=`{a4}B`=`{a4}TIMES{c2}`=`{c3}$$/수식$$\n"\
             "$$수식$$THEREFORE~A`+`B`=`{c2}`+`{c3}`=`{c4}$$/수식$$\n\n"
    a3=random.randint(2,3)
    a2=random.randint(2,4)*a3
    a4=random.randint(3,5)
    a5=random.randint(2,5)*a3
    while gcd(a3,a4)!=1:
        a3=random.randint(2,3)
        a2=random.randint(2,4)*a3
        a4=random.randint(3,5)
        a5=random.randint(2,3)*a3
    a1=a3*a5
    c1=a4*a5
    c2=int((c1+a2)/a3)
    c3=a4*c2
    c4=c2+c3
    a=c4
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-190
def factorization312_Stem_169():
    stem= "$$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}`=`({a4}x`+`a)({a5}x`+`b)$$/수식$$            일 때, 상수 $$수식$$a`,~b`$$/수식$$    에 대하여 $$수식$$a`+`b$$/수식$$  의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	    ② $$수식$${x2}$$/수식$$	    ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$        ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}`=`({a4}x`{c1})({a5}x`{c2})$$/수식$$             이므로\n"\
             "$$수식$$a`=`{sc1}`,~b`=`{sc2}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`+`b`=`{sc1}`{c2}`=`{c3}$$/수식$$\n\n"
    a4=random.randint(2,7)
    a5=random.randint(2,7)
    c1=random.randint(-9,9)
    c2=random.randint(-9,9)
    while abs(c1)==1 or abs(c2)==1 or abs(a4)==1 or abs(a5)==1 or a4*a5*c1*c2==0 or abs(a4)==abs(a5) or abs(c1)==abs(c2) or abs(gcd(a4,c1))!=1 or abs(gcd(a5,c2))!=1 or a4*a5<0 or abs(a4*c2+a5*c1)==1:
        a4=random.randint(2,7)
        a5=random.randint(2,7)
        c1=random.randint(-9,9)
        c2=random.randint(-9,9)
    a1=a4*a5
    a2=a4*c2+a5*c1
    a3=c1*c2
    c3=c1+c2
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    sc1=c1
    sc2=c2
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    l=made_answer_cand_1(c3)
    random.shuffle(l)
    a=answer_dict[l.index(c3)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,sc1=sc1,sc2=sc2,c3=c3)
    return stem,answer,comment

#3-1-2-191
def factorization312_Stem_170():
    stem= "다항식 $$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}`=`(ax`+`b)(cx`+`d)$$/수식$$            일 때,\n$$수식$$ax`+`b`+`cx`+`d`$$/수식$$      의 값은? (단, $$수식$$a`,~b`,~c`,~d`$$/수식$$      는 모두 정수)\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$a`,~b`,~c`,~d`$$/수식$$       가 모두 정수이므로\n"\
             "$$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}`=`({c1}x`{c2})({c3}x`{c4})$$/수식$$\n"\
             "따라서 $$수식$$ax`+`b`+`cx`+`d`$$/수식$$      는 인수분해 한 두 일차식의 합 이므로\n"\
             "$$수식$$({c1}x`{c2})`+`({c3}x`{c4})`=`{c5}x`{c6}$$/수식$$\n\n"
    c1=random.randint(2,9)
    c3=random.randint(2,9)
    c2=random.randint(-9,9)
    c4=random.randint(-9,9)
    while abs(c2)==1 or abs(c4)==1  or c3*c4*c1*c2==0 or abs(c1)==abs(c3) or abs(c2)==abs(c4) or abs(gcd(c2,c1))!=1 or abs(gcd(c3,c4))!=1 or c1+c3==1 or c2+c4==0:
        c1=random.randint(2,9)
        c3=random.randint(2,9)
        c2=random.randint(-9,9)
        c4=random.randint(-9,9)
    a1=c1*c3
    a2=c1*c4+c2*c3
    a3=c2*c4
    c5=c1+c3
    c6=c2+c4
    wc5=c5+random.sample([-1,1],1)[0]
    tmpc6=c6
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c2=made_sign_string(c2)
    c4=made_sign_string(c4)
    c6=made_sign_string(c6)
    xa="{c5}x`{c6}".format(c5=c5,c6=c6)
    x1="{c5}x`{mc6}".format(c5=c5,mc6=made_sign_string(-tmpc6))
    x2="{wc5}x`{c6}".format(wc5=wc5,c6=c6)
    x3="{wc5}x`{mc6}".format(wc5=wc5,mc6=made_sign_string(-tmpc6))
    x4="{wc5}x`{dc6}".format(wc5=wc5,dc6=made_sign_string(2*tmpc6))
    if c5> wc5:
        if tmpc6>0:
            l=[x3,x2,x4,x1,xa]
        else:
            l=[x4,x3,x3,xa,x1]
    else:
        if tmpc6>0:
            l=[x1,xa,x3,x2,x4]
        else:
            l=[xa,x1,x4,x3,x3]
   
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6)
    return stem,answer,comment

#3-1-2-192
def factorization312_Stem_171():
    stem= "$$수식$${a1}`{{x}}^{{2}}`{a2}`xy`{a3}`{{y}}^{{2}}`=`(ax`+`by)(cx`+`dy)`$$/수식$$             일 때, 네 정수 $$수식$$a`,~b`,~c`,~d`$$/수식$$       에 대하여 $$수식$$a`+`b`+`c`+`d$$/수식$$    의 값을 구하시오. (단,$$수식$$a`&gt;`0`$$/수식$$  )\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{2}}`{a2}`xy`{a3}`{{y}}^{{2}}`=`({c1}x`{c2}y)({c3}x`{c4}y)`$$/수식$$             에서\n"\
             "$$수식$$a`=`{sc1}`,~b`=`{sc2}`,~c`=`{sc3}`,~d`=`{sc4}`$$/수식$$\n"\
             "또는 $$수식$$a`=`{sc3}`,~b`=`{sc4}`,~c`=`{sc1}`,~d`=`{sc2}`$$/수식$$\n"\
             "$$수식$$THEREFORE~a`+`b`+`c`+`d`=`{c5}`$$/수식$$\n\n"
    c1=random.randint(-9,9)
    c3=random.randint(-9,9)
    c2=random.randint(-9,9)
    c4=random.randint(-9,9)
    while abs(c2)==1 or abs(c4)==1  or c3*c4*c1*c2==0 or abs(c1)==abs(c3) or abs(c2)==abs(c4) or abs(gcd(c2,c1))!=1 or abs(gcd(c3,c4))!=1 or c1+c3==1 or c2+c4==0 or (c1<0 and c2<0) or (c3<0 and c4<0):
        c1=random.randint(-9,9)
        c3=random.randint(-9,9)
        c2=random.randint(-9,9)
        c4=random.randint(-9,9)
    a2=c1*c4+c2*c3
    a3=c2*c4
    a1=c1*c3
    c5=c1+c2+c3+c4
    sc2=c2
    sc4=c4
    sc1=c1
    sc3=c3
    if c1<=1:
        c1=made_sign_string(c1)
    if c3<=1:
        c3=made_sign_string(c3)
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c2=made_sign_string(c2)
    c4=made_sign_string(c4)
    a=c5
    stem=stem.format(a1=a1,a2=a2,a3=a3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,sc1=sc1,sc3=sc3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,sc2=sc2,sc4=sc4)
    return stem,answer,comment

#3-1-2-194
def factorization312_Stem_172():
    stem= "다음 다항식 중 $$수식$${a1}x`+`{a2}$$/수식$$  {proa2} 인수로 갖는 것을 모두 고르면? (정답 $$수식$$2`$$/수식$$개)\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "①$$수식$${sc1}$$/수식$$ \n②$$수식$${sc2}$$/수식$$ \n③$$수식$${sc3}$$/수식$$ \n④$$수식$${sc4}$$/수식$$ \n⑤$$수식$${sc5}$$/수식$$\n\n"
    a1=random.randint(5,9)
    a2=random.randint(2,9)
    while abs(a2)==1 or a2==0 or gcd(a1,a2)!=1:
        a1=random.randint(5,9)
        a2=random.randint(2,9)
    proa2=proc_jo(a2,3)
    
    a3=random.randrange(3,8,2)
    a4=random.sample([3,5,7],1)[0]
    a5=random.sample([2,4,5,7],1)[0]
    a6=random.sample([3,5,7,9],1)[0]
    a7=random.sample([2,3,4,6,7,8,9],1)[0]
    while a1*a6<4*a2:
        a6=random.sample([3,5,7,9],1)[0]
    c1=a1*a3+a2
    c1_1=a2*a3
    c2=a1*a4-2*a2
    c2_1=-a2*a4
    c3=a1*a5-3*a2
    c3_1=-a2*a5
    c4=a1*a6-4*a2
    c4_1=-a2*a6
    c5=a1*a7+5*a2
    c5_1=a2*a7
    while abs(c1)==1 or abs(c2)==1 or abs(c3)==1 or abs(c4)==1 or abs(c5)==1:
        a1=random.randint(5,9)
        a2=random.randint(2,9)
        while abs(a2)==1 or a2==0 or gcd(a1,a2)!=1:
            a1=random.randint(5,9)
            a2=random.randint(2,9)
        proa2=proc_jo(a2,3)
    
        a3=random.randrange(3,8,2)
        a4=random.sample([3,5,7],1)[0]
        a5=random.sample([2,4,5,7],1)[0]
        a6=random.sample([3,5,7,9],1)[0]
        a7=random.sample([2,3,4,6,7,8,9],1)[0]
        while a1*a6<4*a2:
            a6=random.sample([3,5,7,9],1)[0]
        c1=a1*a3+a2
        c1_1=a2*a3
        c2=a1*a4-2*a2
        c2_1=-a2*a4
        c3=a1*a5-3*a2
        c3_1=-a2*a5
        c4=a1*a6-4*a2
        c4_1=-a2*a6
        c5=a1*a7+5*a2
        c5_1=a2*a7
    x1="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=a1,c1=made_sign_string(c1),c1_1=made_sign_string(c1_1))
    x2="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=2*a1,c1=made_sign_string(c2),c1_1=made_sign_string(c2_1))
    x3="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=3*a1,c1=made_sign_string(c3),c1_1=made_sign_string(c3_1))
    x4="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=4*a1,c1=made_sign_string(c4),c1_1=made_sign_string(c4_1))
    x5="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=5*a1,c1=made_sign_string(c5),c1_1=made_sign_string(c5_1))
    sc1=x1+"`=`({a1}x`+`{a2})(x`+`{a3})".format(a1=a1,a2=a2,a3=a3)
    sc2=x2+"`=`({a1}x`-`{a2})(2x`+`{a3})".format(a1=a1,a2=a2,a3=a4)
    sc3=x3+"`=`({a1}x`-`{a2})(3x`+`{a3})".format(a1=a1,a2=a2,a3=a5)
    sc4=x4+"`=`({a1}x`-`{a2})(4x`+`{a3})".format(a1=a1,a2=a2,a3=a6)
    sc5=x5+"`=`({a1}x`+`{a2})(5x`+`{a3})".format(a1=a1,a2=a2,a3=a7)
    
    a="{}, {}".format(answer_dict[0],answer_dict[4])

    stem=stem.format(a1=a1,a2=a2,proa2=proa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(sc1=sc1,sc2=sc2,sc3=sc3,sc4=sc4,sc5=sc5)
    return stem,answer,comment

#3-1-2-195
def factorization312_Stem_173():
    stem= "다음 다항식 중 $$수식$${a1}x`+`{a2}$$/수식$$  {proa2} 인수로 갖지 않는 것은?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "①$$수식$${sc1}$$/수식$$ \n②$$수식$${sc2}$$/수식$$ \n③$$수식$${sc3}$$/수식$$ \n④$$수식$${sc4}$$/수식$$ \n⑤$$수식$${sc5}$$/수식$$\n\n"
    a1=random.randint(5,9)
    a2=random.randint(2,9)
    while abs(a2)==1 or a2==0 or gcd(a1,a2)!=1:
        a1=random.randint(5,9)
        a2=random.randint(2,9)
    proa2=proc_jo(a2,3)
    
    a3=random.randrange(3,8,2)
    a4=random.sample([3,5,7],1)[0]
    a5=random.sample([2,4,5,7],1)[0]
    a6=random.sample([3,5,7,9],1)[0]
    a7=random.sample([2,3,4,6,7,8,9],1)[0]
    while a1*a6<4*a2:
        a6=random.sample([3,5,7,9],1)[0]
    c1=a1*a3+a2
    c1_1=a2*a3
    c2=-a1*a4+2*a2
    c2_1=-a2*a4
    c3=a1*a5+3*a2
    c3_1=a2*a5
    c4=a1*a6-4*a2
    c4_1=-a2*a6
    c5=a1*a7+5*a2
    c5_1=a2*a7
    x1="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=a1,c1=made_sign_string(c1),c1_1=made_sign_string(c1_1))
    x2="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=2*a1,c1=made_sign_string(c2),c1_1=made_sign_string(c2_1))
    x3="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=3*a1,c1=made_sign_string(c3),c1_1=made_sign_string(c3_1))
    x4="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=4*a1,c1=made_sign_string(c4),c1_1=made_sign_string(c4_1))
    x5="{a1}`{{x}}^{{2}}`{c1}x`{c1_1}".format(a1=5*a1,c1=made_sign_string(c5),c1_1=made_sign_string(c5_1))
    sc1=x1+"`=`({a1}x`+`{a2})(x`+`{a3})".format(a1=a1,a2=a2,a3=a3)
    sc2=x2+"`=`({a1}x`+`{a2})(2x`-`{a3})".format(a1=a1,a2=a2,a3=a4)
    sc3=x3+"`=`({a1}x`+`{a2})(3x`+`{a3})".format(a1=a1,a2=a2,a3=a5)
    sc4=x4+"`=`({a1}x`-`{a2})(4x`+`{a3})".format(a1=a1,a2=a2,a3=a6)
    sc5=x5+"`=`({a1}x`+`{a2})(5x`+`{a3})".format(a1=a1,a2=a2,a3=a7)
    
    a=answer_dict[3]

    stem=stem.format(a1=a1,a2=a2,proa2=proa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(sc1=sc1,sc2=sc2,sc3=sc3,sc4=sc4,sc5=sc5)
    return stem,answer,comment

#3-1-2-197
def factorization312_Stem_174():
    stem= "$$수식$${a1}`{{x}}^{{3}}`y`{a2}`{{x}}^{{2}}`{{y}}^{{2}}`{a3}`{{x}}`{{y}}^{{3}}$$/수식$$    을 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	        \n② $$수식$${x2}$$/수식$$	        \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}`{{x}}^{{3}}`y`{a2}`{{x}}^{{2}}`{{y}}^{{2}}`{a3}`{{x}}`{{y}}^{{3}}$$/수식$$\n"\
             "$$수식$$`=`x`y`({a1}`{{x}}^{{2}}`{a2}`x`y`{a3}`{{y}}^{{2}}`)$$/수식$$\n"\
             "$$수식$$`=`x`y`({c1}`x`{c2}`y`)({c3}`x`{c4}`y`)$$/수식$$\n\n"
    c1=random.randint(2,9)
    c2=random.randint(-9,9)
    c3=random.randint(2,9)
    c4=random.randint(-9,9)
    while abs(c2)==1 or abs(c4)==1 or abs(c1)==1 or abs(c3)==1 or c3*c4*c1*c2==0 or abs(c1)==abs(c3) or abs(c2)==abs(c4) or abs(gcd(c2,c1))!=1 or abs(gcd(c3,c4))!=1 or c1+c3==1 or c2+c4==0 or c1*c4+c2*c3==0 or (c1<0 and c2<0) or (c3<0 and c4<0):
        c1=random.randint(2,9)
        c3=random.randint(2,9)
        c2=random.randint(-9,9)
        c4=random.randint(-9,9)
    a1=c1*c3
    a2=c1*c4+c2*c3
    a3=c2*c4
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    tmc2=c2
    tmc3=c3 
    mc2=made_sign_string(-c2)
    mc4=made_sign_string(-c4)
    c2=made_sign_string(c2)
    c4=made_sign_string(c4)
   
    xa="`x`y`({c1}`x`{c2}`y`)({c3}`x`{c4}`y`)".format(c1=c1,c2=c2,c3=c3,c4=c4)
    x1="x`({c2}`x`{c1}`y`)({c3}`x`{c4}`y`)".format(c2=tmc2,c1=made_sign_string(c1),c3=c3,c4=c4)
    x2="x`({c1}`x`{mc2}`y`)({c3}`x`{mc4}`y`)".format(c1=c1,mc2=mc2,c3=c3,mc4=c4)
    x3="x`y`({c1}`x`{mc2}`y`)({c3}`x`{c4}`y`)".format(c1=c1,mc2=mc2,c3=c3,c4=c4)
    x4="x`y`({c1}`x`{c2}`y`)({c3}`x`{mc4}`y`)".format(c1=c1,c2=c2,c3=c3,mc4=mc4)
    l1=[x1,x2]
    l2=[xa,x3,x4]
    random.shuffle(l1)
    random.shuffle(l2)
    l=l1+l2
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-198
def factorization312_Stem_175():
    stem= "다음 인수분해에서  $$수식$${{box{{~~}}}}$$/수식$$  안에 알맞은 수 중 가장 작은 것은?\n"\
           "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "① $$수식$${c1}$$/수식$$	\n② $$수식$${c2}$$/수식$$	  \n③ $$수식$${c3}$$/수식$$\n④ $$수식$${c4}$$/수식$$     \n⑤ $$수식$${c5}$$/수식$$\n\n"
    x1="{{x}}^{{2}}`-`{a1}`x`y`+`{a2}{{y}}^{{2}}`={{`(x`-`{{box{{~~}}}}`y`)}}^{{2}}"
    c1="{{x}}^{{2}}`-`{a1}`x`y`+`{a2}{{y}}^{{2}}`=`{{`(x`-`{a3}y`)}}^{{2}} 에서 {{box{{~~}}}}`=`{a3}"
    
    x2="{{x}}^{{2}}`+`{aw}x`{a4}`=`(x`+`{{box{{~~}}}}`)(x`-`{a5})"
    c2="{{x}}^{{2}}`+`{aw}x`{a4}`=`(x`+`{a6}`)(x`-`{a5}) 에서 {{box{{~~}}}}`=`{a6}"
    
    x3="{a7}{{a}}^{{2}}`+`{a8}`a`+`{a9}`=`(`{a10}`a`+`{{box{{~~}}}}`)(`{a11}`a`+`{a12})`"
    c3="{a7}{{a}}^{{2}}`+`{a8}`a`+`{a9}`=`(`{a10}`a`+`{a13}`)(`{a11}`a`+`{a12}) 에서 {{box{{~~}}}}`=`{a13}"
    
    x4="{a14}{{x}}^{{2}}`-`{a15}x`+`1`=`{{({{box{{~~}}}}`x`-`1)}}^{{2}}"
    c4="{a14}{{x}}^{{2}}`-`{a15}x`+`1`=`{{(`{a16}`x`-`1)}}^{{2}} 에서 {{box{{~~}}}}`=`{a16}"
    
    x5="{wa16}{{a}}^{{2}}`+`{a17}ab`+`{a18}{{b}}^{{2}}`=`(a`+`{{box{{~~}}}}`b`)({wa16}a`+`{a19}b`)"
    c5="{wa16}{{a}}^{{2}}`+`{a17}ab`+`{a18}{{b}}^{{2}}`=`(a`+`{a20}b`)({wa16}a`+`{a19}b`) 에서 {{box{{~~}}}}`=`{a20}"

    a3=random.randint(2,9)
    a2=a3*a3
    a1=2*a3
    

    a6=random.randint(2,9)
    a5=random.randint(2,9)
    while a5>a6 or a6-a5==1 or a6==a5 :
        a6=random.randint(2,9)
        a5=random.randint(2,9)
    a4=-a5*a6
    aw=a6-a5
    
    a10=random.randint(2,9)
    a11=random.randint(2,9)
    a12=random.randint(2,9)
    a13=random.randint(2,9)
    while gcd(a10,a13)!=1 or gcd(a11,a12)!=1:
        a10=random.randint(2,9)
        a11=random.randint(2,9)
        a12=random.randint(2,9)
        a13=random.randint(2,9)
    a7=a10*a11
    a8=a10*a12+a13*a11
    a9=a13*a12
   
    a16=random.randint(2,9)
    a15=2*a16
    a14=a16*a16
   
    
    wa16=random.randint(2,9)
    a19=random.randint(2,9)
    while gcd(wa16,a19)!=1:
        wa16=random.randint(2,9)
        a19=random.randint(2,9)
    a20=random.randint(2,9)
    a17=wa16*a20+a19
    a18=a20*a19
   
    count=0

    l=[a3,a6,a13,a16,a20]

    for i in l:
        if i == min(l):
            count=count+1
    while count>1:
        a3=random.randint(2,9)
        a2=a3*a3
        a1=2*a3
       

        a6=random.randint(2,9)
        a5=random.randint(2,9)
        while a5>a6 or a6-a5==1 or a6==a5 :
            a6=random.randint(2,9)
            a5=random.randint(2,9)
        a4=-a5*a6
        aw=a6-a5
       
        a10=random.randint(2,9)
        a11=random.randint(2,9)
        a12=random.randint(2,9)
        a13=random.randint(2,9)
        while gcd(a10,a13)!=1 or gcd(a11,a12)!=1:
            a10=random.randint(2,9)
            a11=random.randint(2,9)
            a12=random.randint(2,9)
            a13=random.randint(2,9)
        a7=a10*a11
        a8=a10*a12+a13*a11
        a9=a13*a12
       
        a16=random.randint(2,9)
        a15=2*a16
        a14=a16*a16
       

    
        wa16=random.randint(2,9)
        a19=random.randint(2,9)
        while gcd(wa16,a19)!=1:
            wa16=random.randint(2,9)
            a19=random.randint(2,9)
        a20=random.randint(2,9)
        a17=wa16*a20+a19
        a18=a20*a19
       
        count=0

        l=[a3,a6,a13,a16,a20]
        for i in l:
            if i == min(l):
                count=count+1
    x1=x1.format(a1=a1,a2=a2)
    c1=c1.format(a1=a1,a2=a2,a3=a3)
    x2=x2.format(aw=aw,a4=a4,a5=a5)
    c2=c2.format(aw=aw,a4=a4,a5=a5,a6=a6)
    x3=x3.format(a7=a7,a8=a8,a9=a9,a10=a10,a11=a11,a12=a12)
    c3=c3.format(a7=a7,a8=a8,a9=a9,a10=a10,a11=a11,a12=a12,a13=a13)
    x4=x4.format(a14=a14,a15=a15)
    c4=c4.format(a14=a14,a15=a15,a16=a16)
    x5=x5.format(wa16=wa16,a17=a17,a18=a18,a19=a19)
    c5=c5.format(wa16=wa16,a17=a17,a18=a18,a19=a19,a20=a20)





    a=answer_dict[l.index(min(l))]
    stem=stem.format(x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment




#3-1-2-199
def factorization312_Stem_176():
    stem= "다음 중 유리수의 범위에서 인수분해할 수 없는 식은?\n"\
          "① $$수식$${x1}$$/수식$$	\n\n② $$수식$${x2}$$/수식$$	  \n\n③ $$수식$${x3}$$/수식$$\n\n④ $$수식$${x4}$$/수식$$     \n\n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "① $$수식$${c1}$$/수식$$	\n\n② $$수식$${c2}$$/수식$$	  \n\n③ $$수식$${c3}$$/수식$$\n\n④ $$수식$${c4}$$/수식$$     \n\n⑤ $$수식$${c5}$$/수식$$\n\n"
    tmp1=random.randint(3,11)
    tmp2=random.randint(2,9)
    while gcd(tmp1,tmp2)!=1:
        tmp1=random.randint(3,11)
        tmp2=random.randint(2,9)
    x1="{a1}{{x}}^{{2}}`-`{a2}".format(a1=tmp1*tmp1,a2=tmp2*tmp2)
    c1="{a1}{{x}}^{{2}}`-`{a2}`=`({tmp1}`x`+`{tmp2}`)({tmp1}`x`-`{tmp2}`)".format(a1=tmp1*tmp1,a2=tmp2*tmp2,tmp1=tmp1,tmp2=tmp2)

    num=[11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97]
    tmp3=random.randint(2,9)
    tmp4=random.sample(num,1)[0]
    x2="{}`-`{{1}}over{tmp4}`{{x}}^{{2}}".format(tmp3*tmp3,tmp4=tmp4)
    c2="{}`-`{{1}}over{tmp4}`{{x}}^{{2}}은~유리수~범위에서~인수분해~할~수~없다.".format(tmp3*tmp3,tmp4=tmp4)

    tmp5=random.randint(2,5)
    tmp6=random.randint(7,10)
    a3=tmp5*tmp6
    a4=tmp6-tmp5
    x3="{a3}`{{x}}^{{2}}`+`{a4}x`-`1".format(a3=a3,a4=a4)
    c3="{a3}`{{x}}^{{2}}`+`{a4}x`-`1`=`({tmp5}`x`+`1)({tmp6}`-`1)`".format(a3=a3,a4=a4,tmp5=tmp5,tmp6=tmp6)

    tmp7=random.sample(num,1)[0]
    tmp8=random.randint(2,5)
    tmp7=Fraction(1,tmp7)
    a5=tmp7+tmp8
    a6=tmp7*tmp8   
    x4="{{x}}^{{2}}`+`{a5}`x`+`{a6}".format(a5=made_fraction_string(a5),a6=made_fraction_string(a6))
    c4="{{x}}^{{2}}`+`{a5}`x`+`{a6}`=`(x`+`{tmp7}`)(x`+`{tmp8}`)".format(a5=made_fraction_string(a5),a6=made_fraction_string(a6),tmp7=made_fraction_string(tmp7),tmp8=tmp8)

    tmp9=random.randint(3,5)
    a7=Fraction(1,tmp9**2)
    a8=Fraction(2,tmp9)
    a9=Fraction(1,tmp9)
    x5="{a7}`{{x}}^{{2}}`+`{a8}`x`+1".format(a7=made_fraction_string(a7),a8=made_fraction_string(a8))
    c5="{a7}`{{x}}^{{2}}`+`{a8}`x`+1`=`{{(`{a9}`x`+`1)}}^{{2}}".format(a7=made_fraction_string(a7),a8=made_fraction_string(a8),a9=made_fraction_string(a9))

    l1=[x1,c1]
    l2=[x2,c2]
    l3=[x3,c3]
    l4=[x4,c4]
    l5=[x5,c5]
    l=[l1,l2,l3,l4,l5]

    random.shuffle(l)
    
    a=answer_dict[l.index(l2)]
    x1,x2,x3,x4,x5=l[0][0],l[1][0],l[2][0],l[3][0],l[4][0]
    c1,c2,c3,c4,c5=l[0][1],l[1][1],l[2][1],l[3][1],l[4][1]
    stem=stem.format(x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment
#3-1-2-200
def factorization312_Stem_177():
    stem= "다음  $$수식$${{box{{~~}}}}$$/수식$$  안에 알맞은 수가 나머지 넷과 다른 하나는?\n"\
          "① $$수식$${x1}$$/수식$$	\n② $$수식$${x2}$$/수식$$	  \n③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     \n⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${c1}$$/수식$$\n\n"
    tmp=random.randint(2,9)
    a3=random.randint(3,5)
    a4=1+tmp*a3
    tmp2=random.randint(2,9)
    
    while tmp==tmp2:
        tmp2=random.randint(2,9)
    tmp3=random.randint(2,9)
    while tmp3==tmp or tmp3==tmp2:
        tmp3=random.randint(2,9)
    a5=tmp2*tmp2
    a6=tmp3*tmp3
    a7=2*tmp3*tmp
    a8=tmp*tmp
    x1="{a1}{{x}}^{{2}}`-`{a2}x`+`1`=`{{({{box{{~~}}}}`x`-`1`)}}^{{2}}".format(a1=tmp**2,a2=2*tmp)
    x2="{a3}{{x}}^{{2}}`+`{a4}x`+`{{box{{~~}}}}=`({a3}x`+`1)(x`+`{tmp})".format(a3=a3,a4=a4,tmp=tmp)
    x3="{a5}{{x}}^{{2}}`-`{tmp22}{{y}}^{{2}}`=`({tmp2}x`+`{{box{{~~}}}}`y`)({tmp2}x`-`{tmp}`y`)".format(a5=a5,tmp22=tmp*tmp,tmp2=tmp2,tmp=tmp)
    x4="{a6}{{x}}^{{2}}`-`{a7}`x`+`{a8}`=`{{({tmp3}`x`-`{{box{{~~}}}})}}^{{2}}".format(a6=a6,a7=a7,a8=a8,tmp3=tmp3)
    x5="{{x}}^{{2}}`-`{{box{{~~}}}}`x`+`{tmp}`=`(x`-`1)(x`-`{tmp})`".format(tmp=tmp)
    l=[x1,x2,x3,x4,x5]
    random.shuffle(l)
    a=answer_dict[l.index(x5)]
    c1="{a} {tmpp1}\n나머지는~{tmp}".format(a=a,tmpp1=tmp+1,tmp=tmp)
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(c1=c1)
    return stem,answer,comment

#3-1-2-201
def factorization312_Stem_178():
    stem= "다음 등식을 만족시키는 상수 $$수식$$a,~b,~c,~d`$$/수식$$      에 대하여 $$수식$$a`+`b`+`c`+`d`$$/수식$$      의 값을 구하시오.\n"\
          "$$표$$\n"\
          "$$수식$${{x}}^{{2}}`-`{a1}x`=`x`(x`+`a)$$/수식$$\n"\
          "$$수식$${{x}}^{{2}}`-`{a2}x`-`{a3}`=`(x`+`b)(x`-`{a4})$$/수식$$\n"\
          "$$수식$${{x}}^{{2}}`-`{a5}`=`(x`+`c)(x`-`{a6})$$/수식$$\n"\
          "$$수식$${a7}{{x}}^{{2}}`+`{a8}x`+`{a9}`=`({a10}x`+`{a11})({a12}x`+`d)`$$/수식$$\n"\
          "$$/표$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{x}}^{{2}}`-`{a1}x`=`x`(x`-`{c1})$$/수식$$                      에서 $$수식$$a`=`-{c1}$$/수식$$\n"\
             "$$수식$${{x}}^{{2}}`-`{a2}x`-`{a3}`=`(x`+`{c2})(x`-`{a4})$$/수식$$                             에서 $$수식$$b`=`{c2}$$/수식$$\n"\
             "$$수식$${{x}}^{{2}}`-`{a5}`=`(x`+`{c3})(x`-`{a6})$$/수식$$                              에서 $$수식$$c`=`{c3}$$/수식$$\n"\
             "$$수식$${a7}{{x}}^{{2}}`+`{a8}x`+`{a9}`=`({a10}x`+`{a11})({a12}x`+`{c4})`$$/수식$$            에서 $$수식$$d`=`{c4}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`+`b`+`c`+`d`=(`-`{c1}`)+`{c2}`+`{c3}`+`{c4}`=`{c5}$$/수식$$\n\n"
    a1=random.randint(2,9)
    c1=a1
    c2=random.randint(2,5)
    a4=random.randint(8,10)
    a2=a4-c2
    a3=c2*a4
    a6=random.randint(10,15)
    c3=a6
    a5=a6**2
    a10=random.randint(2,9)
    a11=random.randint(2,9)
    a12=random.randint(2,9)
    c4=random.randint(2,9)
    while gcd(a10,a11)!=1 or gcd(a12,c4)!=1:
        a10=random.randint(2,9)
        a11=random.randint(2,9)
        a12=random.randint(2,9)
        c4=random.randint(2,9)
    a7=a10*a12
    a9=a11*c4
    a8=a10*c4+a11*a12
    c5=-c1+c2+c3+c4
    a=c5
    
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,a8=a8,a9=a9,a10=a10,a11=a11,a12=a12)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,a7=a7,a8=a8,a9=a9,a10=a10,a11=a11,a12=a12,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

#3-1-2-202
def factorization312_Stem_179():
    stem= "$$수식$${a1}x`+`{a2}$$/수식$$  {proa2} $$수식$${a3}{{x}}^{{2}}`+`{a4}x`+`a$$/수식$$    의 인수일 때, 상수 $$수식$$a`$$/수식$$의 값은?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a3}{{x}}^{{2}}`+`{a4}x`+`a`=`({a1}x`+`{a2})({c1}x`+`k)$$/수식$$            ($$수식$$k`$$/수식$$는 상수) 라 하면\n"\
             "$$수식$$`({a1}x`+`{a2})({c1}x`+`k)`=`{c2}{{x}}^{{2}}`+`({c3}`+`{a1}`k`)x`+`{a2}`k`$$/수식$$\n"\
             "이 때 $$수식$${c3}`+`{a1}`k`=`{a4}$$/수식$$    에서 $$수식$$k`=`{c4}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`=`{a2}k`=`{a2}TIMES{c4}`=`{c5}$$/수식$$\n\n"
    a1=random.randint(2,4)
    tmp1=random.randint(2,5)
    tmp2=random.randint(2,5)
    while tmp1==tmp2:
        tmp1=random.randint(2,5)
        tmp2=random.randint(2,5)
    a2=a1*tmp1
    a3=tmp2*a1
    a4=tmp1*tmp2*a1+random.randint(2,4)*a1
    proa2=proc_jo(a2,0)
    c1=int(a3/a1)
    c2=a3
    c3=a2*c1
    c4=int((a4-c3)/a1)
    c5=a2*c4
    l=made_answer_cand_1(c5)
    random.shuffle(l)
    a=answer_dict[l.index(c5)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,proa2=proa2,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

#3-1-2-204
def factorization312_Stem_180():
    stem= "$$수식$$x`{a1}$$/수식$$  {proa1} 두 다항식 $$수식$${a2}{{x}}^{{2}}`+`ax`{a3}$$/수식$$    , $$수식$${a4}{{x}}^{{2}}`{a5}x`+`b`$$/수식$$   의 공통인수일 때, 상수 $$수식$$a,~b$$/수식$$  에 대하여 $$수식$$a`+`b`$$/수식$$  의 값을 구하시오.\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a2}{{x}}^{{2}}`+`ax`{a3}`=`(`x`{a1}`)(mx`+`n)$$/수식$$\n"\
             "(단, $$수식$$m,~n$$/수식$$  은 상수) 라 하면\n"\
             "$$수식$$`(`x`{a1}`)(`mx`+`n`)`=`m{{x}}^{{2}}`+`(n`{a1}m`)x`{a1}n`$$/수식$$\n"\
             "$$수식$$m`=`{a2},~{a1}n`=`{a3}$$/수식$$        에서$$수식$$n`=`{c1}`$$/수식$$    이므로\n"\
             "$$수식$$a`=`n`{a1}m`=`{c1}`{a1}TIMES{a2}`=`{c2}$$/수식$$\n"\
             "$$수식$${a4}{{x}}^{{2}}`{a5}x`+`b`=`(`x`{a1}`)(px`+`q)$$/수식$$\n"\
             "(단, $$수식$$p,~q$$/수식$$  은 상수) 라 하면\n"\
             "$$수식$$`(`x`{a1}`)(`px`+`q`)`=`p{{x}}^{{2}}`+`(q`{a1}p`)x`{a1}q`$$/수식$$\n"\
             "$$수식$$p`=`{a4},~q`{a1}`p`=`{a5}$$/수식$$        에서 $$수식$$q`=`{c3}$$/수식$$\n"\
             "$$수식$$b`=`{a1}q`=`{a1}TIMES{c3}`=`{c4}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`+`b`=`{c2}`+`({c4})`=`{c5}$$/수식$$\n\n"
    a1=random.randint(-5,-2)
    a3=random.randint(2,3)*a1
    a2=random.randint(2,3)
    c1=int(a3/a1)
    c2=c1+a1*a2
    a5=random.randint(-4,-2)
    a4=random.randint(6,8)
    c3=a5-a1*a4
    c4=a1*c3
    c5=c2+c4
    proa1=proc_jo(a1,0)
    a=c5
    a1=made_sign_string(a1)
    a3=made_sign_string(a3)
    a5=made_sign_string(a5)
    
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,proa1=proa1)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

#3-1-2-205
def factorization312_Stem_181():
    stem= "$$수식$$x`{a1}$$/수식$$  {proa1} 두 다항식 $$수식$${a2}{{x}}^{{2}}`+`ax`{a3}$$/수식$$    , $$수식$${a4}{{x}}^{{2}}`{a5}x`+`b`$$/수식$$   의 공통인수일 때, 상수 $$수식$$a,~b$$/수식$$  에 대하여 $$수식$$a`-`b`$$/수식$$  의 값을 구하시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a2}{{x}}^{{2}}`+`ax`{a3}`=`({a2}x`{c1})(x`{a1})$$/수식$$\n"\
             "$$수식$$`=`{a2}{{x}}^{{2}}`{c2}`x`{a3}$$/수식$$\n"\
             "이므로 $$수식$$a`=`{sc2}$$/수식$$\n"\
             "$$수식$${a4}{{x}}^{{2}}`{a5}x`+`b`=`({a4}x`{c3})(x`{a1})$$/수식$$\n"\
             "$$수식$$`=`{a4}{{x}}^{{2}}`{a5}x`{c4}`$$/수식$$\n"\
             "이므로$$수식$$b`=`{sc4}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`-`b`=`{sc2}`{mc4}`=`{c5}$$/수식$$"
    a1=random.randint(-9,9)
    c1=random.randint(-9,9)
    a2=random.randint(-9,9)
    while a1*c1*a2==0 or abs(a1)==1 or abs(c1)==1 or abs(a2)==1 or (a2<0 and c1<0) or abs(gcd(a2,c1))!=1:
        a1=random.randint(-9,9)
        c1=random.randint(-9,9)
        a2=random.randint(-9,9)
    a3=c1*a1
    c2=a2*a1+c1
    sc2=c2
    
    a4=random.randint(-9,9)
    c3=random.randint(-9,9)
    
    while a4*c3*a1==0 or abs(a1)==1 or abs(c3)==1 or abs(a4)==1 or (a4<0 and c3<0) or abs(gcd(a4,c3))!=1 or a2==a4:
        a4=random.randint(-9,9)
        c3=random.randint(-9,9)
    proa1=proc_jo(a1,0)
    a5=a4*a1+c3
    c4=c3*a1
    sc4=c4
    c5=c2-c4
    a=c5
    c2=made_sign_string(c2)
    a1=made_sign_string(a1)
    c1=made_sign_string(c1)
    a3=made_sign_string(a3)
    c3=made_sign_string(c3)
    a5=made_sign_string(a5)
    mc4=made_sign_string(-c4)
    c4=made_sign_string(c4)



    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,proa1=proa1)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,mc4=mc4,a5=a5,sc2=sc2,sc4=sc4,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5)
    return stem,answer,comment

#3-1-2-206
def factorization312_Stem_182():
    stem= "두 다항식 $$수식$${a1}{{x}}^{{2}}`{a2}xy`{a3}{{y}}^{{2}}$$/수식$$        , $$수식$${a4}{{x}}^{{2}}`{a6}xy`+`a{{y}}^{{2}}$$/수식$$      이 $$수식$$x`+`b`y`$$/수식$$    를 공통인수로 가질 때, $$수식$${{a}}over{{b}}`$$/수식$$    의 값은? (단,  $$수식$$a,~b`$$/수식$$  는 정수이다.)\n\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`{a2}xy`{a3}{{y}}^{{2}}`=`({a1}x`{c1}y`)(x`{c2}y`)$$/수식$$\n"\
             "이므로 $$수식$$b`=`{sc2}$$/수식$$\n"\
             "따라서 $$수식$$x`{c2}y`$$/수식$$    가 공통인수이므로\n"\
             "$$수식$${a4}{{x}}^{{2}}`{a6}xy`+`a{{y}}^{{2}}`=`({a4}x`+`k`y)(x`{c2}`y`)$$/수식$$\n"\
             "(단, $$수식$$k`$$/수식$$는 상수) 라고 하면\n"\
             "$$수식$$`({a4}x`+`k`y)(x`{c2}`y`)`=`{a4}{{x}}^{{2}}`+`(k`{c3})xy`{c2}`k`{{y}}^{{2}}$$/수식$$\n"\
             "$$수식$$k`{c3}`=`{sa6}$$/수식$$    에서 $$수식$$k`=`{c4}`$$/수식$$\n"\
             "$$수식$$a`=`{sc2}k`=`{sc2}TIMES{l4}{c4}{r4}`=`{c5}$$/수식$$\n"\
             "$$수식$$THEREFORE~{{a}}over{{b}}`=`{c5}over{sc2}`=`{c6}$$/수식$$\n\n"
    c1=random.randint(-9,9)
    c2=random.randint(-9,9)
    a1=random.randint(2,9)
    while a1*c2*c1==0 or abs(gcd(a1,c1))!=1 or abs(a1)==1 or abs(c1)==1 or abs(c2)==1 or (a1<0 and c1<0) or a1/c1==1/c2:
        c1=random.randint(-9,9)
        c2=random.randint(-9,9)
        a1=random.randint(-9,9)
    a2=a1*c2+c1
    a3=c1*c2
    sc2=c2
    a6=random.randint(-9,9)
    a4=random.randint(2,9)
    while a6*a4==0 or abs(a4)==1 or abs(a6)==1 or abs(a1)==abs(a4):
        a6=random.randint(-9,9)
        a4=random.randint(-9,9)
    c3=a4*c2
    c4=a6-c3
    l4,r4="",""
    if c4<0:
        l4,r4="(",")"
    c5=c2*c4
    c6=int(c5/c2)
    sa6=a6
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    a6=made_sign_string(a6)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    c3=made_sign_string(c3)
    l=made_answer_cand_1(c6)
    random.shuffle(l)
    a=answer_dict[l.index(c6)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a6=a6,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,sc2=sc2,a3=a3,a4=a4,a6=a6,sa6=sa6,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,l4=l4,r4=r4)
    return stem,answer,comment

#3-1-2-207
def factorization312_Stem_183():
    stem= "다음의 세 이차식은 일차항의 계수가 자연수인 일차식을 공통인수로 갖는다. 이때 상수 $$수식$$a`$$/수식$$의 값을 구하시오.\n"\
          "$$표$$\n"\
          "$$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}$$/수식$$\n"\
          "$$수식$${{x}}^{{2}}`-`{a4}$$/수식$$\n"\
          "$$수식$${a5}{{x}}^{{2}}`+`ax`{a6}`$$/수식$$\n"\
          "$$/표$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`{a2}x`{a3}`=`({a1}x`{c1})(x`{c2}`)$$/수식$$\n"\
             "$$수식$${{x}}^{{2}}`-`{a4}`=`(x`{c2}`)(x`{mc2}`)$$/수식$$\n"\
             "즉 공통인수는 $$수식$$x`{c2}`$$/수식$$  이므로\n"\
             "$$수식$${a5}{{x}}^{{2}}`+`ax`{a6}`=`(x`{c2}`)({a5}x`{c3})$$/수식$$\n"\
             "$$수식$$`=`{a5}{{x}}^{{2}}`{c4}x`{a6}$$/수식$$\n"\
             "$$수식$$THEREFORE~a`=`{sc4}$$/수식$$\n\n"
    c2=random.randint(-9,9)
    c1=random.randint(-9,9)
    a1=random.randint(2,9)
    a5=random.randint(2,9)
    c3=random.randint(-9,9)
    while c3*a5*c1*a1*c2==0 or abs(c2)==1 or abs(a1)==1 or abs(c1)==1 or abs(gcd(a1,c1))!=1 or abs(c3)==1 or abs(a5)==1 or abs(gcd(a5,c3))!=1 or (a1<0 and c1<0) or (a5<0 and c3<0):
        c2=random.randint(-9,9)
        c1=random.randint(-9,9)
        a1=random.randint(2,9)
        a5=random.randint(2,9)
        c3=random.randint(-9,9)
    mc2=-c2
    a2=c1+a1*c2
    a3=c1*c2
    a4=c2*c2
    a6=c2*c3
    c4=c2*a5+c3
    a=c4
    sc4=c4
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    mc2=made_sign_string(mc2)
    a6=made_sign_string(a6)
    c3=made_sign_string(c3)
    c4=made_sign_string(c4)
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,a6=a6,c1=c1,c2=c2,mc2=mc2,sc4=sc4,c3=c3,c4=c4)
    return stem,answer,comment

#3-1-2-208
def factorization312_Stem_184():
    stem= "$$수식$${{a}}^{{2}}`+`{a1}a`-`{a2}$$/수식$$              {proa2} 소수가 되도록 하는 자연수 $$수식$$a`$$/수식$$의 값을 구하시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${{a}}^{{2}}`+`{a1}a`-`{a2}`=`(a`+`{c1})(a`-`{c2})$$/수식$$\n"\
             "따라서 $$수식$${{a}}^{{2}}`+`{a1}a`-`{a2}$$/수식$$              {proa2} 소수가 되려면\n"\
             "$$수식$$a`+`{c1}`=`1$$/수식$$    또는 $$수식$$a`-`{c2}`=`1$$/수식$$\n"\
             "$$수식$$a`$$/수식$$는 자연수 이므로 $$수식$$a`=`{c3}$$/수식$$\n\n"
    num=[11,13,17,19,23,29,31]
    tmp=random.sample(num,1)[0]
    c2=random.randint(2,9)
    c1=tmp-c2-1
    
    a1=c1-c2
    a2=c1*c2
    c3=c2+1
    a=c3
    proa2=proc_jo(a2,0)
    stem=stem.format(a1=a1,a2=a2,proa2=proa2)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,c1=c1,c2=c2,c3=c3,proa2=proa2)
    return stem,answer,comment

#3-1-2-209
def factorization312_Stem_185():
    stem= "$$수식$$f(x)`={{1}}over{{{{x}}^{{2}}}}`-`1$$/수식$$   일 때,\n\n"\
          "$$수식$${{f({a1})}}TIMES{{f({a2})}}TIMES CDOTS TIMES{{f({a3})}}TIMES{a3}$$/수식$$                              의 값을 구하시오.\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$$f(x)`={{1}}over{{{{x}}^{{2}}}}`-`1`=`({{1}}over{{x}}`-`1)({{1}}over{{x}}`+`1)`$$/수식$$        이므로\n\n"\
             "$$수식$${{f({a1})}}TIMES{{f({a2})}}TIMES CDOTS TIMES{{f({a3})}}TIMES{a3}$$/수식$$\n"\
             "$$수식$$`=`{{({{1}}over{a1}`-`1)({{1}}over{a1}`+`1)}}TIMES{{({{1}}over{a2}`-`1)({{1}}over{a2}`+`1)}}TIMES CDOTS TIMES{{({{1}}over{a3}`-`1)({{1}}over{a3}`+`1)}}TIMES{a3}$$/수식$$\n\n"\
             "$$수식$$`=`{{(`-`{c1}over{a1}`TIMES`{c2}over{a1}`)}}TIMES{{(`-`{c3}over{a2}`TIMES`{c4}over{a2}`)}}`TIMES CDOTS TIMES`{{(`-`{c5}over{a3}`TIMES`{c6}over{a3}`)}}TIMES{a3}$$/수식$$\n\n"\
             "$$수식$$`=`{c1}over{a1}`TIMES`{c6}over{a3}`TIMES`{a3}`=`{c7}`$$/수식$$\n\n"
    a1=random.randint(2,9)
    tmp=random.randint(2,3)
    while (tmp-1)*a1%2!=0:
        a1=random.randint(2,9)
        tmp=random.randint(2,3)
    a2=a1+1   
    a3=tmp*a1-1
    while a3 <= 5:
        a1=random.randint(2,9)
        tmp=random.randint(2,3)
        while (tmp-1)*a1%2!=0:
            a1=random.randint(2,9)
            tmp=random.randint(2,3)
        a2=a1+1   
        a3=tmp*a1-1

    c1=a1-1
    c2=a1+1
    c3=a2-1
    c4=a2+1
    c5=a3-1
    c6=a3+1
    c7=int((c1/a1)*(c6/a3)*a3)
    a=c7
    stem=stem.format(a1=a1,a2=a2,a3=a3)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6,c7=c7)
    return stem,answer,comment

#3-1-2-211
def factorization312_Stem_186():
    stem= "$$수식$$x`$$/수식$$에 대한 어떤 이차식을 인수분해하는데 유주는 $$수식$$x`$$/수식$$의 계수를 잘못 보고 $$수식$${a1}(x`{a2})(x`{a3})`$$/수식$$        로 인수분해하였고, 지효는 상수항을 잘못 보고 $$수식$${a1}(x`{a4})(x`{a5})$$/수식$$        로 인수분해하였다. 처음 이차식을 바르게 인수분해하면?\n"\
          "① $$수식$${x1}$$/수식$$	        ② $$수식$${x2}$$/수식$$	        ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$            ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "처음 이차식을 $$수식$${a1}({{x}}^{{2}}`+`ax`+`b)$$/수식$$     라 할 때, $$수식$$x$$/수식$$의 계수를 잘못 본 식에서 상수항은 바르게 보았으므로\n"\
             "$$수식$${a1}(x`{a2})(x`{a3})`=`{a1}({{x}}^{{2}}`{c1}x`{c2}`)$$/수식$$               에서\n"\
             "$$수식$$b`=`{sc2}$$/수식$$\n"\
             "상수항을 잘못본 식에서 $$수식$$x`$$/수식$$의 계수는 바르게 보았으므로\n"\
             "$$수식$${a1}(x`{a4})(x`{a5})`=`{a1}({{x}}^{{2}}`{c3}x`{c4})$$/수식$$               에서\n"\
             "$$수식$$a`=`{sc3}$$/수식$$\n"\
             "따라서 처음 이차식을 바르게 인수분해 하면\n"\
             "$$수식$${a1}({{x}}^{{2}}`{c3}x`{c2})`=`{a1}(x`{c5})(x`{c6})$$/수식$$\n\n"
    a1=random.randint(2,9)
    c5=random.randint(-9,9)
    a2=random.randint(-9,9)
    while abs(c5)==1 or abs(a2)==1 or c5*a2==0 or abs(c5)==abs(a2):
        c5=random.randint(-9,9)
        a2=random.randint(-9,9)
    c6=a2*random.randint(2,4)
    while abs(c5)==abs(c6):
        c6=a2*random.randint(2,4)
    c3=c5+c6
    c2=c5*c6
    a3=int(c2/a2)
    c1=a2+a3
    sc2=c2
    sc3=c3
    a4=random.randint(-9,9)
    while a4==0 or abs(a4)==1:
        a4=random.randint(-9,9)
    a5=c3-a4
    c4=a4*a5
    a2=made_sign_string(a2)
    a3=made_sign_string(a3)
    a4=made_sign_string(a4)
    a5=made_sign_string(a5)
    c1=made_sign_string(c1)
    c2=made_sign_string(c2)
    c3=made_sign_string(c3)
    c4=made_sign_string(c4)
    c5=made_sign_string(c5)
    c6=made_sign_string(c6)
    xa="{a1}(x`{c5})(x`{c6})".format(a1=a1,c5=c5,c6=c6)
    x1="{a1}(x`{c5})(x`{c6})".format(a1=a1,c5=a2,c6=c6)
    x2="{a1}(x`{c5})(x`{c6})".format(a1=a1,c5=a3,c6=c6)
    x3="{a1}(x`{c5})(x`{c6})".format(a1=a1,c5=a4,c6=c5)
    x4="{a1}(x`{c5})(x`{c6})".format(a1=a1,c5=a5,c6=c5)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,sc2=sc2,sc3=sc3,c3=c3,c4=c4,c5=c5,c6=c6)
    return stem,answer,comment

#3-1-2-215
def factorization312_Stem_187():
    stem= "넓이가 $$수식$${a1}{{x}}^{{2}}`+`{a2}x`+`{a3}`$$/수식$$    인 정사각형의 한 변의 길이는? (단, $$수식$$x`&gt;`0$$/수식$$   )\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`+`{a2}x`+`{a3}`=`{{({c1}`x`+`{c2})}}^{{2}}$$/수식$$         이고 $$수식$$x`&gt;`0$$/수식$$    이므로\n"\
             "구하는 정사각형의 한 변의 길이는 $$수식$${c1}`x`+`{c2}$$/수식$$   이다.\n\n"
    c1=random.randint(2,9)
    c2=random.randint(2,9)
    while gcd(c1,c2)!=1:
        c1=random.randint(2,9)
        c2=random.randint(2,9)
    a1=c1**2
    a2=2*c1*c2
    a3=c2**2
    tmp1=random.randint(2,9)
    tmp2=random.randint(2,9)
    tmp3=random.randint(2,9)
    tmp4=random.randint(2,9)
    while tmp1==c1 or tmp2==c1 or tmp3==c1 or tmp4==c1 or tmp1==tmp2 or tmp1==tmp3 or tmp1==tmp4 or tmp2==tmp3 or tmp2==tmp4 or tmp3==tmp4:
        tmp1=random.randint(2,9)
        tmp2=random.randint(2,9)
        tmp3=random.randint(2,9)
        tmp4=random.randint(2,9)
    ce=[tmp1,tmp2,tmp3,tmp4,c1]
    ce.sort()
    l=[0,0,0,0,0]
    xa="{c1}`x`+`{c2}".format(c1=c1,c2=c2)
    x1="{tmp1}x`+`{c2m1}".format(tmp1=c1,c2m1=c2-1)
    x2="{tmp2}x`+`{c2p1}".format(tmp2=c1,c2p1=c2+1)
    x3="{tmp3}x`+`{c2}".format(tmp3=2*c1,c2=c2-1)
    x4="{tmp4}x``+`{c2}".format(tmp4=2*c1,c2=c2)
    l[ce.index(c1)]=xa
    l[ce.index(tmp1)]=x1
    l[ce.index(tmp2)]=x2
    l[ce.index(tmp3)]=x3
    l[ce.index(tmp4)]=x4
    
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,c1=c1,c2=c2)
    return stem,answer,comment

#3-1-2-216
def factorization312_Stem_188():
    stem= "가로의 길이와 세로의 길이가 모두 $$수식$$a`$$/수식$$에 대한 일차식인 직사각형 모양의 꽃밭이 있다. 이 꽃밭의 넓이가 $$수식$${a1}{{a}}^{{2}}`+`{a2}a`+`{a3}`$$/수식$$    이고 한 변의 길이가  $$수식$${a4}a`+`{a5}$$/수식$$  일 때, 다음 중 이 꽃밭의 둘레의 길이는? (단, $$수식$$a`&gt;`0$$/수식$$   )\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{a}}^{{2}}`+`{a2}a`+`{a3}`=`({a4}a`+`{a5})({c1}a`+`{c2})$$/수식$$\n"\
             "따라서 직사각형 꽃밭의 둘레의 길이는\n"\
             "$$수식$$`2`({a4}a`+`{a5})`+`2`({c1}a`+`{c2})=`2({c3}a`+`{c4})$$/수식$$\n"\
             "$$수식$$`=`{c5}a`+`{c6}$$/수식$$\n\n"
    
    a4=random.randint(2,9)
    a5=random.randint(2,9)
    c1=random.randint(2,9)
    c2=random.randint(2,9)
    while a4==c1 or a4/a5==c1/c2 or gcd(a4,a5)!=1 or gcd(c1,c2)!=1:
        a4=random.randint(2,9)
        a5=random.randint(2,9)
        c1=random.randint(2,9)
        c2=random.randint(2,9)
    a1=a4*c1
    a3=c2*a5
    a2=a4*c2+a5*c1
    c3=a4+c1
    c4=a5+c2
    c5=2*c3
    c6=2*c4
    xa="{c5}a`+`{c6}".format(c5=c5,c6=c6)
    x1="{c5}a`+`{c6}".format(c5=c5,c6=c6-2)
    x2="{c5}a`+`{c6}".format(c5=c5,c6=c6+2)
    x3="{c5}a`+`{c6}".format(c5=2*c5,c6=c6)
    x4="{c5}a`+`{c6}".format(c5=2*c5,c6=c6+2)
    l=[xa,x1,x2,x3,x4]
    random.shuffle(l)
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2,c3=c3,c4=c4,c5=c5,c6=c6)
    return stem,answer,comment
          

#3-1-2-217
def factorization312_Stem_189():
    stem= "넓이가 $$수식$${a1}{{x}}^{{2}}`+`{a2}x`+`{a3}`$$/수식$$   인 직사각형의 가로의 길이가 $$수식$${a4}x`+`{a5}$$/수식$$   일 때, 세로의 길이는?\n"\
          "① $$수식$${x1}$$/수식$$	② $$수식$${x2}$$/수식$$	  ③ $$수식$${x3}$$/수식$$\n④ $$수식$${x4}$$/수식$$     ⑤ $$수식$${x5}$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`+`{a2}x`+`{a3}`=`({a4}x`+`{a5})({c1}x`+`{c2})$$/수식$$            이므로\n"\
             "세로의 길이는 $$수식$${c1}x`+`{c2}$$/수식$$\n\n"
    a4=random.randint(2,9)
    a5=random.randint(2,9)
    c1=random.randint(2,9)
    c2=random.randint(2,9)
    while a4==c1 or a4/a5==c1/c2 or gcd(a4,a5)!=1 or gcd(c1,c2)!=1:
        a4=random.randint(2,9)
        a5=random.randint(2,9)
        c1=random.randint(2,9)
        c2=random.randint(2,9)
    a1=a4*c1
    a3=c2*a5
    a2=a4*c2+a5*c1
    tmp1=random.randint(2,9)
    tmp2=random.randint(2,9)
    tmp3=random.randint(2,9)
    tmp4=random.randint(2,9)
    while tmp1==c1 or tmp2==c1 or tmp3==c1 or tmp4==c1 or tmp1==tmp2 or tmp1==tmp3 or tmp1==tmp4 or tmp2==tmp3 or tmp2==tmp4 or tmp3==tmp4:
        tmp1=random.randint(2,9)
        tmp2=random.randint(2,9)
        tmp3=random.randint(2,9)
        tmp4=random.randint(2,9)
    ce=[tmp1,tmp2,tmp3,tmp4,c1]
    ce.sort()
    l=[0,0,0,0,0]
    xa="{c1}`x`+`{c2}".format(c1=c1,c2=c2)
    x1="{tmp1}x`+`{c2m1}".format(tmp1=tmp1,c2m1=c2-1)
    x2="{tmp2}x`+`{c2p1}".format(tmp2=tmp2,c2p1=c2+1)
    x3="{tmp3}x`+`{c2}".format(tmp3=tmp3,c2=c2-1)
    x4="{tmp4}x``+`{c2}".format(tmp4=tmp4,c2=c2)
    l[ce.index(c1)]=xa
    l[ce.index(tmp1)]=x1
    l[ce.index(tmp2)]=x2
    l[ce.index(tmp3)]=x3
    l[ce.index(tmp4)]=x4
    a=answer_dict[l.index(xa)]
    x1,x2,x3,x4,x5=l[0],l[1],l[2],l[3],l[4]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2)
    return stem,answer,comment

#3-1-2-219
def factorization312_Stem_190():
    stem= "부피가 $$수식$$({a1}{{x}}^{{2}}`-`{a2})`rm``cm^{{3}}`$$/수식$$  이고 높이가 $$수식$${a3}`rm``cm`$$/수식$$인 직육면체의 가로의 길이는 세로의 길이보다 $$수식$${a4}``rm  cm`$$/수식$$만큼 길다. 이때 직육면체의 가로의 길이를 $$수식$$x`$$/수식$$에 대한 식으로 나타내면? (단, $$수식$$x`&gt;`{a5}$$/수식$$   )\n"\
          "① $$수식$${x1}``rm cm$$/수식$$	    ② $$수식$${x2}``rm cm$$/수식$$	    ③ $$수식$${x3}``rm cm$$/수식$$\n④ $$수식$${x4}``rm cm$$/수식$$      ⑤ $$수식$${x5}``rm cm$$/수식$$\n\n"
    answer= "(정답)\n{a}\n"
    comment= "(해설)\n"\
             "$$수식$${a1}{{x}}^{{2}}`-`{a2}`=`{a1}({{x}}^{{2}}`-`{c1})`=`{a1}(x`-`{c2})(x`+`{c2})$$/수식$$\n"\
             "가로의 길이가 세로의 길이보다 $$수식$${a4}``rm  cm`$$/수식$$만큼 길다고 했으므로\n"\
             "가로의 길이는 $$수식$$(x`+`{c2})``rm cm`$$/수식$$\n\n"
    tmp=random.randint(2,7)
    a1=random.randint(2,6)
    a2=(tmp**2)*a1
    a3=a1
    c1=tmp**2
    c2=tmp
    a4=2*tmp
    a5=tmp
    x2="(x`+`{c2})".format(c2=c2)
    x1="(x`{c2})".format(c2=-c2)
    x3="(2x`+`{c2})".format(c2=c2)
    x4="(2x`{c2})".format(c2=-c2)
    x5="(4x`+`{c2})".format(c2=c2)
    a=answer_dict[1]
    stem=stem.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,x1=x1,x2=x2,x3=x3,x4=x4,x5=x5)
    answer=answer.format(a=a)
    comment=comment.format(a1=a1,a2=a2,a3=a3,a4=a4,a5=a5,c1=c1,c2=c2)
    return stem,answer,comment

# 3-1-2-225
def factorization312_Stem_191():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        Y = np.random.randint(2, 10)
        C = np.random.randint(1, 10)
        D = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        Z = Y * Y
        E = C * -1
        F = D * -1
        if len(set([Y, C, F, E, D])) == 5 :
            break

    exp_1 = '%s `-`  ( %sx %sy  )^2' % (int_str_converter(Y, True, False), int_str_converter(C, True, True),
                                                 int_str_converter(D, False, True))
    cor_text = ' ( %d %sx %sy  )  ( %s %sx %sy  )' \
               '' % (Y, int_str_converter(C, False, True), int_str_converter(D, False, True),
                     Y, int_str_converter(E, False, True), int_str_converter(F, False, True))
    c1 = '%sx %sy `=` A' % (int_str_converter(Z, True, True), int_str_converter(D, False, True))
    c2 = '%d `-` A^2' % (Z)
    c3 = ' ( %d `+` A  )  ( %d `-` A  )' % (Y, Y)

    answers = [' ( %d %sx %sy  )  ( %s %sx %sy  )' \
               '' % (Y, int_str_converter(C, False, True), int_str_converter(F, False, True),
                     Y, int_str_converter(E, False, True), int_str_converter(D, False, True)),
               ' ( %d %sx %sy  )  ( %s %sx %sy  )' \
               '' % (Y, int_str_converter(C, False, True), int_str_converter(F, False, True),
                     Y, int_str_converter(C, False, True), int_str_converter(D, False, True)),
               ' ( %d %sx %sy  )  ( %s %sx %sy  )' \
               '' % (Y, int_str_converter(C, False, True), int_str_converter(F, False, True),
                     Y, int_str_converter(E, False, True), int_str_converter(F, False, True)),
               ' ( %d %sx %sy  )  ( %s %sx %sy  )' \
               '' % (Y, int_str_converter(C, False, True), int_str_converter(D, False, True),
                     Y, int_str_converter(E, False, True), int_str_converter(D, False, True)),
               cor_text]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-226
def factorization312_Stem_192():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        B = np.random.choice([2, 3, 5, 7], 1)[0]
        C, F, G = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        D = F + G
        E = F * G
        Y = -1 * F
        Z = -1 * C
        X = -1 * G
        if abs(C) != B and len(set([B, C, Y, G, X, F, Z])) == 7 and D != 0 :
            break

    exp_1 = ' ( %sx %sy  ) ^2 %s  ( %sx %sy  ) %s' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(D, False, True), int_str_converter(B, True, True),
                  int_str_converter(C, False, True), int_str_converter(E, False, False))
    c1 = '%dx %sy `=` A' % (B, int_str_converter(C, False, True))
    c2 = 'A^2 %sA %s' % (int_str_converter(D, False, True), int_str_converter(E, False, False))
    c3 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(F, False, False), int_str_converter(G, False, False))
    cor_text = ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(F, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(G, False, False))

    answers = [' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(Y, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(G, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(Y, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(X, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(Y, False, False),
                     int_str_converter(B, True, True), int_str_converter(Z, False, True),
                     int_str_converter(G, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(F, False, False),
                     int_str_converter(B, True, True), int_str_converter(Z, False, True),
                     int_str_converter(G, False, False)),
               cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(E) % 10 in have_jongsung_num else'를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-227
def factorization312_Stem_193():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        C, Z = np.random.randint(1, 10, 2)
        D, F, H = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        X = F * H
        Y = Z * F + H
        I = D + F
        J = Z * C
        L = Z * D + H
        M = -1 * L
        N = -1 * D
        O = Z * N
        if abs(C) != abs(D) and 0 not in [Y, I, L] \
                and is_gcd(C, M) and is_gcd(C, D) and is_gcd(C, L) and is_gcd(C, O) and is_gcd(C, I) \
                and is_gcd(C, N) :
            break

    exp_1 = '%s  ( %sx %s  ) ^2 %s  (%sx %s  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(C, True, True),
                  int_str_converter(D, False, False), int_str_converter(Y, False, True),
                  int_str_converter(C, True, True), int_str_converter(D, False, False),
                  int_str_converter(X, False, False))

    c1 = '%sx %s `=` A' % (int_str_converter(C, True, True), int_str_converter(D, False, False))
    c2 = ' ( A %s  )  ( %sA %s  )' \
         '' % (int_str_converter(F, False, False), int_str_converter(Z, True, True), int_str_converter(H, False, False))
    c3 = ' ( %sx %s %s  )  { %s  ( %sx %s  ) %s  }' \
         '' % (int_str_converter(C, True, True), int_str_converter(D, False, False), int_str_converter(F, False, False),
               int_str_converter(Z, True, True), int_str_converter(C, True, True), int_str_converter(D, False, False),
               int_str_converter(H, False, False))
    cor_text = ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(C, True, True), int_str_converter(I, False, False),
                     int_str_converter(J, True, True), int_str_converter(L, False, False))

    answers = ['%s  ( %sx %s  ) ^2'
               '' % (int_str_converter(Z, True, True), int_str_converter(C, True, True),
                     int_str_converter(D, False, False)),
               '%s  ( %sx %s  ) ^2'
               '' % (int_str_converter(J, True, True), int_str_converter(C, True, True),
                     int_str_converter(L, False, False)),
               '%s  ( %sx %s  )  ( %sx %s  )'
               '' % (int_str_converter(Z, True, True), int_str_converter(C, True, True),
                     int_str_converter(M, False, False), int_str_converter(C, True, True),
                     int_str_converter(N, False, False)),
               '%s  ( %sx %s  )  ( %sx %s  )'
               '' % (int_str_converter(Z, True, True), int_str_converter(C, True, True),
                     int_str_converter(N, False, False), int_str_converter(C, True, True),
                     int_str_converter(O, False, False)),
                cor_text]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(X) % 10 in have_jongsung_num else'를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-229
def factorization312_Stem_194():
    stem = "$$수식$${exp_1}$$/수식$${j1} $$수식$$x$$/수식$$의 계수가 $$수식$${Z}$$/수식$$인 두 일차식의 곱으로 인수분해 될 때, " \
           "두 일차식의 합은 $$수식$$ax `+` b$$/수식$$로 나타낼 수 있다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$의 합 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "따라서 두 일차식은 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$\n" \
              "즉, $$수식$${c8}$$/수식$$, $$수식$${c9}$$/수식$$이므로\n" \
              "$$수식$${c10}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1, 10)
        Y, V, U = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        X = V + U
        W = V * U
        S = Y + V
        T = Y + U
        R = 2 * Z
        Q = S + T
        K = R + Q
        if 0 not in [X, W, S, T, R, Q, K] and is_gcd(get_gcd(abs(Z), abs(S)), T) :
            break

    exp_1 = ' ( %sx %s  ) ^2 %s  ( %sx %s  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False),
                  int_str_converter(X, False, True), int_str_converter(Z, True, True),
                  int_str_converter(Y, False, False), int_str_converter(W, False, False))
    c1 = '%sx %s `=` A' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False))
    c2 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(V, False, False), int_str_converter(U, False, False))
    c3 = ' ( %sx %s %s  )  ( %sx %s %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False), int_str_converter(V, False, False),
               int_str_converter(Z, True, True), int_str_converter(Y, False, False), int_str_converter(U, False, False))
    c4 = '%sx %s ' % (int_str_converter(Z, True, True), int_str_converter(S, False, False))
    c5 = '%sx %s ' % (int_str_converter(Z, True, True), int_str_converter(T, False, False))
    c6 = ' ( %s   )  ( %s  )'  % (c4, c5)
    c7 = '%s `+` %s `=` %sx %s' % (c4, c5, int_str_converter(R, True, True), int_str_converter(Q, False, False))
    c8 = 'a `=` %d' % (R)
    c9 = 'b `=` %d' % (Q)
    b1, b2 = [' (  ', '  )'] if Q < 0 else ['', '']
    c10 = 'a `+` b `=` %d `+` %s%d%s `=` %d' % (R, b1, Q, b2, K)
    j1 = '이' if abs(W) % 10 in have_jongsung_num else '가'

    stem = stem.format(exp_1=exp_1, j1=j1, Z=Z)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10)

    return stem, answer, comment


# 3-1-2-230
def factorization312_Stem_195():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        B, D = np.random.randint(1, 10, 2)
        C, E = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        Z = D * D
        X = E * E
        Y = 2 * D * E
        F = D * B
        G = D * C
        G1 = G-1
        H = G + E
        I = -1 * C
        if len(set([F, B, H, G, E, I])) == 6 and max([abs(F), abs(H), abs(D), abs(E), abs(G1), abs(I)]) < 30 \
                and is_gcd(F, H) and is_gcd(D, E) and is_gcd(F, H)\
                and is_gcd(F, E) and is_gcd(F, G1) and is_gcd(F, I) and is_gcd(B, I) and is_gcd(B, G):
            break

    exp_1 = '%s  ( %sx %s  ) ^2 %s  ( %sx %s  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(B, True, True),
                  int_str_converter(C, False, False), int_str_converter(Y, False, True),
                  int_str_converter(B, True, True), int_str_converter(C, False, False),
                  int_str_converter(X, False, False))
    c1 = '%sx %s `=` A' % (int_str_converter(B, True, True), int_str_converter(C, False, False))
    c2 = ' ( %sA %s  )^2' % (int_str_converter(D, True, True), int_str_converter(E, False, False))
    c3 = ' { %s  ( %sx %s  ) %s  } ^2' \
         '' % (int_str_converter(D, True, True), int_str_converter(B, True, True),
               int_str_converter(C, False, False), int_str_converter(E, False, False))
    c4 = ' ( %sx %s %s  ) ^2' % (int_str_converter(F, True, True), int_str_converter(G, False, False),
                                          int_str_converter(E, False, False))
    cor_text = ' ( %sx %s  ) ^2' % (int_str_converter(F, True, True), int_str_converter(H, False, False))

    answers = ['%s  ( %sx %s  ) ^2' % (int_str_converter(D, True, True), int_str_converter(D, True, True),
                                                int_str_converter(E, False, False)),
               ' ( %sx %s  )  ( %sx %s  )'
               '' % (int_str_converter(F, True, True), int_str_converter(H, False, False),
                     int_str_converter(F, True, True), int_str_converter(E, False, False)),
               ' ( %sx %s  )  ( %sx %s  )'
               '' % (int_str_converter(F, True, True), int_str_converter(G1, False, False),
                     int_str_converter(F, True, True), int_str_converter(I, False, False)),
               '%s  ( %sx %s  )  ( %sx %s  )'
               '' % (int_str_converter(Z, True, True), int_str_converter(B, True, True),
                     int_str_converter(I, False, False), int_str_converter(B, True, True),
                     int_str_converter(G1, False, False)),
               cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(X) % 10 in have_jongsung_num else'를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-231
def factorization312_Stem_196():
    stem = "다음 중 두 다항식 $$수식$${exp_1}$$/수식$${j1} $$수식$${exp_2}$$/수식$$의 공통인수는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$에서\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$${exp_2} `=` {c6}$$/수식$$\n" \
              "따라서 두 다항식의 공통인수는 $$수식$${cor_text}$$/수식$$이다.\n\n"

    while True :
        B, H = np.random.choice(np.arange(1, 10), 2, False)
        C, D, E, I, = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        Z = D + E
        Y = D * E
        F = C + D
        G = C + E
        J = B * H
        M = F * I
        L = B * I + F * H
        W, U, S, Q = np.random.randint(1, 10, 4)
        V, T, R, P = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        if F not in [V, T, R, P] and 0 not in [Z, Y, F, G, J, M, L] :
            break

    exp_1 = ' ( %sx %s  ) ^2 %s  ( %sx %s  ) %s' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, False),
                  int_str_converter(Z, False, True), int_str_converter(B, True, True),
                  int_str_converter(C, False, False), int_str_converter(Y, False, False))
    exp_2 = '%sx^2 %sx %s' % (int_str_converter(J, True, True), int_str_converter(L, False, True),
                              int_str_converter(M, False, False))
    c1 = '%sx %s `=` A' % (int_str_converter(B, True, True), int_str_converter(C, False, False))
    c2 = 'A ^2 %sA %s' % (int_str_converter(Z, False, True), int_str_converter(Y, False, False))
    c3 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(D, False, False), int_str_converter(E, False, False))
    c4 = ' ( %sx %s %s  )  ( %sx %s %s  )' \
         '' % (int_str_converter(B, True, True), int_str_converter(C, False, False),
               int_str_converter(D, False, False), int_str_converter(B, True, True),
               int_str_converter(C, False, False), int_str_converter(E, False, False))
    cor_text = '%sx %s' % (int_str_converter(B, True, True), int_str_converter(F, False, False))
    c5 = ' ( %s  )  ( %sx %s  )' \
         '' % (cor_text, int_str_converter(B, True, True), int_str_converter(G, False, False))
    c6 = ' ( %s  )  ( %sx %s  )' \
         '' % (cor_text, int_str_converter(H, True, True), int_str_converter(I, False, False))

    answers = ['%sx %s' % (int_str_converter(W, True, True), int_str_converter(V, False, False)),
               '%sx %s' % (int_str_converter(U, True, True), int_str_converter(T, False, False)),
               '%sx %s' % (int_str_converter(S, True, True), int_str_converter(R, False, False)),
               '%sx %s' % (int_str_converter(Q, True, True), int_str_converter(P, False, False)),
               cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '과' if abs(Y) % 10 in have_jongsung_num else'와'

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-232
def factorization312_Stem_197():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면 " \
           "$$수식$${exp_2}$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$, $$수식$$d$$/수식$$의 곱 " \
           "$$수식$$abcd$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "즉, $$수식$${c6}$$/수식$$, $$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$, $$수식$${c9}$$/수식$$이므로\n" \
              "$$수식$${c10}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(2, 10)
        Y, Q = np.random.randint(1, 10, 2)
        X, R = np.random.randint(-10, -1, 2)
        S = Z * R + Q
        W = S * Y
        V = S * X
        T = Q * R
        O = Z * Y
        P = Z * X
        K = P * Q * X * R
        if abs(K) < 100 and S != 0 and is_gcd(Y, X) :
            break

    exp_1 = '%s  ( %sx %sy  ) ^2 %sx %sy %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, True, True),
                  int_str_converter(X, False, True), int_str_converter(W, False, False),
                  int_str_converter(V, False, True), int_str_converter(T, False, False))
    exp_2 = ' ( %sx `+` ay `+` b  )  ( %sx `+` cy `+` d  )' \
            '' % (int_str_converter(O, True, True), int_str_converter(Y, True, True))


    c1 = '%sx %sy `=` A' % (int_str_converter(Y, True, True), int_str_converter(X, False, True))
    c2 = '%sA^2 %sA %s' % (int_str_converter(Z, True, True), int_str_converter(S, False, True),
                           int_str_converter(T, False, False))
    c3 = ' ( %sA %s  )  ( A %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Q, False, True), int_str_converter(T, False, False))
    c4 = ' { %s  ( %sx %sy  ) %s  }  ( %sx %sy %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, True, True), int_str_converter(X, False, True),
               int_str_converter(Q, False, False), int_str_converter(Y, True, True), int_str_converter(X, False, True),
               int_str_converter(R, False, False))
    c5 = ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
         '' % (int_str_converter(O, True, True), int_str_converter(P, False, True), int_str_converter(Q, False, False),
               int_str_converter(Y, True, True), int_str_converter(X, False, True), int_str_converter(R, False, False))
    c6 = 'a `=` %d' % (P)
    c7 = 'b `=` %d' % (Q)
    c8 = 'c `=` %d' % (X)
    c9 = 'd `=` %d' % (R)
    b1, b2 = ['  ( ', '  ) '] if P < 0 else ['', '']
    b3, b4 = ['  ( ', '  ) '] if Q < 0 else ['', '']
    b5, b6 = ['  ( ', '  ) '] if X < 0 else ['', '']
    b7, b8 = ['  ( ', '  ) '] if R < 0 else ['', '']
    c10 = 'abcd `=` %s%s%s `TIMES` %s%s%s `TIMES` %s%s%s `TIMES` %s%s%s `=` %d' \
          '' % (b1, P, b2, b3, Q, b4, b5, X, b6, b7, R, b8, K)
    j1 = '을' if abs(T) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, j1=j1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             c6=c6, c7=c7, c8=c8, c9=c9, c10=c10)

    return stem, answer, comment


# 3-1-2-233
def factorization312_Stem_198():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수가 아닌 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(2, 10)
        B = np.random.choice([2, 4, 6, 8], 1)[0] * np.random.choice([-1, 1], 1)[0]
        C = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        E = B // 2
        D = E * E
        X = C * D
        Y = Z * D + C
        F = Z * B
        if is_gcd(get_gcd(abs(Z), abs(F)), abs(C)) and abs(X) < 100 and abs(Y) < 100 and abs(F) < 100 :
            break

    exp_1 = '%s  ( x ^2 %sx  ) ^2 %s  ( x ^2 %sx  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(B, False, False),
                  int_str_converter(Y, False, True), int_str_converter(B, False, False),
                  int_str_converter(X, False, False))

    c1 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c2 = '%sA^2 %sA %s' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                           int_str_converter(X, False, False))
    c3 = ' ( %sA %s  )  ( A %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(C, False, False), int_str_converter(D, False, False))
    c4 = ' { %s  ( x ^2 %sx  ) %s  }  ( x^2 %sx %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(B, False, True), int_str_converter(C, False, False),
               int_str_converter(B, False, True), int_str_converter(D, False, False))
    a1 = 'x `+` %d' % (abs(E))
    a2 = 'x `-` %d' % (abs(E))
    a3 = '%sx^2 %sx %s' % (int_str_converter(Z, True, True), int_str_converter(F, False, True),
                           int_str_converter(C, False, False))
    c5 = ' ( %s  )  ( %s  ) ^2' % (a3, a1 if E > 0 else a2)

    a4 = '%sx %s' % (int_str_converter(Z, True, True), int_str_converter(C, False, False))
    a5 = 'x^2 %sx %s' % (int_str_converter(B, False, True), int_str_converter(D, False, False))
    answers = [a1, a2, a3, a4, a5]
    np.random.shuffle(answers)
    c = a2 if E > 0 else a1
    cor_num = [multiple_choice_nums.get(answers.index(c)), multiple_choice_nums.get(answers.index(a4))]

    a1, a2, a3, a4, a5 = answers

    cor_num = ', '.join(sorted(cor_num))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)

    return stem, answer, comment


# 3-1-2-234
def factorization312_Stem_199():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True:
        B = np.random.randint(2, 10)
        C = -1
        F, G = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        E = F * G
        D = F + G
        H, I = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        J = -1 * H
        K = -1 * I
        if len(set([B, C, H, I, J, K, F, G])) == 8:
            break

    j1 = '을' if abs(E) % 10 in have_jongsung_num else '를'
    exp_1 = ' ( %sx %sy  )  ( %sx %sy %s  ) %s' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(D, False, False), int_str_converter(E, False, False))
    cor_text = ' ( %sx %sy %s  )  ( %sx %sy %s   )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(F, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(G, False, False))
    c1 = '%sx %sy `=` A' % (int_str_converter(B, True, True), int_str_converter(C, False, True))
    c2 = 'A  ( A %s  ) %s' % (int_str_converter(D, False, False), int_str_converter(E, False, False))
    c3 = 'A^2 %sA %s' % (int_str_converter(D, False, True), int_str_converter(E, False, False))
    c4 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(F, False, False), int_str_converter(G, False, False))

    answers = [' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(H, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(I, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s   )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(H, False, False),
                     int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(-I, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s   )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(-F, False, False),
                     int_str_converter(B, True, True), int_str_converter(-C, False, True),
                     int_str_converter(G, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s   )' \
               '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                     int_str_converter(F, False,False),
                     int_str_converter(B, True, True), int_str_converter(-C, False, True),
                     int_str_converter(-G, False, False)),
               cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-235
def factorization312_Stem_200():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1, 10)
        Y, T, S, W = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        if is_gcd(Z, Y):
            X = T + S
            U = T * S
            V = U - X * W
            L, M, N, P = np.random.choice(np.arange(1, 10), 4, False) * np.reshape(np.random.choice([-1, 1], 4), -1)
            if len(set([abs(L), abs(M), abs(N), abs(P), abs(T), abs(S)])) == 6 :
                L, M, N, P = [L, N, N, P] * np.reshape(np.random.choice([-1, 1], 4), -1)
                if is_gcd(get_gcd(abs(Z), abs(Y)), T) and is_gcd(get_gcd(abs(Z), abs(Y)), S) \
                    and is_gcd(get_gcd(abs(Z), abs(Y)), L) and is_gcd(get_gcd(abs(Z), abs(Y)), M) \
                    and is_gcd(get_gcd(abs(Z), abs(Y)), N) and is_gcd(get_gcd(abs(Z), abs(Y)), P) :
                    break

    exp_1 = ' ( %sa %sb  ) ^2 %s  ( %sa %sb %s  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                  int_str_converter(X, False, True), int_str_converter(Z, True, True),
                  int_str_converter(Y, False, True), int_str_converter(W, False, False),
                  int_str_converter(V, False, False))
    c1 = '%sa %sb `=` A' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True))
    c2 = 'A^2 %s  ( A %s  ) %s' \
         '' % (int_str_converter(X, False, True), int_str_converter(W, False, False),
               int_str_converter(V, False, False))
    c3 = 'A^2 %sA %s' % (int_str_converter(X, False, True), int_str_converter(U, False, False))
    c4 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(T, False, False), int_str_converter(S, False, False))

    a1 = ' ( %sa %sb %s  )' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                                       int_str_converter(T, False, False))
    a2 = ' ( %sa %sb %s  )' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                                       int_str_converter(S, False, False))
    c5 = '%s %s' % (a1, a2)

    mode = np.random.choice([0, 1], 1)[0]
    while True :
        answers = []
        for i in sorted([L, M, N, P, T, S]) :
            ans = [' ( %sa %sb %s  )'
                   '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                         int_str_converter(i, False, False)),
                   ' ( %sa %sb %s  )'
                   '' % (int_str_converter(Z, True, True), int_str_converter(-Y, False, True),
                         int_str_converter(i, False, False))
                   ]
            answers.append(np.random.choice(ans, 1)[0])
        if len(set(answers)) == 6 :
            if a2 in answers and a1 in answers :
                break

    if mode == 0 :
        answers.remove(a2)
        cor_num = multiple_choice_nums.get(answers.index(a1))
    else :
        answers.remove(a1)
        cor_num = multiple_choice_nums.get(answers.index(a2))

    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)

    return stem, answer, comment


# 3-1-2-236
def factorization312_Stem_201():
    stem = "$$수식$${exp_1}$$/수식$${j1} 두 일차식의 곱으로 인수분해될 때, 두 일차식의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 인수분해한 두 일차식의 합은\n" \
              "$$수식$${c6} `=` {cor_text}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1, 10)
        Y, V, U, P = np.random.choice(np.arange(1, 10), 4, False) * np.reshape(np.random.choice([-1, 1], 4), -1)
        X = V + U
        W = V * U
        S = 2 * Y
        Q = V + U
        T = Z + Z
        if len(set([Z, Y, T, S, U])) == 5 and len(set([X, P, W, U])) == 4 and is_gcd(Z, Y) \
                and is_gcd(get_gcd(abs(Z), abs(Y)), V) and is_gcd(get_gcd(abs(Z), abs(Y)), U) :
            break

    j1 = '이' if abs(W) % 10 in have_jongsung_num else '가'
    exp_1 = ' ( %sa %sb  )  ( %sa %sb %s  ) %s' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                  int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                  int_str_converter(X, False, False), int_str_converter(W, False, False))
    c1 = '%sa %sb `=` A' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True))
    c2 = 'A  ( A %s  ) %s' % (int_str_converter(X, False, False), int_str_converter(W, False, False))
    c3 = 'A ^2 %sA %s' % (int_str_converter(X, False, True), int_str_converter(W, False, False))
    c4 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(V, False, False), int_str_converter(U, False, False))
    a1 = ' ( %sa %sb %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True), int_str_converter(V, False, False))
    a2 = ' ( %sa %sb %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True), int_str_converter(U, False, False))
    c5 = '%s %s' % (a1, a2)
    c6 = '%s `+` %s' % (a1, a2)
    cor_text = '%sa %sb %s' % (int_str_converter(T, True, True), int_str_converter(S, False, True),
                               int_str_converter(Q, False, False))

    ans = sorted([[Z, Y, X], [T, S, Q], [T, S, P], [X, Z, W], [X, T, U]], key=lambda x : (x[0], x[1], x[2]))
    answers = []
    for [a, b, c] in ans :
        answers.append('%sa %sb %s' % (int_str_converter(a, True, True), int_str_converter(b, False, True),
                                       int_str_converter(c, False, False)))

    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-237
def factorization312_Stem_202():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하면 $$수식$${exp_2}$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$, $$수식$$d$$/수식$$에 대하여 " \
           "$$수식$$a `+` b `+` c `+` d$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 $$수식$$a `+` b `+` c `+` d `=` {K}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 10)
        C, F = np.random.randint(1, 10) * np.reshape(np.random.choice([-1, 1], 2), -1)
        G = np.random.randint(1, 21) * np.random.choice([-1, 1], 1)[0]
        D = F + G
        E = F * G
        K = C + F + B + G
        if is_gcd(get_gcd(abs(B), abs(C)), abs(F)) and is_gcd(get_gcd(abs(B), abs(C)), abs(G)) \
                and is_gcd(get_gcd(abs(B), abs(C)), abs(D)) :
            break

    exp_1 = ' ( %sx %sy  )  ( %sx %sy %sz  ) %sz^2' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(D, False, True), int_str_converter(E, False, True))
    exp_2 = ' ( %sx `+` ay `+` bz  )  ( cx %sy `+` dz  )' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, True))

    c1 = '%sx %sy `=` A' % (int_str_converter(B, True, True), int_str_converter(C, False, True))
    c2 = 'A  ( A %sx  ) %sz^2' % (int_str_converter(D, False, True), int_str_converter(E, False, True))
    c3 = 'A ^2 %sAz %sz^2' % (int_str_converter(D, False, True), int_str_converter(E, False, True))
    c4 = ' ( A %sz  )  ( A %sz  )' \
         '' % (int_str_converter(F, False, True), int_str_converter(G, False, True))
    c5 = ' ( %sx %sy %sz  )  ( %sx %sy %sz  )' \
         '' % (int_str_converter(B, True, True), int_str_converter(C, False, True), int_str_converter(F, False, True),
               int_str_converter(B, True, True), int_str_converter(C, False, True), int_str_converter(G, False, True))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, K=K)

    return stem, answer,comment


# 3-1-2-238
def factorization312_Stem_203():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n"

    while True :
        B = np.random.randint(2, 10)
        C, G, I, N, Q = np.random.randint(1, 10, 5) * np.reshape(np.random.choice([-1, 1], 5), -1)
        H = (C - G) // B
        J = (C - I) // B
        E, F = [G, I] * np.reshape([H, J], -1)
        M = E + F
        O = M - N
        L, R = [E, N] * np.reshape([F, O], -1)
        P = L - R
        if Q != J and abs(C-G) % B == 0 and abs(C-I) % B == 0 and 0 not in [H, J, E, F, L, M, O, R, P] \
                and is_gcd(get_gcd(abs(B), abs(C)), abs(N)) and is_gcd(get_gcd(abs(B), abs(C)), abs(O)) \
                and is_gcd(B, I) and is_gcd(B, G) and is_gcd(B, J) \
                and abs(P) < 100 and abs(R) < 100 and abs(P) < 100 and abs(L) < 100:
            break

    exp_1 = ' ( %sx^2 %sx %s  )  ( %sx^2 %sx %s  ) %s' \
            '' % (int_str_converter(B, True, True), int_str_converter(C, False, True),
                  int_str_converter(N, False, False), int_str_converter(B, True, True),
                  int_str_converter(C, False, True), int_str_converter(O, False, False),
                  int_str_converter(P, False, False))
    c1 = '%sx^2 %sx `=` A' % (int_str_converter(B, True, True), int_str_converter(C, False, True))
    c2 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(N, False, False), int_str_converter(O, False, False),
               int_str_converter(P, False, False))
    c3 = 'A ^2 %sA %s %s' % (int_str_converter(M, False, True), int_str_converter(R, False, False),
                             int_str_converter(P, False, False))
    c4 = 'A ^2 %sA %s' % (int_str_converter(M, False, True), int_str_converter(L, False, False))
    c5 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(E, False, False), int_str_converter(F, False, False))
    c6 = ' ( %sx^2 %sx %s  )  ( %sx^2 %sx %s  )' \
         '' % (int_str_converter(B, True, True), int_str_converter(C, False, True), int_str_converter(E, False, False),
               int_str_converter(B, True, True), int_str_converter(C, False, True), int_str_converter(F, False, False))
    c7 = ' ( %sx %s  )  ( x %s  )  ( %sx %s  )  ( x %s  )' \
         '' % (int_str_converter(B, True, True), int_str_converter(G, False, False),
               int_str_converter(H, False, False), int_str_converter(B, True, True),
               int_str_converter(I, False, False), int_str_converter(J, False, False))

    cor_text  = ' ( x %s  )  ( x %s  )  ( %sx %s  )  ( %sx %s  )' \
                '' % (int_str_converter(H, False, False), int_str_converter(J, False, False),
                      int_str_converter(B, True, True), int_str_converter(G, False, False),
                      int_str_converter(B, True, True), int_str_converter(I, False, False))

    ans = [[Q, H, B, G, B, J], [G, -G, B, H, B, J]]
    answers = [cor_text,
               ' ( x %s  ) ^2  ( %sx `+` %d  )  ( %sx `-` %d  )'
               '' % (int_str_converter(H, False, False), int_str_converter(B, True, True), abs(G),
                     int_str_converter(B, True, True), abs(G)),
               ' ( %sx %s  )  ( x %s  )  ( x %s  )^2'
               '' % (int_str_converter(B, True, True), int_str_converter(G, False, False),
                     int_str_converter(H, False, False), int_str_converter(J, False, False))]
    for [a, b, c, d, e, f] in ans :
        a, b = [a, b] if a < b else [b, a]
        d, f = [d, f] if d < f else [f, d]

        answers.append(' ( x %s  )  ( x %s  )  ( %sx %s  )  ( %sx %s  )'
                       '' % (int_str_converter(a, False, False), int_str_converter(b, False, False),
                             int_str_converter(c, True, True), int_str_converter(d, False, False),
                             int_str_converter(e, True, True), int_str_converter(F, False, False)))

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(P) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-239
def factorization312_Stem_204():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수가 아닌 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n"

    while True :
        B = np.random.randint(1, 10)
        L, N, C = np.random.choice(np.arange(1, 10), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
        M = B - L
        O = B - N
        I = L * M
        J = N * O
        F = I + J
        H = I * J
        D = F - C
        G = C * D
        E = H - G
        Z, Y = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        if M != N and len(set([L, M, N, O, Z, Y])) == 6 and H < 200 and E < 200 and 0 not in [M, O, F, D, E] \
                and abs(E) < 121 :
            break

    exp_1 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  ) %s' \
            '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
                  int_str_converter(B, False, True), int_str_converter(D, False, False),
                  int_str_converter(E, False, False))
    c1 = 'x^2 %sx `=` A' % int_str_converter(B, False, True)
    c2 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
               int_str_converter(E, False, False))
    c3 = 'A^2 %sA %s %s' % (int_str_converter(F, False, True), int_str_converter(G, False, False),
                            int_str_converter(E, False, False))
    c4 = 'A^2 %sA %s' % (int_str_converter(F, False, True), int_str_converter(H, False, False))
    c5 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(I, False, False), int_str_converter(J, False, False))
    c6 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(I, False, False),
               int_str_converter(B, False, True), int_str_converter(J, False, False))

    L, M = sorted([L, M])
    N, O = sorted([N, O])

    a1 = 'x %s' % (int_str_converter(L, False, False))
    a2 = 'x %s' % (int_str_converter(M, False, False))
    a3 = 'x %s' % (int_str_converter(N, False, False))
    a4 = 'x %s' % (int_str_converter(O, False, False))

    c7 = '%s %s %s %s' % (a1, a2, a3, a4)
    answers = list(np.random.choice([a1, a2, a3, a4], 3, False))
    cor_t1 = 'x %s' % (int_str_converter(Z, False, False))
    cor_t2 = 'x %s' % (int_str_converter(Y, False, False))
    answers.extend([cor_t1, cor_t2])

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = [multiple_choice_nums.get(answers.index(cor_t1)), multiple_choice_nums.get(answers.index(cor_t2))]
    cor_num = ', '.join(sorted(cor_num))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-240
def factorization312_Stem_205():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        Z, X = np.random.randint(1, 10, 2)
        Y, W = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        V = -1 * X
        U = -1 * W
        Q = Z + X
        R = Y + W
        S = Z + V
        T = Y + U
        D = Q + 1
        E = -1 * W
        if len(set([Z, X, E, T, Q, D, S])) == 7 and len(set([Y, W, Z, R, T, S])) == 6 \
                and is_gcd(Z, Y) and is_gcd(X, W) and is_gcd(E, Y) and is_gcd(T, Z) and is_gcd(Q, R) \
                and is_gcd(X, T) and is_gcd(D, S) and is_gcd(S, T)  :
            break

    exp_1 = ' ( %sx %sy  ) ^2 `-`  ( %sx %sy  ) ^2' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
                  int_str_converter(X, True, True), int_str_converter(W, False, True))

    c1 = '%sx %sy `=` A' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True))
    c2 = '%sx %sy `=` B' % (int_str_converter(X, True, True), int_str_converter(W, False, True))
    c3 = 'A^2 `-` B^2'
    c4 = ' ( A `+` B  )  ( A `-` B  )'
    c5 = ' ( %sx %sy %sx %sy  )  ( %sx %sy %sx %sy  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, True),
               int_str_converter(X, False, True), int_str_converter(W, False, True),
               int_str_converter(Z, True, True), int_str_converter(Y, False, True),
               int_str_converter(V, False, True), int_str_converter(U, False, True))
    cor_text = ' ( %sx %sy  )  ( %sx %sy  )' \
               '' % (int_str_converter(Q, True, True), int_str_converter(R, False, True),
                     int_str_converter(S, True, True), int_str_converter(T, False, True))

    ans = [[Z, Y, X, W], [E, Y, T, Z], [E, Y, Q, R], [X, T, D, S]]
    answers = [cor_text]
    for [a, b, c, d] in ans :
        answers.append(' ( %sx %sy  )  ( %sx %sy  )' \
                       '' % (int_str_converter(a, True, True), int_str_converter(b, False, True),
                             int_str_converter(c, True, True), int_str_converter(d, False, True)))
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-242
def factorization312_Stem_206():
    stem = "$$수식$${exp_1}$$/수식$$일 때, $$수식$$a^2 `+` b^2$$/수식$$의 값을 구하시오. (단 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 정수)\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1a}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "따라서 $$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$이므로\n" \
              "$$수식$${c9}$$/수식$$\n\n"

    while True :
        Z, X = np.random.randint(1, 10, 2)
        Y, W = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        V = -1 * X
        U = -1 * W
        Q = Z + X
        R = Y + W
        S = Z + V
        T = Y + U
        M = R * R
        N = S * S
        K = M + N
        if 0 not in [Q, R, S, T, M, N, K] and is_gcd(get_gcd(get_gcd(abs(Q), abs(R)), abs(S)), abs(T)) and K < 150 :
            break

    exp_1 = ' ( %sx %s  ) ^2 `-`  ( %sx %s  ) ^2 `=`  ( %sx `+` a  )  ( bx %s  )' \
            '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False),
                  int_str_converter(X, True, True), int_str_converter(W, False, False),
                  int_str_converter(Q, True, True), int_str_converter(T, False, False))
    exp_1a = ' ( %sx %s  ) ^2 `-`  ( %sx %s  ) ^2'\
             '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False),
                   int_str_converter(X, True, True), int_str_converter(W, False, False))

    c1 = '%sx %s `=` A' % (int_str_converter(Z, True, True), int_str_converter(T, False, False))
    c2 = '%sx %s `=` B' % (int_str_converter(X, True, True), int_str_converter(W, False, False))
    c3 = 'A ^2 `-` B ^2'
    c4 = ' ( A `+` B  )  ( A `-` B  )'
    c5 = ' ( %sx %s %sx %s  )  ( %sx %s %sx %s  )' \
         '' % (int_str_converter(Z, True, True), int_str_converter(Y, False, False),
               int_str_converter(X, False, True), int_str_converter(W, False, False),
               int_str_converter(Z, True, True), int_str_converter(Y, False, False),
               int_str_converter(V, False, True), int_str_converter(U, False, False))
    c6 = ' ( %sx %s  )  ( %sx %s  )' \
         '' % (int_str_converter(Q, True, True), int_str_converter(R, False, False),
               int_str_converter(S, True, True), int_str_converter(T, False, False))
    c7 = 'a `=` %d' % (R)
    c8 = 'b `=` %d' % (S)
    b1, b2 = ['  ( ', '  ) '] if R < 0 else ['', '']
    b3, b4 = ['  ( ', '  ) '] if S < 0 else ['', '']

    c9 = 'a ^2 `+` b ^2 `=` %s%d%s^2 `+` %s%d%s^2 `=` %d `+` %d `=` %d' % (b1, R, b2, b3, S, b4, M, N, K)

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1a=exp_1a, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9)

    return stem, answer, comment


# 3-1-2-243
def factorization312_Stem_207():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        C, D, H = np.random.randint(1, 10, 3)
        G = H * H
        E = 2 * H
        F = E * D
        I = H * D
        J = C + I
        nums = np.random.choice(np.arange(1, 10), 7, False) * np.reshape(np.random.choice([-1, 1], 7), -1)
        L, M, N, O, P, Q, R = nums

        if is_gcd(get_gcd(get_gcd(M, N), O), R) :
            break

    exp_1 = ' ( x %s  )^2 `+`  ( x %s  )  ( %sy %s  ) %s  ( y %s  ) ^2' \
            '' % (int_str_converter(C, False, False), int_str_converter(C, False, False),
                  int_str_converter(E, True, True), int_str_converter(F, False, False),
                  int_str_converter(G, False, True), int_str_converter(D, False, False))
    c1 = 'x %s `=` A' % (int_str_converter(C, False, False))
    c2 = 'y %s `=` B' % (int_str_converter(D, False, False))
    c3 = ' ( x %s  )^2 %s  ( x %s  )  ( y %s  ) %s  ( y %s  ) ^2' \
         '' % (int_str_converter(C, False, False), int_str_converter(E, False, False),
               int_str_converter(C, False, True), int_str_converter(D, False, False),
               int_str_converter(G, False, True), int_str_converter(D, False, False))
    c4 = 'A ^2 %sAB %sB ^2' % (int_str_converter(E, False, True), int_str_converter(G, False, True))
    c5 = ' ( A %sB  )^2' % (int_str_converter(H, False, True))
    c6 = ' ( x %s %sy %s  ) ^2' % (int_str_converter(C, False, False), int_str_converter(H, False, True),
                                            int_str_converter(I, False, False))
    cor_text = ' ( x %sy %s  ) ^2' % (int_str_converter(H, False, True), int_str_converter(J, False, False))

    answers = [cor_text,
               ' ( x %sy %s  ) ^2'
               '' % (int_str_converter(L, False, True), int_str_converter(M, False, False)),
               ' ( x %sy %s  )  ( x %sy %s  )'
               '' % (int_str_converter(N, False, True), int_str_converter(O, False, False),
                     int_str_converter(P, False, True), int_str_converter(Q, False, False)),
               ' ( x %sy %s  )  ( x %sy %s  )'
               '' % (int_str_converter(-N, False, True), int_str_converter(O, False, False),
                     int_str_converter(P, False, True), int_str_converter(-P, False, False)),
               '  ( %sx %sy %s  )  ( %sx %sy %s  )'
               '' % (int_str_converter(M, True, True), int_str_converter(N, False, True),
                     int_str_converter(O, False, False), int_str_converter(M, True, True),
                     int_str_converter(P, False, True), int_str_converter(Q, False, False))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-244
def factorization312_Stem_208():
    stem = "다음 두 다항식 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$의 공통 인수가 " \
           "$$수식$${exp_1}$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a - b$$/수식$$의 값은?\n" \
           "$$수식$${exp_2}$$/수식$$\n" \
           "$$수식$${exp_3}$$/수식$$\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${c2}$$/수식$$, $$수식$${c3}$$/수식$$이고\n" \
              "두 다항식 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$의 공통인수는 $$수식$${c4}$$/수식$$이다.\n" \
              "그러므로 $$수식$${c5}$$/수식$$으로 놓으면\n" \
              "$$수식$${c6}$$/수식$$, $$수식$${c7}$$/수식$$에서\n" \
              "$$수식$${c8}$$/수식$$, $$수식$${c9}$$/수식$$\n" \
              "$$수식$${c10}$$/수식$$으로 놓으면\n" \
              "$$수식$${c11}$$/수식$$, $$수식$${c12}$$/수식$$에서\n" \
              "$$수식$${c13}$$/수식$$, $$수식$${c14}$$/수식$$\n" \
              "따라서 $$수식$${c15}$$/수식$$\n\n"

    while True :
        C = np.random.randint(1, 10)
        D, T, Z, Y = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        W = -1 * Z
        V = -1 - T
        U = T * V + Z
        S = Y - T
        R = T * S
        Q = U - R
        if 0 not in [C, D, T, Z, Y, W, V, U, S, R, Q] and abs(Q) < 50:
            break

    exp_1 = '%sx %sy %s' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                            int_str_converter(T, False, False))
    exp_2 = 'A `=`  ( %sx %sy  )^2 `-`  ( %sx %sy %s  ) `+` a' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                  int_str_converter(C, True, True), int_str_converter(D, False, True),
                  int_str_converter(Z, False, False))
    exp_3 = 'B `=`  ( %sx %sy  )  ( %sx %sy %s  ) `+` b' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                  int_str_converter(C, True, True), int_str_converter(D, False, False),
                  int_str_converter(Y, False, False))

    c1 = '%sx %sy `=` X' % (int_str_converter(C, True, True), int_str_converter(D, False, True))
    c2 = 'A `=` X^2 `-` X `+` a %s' % (int_str_converter(W, False, False))
    c3 = 'B `=` X^2 %sX `+` b' % (int_str_converter(Y, False, False))
    c4 = 'X %s' % (int_str_converter(T, False, False))
    c5 = '%s `=`  ( X %s  )  ( X `+` m  )' % (c2, int_str_converter(T, False, False))
    c6 = '%d `+` m `=` -1' % (T)
    c7 = '%sm `=` a %s' % (int_str_converter(T, True, True), int_str_converter(W, False, False))
    c8 = 'm `=` %d' % (V)
    c9 = 'a `=` %d' % (U)
    c10 = 'B `=` X ^2 %sX `+` b `=`  ( X %s  )  ( X `+` n  )' \
          '' % (int_str_converter(Y, False, True), int_str_converter(T, False, False))
    c11 = '%d `+` n `=` %d' % (T, Y)
    c12 = '%sn `=` b' % (int_str_converter(T, True, True))
    c13 = 'n `=` %d' % (S)
    c14 = 'b `=` %d' % (R)
    b1, b2 = ['  ( ', '  ) '] if R < 0 else ['', '']
    c15 = 'a `-` b `=` %d `-` %s%d%s `=` %d' % (U, b1, R, b2, Q)

    n = np.random.choice([1, 2, 3, 4], 1)[0]
    answers = [i for i in range(Q-4*n, (Q+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx : idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(Q))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10,
                             c11=c11, c12=c12, c13=c13, c14=c14, c15=c15)

    return stem, answer, comment


# 3-1-2-245
def factorization312_Stem_209():
    stem = "다음 식을 인수분해하면?\n" \
           "$$수식$${exp_1}$$/수식$$\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "이때 $$수식$${c2}$$/수식$$로 놓으면\n" \
              "(주어진 식)\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"


    while True :
        C, H = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = abs(C) * -1
        B = C * C
        E = -1 * C
        J = -1 * B
        I, G = np.random.randint(1, 10, 2) * np.random.choice([-1, 1], 2)[0]
        if len(set([C, E, H])) == 3 and len(set([G, B, I, E, J])) == 5 :
            break

    exp_1 = ' ( xy %s  )  ( x %s  )  ( y %s  ) %sxy' \
            '' % (int_str_converter(B, False, False), int_str_converter(C, False, False),
                  int_str_converter(C, False, False), int_str_converter(B, False, True))
    c1= ' ( xy %s  )  ( xy %sx %sy %s  ) %sxy' \
        '' % (int_str_converter(B, False, False), int_str_converter(C, False, True),
              int_str_converter(C, False, True), int_str_converter(B, False, False),
              int_str_converter(B, False, True))
    c2 = 'xy %s `=` A' %  (int_str_converter(B, False, False))
    c3 = 'A  ( A %sx %sy  ) %sxy' \
         '' % (int_str_converter(C, False, True), int_str_converter(C, False, True),
               int_str_converter(B, False, True))
    c4 = 'A ^2 `-`  ( %sx %sy  ) A %sxy' \
         '' % (int_str_converter(E, True, True), int_str_converter(E, False, True), int_str_converter(B, False, False))
    c5 = ' ( A %sx  )  ( A %sy  )' \
         '' % (int_str_converter(C, False, True), int_str_converter(C, False, True))
    cor_text = ' ( xy %sx %s  )  ( xy %sy %s  )' \
               '' % (int_str_converter(C, False, True), int_str_converter(B, False, False),
                     int_str_converter(C, False, True), int_str_converter(B, False, False))

    ans = [[C, G, H ,B], [C, I, H, E], [E, E, C, I], [E, B, C, J]]
    answers = [cor_text]
    for [a, b, c, d] in ans :
        answers.append(' ( xy %sx %s  )  ( xy %sy %s  )' \
                       '' % (int_str_converter(a, False, True), int_str_converter(b, False, False),
                             int_str_converter(c, False, True), int_str_converter(d, False, False)))

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-246
def factorization312_Stem_210():
    stem = "$$수식$${exp_1}$$/수식$$일 때, " \
           "$$수식$${exp_2}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$이므로\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$`=` {c3}$$/수식$$\n" \
              "$$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$로 놓으면\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        C, E = np.random.randint(1, 10, 2)
        D, F = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        G, H, I = [-3, -3, -1] * np.reshape([D, F, E], -1)
        J = -1 * H
        L = C + E
        M = G + H
        N = C + I
        O = G + J
        P, Q, R = [-1, -1, -1] * np.reshape([O, M ,N], -1)

        if 0 not in [L, M, N, O] and D != L \
                and is_gcd(D, M) and is_gcd(N, O) and is_gcd(L, Q) and is_gcd(R, P) \
                and is_gcd(N, P) and is_gcd(L, M) and is_gcd(N, O) :
            break

    j1 = '을' if abs(F) % 10 in have_jongsung_num else '를'
    exp_1 = ' %s a, `` b  %s `=`  ( a `-` 3b  )^2' % (right, left)
    exp_2 = ' %s %sx, `` %d  %s `-`  %s %sx, ~ %d  %s' \
            '' % (right, int_str_converter(C, True, True), D, left,
                  right, int_str_converter(E, True, True), F, left)
    c1 = ' ( %sx %s  ) ^2' % (int_str_converter(C, True, True), int_str_converter(G, False, False))
    c2 = ' ( %sx%s  ) ^2' % (int_str_converter(E, True, True), int_str_converter(H, False, False))
    c3 = '%s `-` %s' % (c1, c2)
    c4 = '%s `=` A' % (c1)
    c5 = '%s `=` B' % (c2)
    c6 = 'A^2 `-` B^2'
    c7 = ' ( A `+` B  )  ( A `-` B  )'
    c8 = ' ( %sx %s %sx %s  )  ( %sx %s %sx %s  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(G, False, False),
               int_str_converter(E, False, True), int_str_converter(H, False, False),
               int_str_converter(C, True, True), int_str_converter(G, False, False),
               int_str_converter(I, False, True), int_str_converter(J, False, False))
    cor_text = ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(L, True, True), int_str_converter(M, False, False),
                     int_str_converter(N, True, True), int_str_converter(O, False, False))

    answers = [cor_text,
               ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(D, True, True), int_str_converter(M, False, False),
                     int_str_converter(N, True, True), int_str_converter(O, False, False)),
               ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(L, True, True), int_str_converter(Q, False, False),
                     int_str_converter(N, True, True), int_str_converter(O, False, False)),
               ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(L, True, True), int_str_converter(Q, False, False),
                     int_str_converter(R, True, True), int_str_converter(P, False, False)),
               ' ( %sx %s  )  ( %sx %s  )' \
               '' % (int_str_converter(L, True, True), int_str_converter(M, False, False),
                     int_str_converter(N, True, True), int_str_converter(P, False, False))]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, cor_text=cor_text)


    return stem, answer, comment


# 3-1-2-247
def factorization312_Stem_211():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        C, L = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        SIGN = '+' if L > 0 else '-'
        M = eval('%d %s 1' % (L, SIGN))
        N = eval('%d %s 2' % (L, SIGN))
        O = eval('%d %s 3' % (L, SIGN))
        B = L + O
        I = L * O
        J = M * N
        E = I + J
        G = I * J
        D = E - C
        F = C * D
        H = F - G
        P = -1 * C
        Q = -1 * B
        R = -1 * D
        if 0 not in [L, M, N, O, H] and abs(H) < 501 and abs(H) < 100 and abs(G) < 100 and abs(F) < 100:
            break

    exp_1 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  ) %s' \
            '' % (int_str_converter(L, False, False), int_str_converter(M, False, False),
                  int_str_converter(N, False, False), int_str_converter(O, False, False),
                  int_str_converter(H, False, False))
    c1 = ' {  ( x %s  )  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } %s' \
         '' % (int_str_converter(L, False, False), int_str_converter(O, False, False),
               int_str_converter(M, False, False), int_str_converter(N, False, False),
               int_str_converter(H, False, False))
    c2 = ' ( x ^2 %sx %s  )  ( x ^2 %sx %s  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(I, False, False),
               int_str_converter(B, False, True), int_str_converter(J, False, False),
               int_str_converter(H, False, False))
    c3 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(I, False, False), int_str_converter(J, False, False),
               int_str_converter(H, False, False))
    c5 = 'A^2 %sA %s %s' \
         '' % (int_str_converter(E, False, True), int_str_converter(G, False, False),
               int_str_converter(H, False, False))
    c6 = 'A^2 %sA %s' % (int_str_converter(E, False, True), int_str_converter(F, False, False))
    c7 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False))
    cor_text = ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
                     int_str_converter(B, False, True), int_str_converter(D, False, False))

    answers = [cor_text,
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(B, False, True), int_str_converter(P, False, False),
                     int_str_converter(B, False, True), int_str_converter(R, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(B, False, True), int_str_converter(P, False, False),
                     int_str_converter(Q, False, True), int_str_converter(D, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(Q, False, True), int_str_converter(P, False, False),
                     int_str_converter(Q, False, True), int_str_converter(R, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(Q, False, True), int_str_converter(C, False, False),
                     int_str_converter(B, False, True), int_str_converter(R, False, False)),
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(H) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-248
def factorization312_Stem_212():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 10)
        N, O, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        T, U, V = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        Q = B - N
        P = B - O
        L = N * Q
        M = O * P
        G = L + M
        I = L * M
        D = B - C
        F = C * D
        E = G - F
        H = F * E
        J = H - I
        Z, X, W = np.random.choice(np.arange(1, 20), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
        if C not in [N, O, P, Q] and 0 not in [Q, P, L, M, G, I, D, F, E, H, J] and len(set([B, C, T, D])) == 4 \
                and len(set([T, U, D, C])) == 4 and len(set([V, T, B])) == 3 and len(set([X, Z, W, E])) == 4 \
                and B not in [T, V] and abs(J) < 501 and is_gcd(get_gcd(get_gcd(abs(L), abs(M)), abs(N)), O) \
                and abs(H) < 100 and abs(G) < 100 and abs(F) < 100:
            break

    exp_1 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  ) %s' \
            '' % (int_str_converter(N, False, False), int_str_converter(O, False, False),
                  int_str_converter(P, False, False), int_str_converter(Q, False, False),
                  int_str_converter(J, False, False))
    c1 = ' {  ( x %s  )  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } %s' \
         '' % (int_str_converter(N, False, False), int_str_converter(Q, False, False),
               int_str_converter(O, False, False), int_str_converter(P, False, False),
               int_str_converter(J, False, False))
    c2 = ' ( x ^2 %sx %s  )  ( x ^2 %sx %s  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(L, False, False),
               int_str_converter(B, False, True), int_str_converter(M, False, False),
               int_str_converter(J, False, False))
    c3 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(L, False, False), int_str_converter(M, False, False),
               int_str_converter(J, False, False))
    c5 = 'A^2 %sA %s %s' \
         '' % (int_str_converter(G, False, True), int_str_converter(I, False, False),
               int_str_converter(J, False, False))
    c6 = 'A^2 %sA %s' % (int_str_converter(G, False, True), int_str_converter(H, False, False))
    c7 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(F, False, False), int_str_converter(E, False, False))
    c8 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(F, False, False),
               int_str_converter(B, False, True), int_str_converter(E, False, False))
    cor_text = ' ( x %s  )  ( x %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
                     int_str_converter(B, False, True), int_str_converter(E, False, False))


    answers = [cor_text,
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(B, False, True), int_str_converter(T, False, False),
                     int_str_converter(V, False, True), int_str_converter(X, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(C, False, True), int_str_converter(U, False, False),
                     int_str_converter(T, False, True), int_str_converter(Z, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(T, False, True), int_str_converter(U, False, False),
                     int_str_converter(V, False, True), int_str_converter(W, False, False)),
               ' ( x %s  )  ( x %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(-D, False, False), int_str_converter(-C, False, False),
                     int_str_converter(B, False, True), int_str_converter(E, False, False))]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(H) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-249
def factorization312_Stem_213():
    stem = "$$수식$${exp_1}$$/수식$$의 인수인 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n\n"

    while True :
        M = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        SIGN = '+' if M > 0 else '-'
        N = eval('%d %s 1' % (M, SIGN))
        O = eval('%d %s 2' % (M, SIGN))
        P = eval('%d %s 3' % (M, SIGN))
        B = M + P
        C = M * P
        D = N * O
        F = C + D
        G = C * D
        I = F // 2
        H = I * I
        E = H - G
        Z, Y, X = np.random.choice(np.arange(1, 10), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
        J = np.random.randint(1, 20) * np.random.choice([-1, 1], 1)[0]

        if abs(F) % 2 == 0 and I != J and 0 not in [N, O, P, B, C, D, F, G, I, H, E] and abs(G) < 201 and abs(F) < 121 :
            break


    exp_1 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  ) %s' \
            '' % (int_str_converter(M, False, False), int_str_converter(N, False, False),
                  int_str_converter(O, False, False), int_str_converter(P, False, False),
                  int_str_converter(E, False, False))
    c1 = ' {  ( x %s  )  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } %s' \
         '' % (int_str_converter(M, False, False), int_str_converter(P, False, False),
               int_str_converter(N, False, False), int_str_converter(O, False, False),
               int_str_converter(E, False, False))
    c2 = ' ( x ^2 %sx %s  )  ( x ^2 %sx %s  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
               int_str_converter(B, False, True), int_str_converter(D, False, False),
               int_str_converter(E, False, False))
    c3 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
               int_str_converter(E, False, False))
    c5 = 'A^2 %sA %s %s' \
         '' % (int_str_converter(F, False, True), int_str_converter(G, False, False),
               int_str_converter(E, False, False))
    c6 = 'A^2 %sA %s' % (int_str_converter(F, False, True), int_str_converter(H, False, False))
    c7 = ' ( A %s  )^2' % (int_str_converter(I, False, False))
    cor_text = 'x^2 %sx %s' \
               '' % (int_str_converter(B, False, True), int_str_converter(I, False, False))
    c8 = ' ( %s  ) ^2' % (cor_text)
    answers = [cor_text,
               'x %s' % (int_str_converter(Z)), 'x %s' % (int_str_converter(X)), 'x %s' % (int_str_converter(Y)),
               'x^2 %sx %s' % (int_str_converter(B, False, True), int_str_converter(J, False, False))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8)

    return stem, answer, comment


# 3-1-2-250
def factorization312_Stem_214():
    stem = "$$수식$${exp_1} `=` {exp_2}$$/수식$$일 때, " \
           "상수 $$수식$$m$$/수식$$, $$수식$$n$$/수식$$에 대하여 $$수식$$m `+` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "따라서 $$수식$${c9}$$/수식$$, $$수식$${c10}$$/수식$$이므로\n" \
              "$$수식$${c11}$$/수식$$\n\n"

    while True :
        M, N = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        P = -2 - M
        O = -2 - N
        B = M + P
        C = M * P
        D = N * O
        F = C + D
        G = C * D
        I = F // 2
        H = I * I
        E = H - G
        K = B + I
        if abs(F) % 2 == 0 and 0 not in [P, O, B, C, D, F, G, I, H, E, K] and \
                abs(F) < 100 and abs(G) < 100 and abs(E) < 100 and abs(H) < 200 and \
                len(set([M, N, O, P])) == 4 :
            break

    exp_1 = ' ( a %s  )  ( a %s  )  ( a %s  )  ( a %s  ) %s' \
            '' % (int_str_converter(M, False, False), int_str_converter(N, False, False),
                  int_str_converter(O, False, False), int_str_converter(P, False, False),
                  int_str_converter(E, False, False))
    exp_2 = ' ( a^2 `+` ma `+` n  ) ^2'
    c1 = ' {  ( a %s  )  ( a %s  )  } ' \
         ' {  ( a %s  )  ( a %s  )  } %s' \
         '' % (int_str_converter(M, False, False), int_str_converter(P, False, False),
               int_str_converter(N, False, False), int_str_converter(O, False, False),
               int_str_converter(E, False, False))
    c2 = ' ( a^2 %sa %s  )  ( a^2 %sa %s  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
               int_str_converter(B, False, True), int_str_converter(D, False, False),
               int_str_converter(E, False, False))
    c3 = 'a^2 %sa `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
               int_str_converter(E, False, False))
    c5 = 'A^2 %sA %s %s' % (int_str_converter(F, False, True), int_str_converter(G, False, False),
                            int_str_converter(E, False, False))
    c6 = 'A^2 %sA %s' % (int_str_converter(F, False, True), int_str_converter(H, False, False))
    c7 = ' ( A %s  ) ^2' % (int_str_converter(I, False, False))
    c8 = ' ( a^2 %sa %s  ) ^2' % (int_str_converter(B, False, True), int_str_converter(I, False, False))
    c9 = 'm `=` %d' % (B)
    c10 = 'n `=` %d' % (I)
    c11 = 'm `+` n `=` %d' % (K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             c6=c6, c7=c7, c8=c8, c9=c9, c10=c10, c11=c11)

    return stem, answer, comment


# 3-1-2-251
def factorization312_Stem_215():
    stem = "$$수식$${exp_1}$$/수식$$일 때, $$수식$${exp_2}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 5) * 2
        G, J = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        I = A - G
        B = G * I
        F = A // 2
        D = F * F
        E = B - D
        C = D * E

        r1, r2 = factorization(A, E)

        if 0 not in [I, B, F, D, E, C] and abs(E) != abs(I) and abs(A) != abs(G) \
                and abs(C) < 200 and abs(B) < 200 and abs(E) < 200 and r1 == 0 :
            break

    exp_1 = 'a `=` x^2 %sx' % (int_str_converter(A, False, True))
    exp_2 = 'x  ( x %s  )  ( x %s  )  ( x %s  ) %s' \
            '' % (int_str_converter(G, False, False), int_str_converter(A, False, False),
                  int_str_converter(I, False, False), int_str_converter(C, False, False))
    c1 = ' { x  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } %s' \
         '' % (int_str_converter(A, False, False), int_str_converter(G, False, False),
               int_str_converter(I, False, False), int_str_converter(C, False, False))
    c2 = ' ( x^2 %s x  )  ( x^2 %sx %s  ) %s' \
         '' % (int_str_converter(A, False, True), int_str_converter(A, False, True),
               int_str_converter(B, False, False), int_str_converter(C, False, False))
    c3 = 'a  ( a %s  ) %s' % (int_str_converter(B, False, False), int_str_converter(C, False, False))
    c4 = 'a^2 %sa %s' % (int_str_converter(B, False, False), int_str_converter(C, False, False))
    c5 = ' ( a %s  )  ( a %s  )' \
         '' % (int_str_converter(D, False, False), int_str_converter(E, False, False))
    c6 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
         '' % (int_str_converter(A, False, True), int_str_converter(D, False, False),
               int_str_converter(A, False, True), int_str_converter(E, False, False))
    cor_text = ' ( x %s  )^2  ( x^2 %sx %s  )' \
               '' % (int_str_converter(F, False, False), int_str_converter(A, False, True),
                     int_str_converter(E, False, False))

    answers = [cor_text,
               ' ( x %s  )^2  ( x^2 %sx %s  )' \
               '' % (int_str_converter(-F, False, False), int_str_converter(A, False, True),
                     int_str_converter(E, False, False)),
               ' ( x %s  )^2  ( x^2 %sx %s  )' \
               '' % (int_str_converter(-F, False, False), int_str_converter(-A, False, True),
                     int_str_converter(E, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )'
               '' % (int_str_converter(E, False, True), int_str_converter(-I, False, False),
                     int_str_converter(-J, False, True), int_str_converter(E, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )'
               '' % (int_str_converter(-I, False, True), int_str_converter(-I, False, False),
                     int_str_converter(J, False, True), int_str_converter(E, False, False))]

    j1 = '을' if abs(C) % 10 in have_jongsung_num else '를'
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-252
def factorization312_Stem_216():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True:
        B = np.random.randint(1, 4) * 2
        N, C, Q, R = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        O = B //2
        P = B - N
        L = O * O
        M = N * P
        G = L + M
        I = L * M
        D = B - C
        F = C * D
        E = G - F
        H = F * E
        J = H - I
        if C not in [N, O, P, Q] and Q != B and -D != E and R != -D and O != D and Q != -B and abs(J) < 100 and N != O \
            and O != P and N != P and 0 not in [P, L, M, G, D, F, E, H, J, I] \
                and abs(G) < 100 and abs(I) < 100 and abs(H) :
            break

    exp_1 = ' ( x %s  )  ( x %s  )^2  ( x %s  ) %s' \
            '' % (int_str_converter(N, False, False), int_str_converter(O, False, False),
                  int_str_converter(P, False, False), int_str_converter(J, False, False))
    c1 = ' {  ( x %s  )^2  } ' \
         ' {  ( x %s  )  ( x %s  )  } %s' \
         '' % (int_str_converter(O, False, False), int_str_converter(N, False, False),
               int_str_converter(P, False, False), int_str_converter(J, False, False))
    c2 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(L, False, False),
               int_str_converter(B, False, True), int_str_converter(M, False, False),
               int_str_converter(J, False, False))
    c3 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( A %s  ) %s' \
         '' % (int_str_converter(L, False, False), int_str_converter(M, False, False),
               int_str_converter(J, False, False))
    c5 = 'A^2 %sx %s %s' % (int_str_converter(G, False, True), int_str_converter(I, False, False),
                            int_str_converter(J, False, False))
    c6 = 'A^2 %sA %s' % (int_str_converter(G, False, True), int_str_converter(H, False, False))
    c7 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(F, False, False), int_str_converter(E, False, False))
    c8 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(F, False, False),
               int_str_converter(B, False, True), int_str_converter(E, False, False))

    C, D = sorted([C, D]) if C * D > 0 else sorted([C, D], reverse=True)
    cor_text = ' ( x %s  )  ( x %s  )  ( x^2 %sx %s  )' \
               '' % (int_str_converter(C, False, False), int_str_converter(D, False, False),
                     int_str_converter(B, False, True), int_str_converter(E, False, False))

    answers = [cor_text,
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )'
               '' % (int_str_converter(Q, False, True), int_str_converter(-D, False, False),
                     int_str_converter(Q, False, True), int_str_converter(R, False, False)),
               ' ( x^2 %sx %s  )  ( x^2 %sx %s  )'
               '' % (int_str_converter(B, False, True), int_str_converter(E, False, False),
                     int_str_converter(B, False, True), int_str_converter(D, False, False)),
               ' ( x %s  ) ^2  ( x^2 %sx %s  )'
               '' % (int_str_converter(O, False, False), int_str_converter(O, False, True),
                     int_str_converter(Q, False, False)),
               ' ( x %s  ) ^2  ( x^2 %sx %s  )'
               '' % (int_str_converter(D, False, False), int_str_converter(O, False, True),
                     int_str_converter(B, False, False))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(J) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-253
def factorization312_Stem_217():
    stem = "$$수식$${exp_1}$$/수식$$가 완전제곱식이 되도록 하는 상수 $$수식$$k$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$로 놓으면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "이 식이 완전제곱이 되려면\n" \
              "$$수식$${c6}$$/수식$$\n" \
              "따라서 $$수식$${c7}$$/수식$$\n\n"

    while True :
        B, L, M = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        N = B - L
        O = B - M
        H = L * N
        I = M * O
        E = H + I
        F = H * I
        G = pow(E//2, 2)
        K = G - F
        if abs(B) % 2 != 0 and abs(E) % 2 == 0 and abs(K) < 120 and 0 not in [N, O, H, I, E, F, G, K] \
                and abs(E) < 200 and abs(F) < 200 and len(set([L, M, N, O])) == 4  :
            break


    exp_1 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  ) `+` k' \
            '' % (int_str_converter(L, False, False), int_str_converter(M, False, False),
                  int_str_converter(N, False, False), int_str_converter(O, False, False))
    c1 = ' {  ( x %s  )  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } `+` k' \
         '' % (int_str_converter(L, False, False), int_str_converter(N, False, False),
               int_str_converter(M, False, False), int_str_converter(O, False, False))
    c2= ' ( x^2 %sx %s  )  ( x^2 %sx %s  ) `+` k' \
        '' % (int_str_converter(B, False, True), int_str_converter(H, False, False),
              int_str_converter(B, False, True), int_str_converter(I, False, False))
    c3 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c4 = ' ( A %s  )  ( x %s  ) `+` k' \
         '' % (int_str_converter(H, False, False), int_str_converter(I, False, False))
    c5 = 'A^2 %sA %s `+` k' % (int_str_converter(E, False, True), int_str_converter(F, False, False))
    s1 = '-' if E < 0 else ''
    c6 = '%d `+` k `=`  ( %s {%d} over {2}  )^2 `=` %d' \
         '' % (F, s1, abs(E), G)
    c7 = 'k `=` %d' % (K)
    n = np.random.randint(1, 4)
    answers = [i for i in range(K-4*n, (K+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(K))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-254
def factorization312_Stem_218():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$가 완전제곱식이 되도록 하는 상수 $$수식$$k$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "두 일차식의 상수항의 합이 같아지도록 두 항씩 묶어주기 위해 문제 안의 곱을 다시 인수분해한다.\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$${c4}$$/수식$$로 놓으면\n" \
              "$$수식$${c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "이 식이 완전제곱이 되려면\n" \
              "$$수식$${c7}$$/수식$$\n" \
              "따라서 $$수식$${c8}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 16)
        L, M = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
        N = B - M
        O = B - L
        C = M * N
        D = L * O
        E = C + D
        F = C * D
        G = pow(E//2, 2)
        P = L + M
        Q = L * M
        R = N + O
        S = N * O
        K = G - F
        if B % 2 != 0 and abs(E) % 2 == 0 and abs(G) < 100 and abs(K) < 120 and abs(F) < 100 and \
                0 not in [N, O, C, D, E, F, G, P, Q, R, S, K]:
            break


    exp_1 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  ) `+` k' \
            '' % (int_str_converter(P, False, True), int_str_converter(Q, False, False),
                  int_str_converter(R, False, True), int_str_converter(S, False, False))
    c1 = ' ( x %s  )  ( x %s  )  ( x %s  )  ( x %s  ) `+` k' \
         '' % (int_str_converter(L, False, False), int_str_converter(M, False, False),
               int_str_converter(N, False, False), int_str_converter(O, False, False))
    c2 = ' {  ( x %s  )  ( x %s  )  } ' \
         ' {  ( x %s  )  ( x %s  )  } `+` k' \
         '' % (int_str_converter(M, False, False), int_str_converter(N, False, False),
               int_str_converter(L, False, False), int_str_converter(O, False, False))
    c3 = ' ( x^2 %sx %s  )  ( x^2 %sx %s  ) `+` k' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
               int_str_converter(B, False, True), int_str_converter(D, False, False))
    c4 = 'x^2 %sx `=` A' % (int_str_converter(B, False, True))
    c5 = ' ( A %s  )  ( A %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, False))
    c6 = 'A^2 %sA %s `+` k' % (int_str_converter(E, False, True), int_str_converter(F, False, False))
    s1 = '-' if E < 0 else ''
    c7 = '%s `+` k `=`  ( %s{%d} over {2}  ) ^2 `=` %d' % (F, s1, abs(E), G)
    c8 = 'k `=` %d' % (K)

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8)

    return  stem, answer, comment
    
    
# 3-1-2-255
def factorization312_Stem_219():
    stem = "$$수식$${exp_1}$$/수식$$를 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, C = np.random.randint(1, 10, 2)
        B, D = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        E = A * C
        F = A * D
        G = B * C
        H = B * D
        if is_gcd(A, B) and is_gcd(C, D) and 0 not in [A, B, C, D, E, F, G, H] \
                and max([abs(E), abs(F), abs(G), abs(H)]) < 100 :
            break

    exp_1 = '%sxy %s %sx %sy' \
            '' % (int_str_converter(E, True, True), int_str_converter(H, False, False),
                  int_str_converter(F, False, True), int_str_converter(G, False, True))
    c1 = '%sxy %sx %sy %s' \
         '' % (int_str_converter(E, True, True), int_str_converter(F, False, True),
               int_str_converter(G, False, True), int_str_converter(H, False, False))
    c2 = '%sx  ( %sy %s  ) %s  ( %sy %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(C, True, True), int_str_converter(D, False, False),
               int_str_converter(B, False, True), int_str_converter(C, True, True), int_str_converter(D, False, False))
    cor_text = ' ( %sx %s  )  ( %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                     int_str_converter(C, True, True), int_str_converter(D, False, False))

    answers = [cor_text,
               ' ( %sx %s  )  ( %sy %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                     int_str_converter(-C, True, True), int_str_converter(D, False, False)),
               ' ( %sx %s  )  ( %sy %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(-B, False, False),
                     int_str_converter(C, True, True), int_str_converter(-D, False, False)),
               ' ( %sx %s  )  ( %sy %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(-B, False, False),
                     int_str_converter(C, True, True), int_str_converter(D, False, False)),
               '-  ( %sx %s  )  ( %sy %s  )'
               '' % (int_str_converter(A, True, True), int_str_converter(-B, False, False),
                     int_str_converter(C, True, True), int_str_converter(D, False, False))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-257
def factorization312_Stem_220():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수가 아닌 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n\n"


    while True :
        A = np.random.randint(1, 10)
        B = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        C = -1 * A * A
        D = B * C
        if max([abs(C), abs(D)]) < 100 :
            break

    exp_1 = 'x^{2}y %sx^2 %sy %s' \
            '' % (int_str_converter(B, False, True), int_str_converter(C, False, True),
                  int_str_converter(D, False, False))
    c1 = 'x^2  ( y %s  ) %s  ( y %s  )' \
         '' % (int_str_converter(B, False, False), int_str_converter(C, False, True),
               int_str_converter(B, False, False))
    c2 = ' ( x^2 %s  )  ( y %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(B, False, False))
    a1 = 'x %s' % (int_str_converter(-A, False, False))
    a2 = 'x %s' % (int_str_converter(A, False, False))
    a3 = 'y %s' % (int_str_converter(B, False, False))
    a4 = 'x^2 %s' % (int_str_converter(C, False, False))
    c3 = ' ( %s  )  ( %s  )  ( %s  )' \
         '' % (a1, a2, a3)

    cor_text = 'x^2 %s' % (int_str_converter(-C, False, False))
    answers = [a1, a2, a3, a4, cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3)

    return stem, answer, comment


# 3-1-2-258
def factorization312_Stem_221():
    stem = "다음 두 다항식의 공통 인수는 $$수식$$a `+` m$$/수식$$이다. 상수 $$수식$$m$$/수식$$의 값을 구하시오.\n" \
           "$$수식$${exp_1}$$/수식$$,    $$수식$${exp_2}$$/수식$$\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 공통인수가 $$수식$${c6}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$\n\n"

    while True :
        A, B, E = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        C = A * B
        F = A * E
        if max([abs(C), abs(F)]) < 100 :
            break

    exp_1 = 'ab %sa %sb %s' % (int_str_converter(B, False, True), int_str_converter(A, False, True),
                               int_str_converter(C, False, False))
    c1 = 'a  ( b %s  ) %s  ( b %s  )' \
         '' % (int_str_converter(B, False, False), int_str_converter(A, False, True),
               int_str_converter(B, False, False))
    c2 = ' ( a %s  )  ( a %s  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(B, False, False))
    exp_2 = 'a^2 %sa %sab %s' % (int_str_converter(A, False, True), int_str_converter(E, False, True),
                                 int_str_converter(F, False, True))
    c3 = 'a^2 %sa %sab %sb' \
         '' % (int_str_converter(A, False, True), int_str_converter(E, False, True), int_str_converter(F, False, True))
    c4 = 'a  ( a %sb  ) %s  ( a %sb  )' \
         '' % (int_str_converter(E, False, True), int_str_converter(A, False, True),
               int_str_converter(E, False, True))
    c5 = ' ( a %s  )  ( a %sb  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(E, False, True))
    c6 = 'a %s' % (int_str_converter(A, False, False))
    c7 = 'm `=` %d' % (A)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=A)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-259
def factorization312_Stem_222():
    stem = "$$수식$${exp_1}$$/수식$${j1} $$수식$$x$$/수식$$의 계수가 1인 세 일차식의 곱으로 인수분해될 때, " \
           "세 일차식의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 세 일차식은 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로 이들의 합은\n" \
              "$$수식$${c7}$$/수식$$\n\n"
    while True :
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = -1 * A * A
        D = B * C
        Z, Y, X = np.random.choice(np.arange(1, 10), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
        if B not in [Z, Y, X] and abs(D) < 100 :
            break

    exp_1 = 'x^3 %sx^2 %sx %s' % (int_str_converter(B, False, True), int_str_converter(C, False, True),
                                  int_str_converter(D, False, False))
    c1 = 'x^2  ( x %s  ) %s  ( x %s  )' \
         '' % (int_str_converter(B, False, False), int_str_converter(C, False, True),
               int_str_converter(B, False, False))
    c2 = ' ( x^2 %s  )  ( x %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(B, False, False))
    c4 = 'x %s' % (int_str_converter(A, False, False))
    c5 = 'x %s' % (int_str_converter(-A, False, False))
    c6 = 'x %s' % (int_str_converter(B, False, False))
    c3 = ' ( %s  )  ( %s  )  ( %s  )' % (c4, c5, c6)
    cor_text = '3x %s' % (int_str_converter(B, False, False))
    c7 = ' ( %s  ) `+`  ( %s  ) `+`  ( %s  ) `=` 3x %s' \
         '' % (c4, c5, c6, int_str_converter(B, False, False))

    ans_dict = {B:cor_text, 0: '3x', Z : '3x %s' % (int_str_converter(Z, False, False)),
                Y :'3x %s' % (int_str_converter(Y, False, False)), X:'3x %s' % (int_str_converter(X, False, False))}
    ans_keys = sorted(ans_dict.keys())
    answers = [ans_dict.get(k) for k in ans_keys]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '이' if abs(D) % 10 in have_jongsung_num else '가'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-260
def factorization312_Stem_223():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하였더니 $$수식$${exp_2}$$/수식$$가 되었다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 " \
           "$$수식$$abc$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 10)
        C = np.random.randint(-9, 0)
        A = -1 * B
        D = -1 * B * B
        E = A * C
        K = A * B * C
        if max([abs(D), abs(E), abs(K)]) < 100 :
            break

    exp_1 = 'x^2 %sx %sy %sy^2' % (int_str_converter(C, False, True), int_str_converter(E, False, True),
                                   int_str_converter(D, False, True))
    exp_2 = ' ( x `+` ay  )  ( x `+` by `+` c  )'
    c1 = 'x^2 %sy^2 %s  ( x %sy  )' \
         '' % (int_str_converter(D, False, True), int_str_converter(C, False, True),
               int_str_converter(A, False, True))
    c2 = ' ( x %sy  )  ( x %sy  ) %s  ( x %sy  )' \
         '' % (int_str_converter(A, False, True), int_str_converter(B, False, True),
               int_str_converter(C, False, True), int_str_converter(A, False, True))
    c3 = ' ( x %sy  )  ( x %sy %s  )' \
         '' % (int_str_converter(A, False, True), int_str_converter(B, False, True), int_str_converter(C, False, False))
    c4 = 'a `=` %d' % (A)
    c5 = 'b `=` %d' % (B)
    c6 = 'c `=` %d' % (C)

    b1, b2 = [' ( ', '  ) '] if A < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if B < 0 else ['', '']
    b5, b6 = [' ( ', '  ) '] if C < 0 else ['', '']

    c7 = 'abc `=` %s%d%s `TIMES` %s%d%s `TIMES` %s%d%s `=` %d' % (b1, A, b2, b3, B, b4, b5, C, b6, K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-261
def factorization312_Stem_224():
    stem = "다음 중 인수분해한 것이 옳지 않은 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "{cor_num}\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n\n"

    while True :
        D, H = np.random.randint(1, 10, 2)
        A, C, E, M, N, P, R = np.random.randint(1, 10, 7) * np.reshape(np.random.choice([-1, 1], 7), -1)
        B = A * A
        F = C * D
        G = C * E
        I = -1 * H
        J = H
        K = -1 * H * H
        L = -1 * H * H * H
        O = M * N
        Q = -1 * P
        S = -1 * P * P
        T = R * P
        if max([abs(B), abs(F), abs(G), abs(I), abs(K), abs(L), abs(O), abs(Q), abs(S), abs(T)]) < 100 \
                and is_gcd(D, E) and len(set([abs(C), abs(D), abs(E)])) == 3 :
            break

    m1, m2 = ['x', 'y'] if np.random.choice([0, 1], 1)[0] == 1 else ['a', 'b']
    exp_1 = '%s%s %s%s %s%s %s `=`  ( %s %s  )  ( %s %s  )' \
            '' % (m1, m2, int_str_converter(A, False, True), m1,
                  int_str_converter(A, False, True), m2,
                  int_str_converter(B, False, False),
                  m1, int_str_converter(A, False, False),
                  m2, int_str_converter(A, False, False))

    m1, m2, m3 = ['x', 'y', 'z'] if np.random.choice([0, 1], 1)[0] == 1 else ['a', 'b', 'c']
    exp_2 = '%s%s^{2} %s%s%s %s%s%s %s%s%s `=`  ( %s %s%s  )  ( %s%s %s%s  )' \
            '' % (int_str_converter(D, True, True), m1,
                  int_str_converter(E, False, True), m1, m2,
                  int_str_converter(F, False, True), m1, m3,
                  int_str_converter(G, False, True), m2, m3,
                  m1, int_str_converter(C, False, True), m3,
                  int_str_converter(D, True, True), m1,
                  int_str_converter(E, False, True), m2)
    m1, m2 = ['x', 'y'] if np.random.choice([0, 1], 1)[0] == 1 else ['a', 'b']
    exp_3 = '%s^{3} %s%s^{2} %s%s %s `=`  ( %s %s  )^2  ( %s %s  )' \
            '' % (m1, int_str_converter(J, False, True), m1,
                  int_str_converter(K, False, True), m1,
                  int_str_converter(L, False, False),
                  m1, int_str_converter(H, False, False),
                  m1, int_str_converter(I, False, False))
    m1, m2 = ['x', 'y'] if np.random.choice([0, 1], 1)[0] == 1 else ['a', 'b']
    exp_4 = '%s^{2}%s %s%s %s%s %s%s%s^{2} `=`  ( %s %sy  )  ( %s%s %s  )' \
            '' % (m1, m2, int_str_converter(O, False, True), m2,
                  int_str_converter(N, False, True), m1,
                  int_str_converter(M, False, True), m1, m2,
                  m1, int_str_converter(M, False, True),
                  m1, m2, int_str_converter(N, False, False))
    m1, m2, m3 = ['x', 'y', 'z'] if np.random.choice([0, 1], 1)[0] == 1 else ['a', 'b', 'c']
    cor_text = '%s^{2} %s%s%s %s%s^{2} %s%s%s `=`  ( %s %s%s  )  ( %s %s%s %s%s  )' \
               '' % (m1, int_str_converter(R, False, True), m1, m3,
                     int_str_converter(S, False, True), m2,
                     int_str_converter(T, False, True), m2, m3,
                     m1, int_str_converter(R, False, True), m2,
                     m1, int_str_converter(Q, False, True), m2, int_str_converter(S, False, True), m3)

    c1 = '%s^{2} %s%s%s %s%s^{2} %s%s%s' \
         '' % (m1, int_str_converter(R, False, True), m1, m3,
               int_str_converter(S, False, True), m2,
               int_str_converter(T, False, True), m2, m3)
    c2 = '%s^{2} %s%s^{2} %s%s  ( %s %s%s  )' \
          '' % (m1, int_str_converter(S, False, True), m2,
                int_str_converter(R, False, True), m3,
                m1, int_str_converter(P, False, True), m2)
    c3 = ' ( %s %s%s  )  ( %s %s%s  ) %s%s  ( %s %s%s  )' \
          '' % (m1, int_str_converter(P, False, True), m2,
                m1, int_str_converter(Q, False, True), m2,
                int_str_converter(R, False, True), m3,
                m1, int_str_converter(P, False, True), m2)
    c4 = ' ( %s %s%s  )  ( %s %s%s %s%s  )' \
          '' % (m1, int_str_converter(P, False, True), m2,
                m1, int_str_converter(Q, False, True), m2, int_str_converter(R, False, True), m3)

    answers = [exp_1, exp_2, exp_3, exp_4, cor_text]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(cor_num=cor_num, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-264
def factorization312_Stem_225():
    stem = "다음 식을 인수분해면?\n" \
           "$$수식$${exp_1}$$/수식$$\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B, C = np.random.choice(np.arange(1, 10), 3)
        D = B * C
        E = A
        F = A * C
        G = A * B
        H = A * D
        if max([D, F, G, H]) < 100 :
            break

    m1, m2, m3 = ['a', 'b', 'c'] if np.random.choice([0, 1], 1)[0] else ['x', 'y', 'z']
    exp_1 = '%s%s%s %s%s%s %s%s%s %s%s %s%s%s %s%s %s%s %s' \
            '' % (m1, m2, m3,
                  int_str_converter(C, False, True), m1, m2,
                  int_str_converter(B, False, True), m1, m3,
                  int_str_converter(D, False, True), m1,
                  int_str_converter(E, False, True), m2, m3,
                  int_str_converter(F, False, True), m2,
                  int_str_converter(G, False, True), m3,
                  int_str_converter(H, False, False))
    a1 = '%s  ( %s %s  )  ( %s %s  )' \
         '' % (m1, m2, int_str_converter(C, False, False), m3, int_str_converter(B, False, False))
    a2 = '%s  ( %s %s  )  ( %s %s  )' \
         '' % (m2, m1, int_str_converter(B, False, False), m3, int_str_converter(C, False, False))
    a3 = '%s  ( %s %s  )  ( %s %s  )' \
         '' % (m3, m1, int_str_converter(A, False, False), m2, int_str_converter(D, False, False))
    cor_text = ' ( %s %s  )  ( %s %s  )  ( %s %s  )' \
               '' % (m1, int_str_converter(A, False, False),
                     m2, int_str_converter(B, False, False),
                     m3, int_str_converter(C, False, False))
    a5 = ' ( %s %s  )  ( %s %s  )  ( %s %s  )' \
         '' % (m1, int_str_converter(C, False, False),
               m2, int_str_converter(B, False, False),
               m3, int_str_converter(A, False, False))

    c1 = ' ( %s%s %s%s %s%s %s  ) %s %s%s%s %s%s %s%s %s' \
         '' % (m2, m3, int_str_converter(C, False, True), m2,
               int_str_converter(B, False, True), m3, int_str_converter(D, False, False), m1,
               int_str_converter(E, False, True), m2, m3,
               int_str_converter(F, False, True), m2,
               int_str_converter(G, False, True), m3, int_str_converter(H, False, False))
    c2 = ' ( %s %s  )  ( %s%s %s%s %s%s %s  )' \
         '' % (m1, int_str_converter(A, False, False),
               m2, m3, int_str_converter(C, False, True), m2,
               int_str_converter(B, False, True), m3,
               int_str_converter(D, False, False))
    c3 = ' ( %s %s  )  { %s  ( %s %s  ) %s  ( %s %s  )  }' \
         '' % (m1, int_str_converter(A, False, False),
               m2, m3, int_str_converter(C, False, False),
               int_str_converter(B, False, True),
               m3, int_str_converter(C, False, False))


    answers = [a1, a2, a3, cor_text, a5]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-266
def factorization312_Stem_226():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        A, F = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = -1 * A
        B = A * F
        D = -1 * B
        E = -1 * A * A
        H = 2 * F * E
        G = E * F * F
        Z = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        if abs(Z) not in [abs(A), abs(C)] and max([abs(E), abs(B), abs(H), abs(G)]) < 100 and A != C and B != D \
                and len(set([C, abs(Z), A])) == 3 and len(set([D, B, abs(F)])) == 3:
            break

    m1, m2 = ['a', 'b'] if np.random.choice([0, 1], 1)[0] else ['x', 'y']
    exp_1 = '%s^2 %s %s%s^2 %s%s' \
            '' % (m1, int_str_converter(G, False, False),
                  int_str_converter(E, False, True), m2,
                  int_str_converter(H, False, True), m2)
    c1 = '%s^2 %s  ( %s %s  )^2' \
         '' % (m1, int_str_converter(E, False, True),
               m2, int_str_converter(F, False, False))
    cor_text = '%s %s%s %s' % (m1, int_str_converter(C, False, True), m2, int_str_converter(D, False, False))
    c2 = ' ( %s %s%s %s  )  ( %s  )' \
         '' % (m1, int_str_converter(A, False, True), m2, int_str_converter(B, False, False), cor_text)

    answers = [cor_text,
               '%s %s%s %s' % (m1, int_str_converter(-Z, False, True), m2, int_str_converter(B, False, False)),
               '%s %s%s %s' % (m1, int_str_converter(-Z, False, True), m2, int_str_converter(F, False, False)),
               '%s %s%s %s' % (m1, int_str_converter(Z, False, True), m2, int_str_converter(B, False, False)),
               '%s %s%s %s' % (m1, int_str_converter(A, False, True), m2, int_str_converter(D, False, False))
               ]


    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-267
def factorization312_Stem_227():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n\n"

    while True :
        A, B = np.random.choice(np.arange(1, 10), 2, False)
        C = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        D = A * A
        E = B * B
        G = C * C
        F = 2 * B * C
        if max([abs(D), abs(E), abs(G), abs(F)]) < 100 and C not in [A, B] and is_gcd(get_gcd(abs(A), abs(B)), abs(C)) \
            and is_gcd(get_gcd(abs(D), abs(B)), abs(C)) :

            break

    exp_1 = '%d %sx^2 %sy^2 %sxy' \
            '' % (D, int_str_converter(-E, False, True),
                  int_str_converter(-G, False, True),
                  int_str_converter(-F, False, True))
    c1 = '%d `-`  ( %sx^2 %sxy %sy^2  )' \
         '' % (D, int_str_converter(E, True, True),
               int_str_converter(F, False, True),
               int_str_converter(G, False, True))
    c2 = '%d^2 `-`  ( %sx %sy  )^2' \
         '' % (A, int_str_converter(B, True, True), int_str_converter(C, False, True))
    cor_text_1 = '%s %sx %sy' % (int_str_converter(A, True, False), int_str_converter(B, False, True),
                                 int_str_converter(C, False, True))
    cor_text_2 = '%s %sx %sy' % (int_str_converter(A, True, False), int_str_converter(-B, False, True),
                                 int_str_converter(-C, False, True))
    c3 = ' ( %s  )  ( %s )' % (cor_text_1, cor_text_2)
    answers = [cor_text_1, cor_text_2,
               '%s %sx %sy' % (int_str_converter(A, True, False), int_str_converter(B, False, True),
                               int_str_converter(-C, False, True)),
               '%s %sx %sy' % (int_str_converter(D, True, False), int_str_converter(-B, False, True),
                               int_str_converter(C, False, True)),
               '%s %sx %sy' % (int_str_converter(D, True, False), int_str_converter(B, False, True),
                               int_str_converter(C, False, True))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = [multiple_choice_nums.get(answers.index(cor_text_1)), multiple_choice_nums.get(answers.index(cor_text_2))]
    cor_num = ', '.join(cor_num)

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3)

    return stem, answer, comment




    # 3-1-2-264


# 3-1-2-268
def factorization312_Stem_228():
    stem = "$$수식$${exp_1}$$/수식$$이 $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 " \
           "두 일차식의 곱으로 인수분해될 때, 두 일차식의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 두 일차식의 합은\n" \
              "$$수식$${c4}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B, C = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        AA = A * A
        D = -1 * B
        E = -1 * C
        F = C * C
        H = B * B
        G = 2 * B * C
        I = 2 * A
        J = 2 * C
        if is_gcd(get_gcd(abs(A), abs(B)), abs(C)) and is_gcd(get_gcd(abs(F), abs(G)), abs(H)) :
            break

    exp_1 = '%sx^2 %s %sy %sy^2' % (int_str_converter(AA, True, True), int_str_converter(-F, False, False),
                                    int_str_converter(-G, False, True), int_str_converter(-H, False, True))
    c1 = '%s^2 `-`  ( %s %sy %sy^2  )' \
         '' % (int_str_converter(AA, True, True), int_str_converter(F, True, False),
               int_str_converter(G, False, True), int_str_converter(H, False, True))
    c2 = '%s^2 `-`  ( %sy %s  )^2' \
         '' % (int_str_converter(AA, True, True), int_str_converter(B, True, True), int_str_converter(C, False, False))
    a1 = '%sx %sy %s' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(C, False, False))
    a2 = '%sx %sy %s' \
         '' % (int_str_converter(A, True, True), int_str_converter(D, False, True), int_str_converter(E, False, False))
    c3 = ' ( %s  )  ( %s  )' % (a1, a2)
    cor_text = '%sx' % (int_str_converter(I, True, True))
    c4 = '%s `+` %s `=` %s' % (a1, a2, cor_text)

    answers = [cor_text, '%sy' % (int_str_converter(I, True, True)),
               '%sx %sy' % (int_str_converter(A, True, True), int_str_converter(B, False, True)),
               '%sx %sy' % (int_str_converter(A, True, True), int_str_converter(-B, False, True)), J]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)


# 3-1-2-269
def factorization312_Stem_229():
    stem = "$$수식$${exp_1} `=` {exp_2}$$/수식$$이다. 이때 자연수 $$수식$$m$$/수식$$, $$수식$$n$$/수식$$에 대하여 " \
           "$$수식$$m `+` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "따라서 $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로 $$수식$${c7}$$/수식$$\n\n"

    while True :
        B = np.random.randint(-9, 0)
        C = np.random.randint(1, 10)
        D = 2 * B
        E = B * B
        F = C * C
        M = -1 * B
        N = C
        K = M + N
        if K != 0 :
            break

    exp_1 = 'a^2 %sb^2 `-` %sc^2 %sab' % (int_str_converter(E, False, True), int_str_converter(F, True, True),
                                           int_str_converter(D, False, True))
    exp_2 = ' ( a `-` mb `+` nc  )  ( a `-` mb `-` nc  )'
    c1 = 'a^2 %sab %sb^2 `-` %sc^2' % (int_str_converter(D, False, True), int_str_converter(E, False, True),
                                       int_str_converter(F, True, True))
    c2 = ' ( a %sb  ) ^2 `-`  ( %sc  ) ^2' % (int_str_converter(B, False, True),
                                                                int_str_converter(C, True, False))
    c3 = ' {  ( a %sb  ) %sc  }  {  ( a %sb  ) `-` %sc  }' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, True),
               int_str_converter(B, False, True), int_str_converter(C, True, True))
    c4 = ' ( a %sb %sc  )  ( a %sb `-` %sc  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, True),
               int_str_converter(B, False, True), int_str_converter(C, True, True))
    c5 = 'm `=` %d' % (M)
    c6 = 'n `=` %d' % (N)
    c7 = 'm `+` n `=` %d' % (K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-270
def factorization312_Stem_230():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하였더니 $$수식$${exp_2}$$/수식$$가 되었다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 " \
           "$$수식$$abc$$/수식$$의 값은? (단, $$수식$$a `{left}` 0$$/수식$$)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        C = A * A
        E = B * B
        D = 2 * A * B
        K = -1 * A * B
        if is_gcd(A, B) :
            break

    exp_1 = '%sx^{2}y^{2} `-` z^2 %sxy %s' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                                          int_str_converter(E, False, False))
    exp_2 = ' ( axy `+` bz `+` c  )  ( axy `+` z `+` c  )'
    c1 = '%sx^{2}y^{2} %sxy %s `-` z^2' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                                       int_str_converter(E, False, False))
    c2 = ' ( %sxy %s  )^2 `-` z^2' % (int_str_converter(A, True, True), int_str_converter(B, False, False))
    c3 = ' ( %sxy %s `+` z  )  ( %sxy %s `-` z  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(A, True, True), int_str_converter(B, False, False))
    c4 = 'a `=` %d' % (A)
    c5 = 'b `=` -1'
    c6 = 'c `=` %d' % (-B)
    c7 = 'abc `=` %d' % (K)

    n = np.random.randint(1, 4)
    answers = [i for i in range(K-4*n, (K+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    j1 = '을' if abs(E) % 10 in have_jongsung_num else '를'
    cor_num = multiple_choice_nums.get(answers.index(K))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1, left=left)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-271
def factorization312_Stem_231():
    stem = "$$수식$${exp_1}$$/수식$$을 인수분해하였더니 $$수식$${exp_2}$$/수식$$가 되었다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 " \
           "$$수식$$a `+` b `-` c$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로\n" \
              "$$수식$${c7}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B, C = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        D = A * A
        E = -1 * B * B
        G = -1 * C * C
        F = -2 * B * C
        K = C + (-B) - A
        if abs(F) < 100 and is_gcd(B, C) and F > 0 and B > 0 :
            break

    exp_1 = '%sxy %s %sy^2 %sx^2' % (int_str_converter(F, True, True), int_str_converter(D, False, False),
                                     int_str_converter(G, False, True), int_str_converter(E, False, True))
    exp_2 = ' ( %sx `+` ay %s  )  ( bx %sy `+` c  )' \
            '' % (int_str_converter(B, True, True), int_str_converter(A, False, False),
                  int_str_converter(C, False, True))
    c1 = '%s %sx^2 %sxy %sy^2' % (int_str_converter(D, True, False), int_str_converter(E, False, True),
                                  int_str_converter(F, False, True), int_str_converter(G, False, True))
    c2 = '%s^2 `-`  ( %sx %sy  )^2' % (int_str_converter(A, True, True), int_str_converter(B, True, False),
                                               int_str_converter(C, False, True))
    c3 = ' ( %s %sx %sy  )  ( %s %sx %sy  )' \
         '' % (int_str_converter(A, True, False), int_str_converter(B, False, True),
               int_str_converter(C, False, True),
               int_str_converter(A, True, False), int_str_converter(-B, False, True),
               int_str_converter(-C, False, True))
    c4 = 'a `=` %d' % (C)
    c5 = 'b `=` %d' % (-B)
    c6 = 'c `=` %d' % (A)
    c7 = 'a `+` b `-` c `=` %d' % (K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-272
def factorization312_Stem_232():
    stem = "$$수식$${exp_1} `=` {exp_2}$$/수식$$이다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$, $$수식$${c4}$$/수식$$로 치환하면\n" \
              "$$수식$${c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "따라서 $$수식$${c9}$$/수식$$, $$수식$${c10}$$/수식$$이므로 $$수식$${c11}$$/수식$$\n\n"

    while True :
        C, E = np.random.randint(1, 10, 2)
        D, F = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        G = D + F
        H = D - F
        I = E * E
        L = F * F
        J = 2 * E * F
        K = -1 * G * E
        if abs(C) != abs(D) and is_gcd(C, D) and E != F and is_gcd(E, F) and abs(J) < 100 and H != 0 \
                and is_gcd(get_gcd(abs(C), abs(E)), abs(G)) and is_gcd(get_gcd(abs(C), abs(E)), abs(H)):
            break

    exp_1 = ' ( %sx %s  ) ^2 `-` %sy^2 %sy %s' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, False, False),
                  int_str_converter(I, True, True), int_str_converter(-J, False, True),
                  int_str_converter(-L, False, False))

    exp_2 = ' ( %sx %sy `+` a  )  ( %sx `+` by %s  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(E, False, True),
               int_str_converter(C, True, True), int_str_converter(H, False, False))

    c1 = ' ( %sx %s  ) ^2 `-`  ( %sy^2 %sy %s  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(D, False, False),
               int_str_converter(I, True, True), int_str_converter(J, False, True),
               int_str_converter(L, False, False))
    a1 = '%sx %s' % (int_str_converter(C, True, True), int_str_converter(D, False, False))
    a2 = '%sy %s' % (int_str_converter(E, True, True), int_str_converter(F, False, False))
    c2 = ' ( %s  )^2 `-`  ( %s  )^2' % (a1, a2)
    c3 = '%s `=` A' % (a1)
    c4 = '%s `=` B' % (a2)
    c5 = 'A ^2 `-` B ^2'
    c6 = ' ( A `+` B  )  ( A `-` B  )'
    c7 = ' {  ( %s  ) `+`  ( %s  )  } ' \
         ' {  ( %s  ) `-`  ( %s  )  }' \
         '' % (a1, a2, a1, a2)
    c8 = ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(E, False, True),
               int_str_converter(G, False, False),
               int_str_converter(C, True, True), int_str_converter(-E, False, True),
               int_str_converter(H, False, False))
    c9 = 'a `=` %d' % (G)
    c10 = 'b `=` %d' % (-E)
    c11 = 'ab `=` %d' % (K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             c6=c6, c7=c7, c8=c8, c9=c9, c10=c10, c11=c11)

    return stem, answer, comment


# 3-1-2-274
def factorization312_Stem_233():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True:
        A, H, G = np.random.choice(np.arange(1, 10), 3, False)
        B = H * (A + 1)
        C = G * (1 - A)
        E = H * H
        F = -1 * G * G
        if is_gcd(get_gcd(abs(A), abs(H)), abs(G)) and B != 0 and C != 0 and abs(A) != abs(H) :
            break

    exp_1 = '%sx^2 %sxy %sx %sy^2 %s' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                                         int_str_converter(C, False, True), int_str_converter(E, False, True),
                                         int_str_converter(F, False, False))
    c1 = '%sx^2 %sxy %sx `+`  ( %sy^2 %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(C, False, True),
               int_str_converter(E, True, True), int_str_converter(F, False, False))
    c2 = '%sx^2 `+`  ( %sy %s  )x `+`  ( %sy %s  )  ( %sy %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, True, True), int_str_converter(C, False, False),
               int_str_converter(H, True, True), int_str_converter(G, False, False),
               int_str_converter(H, True, True), int_str_converter(-G, False, False))
    cor_text = ' ( %sx %sy %s  )  ( x %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(H, False, True),
                     int_str_converter(G, False, False),
                     int_str_converter(H, False, True), int_str_converter(-G, False, False))

    answers = [cor_text,
               ' ( %sx %sy %s  )  ( x %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(H, False, True),
                     int_str_converter(G, False, False),
                     int_str_converter(H, False, True), int_str_converter(G, False, False)),
               ' ( %sx %sy %s  )  ( x %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(-H, False, True),
                     int_str_converter(G, False, False),
                     int_str_converter(H, False, True), int_str_converter(-G, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(-H, False, True),
                     int_str_converter(G, False, False), int_str_converter(A, True, True),
                     int_str_converter(H, False, True), int_str_converter(-G, False, False)),
               ' ( %sx %sy %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(H, True, True), int_str_converter(-A, False, True),
                     int_str_converter(-G, False, False), int_str_converter(H, True, True),
                     int_str_converter(-H, False, True), int_str_converter(-G, False, False))
               ]
    j1 = '을' if abs(F) % 10 in have_jongsung_num else '를'
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, j1=j1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-275
def factorization312_Stem_234():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$ 중 " \
              "차수가 가장 낮은 $$수식$$b$$/수식$$ 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B, C = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        D = A * A
        F = B * B
        E = 2 * A * B
        G = A * C
        H = B * C
        if is_gcd(A, B) and abs(E) < 100 and D < 100 and F < 100 and abs(G) < 100 and abs(H) < 100 \
                and len(set([abs(A), abs(B), abs(C)])) == 3:
            break

    exp_1 = '%sab %sbc %sa^2 %sac %sc^2' % (int_str_converter(G, True, True), int_str_converter(H, False, True),
                                            int_str_converter(-D, False, True), int_str_converter(-E, False, True),
                                            int_str_converter(-F, False, True))
    c1 = '%sb  ( %sa %sc  ) `-`  ( %sa^2 %sac %sc^2  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, True))
    c2 = '%sb  ( %sa %sc  ) `-`  ( %sa %sc  ) ^2' \
         '' % (int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(A, True, True), int_str_converter(B, False, True))
    c3 = ' ( %sa %sc  )  { %sb `-`  ( %sa %sc  ) }' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, True))
    cor_text1 = '%sa %sc' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    cor_text2 = '%sa %sb %sc' % (int_str_converter(A, True, True), int_str_converter(-C, False, True),
                                 int_str_converter(B, False, True))
    c4 = ' ( %s  )  ( %sa %sb %sc  )' \
         '' % (cor_text1,
               int_str_converter(-A, True, True), int_str_converter(C, False, True), int_str_converter(-B, False, True))

    answers = [cor_text1, cor_text2,
               '%sa %sb' % (int_str_converter(A, True, True), int_str_converter(B, False, True)),
               '%sa %sb %sc' % (int_str_converter(-C, True, True), int_str_converter(-A, False, True),
                                int_str_converter(B, False, True)),
               '%sa %sb %sc' % (int_str_converter(-C, True, True), int_str_converter(A, False, True),
                                int_str_converter(-B, False, True))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = [multiple_choice_nums.get(answers.index(cor_text1)), multiple_choice_nums.get(answers.index(cor_text2))]
    cor_num = ', '.join(sorted(cor_num))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4)

    return stem, answer, comment


# 3-1-2-276
def factorization312_Stem_235():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면 $$수식$${exp_2}$$/수식$$일 때, " \
           "정수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$, $$수식$$d$$/수식$$에 대하여 " \
           "$$수식$$a `+` b `+` c `+` d$$/수식$$의 값을 구하시오. (단, $$수식$$a `{left}` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$, $$수식$$y$$/수식$$중 차수가 가장 낮은 $$수식$$y$$/수식$$에 대하여 " \
              "내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 $$수식$${c6}$$/수식$$, $$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$, $$수식$${c9}$$/수식$$이므로\n" \
              "$$수식$${c10}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B = np.random.randint(-9, 0)
        C = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        D = A * A
        F = B * B
        E = 2 * A * B
        G = A * C
        H = B * C
        K = B + C
        if abs(D) != abs(G) and abs(A) != abs(B) :
            break

    exp_1 = '%sx^2 %sxy %sx %sy %s' % (int_str_converter(-D, True, True), int_str_converter(G, False, True),
                                       int_str_converter(-E, False, True), int_str_converter(H, False, True),
                                       int_str_converter(-F, False, False))
    exp_2 = ' ( ax `+` b  )  ( cx `+` dy %s  )' \
            '' % (int_str_converter(B, False, False))
    c1 = '%sxy %sy %sx^2 %sx %s' % (int_str_converter(G, True, True), int_str_converter(H, False, True),
                                    int_str_converter(-D, False, True), int_str_converter(-E, False, True),
                                    int_str_converter(-F, False, False))
    c2 = '%s  ( %sx %s  ) y `-`  ( %sx^2 %sx %s  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(D, True, True), int_str_converter(E, False, True), int_str_converter(F, False, False))
    c3 = '%s  ( %sx %s  ) y `-`  ( %sx %s  )^2' \
         '' % (int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(A, True, True), int_str_converter(B, False, False))
    c4 = ' ( %sx %s  )  { %sy `-`  ( %sx %s  )  }' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(C, True, True), int_str_converter(A, True, True), int_str_converter(B, False, False))
    c5 = ' ( %sx %s  )  ( %sx %sy %s  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(-A, True, True), int_str_converter(C, False, True),
               int_str_converter(-B, False, False))

    c6 = 'a `=` %d' % (A)
    c7 = 'b `=` %d' % (B)
    c8 = 'c `=` %d' % (-A)
    c9 = 'd `=` %d' % (C)

    b1, b2 = [' ( ', '  ) '] if A < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if B < 0 else ['', '']
    b5, b6 = [' ( ', '  ) '] if -A < 0 else ['', '']
    b7, b8 = [' ( ', '  ) '] if C < 0 else ['', '']

    c10 = '%s%d%s `+` %s%d%s `+` %s%d%s `+` %s%d%s `=` %d' % (b1, A, b2, b3, B, b4, b5, -A, b6, b7, C, b8, K)

    j1 = '을' if abs(F) % 10 in have_jongsung_num else '를'
    stem = stem.format(exp_1=exp_1, exp_2=exp_2, j1=j1, left=left)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10)

    return stem, answer, comment


# 3-1-2-277
def factorization312_Stem_236():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$, $$수식$$y$$/수식$$ 중 차수가 가장 낮은 $$수식$$y$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, C, D = np.random.randint(1, 10, 3)
        B, C, F = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        I = A * C
        L = B * F
        J = A * F + B * C
        G = A * D
        H = B * D
        if abs(A) != abs(B) and is_gcd(A, B) and len(set([abs(C), abs(D), abs(F)])) == 3 \
            and is_gcd(get_gcd(abs(C), abs(D)), abs(F)) and J != 0 :
            break

    exp_1 = '%sx^2 %sxy %sx %sy %s' % (int_str_converter(I, True, True), int_str_converter(G, False, True),
                                       int_str_converter(J, False, True), int_str_converter(H, False, True),
                                       int_str_converter(L, False, False))
    c1 = '%sxy %sy %sx^2 %sx %s' % (int_str_converter(G, True, True), int_str_converter(H, False, True),
                                    int_str_converter(I, False, True), int_str_converter(J, False, True),
                                    int_str_converter(L, False, False))
    c2 = '%s  ( %sx %s  )y `+`  ( %sx %s )  ( %sx %s  )' \
         '' % (int_str_converter(D, True, True), int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(C, True, True), int_str_converter(F, False, False))
    cor_text = ' ( %sx %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                     int_str_converter(C, True, True), int_str_converter(D, False, True),
                     int_str_converter(F, False, False))

    answers = [cor_text,
               ' ( %sx %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                     int_str_converter(C, True, True), int_str_converter(-D, False, True),
                     int_str_converter(-F, False, False)),
               ' ( %sx %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
                     int_str_converter(C, True, True), int_str_converter(-D, False, True),
                     int_str_converter(F, False, False)),
               ' ( %sx %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(-B, False, False),
                     int_str_converter(C, True, True), int_str_converter(-D, False, True),
                     int_str_converter(-F, False, False)),
               ' ( %sx %s  )  ( %sx %sy %s  )' \
               '' % (int_str_converter(A, True, True), int_str_converter(-B, False, False),
                     int_str_converter(C, True, True), int_str_converter(D, False, True),
                     int_str_converter(F, False, False))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(L) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-278
def factorization312_Stem_237():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n\n"

    while True :
        A, B, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        A = abs(A)
        D = B - C
        E = -1 * A * A
        F = -1 * (A * C + A * B)
        G = -1 * B * C
        if abs(A) != abs(B) and is_gcd(A, B) and abs(A) != abs(C) and is_gcd(A, C) and abs(B) != abs(C) :
            break

    exp_1 = 'x^2 %sy^2 %sx %sy %s' % (int_str_converter(E, False, True), int_str_converter(D, False, True),
                                      int_str_converter(F, False, True), int_str_converter(G, False, False))
    c1 = 'x^2 %sx %sy^2 %sy %s' % (int_str_converter(D, False, True), int_str_converter(E, False, True),
                                   int_str_converter(F, False, True), int_str_converter(G, False, False))
    c2 = 'x^2 %sx `-`  ( %sy %s  )  ( %sy %s  )' \
         '' % (int_str_converter(D, False, True), int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(A, True, True), int_str_converter(C, False, False))
    cor_text1 = 'x %sy %s' % (int_str_converter(A, False, True), int_str_converter(B, False, False))
    cor_text2 = 'x %sy %s' % (int_str_converter(-A, False, True), int_str_converter(-C, False, False))
    c3 = ' ( %s  )  ( %s  )' % (cor_text1, cor_text2)

    answers = [cor_text1, cor_text2,
               'x %sy %s' % (int_str_converter(-A, False, True), int_str_converter(B, False, False)),
               'x %sy %s' % (int_str_converter(-A, False, True), int_str_converter(-B, False, False)),
               'x %sy %s' % (int_str_converter(A, False, True), int_str_converter(-C, False, False))]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = [multiple_choice_nums.get(answers.index(cor_text1)), multiple_choice_nums.get(answers.index(cor_text2))]
    cor_num = ', '.join(sorted(cor_num))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3)

    return stem, answer, comment


# 3-1-2-279
def factorization312_Stem_238():
    stem = "$$수식$${exp_1} `=` {exp_2}$$/수식$$일 때, 다항식 $$수식$$A$$/수식$$는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "따라서 다항식 $$수식$$A$$/수식$$는 $$수식$${cor_text}$$/수식$$이다.\n\n"

    while True :
        H, B, C = np.random.choice(np.arange(1, 10), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)
        H = abs(H)
        D = C - B
        E = H * H
        F = H * C + H * B
        G = B * C
        if is_gcd(H, B) and is_gcd(H, C) :
            break

    exp_1 = 'x^2 %sy^2 %sx %sy %s' % (int_str_converter(-E, False, True), int_str_converter(D, False, True),
                                      int_str_converter(-F, False, True), int_str_converter(-G, False, False))
    exp_2 = 'A  ( x %sy %s  )' % (int_str_converter(H, False, True), int_str_converter(C, False, False))
    c1 = 'x^2 %sx %sy^2 %sy %s' % (int_str_converter(D, False, True), int_str_converter(-E, False, True),
                                   int_str_converter(-F, False, True), int_str_converter(-G, False, False))
    c2 = 'x^2 %sx `-`  ( %sy^2 %sy %s  )' \
         '' % (int_str_converter(D, False, True), int_str_converter(E, True, True),
               int_str_converter(F, False, True), int_str_converter(G, False, False))
    c3 = 'x^2 %sx `-`  ( %sy %s  )  ( %sy %s  )' \
         '' % (int_str_converter(D, False, True), int_str_converter(H, True, True), int_str_converter(C, False, False),
               int_str_converter(H, True, True), int_str_converter(B, False, False))
    cor_text = 'x %sy %s' % (int_str_converter(-H, False, True), int_str_converter(-B, False, False))
    c4 = ' ( %s  )  ( x %sy %s  )' \
         '' % (cor_text, int_str_converter(H, False, True), int_str_converter(C, False, False))

    answers = [cor_text,
               'x %sy %s' % (int_str_converter(-H, False, True), int_str_converter(C, False, False)),
               'x %sy %s' % (int_str_converter(-H, False, True), int_str_converter(B, False, False)),
               'x %sy %s' % (int_str_converter(H, False, True), int_str_converter(B, False, False)),
               'x %sy %s' % (int_str_converter(H, False, True), int_str_converter(-B, False, False))
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-280
def factorization312_Stem_239():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하였더니 $$수식$${exp_2}$$/수식$$가 되었다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 " \
           "$$수식$$a `+` b `+` c$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 $$수식$${c6}$$/수식$$, $$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$이므로\n" \
              "$$수식$${c9}$$/수식$$\n\n"

    while True :
        D, E = np.random.choice(np.arange(1, 10), 2, False)
        B, C = np.random.choice(np.arange(-9, 0), 2, False)
        B = B * np.random.choice([-1, 1], 1)[0]
        F = D - B
        G = E - C
        H = B * D
        J = C * E
        I = C * D + B * E
        K = C - D - E
        if 0 not in [F, G, H, J, I, K] and is_gcd(D, E) and is_gcd(B, C) and F > 0 and is_gcd(F, G):
            break

    exp_1 = 'x^2 %sxy %sy^2 %sx %sy %s' % (int_str_converter(-F, False, True), int_str_converter(-H, False, True),
                                           int_str_converter(-G, False, True), int_str_converter(-I, False, True),
                                           int_str_converter(-J, False, False))
    exp_2 = ' ( x %sy `+` a  )  ( x `+` by `+` c  )' % (int_str_converter(B, False, True))
    c1 = 'x^2 %sxy %sx %sy^2 %sy %s' % (int_str_converter(-F, False, True), int_str_converter(-G, False, True),
                                        int_str_converter(-H, False, True), int_str_converter(-I, False, True),
                                        int_str_converter(-J, False, False))
    c2 = 'x^2 `-`  ( %sy %s  ) x `-`  ( %sy^2 %sy %s  )' \
         '' % (int_str_converter(F, True, True), int_str_converter(G, False, False),
               int_str_converter(H, True, True), int_str_converter(I, False, True), int_str_converter(J, False, False))
    c3 = 'x^2 `-`  ( %sy %s  ) x `-`  ( %sy %s  )  ( %sy %s  )' \
         '' % (int_str_converter(F, True, True), int_str_converter(G, False, False),
               int_str_converter(D, True, True), int_str_converter(E, False, False),
               int_str_converter(B, True, True), int_str_converter(C, False, False))
    c4 = ' { x `-`  ( %sy %s  )  }  { x `+`  ( %sy %s  )  }' \
         '' % (int_str_converter(D, True, True), int_str_converter(E, False, False),
               int_str_converter(B, True, True), int_str_converter(C, False, False))
    c5 = ' ( x %sy %s  )  ( x %sy %s  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, False),
               int_str_converter(-D, False, True), int_str_converter(-E, False, False))
    c6 = 'a `=` %d' % (C)
    c7 = 'b `=` %d' % (-D)
    c8 = 'c `=` %d' % (-E)
    b1, b2 = ['  ( ', '  ) '] if C < 0 else ['', '']
    b3, b4 = ['  ( ', '  ) '] if -D < 0 else ['', '']
    b5, b6 = ['  ( ', '  ) '] if -E < 0 else ['', '']
    c9 = 'a `+` b `+` c `=` %s%d%s `+` %s%d%s `+` %s%d%s `=` %d' % (b1, C, b2, b3, -D, b4, b5, -E, b6, K)
    j1 = '을' if abs(J) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, j1=j1)
    answer = answer.format(cor_text=K)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9)

    return stem, answer, comment


# 3-1-2-281
def factorization312_Stem_240():
    stem = "$$수식$${exp_1}$$/수식$${j1} $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 두 일차식의 곱으로 인수분해된다. " \
           "이때 두 일차식의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$에 대하여 내림차순으로 정리하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "따라서 두 일차식은 $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$이므로 이들의 합은\n" \
              "$$수식$${c7}$$/수식$$\n\n"

    while True :
        A, B = np.random.choice(np.arange(1, 10), 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C, D = np.random.choice(np.arange(1, 10), 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        E = A - C
        F = B - D
        G = A * C
        I = B * D
        H = B * C + A * D
        M = A - C
        N = B - D
        if is_gcd(A, B) and is_gcd(C, D) and is_gcd(E, F) and E > 0 and G > 0 :
            break

    exp_1 = 'x^2 %sxy %sy^2 %sx %sy %s' % (int_str_converter(E, False, True), int_str_converter(-G , False, True),
                                           int_str_converter(F, False, True), int_str_converter(-H, False, True),
                                           int_str_converter(-I, False, False))
    c1 = 'x^2 %sxy %sx `-`  ( %sy^2 %sy %s  )' \
         '' % (int_str_converter(E, False, True), int_str_converter(F, False, True),
               int_str_converter(G, True, True), int_str_converter(H, False, True), int_str_converter(I, False, False))
    c2 = 'x^2 `+`  ( %sy %s  ) x `-`  ( %sy %s  )  ( %sy %s  )' \
         '' % (int_str_converter(E, True, True), int_str_converter(F, False, False),
               int_str_converter(C, True, True), int_str_converter(D, False, False),
               int_str_converter(A, True, True), int_str_converter(B, False, False))
    c3 = ' { x `+`  ( %sy %s  )  }  { x `-`  ( %sy %s  )  }' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, False),
               int_str_converter(C, True, True), int_str_converter(D, False, False))
    c5 = 'x %sy %s' % (int_str_converter(A, False, True), int_str_converter(B, False, False))
    c6 = 'x %sy %s' % (int_str_converter(-C, False, True), int_str_converter(-D, False, False))
    c4 = ' ( %s  )  ( %s  )' % (c5, c6)
    cor_text = '2x %sy %s' % (int_str_converter(M, False, True), int_str_converter(N, False, False))
    c7 = '%s `+` %s `=` %s' % (c5, c6, cor_text)

    answers = [cor_text,
               'x %sy' % (int_str_converter(B, False, True)),
               'x %sy' % (int_str_converter(A, False, True)),
               '2x %sy' % (int_str_converter(N, False, True)),
               '2x %sy %s' % (int_str_converter(-N, False, True), int_str_converter(B, False, False)),
               ]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '은' if abs(I) % 10 in have_jongsung_num else '는'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-283
def factorization312_Stem_241():
    stem = "$$수식$${exp_1}$$/수식$${j1} 인수분해하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$로 놓으면 \n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    B, C = np.random.randint(1, 10, 2) *np.reshape(np.random.choice([-1, 1], 2), -1)
    D = 2 * C
    E = C * C
    F = 2 * B
    G = B * B
    H = B * D

    exp_1 = 'x^2 %sxy %sy^2 %sx %sy %s' \
            '' % (int_str_converter(F, False, True), int_str_converter(G, False, True),
                  int_str_converter(D, False, True), int_str_converter(H, False, True),
                  int_str_converter(E, False, False))
    c1 = ' ( x %sy  ) ^2 %s  ( x %sy  ) %s' \
         '' % (int_str_converter(B, False, True), int_str_converter(D, False, True),
               int_str_converter(B, False, True), int_str_converter(E, False, False))
    c2 = 'x %sy `=` A' % (int_str_converter(B, False,True))
    c3 = 'A^2 %sA %s' % (int_str_converter(D, False, True), int_str_converter(E, False, False))
    c4 = ' ( A %s  ) ^2' % (int_str_converter(C, False, False))
    cor_text = ' ( x %sy %s  )^2' % (int_str_converter(B, False, True), int_str_converter(C, False, False))

    answers = [cor_text,
               ' ( x %sy %s  )^2' % (int_str_converter(B, False, True), int_str_converter(-C, False, False)),
               ' ( x %sy %s  )^2' % (int_str_converter(-B, False, True), int_str_converter(C, False, False)),
               ' ( x %sy %s  )^2' % (int_str_converter(-B, False, True), int_str_converter(-C, False, False)),
               '-  ( x %sy %s  )^2' % (int_str_converter(B, False, True), int_str_converter(-C, False, False))]

    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))
    j1 = '을' if abs(E) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-284
def factorization312_Stem_242():
    stem = "$$수식$${exp_1}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n\n"


    while True :
        Z = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        Y = Z - 1
        X = -1 * Z
        W = 11 * Y
        V = 111 + Z * 11
        U = 100 * V
        if Y != 0 :
            break

    exp_1 = '111^2 %s `TIMES ` 111 %s `TIMES` 11^2' \
            '' % (int_str_converter(W, False, False), int_str_converter(X, False, False))
    c1 = '111 `=` a'
    c2 = '11 `=` b'
    c3 = '111 ^2 %s `TIMES` 11 `TIMES` 111 %s `TIMES` 11^2' \
         '' % (int_str_converter(Y, False, False), int_str_converter(X, False, False))
    c4 = 'a^2 %sab %sb^2' % (int_str_converter(Y, False, True), int_str_converter(X, False, True))
    c5 = ' ( a `-` b  )  ( a %sb  )' % (int_str_converter(Z, False, False))
    c6 = ' ( 111 `-` 11  )  ( 111 %s `TIMES` 11  )' % (int_str_converter(Z, False, False))
    b1, b2 = ['  ( ', '  ) '] if V < 0 else ['', '' ]
    c7 = '100 `TIMES` %s%d%s `=` %d' % (b1, V, b2, U)

    while True :
        n = np.random.choice([50, 100, 500, 1000, 5000, 10000], 1)[0]
        answers = [i for i in range(U-4*n, (U+4*n)+1, n)]
        idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
        answers = answers[idx:idx+5]
        if min(answers) > 0 :
            break

    a1, a2, a3, a4, a5 = sorted(answers)
    cor_num = multiple_choice_nums.get(answers.index(U))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-286
def factorization312_Stem_243():
    stem = "다음은 인수분해 공식을 이용하여 $$수식$${exp_1}$$/수식$$의 값을 구하는 과정이다. " \
           "㉠, ㉡, ㉢ 중 가장 먼저 틀린 곳을 찾고, 바르게 계산한 값을 구하시오.\n" \
           "$$수식$${exp_2}$$/수식$$\n"
    answer = "(답) : ㉠, $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "㉠ 제곱 차 인수분해 공식을 이용해야 한다.\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(100, 1000)
        B = A - 10
        C = A + B
        K = 10 * C
        if A % 10 != 0 :
            break

    exp_1 = '%d ^2 `-` %d' % (A, B)
    exp_2 = '%s ` &amp; =`  ( %d `-` %d  ) ^2 `&amp; =` 10 ^2 `&amp; =` 100 #' \
            '&amp; ↑ &amp; ↑ &amp; ↑#' \
            '&amp; ㉠ &amp; ㉡ &amp; ㉢' % (exp_1, A, B)
    c1 = ' ( %d `+` %d  )  ( %d `-` %d  ) ' % (A, B, A, B)
    c2 = '%d `TIMES` 10' % (C)
    cor_text = '%d' % K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-287
def factorization312_Stem_244():
    stem = "다음 중 $$수식$${exp_1}$$/수식$${j1} 계산하는 데 가장 알맞은 인수분해 공식은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$라 하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 가장 알맞은 인수분해 공식은 {cor_num}이다.\n\n"

    E = np.random.randint(51, 100)
    A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
    C = A + B
    D = A * B

    exp_1 = '%s^2 %s `TIMES` %s %s' \
            '' % (int_str_converter(E, True, False), int_str_converter(C, False, False),
                  int_str_converter(E, True, False), int_str_converter(D, False, False))
    c1 = '%d `=` a' % (E)
    c2 = 'a^2 %sa %s' % (int_str_converter(C, False, True), int_str_converter(D, False, False))
    c3 = ' ( a %s  )  ( a %s  )' % (int_str_converter(A, False, False),
                                                      int_str_converter(B, False, False))
    a1 = 'a^2 `+` 2ab `+` b^2 `=`  ( a `+` b  )^2'
    a2 = 'a^2 `-` 2ab `+` b^2 `=`  ( a `-` b  )^2'
    a3 = 'a^2 `-` b^2 `=`  ( a `+` b  )  ( a `-` b  )'
    a4 = 'x^2 `+`  ( a `+` b  ) x `+` ab `=`  ( x `+` a  )  ( x `+` b  )'
    a5 = 'acx^2 `+`  ( ad `+` bc  ) x `+` bd `=`  ( ax `+` b  )  ( cx `+` d  )'

    j1 = '을' if abs(B) % 10 in have_jongsung_num else '를'

    answers = [a1, a2, a3, a4, a5]
    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(a4))
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_num=cor_num)

    return stem, answer, comment


# 3-1-2-288
def factorization312_Stem_245():
    stem = "$$수식$${exp_1}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n\n"

    while True :
        AA = np.random.randint(501, 1000)
        BB = 1000 - AA
        A = round(AA / 100, 2)
        B = round(BB / 100, 2)
        C = A - B
        D = 10 * C
        E = np.random.randint(11, 100)
        FF = np.random.randint(1000, 10000)
        F = round(BB / 100, 2)
        cor_text = '%0.1f' % (D)
        if AA % 2 != 0 and AA % 5 != 0 and AA > BB and E != D and FF % 2 != 0 and FF % 5 != 0 and D % 10 != 0 :
             break

    exp_1 = '%0.2f^2 `-` %0.2f^2' % (A, B)
    c1 = ' ( %0.2f `+` %0.2f  )  ( %0.2f `-` %0.2f  )' % (A, B, A, B)
    c2 = '10 `TIMES` %0.2f `=` %0.1f' % (C, D)

    ans_dict = {D:cor_text, 10:10, E:E, F:'%0.2f' % F, 100:100}
    ans_keys = sorted(ans_dict.keys())
    answers = [ans_dict.get(k) for k in ans_keys]


    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2)

    return stem, answer, comment


# 3-1-2-289
def factorization312_Stem_246():
    stem = "인수분해 공식을 이용하여 $$수식$${exp_1}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$라 하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(10, 100)
        B = 100 - A
        K = pow(A - B, 2)
        if A % 5 != 0 and A % 2 != 0 and A > B and (A - B) < 10 or (A - B) % 10 == 0 :
            break
    exp_1 = '%d^2 `-` 2 `TIMES` %d `TIMES` %d `+` %d^2' % (A, A, B, B)
    c1 = '%d `=` a' % (A)
    c2 = '%d `=` b' % (B)
    c3 = 'a^2 `-` 2ab `+` b^2'
    c4 = ' ( a `-` b  )^2'
    c5 = ' ( %d `-` %d  )^2' % (A, B)
    cor_text = K

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-291
def factorization312_Stem_247():
    stem = "다음 중 $$수식$${exp_1}$$/수식$$임을 계산하는 데 가장 알맞은 인수분해 공식은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${A} `=` a, {B} `=` b$$/수식$$라 하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "따라서 가장 알맞은 인수분해 공식은 {cor_num}이다.\n\n"

    B, A = sorted(list(np.random.randint(10, 99, 2)))
    C = A + B
    D = A - B

    exp_1 = '%d^2 `-` %d^2 `=` %d `TIMES` %d' % (A, B, C, D)
    c1 = '%d^2 `-` %d^2' % (A, B)
    c2 = 'a^2 `-` b^2'
    c3 = ' ( a `+` b  )  ( a `-` b  )'
    c4 = ' ( %d `+` %d  )  ( %d `-` %d  )' % (A, B, A, B)
    c5 = '%d `TIMES` %d' % (C, D)


    a1 = 'a^2 `+` 2ab `+` b^2 `=`  ( a `+` b  )^2'
    a2 = 'a^2 `-` 2ab `+` b^2 `=`  ( a `-` b  )^2'
    a3 = 'a^2 `-` b^2 `=`  ( a `+` b  )  ( a `-` b  )'
    a4 = 'x^2 `+`  ( a `+` b  ) x `+` ab `=`  ( x `+` a  )  ( x `+` b  )'
    a5 = 'acx^2 `+`  ( ad `+` bc  ) x `+` bd `=`  ( ax `+` b  )  ( cx `+` d  )'

    j1 = '을' if abs(B) % 10 in have_jongsung_num else '를'

    answers = [a1, a2, a3, a4, a5]
    np.random.shuffle(answers)
    cor_num = multiple_choice_nums.get(answers.index(a3))
    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a4, a4=a4, a5=a5, j1=j1)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_num=cor_num, A=A, B=B)

    return stem, answer, comment


# 3-1-2-292
def factorization312_Stem_248():
    stem = "$$수식$${exp_1}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    A = np.random.randint(51, 100)
    I = np.random.randint(-9, 0)
    B = 100 - A
    C = 100 - I
    E = I * I
    D = 2 * I
    F = A + B
    G = A - B
    H = F * (G + F)

    exp_1 = '%d^2 `-` %d^2 `+` %d^2 %s `TIMES` %d %s' \
            '' % (A, B, C, int_str_converter(D, False, False), C, int_str_converter(E, False, False))
    c1 = ' ( %d `+` %d  )  ( %d `-` %d  ) `+`  ( %d %s  )^2' \
         '' % (A, B, A, B, C, int_str_converter(I, False, False))
    c2 = '%d `TIMES` %d `+` %d^2' % (F, G, F)
    c3 = '%d `TIMES`  ( %d `+` %d  )' % (F, G, F)
    cor_text = H

    n = np.random.choice([100, 200, 300, 400, 500], 1)[0]
    answers = [i for i in range(H-4*n, (H+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]

    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(H))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-293
def factorization312_Stem_249():
    stem = "인수분해 공식을 이용하여 $$수식$${exp_1}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        C = np.random.choice([64, 81, 100, 121, 144, 169, 196, 225, 256, 289], 1)[0]
        D = np.random.choice([1, 4, 9, 16, 25])
        A = (C + D) // 2
        B = A - D
        K, _ = sqrt_pow(C*D)
        if (C + D) % 2 == 0 :
            break

    exp_1 = 'sqrt { %d^{2} `-` %d^{2} }' % (A, B)
    c1 = 'sqrt {  ( %d `+` %d  )  ( %d `-` %d  ) }' % (A, B, A, B)
    c2 = 'sqrt { %d `TIMES` %d }' % (C, D)
    cor_text = K

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-294
def factorization312_Stem_250():
    stem = "$$수식$${exp_1}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = 2020
        E = np.random.randint(1000, 2001)
        F = A - E
        B = E - F
        if F != 0 and B != 0 :
            C = np.random.randint(1, 51)
            G = np.random.randint(1, 11)
            H = C - G
            D = C // B
            Z = 2 * D
            if E > F and C % B == 0 and D not in [G, H, C, Z] and H != 0 and D != 0:
                break

    exp_1 = '{%d `TIMES` %d %s `TIMES` %d} over {%d^2 `-` %d^2}' \
            '' % (A, G, int_str_converter(H, False, False), A, E, F)
    c1 = '{ %d  ( %d `+` %d  ) } over {  ( %d `+` %d  )  ( %d `-` %d  ) }' \
         '' % (A, G, H, E, F, E, F)
    c2 = '{ %d `TIMES` %d } over { %d `TIMES` %d }' % (A, C, A, B)
    cor_text = D

    answers = sorted([D, G, H, C, Z])
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-295
def factorization312_Stem_251():
    stem = "인수분해 공식을 이용하여 다음을 계산하시오.\n" \
           "$$수식$${exp_1}$$/수식$$\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        n = np.random.choice([1, 2, 3, 4], 1)[0]
        A = pow(10, n) - 1
        D = A + 1
        B = A - 1
        m = np.random.choice([1, 3, 5, 7], 1)[0] if n % 2 == 1 else np.random.choice([2, 4, 6, 8], 1)[0]
        C = pow(10, m) - 1
        F = C + 1
        G = F // D
        K, _ = sqrt_pow(G)
        if min([A, D, B, C, F, G, K]) > 0 and G > 1:
            break

    exp_1 = 'sqrt { { %d `TIMES` %d `+` %d } over { %d ^{2} `-` 1 }' % (B, C, B, A)
    c1 = 'sqrt { { %d  ( %d `+` 1  ) } over {  ( %d `+` 1  )  ( %d `-` 1  ) } }' \
         '' % (B, C, A, A)
    c2 = 'sqrt { { %d `TIMES` %d } over { %d `TIMES` %d } }' % (B, F, D, B)
    c3 = 'sqrt { %d }' % (G)
    cor_text = K

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-296
def factorization312_Stem_252():
    stem = "$$수식$${exp_1}$$/수식$${j1} 어떤 자연수 $$수식$$x$$/수식$$의 제곱일 때, $$수식$$x$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$라 하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1000, 10000)
        V = np.random.randint(1, 10)
        X = V * V
        W = 2 * V
        Y = Z + W
        K = Z + V
        if Z % 10 != 0 :
            break

    exp_1 = '%d `TIMES` %d `+` %d' % (Z, Y, X)
    c1 = '%d `=` A' % (Z)
    c2 = 'A  ( A `+` %d  ) `+` %d' % (W, X)
    c3 = 'A ^2 `+` %dA `+` %d' % (W, X)
    c4 = ' ( A `+` %d  ) ^2' % (V)
    c5 = ' ( %d `+` %d  ) ^2' % (Z, V)
    c6 = '%d^2' % (K)
    cor_text = K

    j1 = '이' if X % 10 in have_jongsung_num else '가'
    stem = stem.format(exp_1=exp_1, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-297
def factorization312_Stem_253():
    stem = "$$수식$${exp_1}$$/수식$${j1} 어떤 자연수 $$수식$$x$$/수식$$의 제곱일 때, $$수식$$x$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$라 하면\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1000, 10000)
        V = np.random.randint(-9, 0)
        X = V * V
        W = 2 * V
        Y = Z + W
        K = Z + V
        if Z % 10 != 0 :
            break

    exp_1 = '%d `TIMES` %d `+` %d' % (Z, Y, X)
    c1 = '%d `=` A' % (Z)
    c2 = 'A  ( A %s  ) `+` %d' % (int_str_converter(W, False, False), X)
    c3 = 'A ^2 %sA `+` %d' % (int_str_converter(W, False, False), X)
    c4 = ' ( A %s  ) ^2' % (int_str_converter(V, False, False))
    c5 = ' ( %d %s  ) ^2' % (Z, int_str_converter(V, False, False))
    c6 = '%d^2' % (K)
    cor_text = K

    j1 = '이' if X % 10 in have_jongsung_num else '가'
    stem = stem.format(exp_1=exp_1, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-298
def factorization312_Stem_254():
    stem = "인수분해 공식을 이용하여 다음 두 수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$의 합을 구하시오.\n" \
           "$$수식$$A `=` {exp_1}$$/수식$$\n" \
           "$$수식$$B `=` {exp_2}$$/수식$$\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$라 하면\n" \
              "$$수식$$A `&amp; =` {exp_1} # " \
              "&amp; =` {c3} #" \
              "&amp; =` {c4} #" \
              "&amp; =` {c5} #" \
              "&amp; =` {c6} `=` {cor_text1}$$/수식$$\n" \
              "$$수식$$B `&amp; =` {exp_1} #" \
              "&amp; =` {c7} #" \
              "&amp; =` {c8} `=` {cor_text2}$$/수식$$\n" \
              "따라서 $$수식$${c9} `=` {cor_text}$$/수식$$\n\n"

    while True:
        ZZ = np.random.randint(101, 1000)
        YY = np.random.randint(11, 100)
        if ZZ % 2 != 0 and ZZ % 5 != 0 and YY % 2 != 0 and ZZ % 5 != 0  :
            Z = round(ZZ / 10, 1)
            Y = round(YY / 10, 1)
            X = -2 * Y
            W = Z - Y
            V = W * W
            S = np.random.choice([64, 81, 100, 121, 144, 169, 196, 225, 256, 289], 1)[0]
            Q = np.random.choice([1, 4, 9, 16, 25], 1)[0]
            if (S + Q) % 2 == 0 :
                T = (S + Q) // 2
                P = T - Q
                R, _ = sqrt_pow(S*Q)
                if V % 1 == 0 and R % 1 == 0:
                    break

    exp_1 = '%s^2 %s `TIMES` %s %s^2' % (int_str_converter(Z, True, False), int_str_converter(X, False, False),
                                         int_str_converter(Z, True, False), int_str_converter(Y, False, False))
    c1 = '%s `=` a' % (int_str_converter(Z, True, False))
    c2 = '%s `=` b' % (int_str_converter(Y, True, False))
    c3 = 'a^2 `-` 2ab `+` b^2'
    c4 = ' ( a `-` b  )^2'
    c5 = ' ( %s `-` %s  )^2' % (int_str_converter(Z, True, False), int_str_converter(Y, True, False))
    if W % 1 == 0 :
        c6 = '%d^2' % (W)
    else :
        c6 = '%s^2' % (int_str_converter(W, True, False))

    cor_text1 = int(V)

    exp_2 = 'sqrt { %s^2 `-` %s^2 }' % (int_str_converter(T, True, False), int_str_converter(P, True, False))
    c7 = 'sqrt {  ( %s `+` %s  )  ( %s `-` %s  ) }' \
         '' % (int_str_converter(T, True, False), int_str_converter(P, True, False),
               int_str_converter(T, True, False), int_str_converter(P, True, False))
    c8 = 'sqrt { %s `TIMES` %s }' % (int_str_converter(S, True, False), int_str_converter(Q, True, False))
    cor_text2 = int(R)

    c9 = 'A `+` B `=` %d `+` %d' % (cor_text1, cor_text2)
    cor_text = cor_text1 + cor_text2

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9,
                             cor_text1=cor_text1, cor_text2=cor_text2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-299
def factorization312_Stem_255():
    stem = "$$수식$${exp_1}$$/수식$$은 $$수식$${B}$$/수식$$보다 크고 " \
           "$$수식$${C}$$/수식$$보다 작은 두 자연수에 의하여 나누어떨어진다. " \
           "이 두 자연수의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 $$수식$${exp_1}$$/수식$$은 $$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$, $$수식$${c6}$$/수식$$, " \
              "즉 $$수식$${D}$$/수식$${j1} $$수식$${E}$$/수식$${j2}로 나누어떨어진다.\n" \
              "그러므로 $$수식$${c7}$$/수식$$\n\n"

    while True :
        A = np.random.choice([2, 3, 5, 6, 7], 1)[0]
        D = pow(A, 3) + 1
        E = pow(A, 3) - 1
        F = D + E
        G = F + 12
        H = D * E
        B = 1 if pow(A, 3) < 10 else np.random.randint(1, D)
        C = 10 if pow(A, 3) < 10 else B + 10
        if 0 not in [A, B, C, D, E, F, G, H] and B < E < C and B < D < C :
            break


    exp_1 = '%d^{12} `-` 1' % (A)
    c1 = ' ( %d^{6}  ) ^{2} `-` 1^2' % (A)
    c2 = ' ( %d^{6} `+` 1  )  ( %d^{6} `-` 1  )' % (A, A)
    c4 = '%d^{6} `+` 1' % (A)
    c5 = '%d^{3} `+` 1' % (A)
    c6 = '%d^{3} `-` 1' % (A)
    c3 = ' ( %s  )  ( %s  )  ( %s  )' % (c4, c5, c6)
    c7 = '%d `+` %d `=` %d' % (D, E, F)

    answers = sorted([E, D, F, G, H])
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(F))
    j1 = '과' if abs(D) % 10 in have_jongsung_num else '와'
    j2 = '으' if abs(E) % 10 in have_jongsung_num else ''

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, B=B, C=C)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, D=D, E=E, j1=j1, j2=j2)

    return stem, answer, comment


# 3-1-2-300
def factorization312_Stem_256():
    stem = "$$수식$${exp_1}$$/수식$${j1} 게산하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=&amp;` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(100, 1000)
        C = np.random.randint(10, 100)
        E = np.random.randint(1, 10)
        B = 1000 - A
        D = 100 - C
        F = 10 - E
        G = np.random.randint(1, 10)
        H = (A + B) * (A - B)
        I = (C + D) * (C - D)
        J = (E + F) * (E - F)
        K = H + I + J + G
        if A > B and C > D and E > F :
            break

    exp_1 = '%d^2 `+` %d^2 `+` %d^2 `-` %d^2 `-` %d^2 `-` %d^2 `+` %d' % (A, C, E, B, D, F, G)
    c1 = '%d^2 `-` %d^2 `+` %d^2 `-` %d^2 `+` %d^2 `-` %d^2 `+` %d' % (A, B, C, D, E, F, G)
    c2 = ' ( %d `+` %d  )  ( %d `-` %d  ) #' \
         '&amp;+`  ( %d `+` %d  )  ( %d `-` %d  ) `+` ' \
         ' ( %d `+` %d  )  ( %d `-` %d  ) `+` %d' % (A, B, A, B, C, D, C, D, E, F, E, F, G)
    c3 = '%d `+` %d `+` %d `+` %d' % (H, I, J, G)
    cor_text = K
    j1 = '을' if abs(G) % 10 in have_jongsung_num else '를'

    stem = stem.format(exp_1=exp_1, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-303
def factorization312_Stem_257():
    stem = "인수분해 공식을 이용하여 $$수식$${exp_1}$$/수식$$을 게산하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=&amp; ` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    A = np.random.randint(2, 10)
    B = A + 1
    C = A + 6
    D = A + 7
    E = A - 1
    F = A + 2
    G = A + 3
    H = D + 1
    I = E * H
    J = A * D
    L = E * D
    I1 = abs(I) // get_gcd(abs(I), abs(J))
    J1 = abs(J) // get_gcd(abs(I), abs(J))


    exp_1 = ' ( { %d^{2} `-` 1 } over { %d^{2} }  )  ( { %d^{2} `-` 1 } over { %d^{2} }  )' \
            ' ` CDOTS ` ' \
            ' ( { %d^{2} `-` 1 } over { %d^{2} }  )  ( { %d^{2} `-` 1 } over { %d^{2} }  )' \
            '' % (A, A, B, B, C, C, D, D)
    c1 = '{  ( %d `-` 1  )  ( %d `+` 1  ) } over { %d `TIMES` %d } `TIMES` ' \
         '{  ( %d `-` 1  )  ( %d `+` 1  ) } over { %d `TIMES` %d } `TIMES` CDOTS` #' \
         '&amp; {  ( %d `-` 1  )  ( %d `+` 1  ) } over { %d `TIMES` %d }' \
         '' % (A, A, A, A, B, B, B, B, D, D, D, D)
    c2 = '{ %d `TIMES` %d } over { %d `TIMES` %d } `TIMES` { %d `TIMES` %d } over { %d `TIMES` %d } `TIMES` ' \
         '{ %d `TIMES` %d } over { %d `TIMES` %d } `TIMES ` CDOTS ` TIMES ` { %d `TIMES` %d } over { %d `TIMES` %d }' \
         '' % (E, B, A, A, A, C, B, B, B, G, F, F, C, H, D, D)
    c3 = '{%d} over {%d} `TIMES` {%d} over {%d}' % (E, A, H, D)
    cor_text = '{%d} over {%d}' % (I1, J1)

    ans = {1/L : [1, L], A/D : [A, D], E/A: [E, A], I/J :[I, J], 1: [1, 1]}
    keys = sorted(list(ans.keys()))
    answers = []
    for k in keys :
        i, j = ans.get(k)
        s = '-' if i * j < 0 else ''
        n = abs(i) // get_gcd(abs(i), abs(j))
        d = abs(j) // get_gcd(abs(i), abs(j))
        if n == d :
            answers.append('%s1' % (s))
        elif d == 1 :
            answers.append('%s%s' % (s, n))
        else :
            answers.append('%s{%d} over {%d}' % (s, n, d))

    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    a1, a2, a3, a4, a5 = answers

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-305
def factorization312_Stem_258():
    stem = "$$수식$${exp_1}$$/수식$$의 약수 중 $$수식$$10$$/수식$$이하인 자연수의 합을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "따라서 $$수식$${exp_1}$$/수식$$의 약수 중 $$수식$$10$$/수식$$ 이하인 자연수는 " \
              "$$수식$${c2}$$/수식$$이므로 그 합은\n" \
              "$$수식$${c3} `=` {cor_text}$$/수식$$\n\n"

    A = np.random.randint(2, 10)
    B = pow(A, 3) + 1
    C = pow(A, 3) - 1
    T = [i for i in get_divisor(pow(A, 6)-1) if i < 11 ]
    Q = sum(T)

    P = ' `TIMES` '.join(['%d^%d' % (a, b) for [a, b] in integer_factorization(pow(A, 6) - 1)]).replace('^1', '')
    exp_1 = '%d^6 `-` 1' % (A)
    c1 = ' ( %d^3 `+` 1  )  ( %d^3 `-` 1  ) `=` %d `TIMES` %d `=` %s' % (A, A, B, C, P)
    c2 = '$$/수식$$, $$수식$$'.join(list(map(str, T)))
    c3 = ' `+` '.join(list(map(str, T)))
    cor_text = Q

    stem = stem.format(exp_1=exp_1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-306
def factorization312_Stem_259():
    stem = "$$수식$${exp_1}$$/수식$$의 약수의 개수는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$${c6}$$/수식$${j1} 모두 소수이므로 $$수식$${exp_1}$$/수식$$의 " \
              "약수의 개수는 $$수식$${c7} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(6, 10)
        C = np.random.randint(2, 5)
        B = pow(C, 4)
        D = pow(A, 2) + pow(C, 2)
        E = A + C
        F = A - C
        if F != 0 :
            c5 = ' `TIMES` '.join(['%d^%d' % (a, b) for [a, b] in integer_factorization(pow(A, 4) - B)]).replace('^1', '')
            c6 = ['%d' % (a) for [a, _] in integer_factorization(pow(A, 4) - B)]
            c7 = ' `TIMES` '.join([str(b + 1) for [_, b] in integer_factorization(pow(A, 4) - B)])
            K = eval(c7.replace('`TIMES`', '*'))
            break


    exp_1 = '%d^4 `-` %d' % (A, B)
    c1 = '%d^4 `-` %d^4' % (A, C)
    c2 = ' ( %d^2 `+` %d^2  )  ( %d^2 `-` %d^2  )' % (A, C, A, C)
    c3 = ' ( %d^2 `+` %d^2  )  ( %d `+` %d  )  ( %d `-` %d  )' % (A, C, A, C, A, C)
    c4 = '%d `TIMES` %d `TIMES` %d' % (D, E, F)
    cor_text = K
    j1 = '이' if int(str(c6[-1])[-1]) in have_jongsung_num else '가'
    c6 = '$$/수식$$, $$수식$$'.join(c6)

    n = np.random.randint(1, 5)
    answers = [i for i in range(K-4*n, (K+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, cor_text=cor_text, j1=j1)

    return stem, answer, comment


# 3-1-2-307
def factorization312_Stem_260():
    stem = "자연수 $$수식$${exp_1}$$/수식$$은 $$수식$${B}$$/수식$${j1} $$수식$${C}$$/수식$$ 사이의 " \
           "두 자연수로 나누어떨어진다. 이때 이 두 자연수의 합을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1}$$/수식$$\n" \
              "따라서 $$수식$${exp_1}$$/수식$$은 $$수식$${B}$$/수식$${j1} $$수식$${C}$$/수식$$ 사이의 두 자연수인 " \
              "$$수식$${D}$$/수식$$, $$수식$${E}$$/수식$${j2}로 나누어떨어지므로 " \
              "이 두 자연수의 합은 $$수식$${c2} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(2, 10)
        D = pow(A, 3) - 1
        E = pow(A, 3) + 1
        G = pow(A, 6) + 1
        F = D + E
        B = 1 if pow(A, 3) < 10 else np.random.randint(pow(A, 3), pow(A, 3)+100)
        C = 10 if pow(A, 3) < 10 else B + 10
        if E != 0 and B % 10 == 0 and F < 500 :
            break

    exp_1 = '%d^12 `-` 1' % (A)
    c1 = ' ( %d^6  )^2 `-` 1^2 `=`  ( %d^6 `+` 1  )  ( %d^6 `-` 1  )' \
         '`=`  ( %d^6 `+` 1  )  ( %d^3 `+` 1  )  ( %d^3 `-` 1  )' \
         '`=` %d `TIMES` %d `TIMES` %d' % (A, A, A, A, A, A, G, D, E)
    c2 = '%d `+` %d' % (D, E)
    cor_text = F

    j1 = '과' if B % 10 in have_jongsung_num else '와'
    j2 = '으' if E % 10 in have_jongsung_num else ''
    stem = stem.format(exp_1=exp_1, B=B, C=C, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, c1=c1, c2=c2, cor_text=cor_text, B=B, C=C, D=D, E=E, j1=j1, j2=j2)

    return stem, answer, comment


# 3-1-2-308
def factorization312_Stem_261():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1} `=` {cor_text1}$$/수식$$\n" \
              "$$수식$${exp_2} `=` {c2} `=` {cor_text2}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 10)
        A = pow(B, 2) + 1
        C = 2 * B
        D = 2 * C
        F = np.random.randint(1, 10)
        AA, BB = sqrt_pow(D * D * A)
        if F != B :
            break


    exp_1 = 'a `=` {1} over { sqrt {%d} `-` %d }' % (A, B)
    exp_2 = 'b `=` {1} over { sqrt {%d} `+` %d }' % (A, B)
    c1 = '{ sqrt {%d} `+` %d } over {  ( sqrt {%d} `-` %d  )  ( sqrt {%d} `+` %d  ) }' \
         '' % (A, B, A, B, A, B)
    c2 = '{ sqrt {%d} `-` %d } over {  ( sqrt {%d} `+` %d  )  ( sqrt {%d} `-` %d  ) }' \
         '' % (A, B, A, B, A, B)
    cor_text1 = 'sqrt {%d} `+` %d' % (A, B)
    cor_text2 = 'sqrt {%d} `-` %d' % (A, B)
    exp_3 = 'a^2 `-` b^2'
    c3 = ' ( a `+` b  )  ( a `-` b  )'
    c4 = ' ( %s `+` %s  )  { %s `-`  ( %s  )  }' % (cor_text1, cor_text2, cor_text1, cor_text2)
    c5 = '2 sqrt {%d} `TIMES` %d' % (A, C)

    cor_text3 = '%s sqrt {%d}' % (int_str_converter(D, True, True), A)
    cor_text4 = '%s sqrt {%d}' % (int_str_converter(AA, True, True), BB)

    cor_text = cor_text4

    if cor_text3 != cor_text4 :
        cor_text += '\n$$수식$$=` %s$$/수식$$' % (cor_text4)

    answers = [cor_text, str(B), str(F), 'sqrt {%d}' % (A), '%d `+` sqrt {%d}' % (C, A)]
    np.random.shuffle(answers)
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             cor_text1=cor_text1, cor_text2=cor_text2, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-309
def factorization312_Stem_262():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        XX = np.random.randint(101, 1000)
        YY = np.random.randint(11, 100)
        if XX % 5 != 0 and XX % 2 != 0 and YY % 5 != 0 and YY % 2 != 0 :
            X = round(XX / 100, 2)
            Y = round(YY / 100, 2)
            A = np.random.randint(2, 10)
            D, E = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([1, -1], 2), -1)
            BB = D + E
            CC = D * E
            B = A * BB
            C = A * CC
            F = X + D * Y
            G = X + E * Y
            K = A * F * G
            if 0 not in [BB, CC, F, G, K] and K % 1 == 0 and K < 300 and F % 1 == 0:
                break


    exp_1 = 'x `=` %0.2f' % (X)
    exp_2 = 'y `=` %0.2f' % (Y)
    exp_3 = '%sx^2 %sxy %sy^2' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                                  int_str_converter(C, False, False))
    c1 = '%s  ( x %sy  )  ( x %sy  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(D, False, True), int_str_converter(E, False, True))

    D_str = '%s `TIMES`' % (int_str_converter(D, False, False)) if abs(D) != 1 else ''
    Y_str = int_str_converter(Y, False, False) if D_str == '' else int_str_converter(Y, True, False)
    E_str = '%s `TIMES`' % (int_str_converter(E, False, False)) if abs(E) != 1 else ''
    c2 = '%s  ( %s %s %s  )  ( %s %s %s  )' \
         '' % (int_str_converter(A, True, True),
               int_str_converter(X, True, False), D_str, Y_str,
               int_str_converter(X, True, False), E_str, Y_str)

    b1, b2 = [' ( ', '  ) '] if A < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if F < 0 else ['', '']
    b5, b6 = [' ( ', '  ) '] if G < 0 else ['', '']

    if G % 1 == 0 :
        c3 = '%s%d%s `TIMES` %s%d%s `TIMES` %s%d%s' % (b1, A, b2, b3, F, b4, b5, G, b6)
    elif (G * 10) % 1 == 0 :
        c3 = '%s%d%s `TIMES` %s%d%s `TIMES` %s%0.1f%s' % (b1, A, b2, b3, F, b4, b5, G, b6)
    else :
        c3 = '%s%d%s `TIMES` %s%d%s `TIMES` %s%0.2f%s' % (b1, A, b2, b3, F, b4, b5, G, b6)
    cor_text = int(K)

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-310
def factorization312_Stem_263():
    stem = "$$수식$$x `=` {exp_1}$$/수식$$, $$수식$$y `=` {exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        C = A * A
        B = C + 1
        E = B
        D = 2 * A
        F = 2 * (C + E)
        K = F * F
        if K < 2001 :
            break

    exp_1 = '{ %d `-` sqrt {%d} } over { %d `+` sqrt {%d} }' % (A, B, A, B)
    exp_2 = '{ %d `+` sqrt {%d} } over { %d `-` sqrt {%d} }' % (A, B, A, B)
    exp_3 = 'x^2 `+` 2xy `+` y^2'
    c1 = ' ( x `+` y  ) ^2'
    c2 = ' ( %s `+` %s  )' % (exp_1, exp_2)
    c3 = ' { {  ( %d `-` sqrt {%d}  )^2 `+`  ( %d `+` sqrt {%d}  ) ^2 }' \
         'over {  ( %d `+` sqrt {%d}  )  ( %d `-` sqrt {%d}  ) }^2' \
         '' % (A, B, A, B, A, B, A, B)
    c4 = ' { {  ( %d `-` %d sqrt {%d} `+` %d  ) `+`  ( %d `+` %d sqrt {%d} `+` %d  ) }' \
         ' over {-1}  } ^2' % (C, D, B, E, C, D, B, E)
    c5 = ' ( -%d  )^2' % (F)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-312
def factorization312_Stem_264():
    stem = "$$수식$${exp_1}$$/수식$$일 때, $$수식$${exp_2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$로 놓으면\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7} `=` {cor_text}$$/수식$$\n\n"


    G, D = np.random.choice(np.arange(1, 10), 2, False) * np.reshape(np.random.choice([-1, 1], 2), -1)
    E = 2 * G
    F = G * G
    H = G + D
    C = -1 * H
    B = np.random.choice([2, 3, 5, 7, 11, 13, 17, 19], 1)[0]

    exp_1 = 'x `=` sqrt {%d} `+` %d' % (B, C)
    exp_2 = ' ( x %s  )^2 %s  ( x %s  ) %s' \
            '' % (int_str_converter(D, False, False), int_str_converter(E, False, True),
                  int_str_converter(D, False, False), int_str_converter(F, False, False))
    c1 = 'x %s `=` A' % (int_str_converter(D, False, False))
    c2 = 'A^2 %sA %s' % (int_str_converter(E, False, True), int_str_converter(F, False, False))
    c3 = ' ( A %s  )^2' % (int_str_converter(G, False, False))
    c4 = ' ( x %s %s  )^2' % (int_str_converter(D, False, False), int_str_converter(G, False, False))
    c5 = ' ( x %s  )^2' % (int_str_converter(H, False, False))
    c6 = ' ( sqrt {%d} %s %s  )^2' \
         '' % (B, int_str_converter(C, False, False), int_str_converter(H, False, False))
    c7 = ' ( sqrt {%d}  )^2' % (B)
    cor_text = B

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-313
def factorization312_Stem_265():
    stem = "$$수식$$x `=` {exp_1}$$/수식$$, $$수식$$y `=` {exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x `=` {exp_1}$$/수식$$, $$수식$$y `=` {exp_2}$$/수식$$이므로\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "주어진 식에서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5} `=` {cor_text}$$/수식$$\n\n"

    while True :
        Z = np.random.randint(1, 10)
        Y = np.random.choice([2, 3, 5, 6, 7], 1)[0]
        X = 2 * Z
        A, B = np.random.choice(np.arange(1, 10), 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = A + B
        D = A + B
        E = A * B
        K = X * (A + B)
        if 0 not in [Z, Y, X, A, B, C, D, E, K] and abs(K) < 500 :
            break

    exp_1 = '%d `+` sqrt {%d}' % (Z, Y)
    exp_2 = '%d `-` sqrt {%d}' % (Z, Y)
    exp_3 = 'x^2 `+` y^2 `+` 2xy %sx %sd %s' % (int_str_converter(C, False, True), int_str_converter(D, False, True),
                                                int_str_converter(E, False, False))
    c1 = 'x `+` y `=` %s `+` %s `=` %d' % (exp_1, exp_2, X)
    c2 = 'x^2 `+`  ( 2y %s  )x `+` y^2 %sy %s' \
         '' % (int_str_converter(C, False, False), int_str_converter(D, False, True),
               int_str_converter(E, False, False))
    c3 = 'x^2 `+`  ( 2y %s  )x `+`  ( y %s  )  ( y %s  )' \
         '' % (int_str_converter(C, False, False), int_str_converter(A, False, False),
               int_str_converter(B, False, False))
    c4 = ' ( x `+` y %s  )  ( x `+` y %s  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(B, False, False))
    c5 = ' ( %s %s  )  ( %s %s  )' \
         '' % (int_str_converter(X, True, False), int_str_converter(A, False, False),
               int_str_converter(X, True, False), int_str_converter(B, False, False))
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3,
                             c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-314
def factorization312_Stem_266():
    stem = "$$수식$$x `=` {exp_1}$$/수식$$, $$수식$$y `=` {exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_4}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B, C, W, V, Z = np.random.randint(1, 10, 6) * np.reshape(np.random.choice([-1, 1], 6), -1)
        D = A + B
        if not (D < 0 and C < 0 ) :
            E = A * B
            F = A * C
            Y = -1 * A * V
            X = np.random.choice([2, 3, 5, 6, 7], 1)[0]
            K = Z + A * W
            if 0 not in [D, E, F, Y, X, K] and Z != W and Y != V and is_gcd(B, C) :
                break

    exp_1 = '%d %s sqrt {%d}' % (Z, int_str_converter(Y, False, True), X)
    exp_2 = '%d %s sqrt {%d}' % (W, int_str_converter(V, False, True), X)
    exp_4 = 'x^2 %sxy %sy^2 %sx %sy' % (int_str_converter(D, False, True), int_str_converter(E, False, True),
                  int_str_converter(C, False, True), int_str_converter(F, False, True))
    exp_3 = '{ x %sy %s } over { %s }' \
            '' % (int_str_converter(B, False, True), int_str_converter(C, False, False), exp_4)
    c1 = 'x^2 `+`  ( %sy %s  ) x %sy^2 %sy' \
         '' % (int_str_converter(D, True, True), int_str_converter(C, False, False),
               int_str_converter(E, False, True), int_str_converter(F, False, True))
    c2 = 'x^2 `+`  ( %sy %s  ) x %sy  ( %sy %s  )' \
         '' % (int_str_converter(D, True, True), int_str_converter(C, False, False),
               int_str_converter(A, False, True), int_str_converter(B, True, True),
               int_str_converter(C, False, False))
    c3 = ' ( x %sy  )  ( x %sy %s  )' \
         '' % (int_str_converter(A, False, True), int_str_converter(B, False, True),
               int_str_converter(C, False, False))
    c4 = '{ x %sy %s } over { %s }' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, False), c3)
    c5 = '{1} over { x %sy }' % (int_str_converter(A, False, True))
    c6 = '{1} over { %s %s sqrt {%d} %s  ( %s %s sqrt{%d}  ) }' \
         '' % (int_str_converter(Z, True, False), int_str_converter(Y, False, True), X,
               int_str_converter(A, False, True), int_str_converter(W, True, False),
               int_str_converter(V, False, True), X)

    s = '-' if K < 0 else ''
    if abs(K) == 1 :
        cor_text = '%s1' % (s)
    else :
        cor_text = '%s{1} over {%d}' % (s, abs(K))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, exp_4=exp_4, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-315
def factorization312_Stem_267():
    stem = "$$수식$${exp_1}$$/수식$$의 소수 부분을 $$수식$$x$$/수식$$라 할 때, " \
           "인수분해 공식을 이용하여 $$수식$${exp_2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$에서 $$수식$${c2}$$/수식$$이므로\n" \
              "$$수식$${exp_1}$$/수식$$의 소수 부분은\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6} `=` {cor_text}$$/수식$$\n\n"

    while True:
        B = np.random.choice([2, 3, 5, 7], 1)[0]
        A, E = np.random.randint(2, 10, 2)
        C = int(math.sqrt(A*A*B))
        D = C + 1
        F = C + E
        Z = D + 2
        G = E - F
        J = -1 * G
        H = 2 * J
        I = J * J
        K = A * A * B
        if 0 not in [C, D, F, Z, G, J ,H, I, K] and abs(K) < 100 :
            break

    exp_1 = '%d %s sqrt {%d}' % (E, int_str_converter(A, False, True), B)
    exp_2 = 'x^2 %sx %s' % (int_str_converter(H, False, True), int_str_converter(I, False, False))
    c1 = '%d `%s` %s sqrt {%d} `%s` %d' % (C, right, int_str_converter(A, True, True), B, right, D)
    c2 = '%d `%s` %d %s sqrt {%d} `%s` %d' % (F, right, E, int_str_converter(A, False, True), B, right, G)
    c3 = 'x `=` %d %s sqrt {%d} `-` %d `=` %s sqrt {%d} %s' \
         '' % (E, int_str_converter(A, False, True), B, F,
               int_str_converter(A, True, True), B, int_str_converter(G, False, False))
    c4 = ' ( x %s  )^2' % (int_str_converter(J, False, False))
    c5 = ' ( %s sqrt {%d} %s %s  )^2' \
         '' % (int_str_converter(A, True, True), B,
               int_str_converter(G, False, False), int_str_converter(J, False, False))
    c6 = ' ( %s sqrt {%d}  )^2' % (int_str_converter(A, True, True), B)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-316
def factorization312_Stem_268():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$의 값은 $$수식$${exp_4}$$/수식$$이다. " \
           "유리수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$이므로\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "따라서 $$수식$${c7}$$/수식$$, $$수식$${c8}$$/수식$$이므로\n" \
              "$$수식$${c9} `=` {cor_text}$$/수식$$\n\n"

    while True:
        B = np.random.choice([2, 3, 5, 6, 7], 1)[0]
        Z, Y = np.random.randint(1, 10, 2)
        W = 2 * Z
        V = Z * Z
        U = Y * Y
        C, D, E = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        A = -1 * Y * E
        F = C + Z + Y * D
        G = C + Z - Y * D
        H = 2 * A
        I = F * G
        J = F * H
        K = I + J
        if 0 not in [A, F, G, H, I, J, K] and abs(I) < 500 and abs(J) < 500 :
            break

    exp_1 = 'x `=` %s sqrt {%d} %s' % (int_str_converter(A, True, True), B, int_str_converter(C, False, False))
    exp_2 = 'y `=` %d %s sqrt {%d}' % (D, int_str_converter(E, False, True), B)
    exp_3 = 'x^2 %sy^2 %sx %s' % (int_str_converter(U, False, True), int_str_converter(W, False, True),
                                  int_str_converter(V, False, False))
    exp_4 = 'a `+` b sqrt{%d}' % (B)

    c1 = 'x^2 %sx %s %sy^2' % (int_str_converter(W, False, True), int_str_converter(V, False, False),
                               int_str_converter(-U, False, True))
    c2 = ' ( x %s  )^2 `-`  ( %sy  )^2' \
         '' % (int_str_converter(Z, False, False), int_str_converter(Y, True, True))
    c3 = ' ( x %s %sy  )  ( x %s %sy  )' \
         '' % (int_str_converter(Z, False, False), int_str_converter(Y, False, True),
               int_str_converter(Z, False, False), int_str_converter(-Y, False, True))
    c4 = ' { %s sqrt {%d} %s %s %s  ( %s %s sqrt {%d}  )  }#' \
         '`TIMES`  { %s sqrt {%d} %s %s %s  ( %s %s sqrt {%d}  )  } ' \
         '' % (int_str_converter(A, True, True), B, int_str_converter(C, False, False),
               int_str_converter(Z, False, False), int_str_converter(-Y, False, True),
               int_str_converter(D, True, False), int_str_converter(E, False, True), B,
               int_str_converter(A, True, True), B, int_str_converter(C, False, False),
               int_str_converter(Z, False, False), int_str_converter(Y, False, True),
               int_str_converter(D, True, False), int_str_converter(E, False, True), B)
    c5 = '%d `TIMES`  ( %s %s sqrt {%d}  )' \
         '' % (F, int_str_converter(G, True, False), int_str_converter(H, False, True), B)
    c6 = '%d %s sqrt {%d}' % (I, int_str_converter(J, False, True), B)
    c7 = 'a `=` %d' % (I)
    c8 = 'b `=` %d' % (J)
    b1, b2 = [' ( ', '  ) '] if I < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if J < 0 else ['', '']
    c9 = 'a `+` b `=` %s%d%s `+` %s%d%s' % (b1, I, b2, b3, J, b4)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3,
                             c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-318
def factorization312_Stem_269():
    stem = "$$수식$${exp_1}$$/수식$$의 정수 부분을 $$수식$$a$$/수식$$, 소수 부분을 $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$${exp_2}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$이므로\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True:
        B = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
        A = np.random.randint(1, 10)
        C = int(A + math.sqrt(B))
        D = C - A
        E = 2 * D
        F = D * D
        G = B
        H = A*A - G
        W = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
        Z, Y = np.random.randint(1, 10) * np.reshape(np.random.choice([-1, 1], 2), -1)

        ans_dict = {H: H, Z: Z, Y: Y,
                    H + math.sqrt(W): '%d `+` sqrt {%d}' % (H, W),
                    Y + math.sqrt(W): '%d `+` sqrt {%d}' % (Y, W)}

        if Z != H and Y != H and 0 not in [C, D, E, F, G, H, W, Z, Y] and len(ans_dict) == 5 :
            break

    exp_1 = '%d `+` sqrt {%d}' % (A, B)
    exp_2 = 'a^2 `-` b^2 %sb %s' % (int_str_converter(-E, False, True), int_str_converter(-F, False, False))
    c1 = 'a `=` %d' % (C)
    c2 = 'b `=` sqrt {%d} %s' % (B, int_str_converter(-D, False, False))
    c3 = 'a^2 `-  ( b^2 %sb %s  )' % (int_str_converter(E, False, True), int_str_converter(F ,False, False))
    c4 = ' ( a `+` b %s  )  ( a `-` b %s  )' \
         '' % (int_str_converter(D, False, False), int_str_converter(-D, False, False))
    c5 = ' ( %d `+` sqrt{%d} %s %s  )  ( %d `-` sqrt{%d} %s %s  )' \
         '' % (A, B, int_str_converter(-D, False, False), int_str_converter(D, False, False),
               A, B, int_str_converter(D, False, False), int_str_converter(-D, False, False))
    c6 = ' ( %d `+` sqrt {%d}  )  ( %d `-` sqrt {%d}  )' \
         '' % (C, B, C, B)
    c7 = '%d `-` %d' % (C*C, B)
    cor_text = H


    ans_keys = sorted(ans_dict.keys())
    answers = [ans_dict.get(k) for k in ans_keys]
    cor_num = multiple_choice_nums.get(answers.index(H))
    a1, a2, a3, a4, a5 = answers


    stem = stem.format(exp_1=exp_1, exp_2=exp_2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-320
def factorization312_Stem_270():
    stem = "$$수식$$x `+` y = {exp_1}$$/수식$$, $$수식$$x `-` y `=` {exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3} `=` {cor_text}$$/수식$$\n\n"

    B = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
    A = np.random.randint(1, 10)
    K = A * A - B

    exp_1 = '%d `+` sqrt {%d}' % (A, B)
    exp_2 = '%d `-` sqrt {%d}' % (A, B)
    exp_3 = 'x^2 `-` y^2'

    c1 = ' ( x `+` y  )  ( x `-` y  )'
    c2 = ' ( %s  )  ( %s  )' % (exp_1, exp_2)
    c3 = '%d `-` %d' % (A*A, B)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-321
def factorization312_Stem_271():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4} `=` {cor_text}$$/수식$$\n\n"

    A, B, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
    K = (A + C) * B

    exp_1 = 'x `+` y `=` %d' % (A)
    exp_2 = 'x `-` y `=` %d' % (B)
    exp_3 = 'x^2 `-` y^2 %sx %sy' % (int_str_converter(C, False, True), int_str_converter(-C, False, True))
    c1 = 'x^2 `-` y^2 %s  ( x `-` y  )' % (int_str_converter(C, False, True))
    c2 = ' ( x `+` y  )  ( x `-` y  )  %s  ( x `-` y  )' \
         '' % (int_str_converter(C, False, True))
    c3 = ' ( x `+` y %s  )  ( x `-` y  )' % (int_str_converter(C, False, False))
    b1, b2 = [' ( ', '  ) '] if B < 0 else ['', '']
    c4 = ' ( %s %s  ) `TIMES` %s%d%s' % (int_str_converter(A, True, False), int_str_converter(C, False, False),
                                                  b1, B, b2)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-322
def factorization312_Stem_272():
    stem = "$$수식$${exp_1}$$/수식$$이고 $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "따라서 $$수식$${exp_3} `=` {cor_text}$$/수식$$\n\n"

    while True :
        C = np.random.randint(1, 10)
        A = C * C
        D = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        B = np.random.randint(10, 100)
        E = B // D
        if abs(B) % abs(D) == 0  :
            break

    exp_1 = 'x^2 %sy^2 `=` %d' % (int_str_converter(-A, False, True), B)
    exp_2 = 'x %sy `=` %d' % (int_str_converter(C, False, True), D)
    exp_3 = 'x %sy' % (int_str_converter(-C, False, True))

    c1 = 'x^2 %sy^2' % (int_str_converter(-A, False, True))
    c2 = ' ( x %sy  )  ( x %sy  )' \
         '' % (int_str_converter(C, False, True), int_str_converter(-C, False, True))
    c3 = '%s  ( x %sy  )' % (int_str_converter(D, True, True), int_str_converter(-C, False, True))
    cor_text = E

    n = np.random.randint(1, 4)
    answers = [i for i in range(B-4*n, (B+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    answers = answers[idx:idx+5]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(B))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-323
def factorization312_Stem_273():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = B * (A * A + B)
        Z = np.random.randint(10, 100) * np.random.choice([-1, 1], 1)[0]
        if C != 0 and abs(Z) != abs(C) and abs(C) < 121 :
            break

    exp_1 = 'x `+` y `=` %d' % (A)
    exp_2 = 'xy `=` %d' % (B)
    exp_3 = 'x^{3}y `+` 3x^{2}y^{2} `+` xy^3'
    c1 = 'xy  ( x^2 `+` 3xy `+` y^2  )'
    c2 = 'xy  ( x^2 `+` 2xy `+` y^2 `+` xy  )'
    c3 = 'xy  {  ( x `+` y  )^2 `+` xy  }'
    b1, b2 = [' ( ', '  ) '] if B < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if A < 0 else ['', '']
    c4 = '%s%d%s `TIMES`  { %s%d%s^2 `+` %s%d%s  }' % (b1, B, b2, b3, A, b4, b1, B, b2)
    cor_text = C

    answers = sorted([-Z, C, 0, -C, Z])
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(C))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-324
def factorization312_Stem_274():
    stem = "$$수식$${exp_1}$$/수식$$일 때, $$수식$${exp_2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3} `=` {cor_text}$$/수식$$\n\n"

    while True:
        A, B, C, G = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        D = 2 * A
        E = A * A
        F = A * B
        K = G * G + B * G + C
        if abs(K) < 100 :
            break

    exp_1 = 'x %sy `=` %d' % (int_str_converter(A, False, True), G)
    exp_2 = 'x^2 %sxy %sx %sy^2 %sy %s' % (int_str_converter(D, False, True), int_str_converter(B, False, True),
                                           int_str_converter(E, False, True), int_str_converter(F, False, True),
                                           int_str_converter(C, False, False))
    c1 = 'x^2 %sxy %sy^2 %sx %sy %s' % (int_str_converter(D, False, True), int_str_converter(E, False, True),
                                        int_str_converter(B, False, True), int_str_converter(F, False, True),
                                        int_str_converter(C, False, False))
    c2 = ' ( x %sy  )^2 %s  ( x %sy  ) %s' \
         '' % (int_str_converter(A, False, True), int_str_converter(B, False, True),
               int_str_converter(A, False, True), int_str_converter(C, False, False))
    b1, b2 = [' ( ', '  ) '] if G < 0 else ['', '']
    c3 = '%s%d%s^2 %s `TIMES` %s%d%s %s' \
         '' % (b1, G, b2, int_str_converter(B, False, False), b1, G, b2, int_str_converter(C, False, False))
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_2=exp_2, c1=c1, c2=c2, c3=c3, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-325
def factorization312_Stem_275():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6} `=` {cor_text}$$/수식$$\n\n"

    A = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
    B = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
    K = A * B

    exp_1 = 'a `+` b `=` sqrt {%d}' % (A)
    exp_2 = 'a `-` b `=` %d' % (B)
    exp_3 = 'a^3 `-` b^3 `+` ab  ( a `-` b  )'

    c1 = 'a^3 `-` b^3 `+` a^{2}b `-` ab^2'
    c2 = 'a^3 `+` a^{2}b `-` ab^2 `-` b^3'
    c3 = 'a^2  ( a `+` b  ) `-` b^2  ( a `+` b  )'
    c4 = ' ( a^2 `-` b^2  )  ( a `+` b  )'
    c5 = ' ( a `-` b  )  ( a `+` b  )^2'
    c6 = '%d `TIMES`  ( sqrt {%d}  )^2' % (B, A)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-326
def factorization312_Stem_276():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {c5} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
        E = A + B
        D = A - E
        G = 2 * A
        H = A * A
        F = C - (E * E)
        Z, Y, X = np.random.choice(np.arange(1, 10), 3, False) * np.reshape(np.random.choice([-1, 1], 3), -1)

        ans_dict = {F: F, X: X, Y: Y,
                    Z * math.sqrt(C): '%s sqrt {%d}' % (int_str_converter(Z, True, True), C),
                    Z + Z * math.sqrt(C): '%d `+` %s sqrt {%d}' % (Z, int_str_converter(Z, True, True), C)}


        if abs(F) not in [abs(Z), abs(Y), abs(X)] and 0 not in [E, D, G, H, F] and len(ans_dict) == 5 and \
            abs(F) < 100 :
            break

    exp_1 = 'a `+` b `=` %d `+` sqrt {%d}' % (B, C)
    exp_2 = 'a `-` b `=` sqrt {%d} %s' % (C, int_str_converter(D, False, False))
    exp_3 = 'a^2 `-` b^2 %sb %s' % (int_str_converter(-G, False, True), int_str_converter(-H, False, False))
    c1 = 'a^2 `-`  ( b^2 %sb %s  )' % (int_str_converter(G, False, True), int_str_converter(H, False, False))
    c2 = 'a^2 `-`  ( b %s  )^2' % (int_str_converter(A, False, False))
    c3 = ' ( a `+` b %s  )  ( a `-` b %s  )' \
         '' % (int_str_converter(A, False, False), int_str_converter(-A, False, False))
    c4 = ' ( %d `+` sqrt {%d} %s  )  ( sqrt {%d} %s %s  )' \
         '' % (B, C, int_str_converter(A, False, False), C, int_str_converter(D, False, False),
               int_str_converter(-A, False, False))
    c5 = ' ( sqrt {%d} %s  )  ( sqrt {%d} %s  )' \
         '' % (C, int_str_converter(E, False, False), C, int_str_converter(-E, False, False))
    cor_text = F


    ans_keys = sorted(list(ans_dict.keys()))
    answers = [ans_dict.get(k) for k in ans_keys]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-327
def factorization312_Stem_277():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$를 정리하면 $$수식$${exp_4}$$/수식$${j1} 된다. " \
           "이때 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_1} `=` {c1} #" \
              "&amp; =` {c2}$$/수식$$\n" \
              "$$수식$${exp_2} `=` {c3} #" \
              "&amp; =` {c4}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {c9}$$/수식$$\n" \
              "따라서 $$수식$${c10}$$/수식$$, $$수식$${c11}$$/수식$$이므로\n" \
              "$$수식$${c12} `=` {cor_text}$$/수식$$\n\n"

    while True :
        B = np.random.randint(1, 10)
        A = pow(B, 2) - 1
        C = np.random.randint(1, 10)
        D, E = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        F = C * C
        G = D * D
        H = C * E
        I = D * E
        J = -1
        L = E * B
        M = J + L
        N = -1 * E
        K = M + N
        if 0 not in [A, M, K] :
            break

    j1 = '이' if abs(A) % 10 in have_jongsung_num else '가'
    exp_1 = '%sx %sy `&amp; =` {1} over { sqrt {%d} %s }' \
            '' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
                  A, int_str_converter(B, False, False))
    exp_2 = '%sx %sy `&amp; =` {1} over { sqrt {%d} %s }' \
            '' % (int_str_converter(C, True, True), int_str_converter(-D, False, True),
                  A, int_str_converter(-B, False, False))
    exp_3 = '%sx^2 %sx %sy^2 %sy' % (int_str_converter(F, True, True), int_str_converter(H, False, True),
                                     int_str_converter(-G, False, True), int_str_converter(I, False, True))
    exp_4 = 'a `+` b sqrt {%d}' % (A)
    c1 = '{ -sqrt{%d} `+` %d } over {  ( sqrt {%d} `+` %d  )   ( -sqrt {%d} `+` %d  )}' \
         '' % (A, B, A, B, A, B)
    c2 = '- sqrt {%d} `+` %d' % (A, B)
    c3 = '{ sqrt{%d} `+` %d } over {  ( sqrt {%d} `-` %d  )   ( sqrt {%d} `+` %d  )}' \
         '' % (A, B, A, B, A, B)
    c4 = '- %d `-` sqrt {%d}' % (B, A)
    c5 = '%sx^2 %sy^2 %sx %sy' % (int_str_converter(F, True, True), int_str_converter(-G, False, True),
                                  int_str_converter(H, False, True), int_str_converter(I, False, True))
    c6 = ' ( %sx %sy  )  ( %sx %sy  ) %s  ( %sx %sy  )' \
         '' % (int_str_converter(C, True, True), int_str_converter(D, False, True),
               int_str_converter(C, True, True), int_str_converter(-D, False, True),
               int_str_converter(E, False, True), int_str_converter(C, True, True), int_str_converter(D, False, True))
    c7 = ' ( %s `-` sqrt {%d}  )  ( %s `-` sqrt {%d}  ) %s  ( %s `-` sqrt {%d}  )' \
         '' % (int_str_converter(B, True, False), A, int_str_converter(-B, True, False), A,
               int_str_converter(E, False, True), int_str_converter(B, True, False), A)
    c8 = '%s %s %s sqrt {%d}' % (int_str_converter(J, True, False), int_str_converter(L, False, False),
                                 int_str_converter(-E, False, True), A)
    c9 = '%s %s sqrt {%d}' % (int_str_converter(M, True, False), int_str_converter(-E, False, True), A)
    c10 = 'a `=` %d' % (M)
    c11 = 'b `=` %d' % (N)
    b1, b2 = [' ( ', '  ) '] if N < 0 else ['', '']
    c12 = 'a `+` b `=` %d `+` %s%d%s' % (M, b1, N, b2)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, j1=j1)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3,
                             c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10, c11=c11, c12=c12,
                             cor_text=cor_text)
    return stem, answer, comment


# 3-1-2-328
def factorization312_Stem_278():
    stem = "$$수식$$x$$/수식$$, $$수식$$y$$/수식$$가 양수이고 $$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, " \
           "$$수식$${exp_3}$$/수식$$의 값은? (단, $$수식$${exp_4}$$/수식$$ )\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "한편\n" \
              "$$수식$${c3}$$/수식$$이므로\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$${exp_4}$$/수식$$이므로 $$수식$${c5}$$/수식$$\n" \
              "따라서\n" \
              "(주어진 식)$$수식$$`=` {c6}$$/수식$$\n\n"

    while True :
        B, D, Z, V = np.random.randint(1, 10, 4)
        C = D * D
        A = D * D + 2 * B
        E = A * D
        W, X = np.random.choice([2, 3, 5, 6, 7], 2, False)
        Y = np.random.randint(10, 100)

        ans_dict = {Z: Z, E: E, Y: Y,
                    V * math.sqrt(W): '%s sqrt {%d}' % (int_str_converter(V, True, True), W),
                    Y * math.sqrt(X): '%s sqrt {%d}' % (int_str_converter(Y, True, True), X)}

        if E not in [Z, Y, V] and A != 0 and len(ans_dict) == 5 and abs(E) < 100:
            break

    exp_1 = 'x^2 `+` y^2 `=` %d' % (A)
    exp_2 = 'xy `=` %d' % (B)
    exp_3 = 'x^3 `-` x^{2}y `+` xy^2 `-` y^3'
    exp_4 = 'x `%s` y' % (left)

    c1 = 'x^2  ( x `-` y  ) `+` y^2  ( x `-` y  )'
    c2 = ' ( x^2 `+` y^2  )  ( x `-` y  )'
    c3 = ' ( x `-` y  )^2 `=` x^2 `+` y^2 `-` 2xy'
    c4 = ' ( x `-` y  )^2 `=` %d `-` 2 `TIMES` %d `=` %d' % (A, B, C)
    c5 = 'x `-` y `=` %d' % (D)
    c6 = ' ( x^2 `+` y^2  )  ( x `-` y  ) `=` %d `TIMES` %d `=` %d' % (A, D, E)
    cor_text = E

    ans_keys = sorted(list(ans_dict.keys()))
    answers = [ans_dict.get(k) for k in ans_keys]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_3=exp_3, exp_4=exp_4, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-329
def factorization312_Stem_279():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오. " \
           "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 양수이고 $$수식$$a `{left}` b$$/수식$$ )\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "한편\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "에서 $$수식$${c7}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {c9} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = A + B
        D = A - B
        E = C * D
        Z, G = sorted(list(np.random.randint(1, 10, 2)))
        F = G * G
        Y = ((G + Z) * (G - Z)) // 4
        K = E * G * Z

        if ((G + Z) * (G - Z)) % 4 == 0 and 0 not in [C, D, Y] and abs(K) < 201 and is_gcd(A, B):
            break

    exp_1 = 'a `-` b `=` %d' % (Z)
    exp_2 = 'ab `=` %d' % (Y)
    exp_3 = ' ( %sa %sb  )^2 `-`  ( %sa %sb  )^2' \
            '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
                  int_str_converter(B, True, True), int_str_converter(A, False, True))
    c1 = ' ( %sa %sb %sa %sb  )  ( %sa %sb %sa %sb  )' \
         '' % (int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(B, False, True), int_str_converter(A, False, True),
               int_str_converter(A, True, True), int_str_converter(B, False, True),
               int_str_converter(-B, False, True), int_str_converter(-A, False, True))
    c2 = ' ( %sa %sb  )  ( %sa %sb  )' \
         '' % (int_str_converter(C, True, False), int_str_converter(C, False, True),
               int_str_converter(D, True, True), int_str_converter(-D, False, True))
    c3 = '%s  ( a `+` b  )  ( a `-` b  )' % (int_str_converter(E, True, True))
    c4 = ' ( a `+` b  ) ^2'
    c5 = ' ( a `-` b  ) ^2 `+` 4ab'
    c6 = '%d^2 `+` 4 `TIMES` %d `=` %d' % (Z, Y, F)
    c7 = 'a `+` b `=` %d' % (G)
    c8 = '%s  ( a `+` b  )  ( a `-` b  )' % (int_str_converter(E, True, True))
    b1, b2 = [' ( ', '  ) '] if G < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if Z < 0 else ['', '']
    c9 = '%d `TIMES` %s%d%s `TIMES` %s%d%s' % (E, b1, G, b2, b3, Z, b4)
    cor_text= K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, left=left)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             c6=c6, c7=c7, c8=c8, c9=c9, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-330
def factorization312_Stem_280():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "에서 $$수식$${c5}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${c6} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B = np.random.randint(10, 100)
        C = B // A
        K = C * C
        if B % A == 0 and C != 0 and K < 500 :
            break

    exp_1 = 'x `+` y `=` %d' % (A)
    exp_2 = 'ax `+` bx `+` ay `+` by `=` %d' % (B)
    exp_3 = 'a^2 `+` 2ab `+` b^2'
    c1 = 'ax `+` ay `+` bx `+` by'
    c2 = 'a  ( x `+` y  ) `+` b  ( x `+` y  )'
    c3 = ' ( a `+` b  )  ( x `+` y  )'
    c4 = ' ( a `+` b  ) `TIMES` %d `=` %d' % (A, B)
    c5 = 'a `+` b `=` %d' % (C)
    c6 = '%s `=`  ( a `+` b )^2 `=` %d^2' % (exp_3, C)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_2=exp_2, exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-331
def factorization312_Stem_281():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_2}$$/수식$$\n" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$라 하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "에서 $$수식$${c4}$$/수식$$이므로\n" \
              "$$수식$${c5}$$/수식$$\n\n"

    while True :
        B, C = np.random.randint(1, 10, 2)
        F = B + C
        D = np.random.randint(10, 100)
        E = D // F
        Z, Y = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        if D % F == 0 and abs(E) not in [abs(Z), abs(Y)] :
            break

    exp_1 = 'x `+` y `=` %d' % (C)
    exp_2 = 'x^2 `-` y^2 %sx %sy `=` %d' % (int_str_converter(B, False, True), int_str_converter(-B, False, True), D)
    exp_3 = 'x `-` y'
    c1 = ' ( x `+` y  )  ( x `-` y  ) %s  ( x `-` y  )' \
         '' % (int_str_converter(B, False, True))
    c2 = 'x `-` y `=` A'
    c3 = '%sA %sA `=` %d' % (int_str_converter(C, True, True), int_str_converter(B, False, True), D)
    c4 = 'A `=` %d' % (E)
    c5 = 'x `-` y `=` %d' % (E)

    answers = sorted(list([-Z, -E, Y, E, Z]))
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(E))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_2=exp_2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)

    return stem, answer, comment


# 3-1-2-332
def factorization312_Stem_282():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {B}$$/수식$$\n" \
              "에서 $$수식$${c5}$$/수식$$\n" \
              "따라서 $$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "$$수식$$=` {c9}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        A, C = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        D = np.random.randint(1, 10)
        E = D * D
        B = D * A + C + E
        K = C * (pow(A, 2) - C)
        if 0 not in [B, K] and abs(K) < 500:
            break

    exp_1 = 'ab `=` %d' % (C)
    exp_2 = ' ( a %s  )  ( b %s  ) `=` %d' \
            '' % (int_str_converter(D, False, False), int_str_converter(D, False, False), B)
    exp_3 = 'a^{3}b `+` a^{2}b^{2} `+` ab^{3}'
    c1 = ' ( a %s  )  ( b %s  )' \
         '' % (int_str_converter(D, False, False), int_str_converter(D, False, False))
    c2 = 'ab %sa %sb %s' % (int_str_converter(D, False, True), int_str_converter(D, False, True),
                            int_str_converter(E, False, False))
    c3 = 'ab %s  ( a `+` b  ) %s' \
         '' % (int_str_converter(D, False, True), int_str_converter(E, False, False))
    b1, b2 = [' ( ', '  ) '] if C < 0 else ['', '']

    c4 = '%s%d%s %s  ( a `+` b  ) %s' \
         '' % (b1, C, b2, int_str_converter(D, False, True), int_str_converter(E, False, False))
    c5 = 'a `+` b `=` %d' % (A)
    c6 = 'ab  ( a^2 `+` ab `+` b^2  )'
    c7 = 'ab  ( a^2 `+` 2ab `+` b^2 `-` ab  )'
    c8 = 'ab  {  ( a `+` b  )^2 `-` ab  }'
    c9 = '%s%d%s `TIMES`  ( %d^2 %s  )' % (b1, C, b2, A, int_str_converter(C, False, False))
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9,
                             cor_text=cor_text, B=B)

    return stem, answer, comment


# 3-1-2-333
def factorization312_Stem_283():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$$=` {C}$$/수식$$\n" \
              "에서 $$수식$${c5}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B = np.random.randint(1, 10, 2)
        CC = A + B
        C = np.random.randint(10, 100)
        D = C // (A + B)
        E = np.random.randint(1, 10) * np.random.choice([-1, 1], 1)[0]
        F = E - 2
        K = D * D + F * A
        if C % CC == 0 and 0 not in [D, F, K] and abs(K) < 100 :
            break

    exp_1 = 'xy `=` %d' % (A)
    exp_2 = 'x^{2}y %sx `+` xy^2 %sy `=` %d' % (int_str_converter(B, False, True), int_str_converter(B, False, True), C)
    exp_3 = 'x^2 %sxy `+` y^2' % (int_str_converter(E, False, True))

    c1 = 'x^{2}y %sx `+` xy^2 %sy' % (int_str_converter(B, False, True), int_str_converter(B, False, True))
    c2 = 'xy  ( x `+` y  ) %s  ( x `+` y  )' % (int_str_converter(B, False, True))
    c3 = ' ( xy %s  )  ( x `+` y  )' % (int_str_converter(B, False, False))
    c4 = ' ( %s %s  )  ( x `+` y  )' \
         '' % (int_str_converter(A, True, False), int_str_converter(B, False, False))
    c5 = 'x `+` y `=` %d' % (D)
    c6 = 'x^2 `+` 2xy `+` y^2 `-` 2xy %sxy' % (int_str_converter(E, False, True))
    c7 = ' ( x `+` y  )^2 %sxy' % (int_str_converter(F, False, True))
    c8 = '%d^2 %s `TIMES` %d' % (D, int_str_converter(F, False, False), A)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8,
                             cor_text=cor_text, C=C)

    return stem, answer, comment


# 3-1-2-334
def factorization312_Stem_284():
    stem = "$$수식$${exp_1}$$/수식$$이고 $$수식$${exp_2}$$/수식$$일 때, $$수식$${exp_3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${cor_text}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "에서 $$수식$${c4}$$/수식$$이상\n" \
              "$$수식$${c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {c8}$$/수식$$\n" \
              "에서 $$수식$${c9}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${exp_3}$$/수식$$\n" \
              "$$수식$$=` {c10}$$/수식$$\n" \
              "$$수식$$=` {c11}$$/수식$$\n" \
              "$$수식$$=` {c12}$$/수식$$\n" \
              "$$수식$$=` {c13} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A = np.random.randint(1, 10)
        B = 2 * A
        C = A * A
        D = 2 * B
        E = np.random.randint(10, 100)
        F = E // D
        H, L = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        G = F - H + 1
        I = L - 2
        K = F * (pow(H, 2) + I*F)
        if 0 not in [F, G, I, K] and abs(E) % abs(D) == 0 and abs(K) < 100:
            break

    exp_1 = ' ( x %sy  )^2 `-`  ( x %sy  )^2 `=` %d' \
            '' % (int_str_converter(A, False, True), int_str_converter(-A, False, True), E)
    exp_2 = ' ( x `-` 1  )  ( y `-` 1  ) `=` %d' % (G)
    exp_3 = 'x^{3}y %sx^{2}y^{2} `+` xy^3' % (int_str_converter(L, False, True))

    c1 = ' ( x %sy  )^2 `-`  ( x %sy  )^2' \
            '' % (int_str_converter(A, False, True), int_str_converter(-A, False, True))
    c2 = 'x^2 %sxy %sy^2 `-`  ( x^2 %sxy %sy^2  )' \
         '' % (int_str_converter(B, False, True), int_str_converter(C, False, True),
               int_str_converter(-B, False, True), int_str_converter(C, False, False))
    c3 = '%sxy `=` %d' % (int_str_converter(D, True, True), C)
    c4 = 'xy `=` %d' % (F)
    c5 = ' ( x `-` 1  )  ( y `-` 1  )'
    c6 = 'xy `-` x `-` y `+` 1'
    c7 = 'xy `-`  ( x `+` y  ) `+` 1'
    c8 = '%d `-`  ( x `+` y  ) `+` 1 `=` %d' % (F, G)
    c9 = 'x `+` y `=` %d' % (H)
    c10 = 'xy  ( x^2 %sxy `+` y^2  )' % (int_str_converter(L, False, True))
    c11 = 'xy  ( x^2 `+` 2xy `+` y^2 %sxy `-` 2xy  )' % (int_str_converter(L, False, True))
    c12 = 'xy  {  ( x `+` y  )^2 %sxy  }' % (int_str_converter(I, False, True))
    b1, b2 = [' ( ', '  ) '] if H < 0 else ['', '']
    b3, b4 = [' { ', '  } '] if H < 0 else [' ( ', '  ) ']
    c13 = '%d `TIMES` %s %s%d%s^2 %s `TIMES` %d %s' \
          '' % (F, b3, b1, H, b2, int_str_converter(I, False, False), F, b4)
    cor_text = K

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3)
    answer = answer.format(cor_text=cor_text)
    comment = comment.format(exp_3=exp_3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, c9=c9, c10=c10,
                             c11=c11, c12=c12, c13=c13, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-335
def factorization312_Stem_285():
    stem = "$$수식$${exp_1}$$/수식$$을 계산하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$, $$수식$${c2}$$/수식$$로 치환하면\n" \
              "$$수식$${c3}$$/수식$$, $$수식$${c4}$$/수식$$\n" \
              "(주어진 식)\n" \
              "$$수식$$=` {c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$$=` {cor_text}$$/수식$$\n\n"

    while True :
        X, Y = np.random.choice([2, 3, 5, 6, 7], 2, False)
        Z = X * Y
        W = 4 * (X - 1)
        V = np.random.randint(1, 10)
        ans_dict = {Y : Y,
                    math.sqrt(X) : 'sqrt {%d}' % (X),
                    X * math.sqrt(X): '%d sqrt {%d}' % (X, X),
                    W * math.sqrt(Y): '%d sqrt {%d}' % (W, Y),
                    V * math.sqrt(Z): '%d sqrt {%d}' % (V, Z)}
        if len(ans_dict) == 5 :
            break


    c1 = 'sqrt{%d} `+` sqrt {%d} `+` sqrt {%d} `-` 1' % (Z, Y, X)
    c2 = 'sqrt{%d} `+` sqrt {%d} `-` sqrt {%d} `+` 1' % (Z, Y, X)
    exp_1 = ' ( %s  ) ^2 `-`  ( %s  ) ^2' % (c1, c2)
    c1 += ' `=` A'
    c2 += ' `=` B'
    c3 = 'A `+` B `=` 2  ( sqrt {%d} `+` sqrt {%d}  )' % (Z, Y)
    c4 = 'A `-` B `=` 2  ( sqrt {%d} `-` 1  )' % (X)
    c5 = 'A^2 `-` B^2'
    c6 = ' ( A `+` B  )  ( A `-` B  )'
    c7 = '4  ( sqrt {%d} `+` sqrt {%d}  )  ( sqrt {%d} `-` 1  )' % (Z, Y, X)
    c8 = '4 sqrt {%d}  ( sqrt {%d} `+` 1  )  ( sqrt {%d} `-` 1  )' % (Y, X, X)
    cor_text = '%d sqrt {%d}' % (W, Y)

    ans_keys = sorted(list(ans_dict.keys()))
    answers = [ans_dict.get(k) for k in ans_keys]
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-336
def factorization312_Stem_286():
    stem = "$$수식$${exp_1}$$/수식$$, $$수식$${exp_2}$$/수식$$, $$수식$${exp_3}$$/수식$$, $$수식$${exp_4}$$/수식$$이고, " \
           "$$수식$${exp_5}$$/수식$$, $$수식$${exp_6}$$/수식$$일 때, " \
           "$$수식$${exp_7}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {cor_num}\n"
    comment = "(해설)\n" \
              "$$수식$${exp_7}$$/수식$$" \
              "$$수식$$=` {c1}$$/수식$$\n" \
              "$$수식$$=` {c2}$$/수식$$\n" \
              "$$수식$$=` {c3}$$/수식$$\n" \
              "$$수식$$=` {c4}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$\n" \
              "$$수식$$=` {c6}$$/수식$$\n" \
              "$$수식$$=` {c7}$$/수식$$\n" \
              "$$수식$${c8}$$/수식$$\n" \
              "$$수식$$=` {c9}$$/수식$$\n" \
              "$$수식$$=` {c10}$$/수식$$\n" \
              "이므로\n" \
              "(주어진 식)$$수식$$`=` {c11} `=` {cor_text}$$/수식$$\n\n"

    while True :
        A, B, C, D = np.random.randint(1, 10, 4) * np.reshape(np.random.choice([-1, 1], 4), -1)
        E = A * A - 4 * B
        F = C * C - 4 * D
        G = E * F
        nums = np.random.choice(np.arange(1, 16), 4)
        Z, Y, X, W = nums * np.reshape(nums, -1)
        if G not in [Z, Y, X, W] and 0 not in [E, F] and 0 < G < 301 :
            break

    exp_1 = 'a `+` b `=` %d' % (A)
    exp_2 = 'ab `=` %d' % (B)
    exp_3 = 'x `+` y `=` %d' % (C)
    exp_4 = 'xy `=` %d' % (D)
    exp_5 = 'p `=` ax `+` by'
    exp_6 = 'q `=` bx `+` ay'
    exp_7 = ' ( p `-` q  )^2'

    c1 = ' {  ( ax `+` by  ) `-`  ( bx `+` ay  )  }^2'
    c2 = ' {  ( a `-` b  ) x `-`  ( a `-` b  ) y  } ^2'
    c3 = ' {  ( a `-` b  )  ( x `-` y  )  } ^2'
    c4 = ' ( a `-` b  ) ^2  ( x `-` y  ) ^2'
    c5 = ' ( a `-` b  ) ^2'
    c6 = ' ( a `+` b  ) ^2 `-` 4ab'
    b1, b2 = [' ( ', '  ) '] if B < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if A < 0 else ['', '']
    c7 = '%s%d%s^2 `-` 4 `TIMES` %s%d%s `=` %d' % (b3, A, b4, b1, B, b2, E)
    c8 = ' ( x `-` y  )^2'
    c9 = ' ( x `+` y  )^2 `-` 4xy'
    b1, b2 = [' ( ', '  ) '] if D < 0 else ['', '']
    b3, b4 = [' ( ', '  ) '] if C < 0 else ['', '']
    c10 = '%s%d%s^2 `-` 4 `TIMES` %s%d%s `=` %d' % (b3, C, b4, b1, D, b2, F)
    b1, b2 = [' ( ', '  ) '] if F < 0 else ['', '']
    c11 = '%d `TIMES` %s%d%s' % (E, b1, F, b2)
    cor_text= G

    answers = sorted([Z, Y, X, G, W])
    a1, a2, a3, a4, a5 = answers
    cor_num = multiple_choice_nums.get(answers.index(cor_text))

    stem = stem.format(exp_1=exp_1, exp_2=exp_2, exp_3=exp_3, exp_4=exp_4, exp_5=exp_5, exp_6=exp_6, exp_7=exp_7,
                       a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(cor_num=cor_num)
    comment = comment.format(exp_7=exp_7, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5,
                             c6=c6, c7=c7, c8=c8, c9=c9, c10=c10, c11=c11, cor_text=cor_text)

    return stem, answer, comment


# 3-1-2-337
def factorization312_Stem_287():
    stem = "$$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$ 일 때,\n" \
           "$$수식$${stem3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$의 각 변을 더하면\n" \
              "$$수식$${com1}$$/수식$$이므로 $$수식$${com2}$$/수식$$\n" \
              "$$수식$${stem3}$$/수식$$\n" \
              "$$수식$$=` {com3}$$/수식$$\n" \
              "$$수식$$=` {com4}$$/수식$$\n" \
              "$$수식$$=` {com5}$$/수식$$\n\n"

    while True :
        A, B = np.random.choice(np.arange(1, 10), 2)
        C = A + B
        D = C**2 + A**2 + B**2
        if abs(D) < 100 :
            break

    stem1 = 'b `-` c `=` %d' % A
    stem2 = 'c `-` a `=` %d' % B
    stem3 = '2a^{2} `+` 2b^{2} `+` 2c^{2} `-` 2ab `-` 2bc `-` 2ca'

    com1 = 'b `-` a `=` %d' % C
    com2 = 'a `-` b `=` -%d' % C
    com3 = 'a^{2} `-` 2ab `+` b^{2} `+` b^{2} `-` 2bc `+` c^{2} `+` c^{2} `-` 2ca `+` a^ {2}'
    com4 = ' ( a`-`b  ) ^{2} `+`  ( b`-`c  ) ^{2} `+`  ( c `-` a  ) ^{2}'
    com5 = ' ( -%d  ) ^{2} `+` %d^{2} `+` %d^{2} `=` %d' % (C, A, B, D)


    n = np.random.choice([1, 2, 3, 5, 10], 1)[0]
    num_list = [i for i in range(D-4*n, (D+4*n)+1, n)]
    idx = np.random.choice([0, 1, 2, 3, 4], 1)[0]
    num_list = num_list[idx:idx+5]
    num_list.sort()

    K = num_list.index(D)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, qu_ep1=num_list[0], qu_ep2=num_list[1], qu_ep3=num_list[2], qu_ep4=num_list[3], qu_ep5=num_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, stem2=stem2, stem3=stem3, com1=com1, com2=com2, com3=com3,com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-338
def factorization312_Stem_288():
    stem = "$$수식$${stem1}$$/수식$$ 일 때, $$수식$${stem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com0}$$/수식$$ 이므로\n" \
              "$$수식$${stem2}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "$$수식$$=` {com3}$$/수식$$\n\n"
    while True:
        A, B, C = np.random.choice(np.arange(-9, 10), 3)
        D = B * C

        if (B > 0) and (A != 0) and (B != 0) and (C != 0) and (abs(B)!=1):
            break

    stem1 = 'x^{2} %sx `-` %d `=` 0' % (int_str_converter(A, False, True), B)
    stem2 = '{x^{3} %sx^{2} %s} over {x %s}' % (int_str_converter(A, False, True), int_str_converter(D, False, False),
                                                  int_str_converter(C, False, False))
    com0 = 'x^{2} %sx `=` %d`' % (int_str_converter(A, False, True), B)
    com1 = '{x  ( x^{2} %sx`  ) %s} over {x %s}' % (int_str_converter(A, False, True), int_str_converter(D, False, False), int_str_converter(C, False, False))
    com2 = '{%sx %s} over {x %s}' % (int_str_converter(B, True, True), int_str_converter(D, False, False), int_str_converter(C, False, False))
    com3 = '{%s  ( x %s  )} over {x %s} `=` %s' % (int_str_converter(B, True, False), int_str_converter(C, False, False), int_str_converter(C, False, False), int_str_converter(B, True, False))



    stem = stem.format(stem1=stem1, stem2=stem2)
    answer = answer.format(asw1=B)
    comment = comment.format(com0=com0, stem2=stem2,com1=com1, com2=com2, com3=com3)

    return stem, answer, comment


# 3-1-2-339
def factorization312_Stem_289():
    stem = "$$수식$${stem1}$$/수식$$ 일 때, $$수식$${stem2} `+` {stem3}$$/수식$${josa} 간단히 하시오. (단, $$수식$${stem4}$$/수식$$)\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$에서 $$수식$${com1}$$/수식$$ 이므로\n" \
              "$$수식$${stem2} `+` {stem3}$$/수식$$\n" \
              "$$수식$$=` {com2} `+` {com3}$$/수식$$\n" \
              "$$수식$$=` {com4} `+` {com5}$$/수식$$\n" \
              "$$수식$$=` {com6} `+` {com7}$$/수식$$\n" \
              "이때 $$수식$${stem4}$$/수식$$에서 $$수식$${com8}$$/수식$$, $$수식$${com9}$$/수식$$이므로\n" \
              "(주어진 식)$$수식$$ `=` {com10}$$/수식$$\n\n"
    while True:
        A, B, = np.random.choice(np.arange(1, 10), 2)
        D = A ** 2
        C = 2 * A
        F = B ** 2
        E = 2 * B
        H = -2 * C
        I = E - C
        J = F - D
        K = A + B
        if (H != 0) and (I != 0) and (J != 0):
            break

    josa = '을' if int(str(J)[-1]) in have_jongsung_num else '를'
    stem1 = 'sqrt {x} `=` a `+` %d' % A
    stem2 = 'sqrt {x %sa}' % int_str_converter(H, False, True)
    stem3 = 'sqrt {x %sa %s}' % (int_str_converter(I, False, True), int_str_converter(J, False, False))
    stem4 = '0 %s a %s %d`' % (right, right, A)

    com1 = 'x`=` ( a `+` %d  ) ^{2} `' % A
    com2 = 'sqrt { ( a `+` %d  ) ^{2} %sa}' % (A, int_str_converter(H, False, True))
    com3 = 'sqrt { ( a `+` %d  ) ^{2} %sa %s}' % (A, int_str_converter(I, False, True), int_str_converter(J, False, False))
    com4 = 'sqrt {a^{2} `-` %da `+` %d}' % (C, D)
    com5 = 'sqrt {a^{2} `+` %da `+` %d}' % (E, F)
    com6 = 'sqrt { ( a `-` %d  ) ^{2}}' % A
    com7 = 'sqrt { ( a `+` %d  ) ^{2}}' % B
    com8 = 'a `-` %d %s 0`' % (A, right)
    com9 = 'a `+` %d %s 0' % (B, left)
    com10 = '%d `-` a `+` a `+` %d `=` %d' % (A, B, K)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, stem4=stem4, josa=josa)
    answer = answer.format(asw1=K)
    comment = comment.format(stem1=stem1, stem2=stem2, stem3=stem3, stem4=stem4,
                             com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7, com8=com8, com9=com9, com10=com10)

    return stem, answer, comment


# 3-1-2-340
def factorization312_Stem_290():
    stem = "$$수식$${stem1}$$/수식$$일 때, $$수식$${stem2}$$/수식$$의 값을 계산하면 $$수식$${stem3}$$/수식$$이다. " \
           "이때 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$에서 $$수식$${com1}$$/수식$$\n" \
              "양변을 제곱하면 $$수식$${com2}$$/수식$$\n" \
              "$$수식$${com3}$$/수식$$이므로 $$수식$${com4}$$/수식$$\n" \
              "$$수식$${com5}$$/수식$$\n" \
              "$$수식$$=` {com6}$$/수식$$\n" \
              "$$수식$$=` {com7}$$/수식$$\n" \
              "$$수식$$=` {com8}$$/수식$$\n" \
              "따라서 $$수식$${com9}$$/수식$$, $$수식$${com10}$$/수식$$이므로\n" \
              "$$수식$${com11}$$/수식$$\n\n"

    while True:
        A = np.random.choice(np.arange(2, 10), 1)[0]
        B = np.random.choice(np.arange(-9, 10), 1)[0]
        C = np.random.choice([2, 3, 5, 6, 7, 10], 1)[0]
        D = A ** 2
        F = B ** 2
        E = -2 * B * A
        G = C - F
        I = int(E / A)
        J = int(G / A)
        P = B * (J + 1)
        Q = J + 1
        K = P + Q
        if (B != 0) and (get_gcd(abs(E), A) == A) and (get_gcd(abs(G), A) == A) \
                and (P != 0) and (Q != 0) and abs(K) < 100 and abs(P) < 100 and abs(Q) < 100:
            break

    stem1 = '%dx `=` %s `+` sqrt {%d}' % (A, int_str_converter(B, True, False), C)
    stem2 = '%dx^{3} %sx^{2} `+` %dx' % (D, int_str_converter(E, False, True), A)
    stem3 = 'a `+` b sqrt {%d} `' % C

    com1 = '%sx %s `=` sqrt {%d}' % (int_str_converter(A, True, True), int_str_converter(-1*B, False, False), C)
    com2 = '%dx^{2} %sx %s `=` %d' % (D, int_str_converter(E, False, True), int_str_converter(F, False, False), C)
    com3 = '%dx^{2} %sx `=` %s`' % (D, int_str_converter(E, False, True), int_str_converter(G, True, False))
    com4 = '%dx^{2} %sx `=` %s' % (A, int_str_converter(I, False, True), int_str_converter(J, True, False))
    com5 = '%dx^{3} %sx ^{2} `+` %dx' % (D, int_str_converter(E, False, True), A)
    com6 = '%dx  ( %dx ^{2} %sx `+` 1  )' % (A, A, int_str_converter(I, False, True))
    com7 = ' ( `%s `+` sqrt {%d}  ) ( %s `+` 1  )' % (int_str_converter(B, True, False), C, int_str_converter(J, True, False))
    com8 = '%s %s sqrt {%d}' % (int_str_converter(P, True, False), int_str_converter(Q, False, False), C)

    com9 = 'a `=` %d' % P
    com10 = 'b `=` %d' % Q
    com11 = 'a `+` b `=` %d' % K


    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, box1=box_1)
    answer = answer.format(asw1=int(K))
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6,
                             com7=com7,com8=com8, com9=com9, com10=com10, com11=com11)

    return stem, answer, comment


# 3-1-2-341
def factorization312_Stem_291():
    stem = "$$수식$${stem1}$$/수식$$이고 $$수식$${stem2}`=`{stem3}$$/수식$$일 때, $$수식$${stem4}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem2}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "$$수식$$=` {com3}$$/수식$$\n" \
              "$$수식$$=` {stem3}$$/수식$$\n" \
              "에서 $$수식$${com4}$$/수식$$이므로 $$수식$${com5}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${stem4}$$/수식$$\n" \
              "$$수식$$=` {com6}$$/수식$$\n" \
              "$$수식$$=` {com7}$$/수식$$\n" \
              "$$수식$$=` {com8}$$/수식$$\n\n"

    while True:
        A = np.random.randint(1, 15, 1)[0]
        B = np.random.randint(1, 10, 1)[0] * np.reshape(np.random.choice([-1,1],1), -1)[0]
        C = np.random.randint(10, 100, 1)[0]
        D = int(C/A)
        E = int(D - B)
        a_e = get_gcd(A, abs(E))
        if (get_gcd(C, A) == A) and (D != B) and (a_e != 1):
            break


    stem1 = 'x `+` y `=` %s' % int_str_converter(A, True, False)
    stem2 = 'x^{2}y `+` xy^{2} %sx %sy' % (int_str_converter(B, False, True), int_str_converter(B, False, True))
    stem3 = int_str_converter(C, True, False)
    stem4 = '{x^{2} `-` y^{2}} over {x^{2}y `-` xy^{2}}'

    com1 = 'xy  ( x `+` y  ) %s  ( x `+` y  )' % int_str_converter(B, False, True)
    com2 = ' ( x `+` y  ) ( xy %s  )' % int_str_converter(B, False, True)
    com3 = '%d  ( xy %s  )' % (A, int_str_converter(B, False, False))
    com4 = 'xy %s `=` %d' % (int_str_converter(B, False, False), D)
    com5 = 'xy `=` %d' % E
    com6 = '{ ( x `+` y  ) ( x `-` y  )} over {xy  ( x `-` y  )}'
    com7 = '{x `+` y} over {xy}'
    s1 = '-' if A * E < 0 else ''
    if abs(E) == a_e:
        K = '%s %s' % (s1, A//a_e)
    else:
        K = '%s {%s} over {%d} ' % (s1, A//a_e, abs(E)//a_e)
    com8 = '%s {%s} over {%d} `=`%s' % (s1, A, abs(E), K)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, stem4=stem4, box_1=box_1)
    answer = answer.format(asw1=K)
    comment = comment.format(stem2=stem2, stem3=stem3, stem4=stem4, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7, com8=com8)

    return stem, answer, comment


# 3-1-2-342
def factorization312_Stem_292():
    stem = "두 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 " \
           "$$수식$${stem1}$$/수식$$, $$수식$${stem2}$$/수식$$일 때, 다음 식의 값을 구하시오. " \
           "(단, $$수식$${stem3}$$/수식$$)\n" \
           "$$수식$${stem4}$$/수식$$ \n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem4}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "$$수식$$=` {com3}$$/수식$$\n" \
              "이때\n" \
              "$$수식$${com4} `=` {com5}$$/수식$$\n" \
              "이므로\n" \
              "(주어진 식)$$수식$$ `=` {com6}$$/수식$$\n\n"

    while True:
        A, K = np.random.randint(1, 10, 2)
        C = K ** 2
        s1 = '-' if (A-K)*(A+K)*2 < 0 else ''
        B = ''
        a_k = get_gcd(((A-K)*(A+K)), 2)
        if s1 == '-':
            if a_k == 2:
                B = ' ( -%d  )' % (((A-K)*(A+K))//2)
            else:
                B = ' (- {%d} over {%d}  )' % (((A-K)*(A+K)), 2)
        else:
            if a_k == 2:
                B = '%d' % (((A-K)*(A+K))//2)
            else:
                B = '{%d} over {%d}' % (((A-K)*(A+K)), 2)


        if (A > K) and (B != '') and ( ((A % 2 == 0) and (K % 2 == 0)) or ((A % 2 != 0) and (K % 2 != 0)) ):
            break

    stem1 = 'a `+` b `=` %d' % A
    stem2 = 'ab `=` %s' % B
    stem3 = '0 %s a %s b' % (right, right)
    stem4 = '{1} over {a} `TIMES` sqrt {a^{4} `+` a ^{2}b^{2}}'

    com1 = '{1} over {a} `TIMES` sqrt {a^{2}  ( a^{2} `+` b^{2}  )}'
    com2 = '{1} over {a} `TIMES` a sqrt {a^{2} `+` b^{2}}'
    com3 = 'sqrt {a^{2} `+` b^{2}}'
    com4 = 'a^{2} `+` b^{2} `=`  ( a `+` b  ) ^{2} `-` 2ab'
    com5 = '%d^{2} `-` 2 `TIMES` %s `=` %d' % (A, B, C)
    com6 = 'sqrt {%d} `=` %d' % (C, K)

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, stem4=stem4)
    answer = answer.format(asw1=K)
    comment = comment.format(stem4=stem4, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6)

    return stem, answer, comment


# 3-1-2-345
def factorization312_Stem_293():
    stem = "부피가 $$수식$${stem1}$$/수식$$인 직육면체 밑면의 가로, 세로의 길이가 " \
           "각각 $$수식$${stem2}$$/수식$$, $$수식$${stem3}$$/수식$$일 때, 이 직육면체의 겉넓이를 구하면?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "$$수식$$=` {com3}$$/수식$$\n" \
              "이므로 직육면체의 높이는 $$수식$${com4}$$/수식$$\n" \
              "따라서 겉넓이는\n" \
              "$$수식$${com5} `+` {com6}$$/수식$$\n" \
              "$$수식$$=` {com7} `+` {com8}$$/수식$$\n" \
              "$$수식$$=` {com9}$$/수식$$\n" \
              "$$수식$$=` {com10}$$/수식$$\n\n"

    while True:
        A, B, C, V, W, X = np.random.randint(1, 10, 6) * np.reshape(np.random.choice([-1, 1], 6), -1)
        D = B + C
        E = B * C
        F = A * D
        G = A * E
        J = A * B
        N = A * C
        O = 2 * A
        P = B + D + C
        Q = J + N
        R = 2 * O
        S = 2 * P
        T = 2 * Q
        U = 2 * E
        Y = 2 * V
        Z = 2 * W
        ZZ = 2 * X
        if (D!=0) and (F!=0) and (O!=0) and (P!=0) and (Q!=0) and (S!=0) and (T!=0) and (U!=0):
            break

    stem1 = 'x ^{3} %sx^{2} %sx^{2} y %sx %sxy %sy' % (int_str_converter(D, False, True),
                                                         int_str_converter(A, False, True),
                                                         int_str_converter(E, False, True),
                                                         int_str_converter(F, False, True),
                                                         int_str_converter(G, False, True))
    stem2 = 'x %sy' % int_str_converter(A, False, True)
    stem3 = 'x %s' % int_str_converter(B, False, False)

    com1 = 'x  ( x^{2} %sx %s  ) %sy  ( x^{2} %sx %s  )' % (int_str_converter(D, False, True),
                                                    int_str_converter(E, False, False),
                                                    int_str_converter(A, False, True),
                                                    int_str_converter(D, False, True),
                                                    int_str_converter(E, False, False))
    com2 = ' ( x %sy  ) ( x ^{2} %sx %s  )' % (int_str_converter(A, False, True),
                                       int_str_converter(D, False, True),
                                       int_str_converter(E, False, False))
    com3 = ' ( x %sy  ) ( x %s  ) ( x %s  )' % (int_str_converter(A, False, True),
                                    int_str_converter(B, False, False),
                                    int_str_converter(C, False, False))
    com4 = 'x %s' % int_str_converter(C, False, False)
    com5 = '2  {  ( x %sy  ) ( x %s  ) `+`  ( x %s  ) ( x %s  )' % (int_str_converter(A, False, True),
                                                        int_str_converter(B, False, False),
                                                        int_str_converter(B, False, False),
                                                        int_str_converter(C, False, False))
    com6 = ' ( x %s  ) ( x %sy  )  }' % (int_str_converter(C, False, False),
                                      int_str_converter(A, False, True))
    com7 = '2  {  ( x^{2} %sx %sxy %sy  ) `+`  ( x^{2} %sx %s  )' % (int_str_converter(B, False, True),
                                                                   int_str_converter(A, False, True),
                                                                   int_str_converter(J, False, True),
                                                                   int_str_converter(D, False, True),
                                                                   int_str_converter(E, False, False))
    com8 = ' ( x^{2} %sxy %sx %sy  )  }' % (int_str_converter(A, False, True),
                                              int_str_converter(C, False, True),
                                              int_str_converter(N, False, True))

    com9 = '2  ( 3x^{2} %sxy %sx %sy %s  )' % (int_str_converter(O, False, True),
                                            int_str_converter(P, False, True),
                                            int_str_converter(Q, False, True),
                                            int_str_converter(E, False, False))
    com10 = '6x^{2} %sxy %sx %sy %s' % (int_str_converter(R, False, True),
                                         int_str_converter(S, False, True),
                                         int_str_converter(T, False, True),
                                         int_str_converter(U, False, False))

    qu_eps = []
    qu_eps.append('3x^{2} %sxy %sx %sy' % (int_str_converter(Q, False, True),
                                            int_str_converter(P,False, True),
                                            int_str_converter(Q,False,True)))
    qu_eps.append('6x^{2} %sxy %s' % (int_str_converter(O, False, True),
                                       int_str_converter(P, False, False)))
    qu_eps.append('6x^{2} %sxy %sx %sy %s' % (int_str_converter(R, False, True),
                                               int_str_converter(S, False, True),
                                               int_str_converter(T, False,True),
                                               int_str_converter(U, False, False)))
    qu_eps.append('x^{3} %sx^{2} %syx^{2} %s' % (int_str_converter(V, False, True),
                                                    int_str_converter(W, False, True),
                                                    int_str_converter(X*-1, False, False)))
    qu_eps.append('2x^{3} %sx^{2} %syx^{2} %s' % (int_str_converter(Y, False, True),
                                                     int_str_converter(Z, False, True),
                                                     int_str_converter(ZZ*-1, False, True)))

    asw = qu_eps[2]
    np.random.shuffle(qu_eps)

    for i, qu_ep in enumerate(qu_eps):
        if qu_ep == asw:
            K = i

    stem = stem.format(stem1=stem1, stem2=stem2, stem3=stem3, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7, com8=com8, com9=com9, com10=com10)

    return stem, answer, comment


# 3-1-2-353
def factorization312_Stem_294():
    stem = "다음 중 $$수식$${stem1}$$/수식$$의 인수가 아닌 것은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$ \n" \
           "➁ $$수식$${qu_ep2}$$/수식$$ \n" \
           "➂ $$수식$${qu_ep3}$$/수식$$ \n" \
           "➃ $$수식$${qu_ep4}$$/수식$$ \n" \
           "➄ $$수식$${qu_ep5}$$/수식$$ \n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$의 인수는\n" \
              "$$수식$$1$$/수식$$, $$수식$${qu_ep1}$$/수식$$, $$수식$${qu_ep2}$$/수식$$, $$수식$${com1}$$/수식$$,\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$,\n" \
              "$$수식$${stem1}$$/수식$$, $$수식$$CDOTS$$/수식$$\n" \
              "따라서 $$수식$${stem1}$$/수식$$의 인수가 아닌 것은 {K}이다.\n\n"

    while True:
        A, C = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        B = np.random.randint(2, 10, 1)[0]

        if is_gcd(B, C)==True:
            break


    qu_ep1 = 'x'
    qu_ep2 = 'x %s' % int_str_converter(A, False, False)
    qu_ep3 = '%sx %s' % (int_str_converter(B, True, True), int_str_converter(C, False, False))
    qu_ep4 = 'x^{2} %sx' % int_str_converter(A * -1, False, True)
    qu_ep5 = '%sx^{2} %s' % (int_str_converter(B, True, True), int_str_converter(C, False, False))
    qu_eps = [qu_ep1, qu_ep2, qu_ep3, qu_ep4, qu_ep5]
    np.random.shuffle(qu_eps)
    com1 = '.x( x %s  ) `=` x ^{2} %sx' % (int_str_converter(A, False, False), int_str_converter(A, False, True))
    com2 = '.x( %sx %s  ) `=` %sx ^{2} %sx' % (int_str_converter(B, True, True), int_str_converter(C, False, False), int_str_converter(B, True, True), int_str_converter(C, False, True))
    com3 = ' ( x %s  ) ( %sx %s  )' % (int_str_converter(A, False, False), int_str_converter(B, True, True), int_str_converter(C, False, False))
    stem1 = 'x %s' % com3
    K = 0
    for i, qu_ep in enumerate(qu_eps):
        if qu_ep == qu_ep4:
            K = i

    stem = stem.format(stem1=stem1, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw1=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, qu_ep1=qu_ep1, qu_ep2=qu_ep2, com1=com1, com2=com2, com3=com3, K=multiple_choice_nums[K])

    return stem, answer, comment


# 3-1-2-354
def factorization312_Stem_295():
    stem = "다음 중 $$수식$${stem1}$$/수식$$의 인수가 아닌 것은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$의 인수는\n" \
              "$$수식$$1$$/수식$$, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$${com1}$$/수식$$, $$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$, $$수식$${com4}$$/수식$$, $$수식$${com5}$$/수식$$,\n" \
              "$$수식$${qu_ep1}$$/수식$$, $$수식$${qu_ep2}$$/수식$$, $$수식$${qu_ep3}$$/수식$$, $$수식$${qu_ep4}$$/수식$$, $$수식$$CDOTS$$/수식$$ \n" \
              "따라서 $$수식$${stem1}$$/수식$$의 인수가 아닌 것은 {K}이다.\n\n"

    A = np.random.randint(1, 100, 1)[0] * np.reshape(np.random.choice([-1, 1], 1), -1)[0]

    stem1 = 'a^{2}b  ( b %s  )' % int_str_converter(A, False, False)
    qu_ep1 = 'ab^{2}'
    qu_ep2 = 'a^{2}  ( b %s  )' % int_str_converter(A, False, False)
    qu_ep3 = 'ab  ( b %s  )' % int_str_converter(A, False, False)
    qu_ep4 = 'a^{2}b  ( b %s  )' % int_str_converter(A, False, False)
    e_qu_ep = 'a^{2} b'
    qu_eps = [qu_ep1, qu_ep2, qu_ep3, qu_ep4, e_qu_ep]
    np.random.shuffle(qu_eps)

    com1 = 'b %s' % int_str_converter(A, False, False)
    com2 = 'a^{2}'
    com3 = 'ab'
    com4 = 'a  ( b %s  )' % int_str_converter(A, False, False)
    com5 = 'b  ( b %s  )' % int_str_converter(A, False, False)

    K = 0
    for i, qu_ep in enumerate(qu_eps):
        if qu_ep == e_qu_ep:
            K = i

    stem = stem.format(stem1=stem1, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw1=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, qu_ep1=qu_ep1, qu_ep2=qu_ep2, qu_ep3=qu_ep3, qu_ep4=qu_ep4,
                             com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, K=multiple_choice_nums[K])

    return stem, answer, comment


# 3-1-2-355
def factorization312_Stem_296():
    stem = "다음 중 $$수식$${stem1}$$/수식$${josa} 인수로 갖지 않는 것은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "{K} $$수식$${qu_ep4_1}$$/수식$$이므로 $$수식$${stem1}$$/수식$${josa} 인수로 갖지 않는다.\n\n"

    A = np.random.randint(1, 100, 1)[0] * np.reshape(np.random.choice([-1, 1], 1), -1)[0]
    B = 2 * A

    josa = '을' if int(str(A)[-1]) in have_jongsung_num else '를'
    qu_ep1 = 'a %s' % int_str_converter(A, False, False)
    qu_ep2 = 'a  ( a %s  )' % int_str_converter(A, False, False)
    qu_ep3 = ' ( a %s  ) ( a %s  )' % (int_str_converter(A, False, False), int_str_converter(-1 * A, False, False))
    qu_ep4 = ' ( a %s  ) %s' % (int_str_converter(A, False, False), int_str_converter(A, False, False))
    qu_ep5 = ' ( a %s  ) ^{2}' % int_str_converter(A, False, False)

    qu_eps = [qu_ep1, qu_ep2, qu_ep3, qu_ep4, qu_ep5]
    np.random.shuffle(qu_eps)
    k = ''
    for n, qu_ep in enumerate(qu_eps):
        if qu_ep == qu_ep4:
            K = multiple_choice_nums[n]

    qu_ep4_1 = '%s `=` a %s' % (qu_ep4, int_str_converter(B, False, False))
    stem = stem.format(stem1=qu_ep1, josa=josa, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(asw1 = K)
    comment = comment.format(K=K, qu_ep4_1=qu_ep4_1, stem1=qu_ep1, josa=josa)

    return stem, answer, comment


# 3-1-2-356
def factorization312_Stem_297():
    stem = "$$수식$${stem1}$$/수식$$의 인수를 보기에서 모두 고른 것은?\n" \
           "㈀ $$수식$${stem2}$$/수식$$\n" \
           "㈁ $$수식$${stem3}$$/수식$$\n" \
           "㈂ $$수식$${stem4}$$/수식$$\n" \
           "㈃ $$수식$${stem5}$$/수식$$\n" \
           "➀ {qu_ep1}\n" \
           "➁ {qu_ep2}\n" \
           "➂ {qu_ep3}\n" \
           "➃ {qu_ep4}\n" \
           "➄ {qu_ep5}\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$의 인수는 보기 중\n" \
              "$$수식$${stem3}$$/수식$$, $$수식$${stem1}$$/수식$$ \n\n"

    while True:
        A, B, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        if (B != C) and (is_gcd(A, B) == True) and (is_gcd(A, C) == True):
            break

    stem1 = '%s  ( x %s  ) ( x %s  )' % (int_str_converter(A, True, True), int_str_converter(B, False, False), int_str_converter(C, False, False))
    stem2 = '%sx %s' % (int_str_converter(A, True, True), int_str_converter(B, False, False))
    stem3 = ' ( x %s  ) ( x %s  )' % (int_str_converter(B, False, False), int_str_converter(C, False, False))
    stem4 = '%sx %s' % (int_str_converter(A, True, True), int_str_converter(C, False, False))
    stems = []
    stems = [stem1, stem2, stem3, stem4]
    np.random.shuffle(stems)

    cor_asws = []

    for i, s in enumerate(stems):
        if s == stem3:
            cor_asws.append(i)
        elif s == stem1:
            cor_asws.append(i)

    cor_asws = sorted(cor_asws)

    K = 0
    qu_list = []

    qu_eps = [[0, 1], [0, 2], [1, 2], [1, 3], [2, 3]]

    for i, qu_ep in enumerate(qu_eps):
        qu_list.append('%s, %s' % (multiple_choice_jaem_3[qu_ep[0]], multiple_choice_jaem_3[qu_ep[1]]))
        if qu_ep == cor_asws:
            K = i

    stem = stem.format(stem1=stem1, stem2=stems[0], stem3=stems[1], stem4=stems[2], stem5=stems[3], qu_ep1=qu_list[0], qu_ep2=qu_list[1], qu_ep3=qu_list[2], qu_ep4=qu_list[3], qu_ep5=qu_list[4])
    answer = answer.format(asw_num=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, stem3=stem3)

    return stem, answer, comment


# 3-1-2-358
def factorization312_Stem_298():
    stem = "$$수식$${stem1}$$/수식$$의 인수를 보기에서 모두 고른 것은?\n" \
           "㈀ $$수식$${bogi1}$$/수식$$\n" \
           "㈁ $$수식$${bogi2}$$/수식$$\n" \
           "㈂ $$수식$${bogi3}$$/수식$$\n" \
           "㈃ $$수식$${bogi4}$$/수식$$\n" \
           "➀ {qu_ep1}\n" \
           "➁ {qu_ep2}\n" \
           "➂ {qu_ep3}\n" \
           "➃ {qu_ep4}\n" \
           "➄ {qu_ep5}\n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "따라서 보기 중 인수는 {cor_qu_ep}이다.\n\n"
    while True:
        A, B, C = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        D = B + A * C
        if (abs(A) != 1)and (B != 1) and (C != 0) and (C != -1*C) and (D != C) and (D != 0) :
            break


    stem1 = '%s  ( x %s  )^{2} %s  ( x %s  )' % (int_str_converter(A, True, True), int_str_converter(C, False, False), int_str_converter(B, False, True), int_str_converter(C, False, False))
    bogi1 = '-x %s' % int_str_converter(C, False, False)
    bogi2 = 'x %s' % int_str_converter(-1 * C, False, False)
    bogi3_c = 'x %s' % int_str_converter(C, False, False)
    bogi4_c = '%sx %s' % (int_str_converter(A, True, True), int_str_converter(D, False, False))
    bogi_list = [bogi1, bogi2, bogi3_c, bogi4_c]
    com1 = ' ( x %s  ) { %s  ( x %s  )%s  }' % (int_str_converter(C, False, False), int_str_converter(A, True, False), int_str_converter(C, False, False), int_str_converter(B, False, False))
    com2 = ' ( x %s  ) ( %sx %s  )' % (int_str_converter(C, False, False), int_str_converter(A, True, True), int_str_converter(D, False, False))
    np.random.shuffle(bogi_list)
    cor_asw = []
    answers = ['㈀, ㈁', '㈀, ㈂', '㈀, ㈃', '㈁, ㈂', '㈁, ㈃', '㈂, ㈃']

    qu_eps = []


    cor_qu_ep = ''
    for n, bogi in enumerate(bogi_list):
        if (bogi == bogi3_c) or (bogi == bogi4_c):
            cor_asw.append(multiple_choice_jaem_3[n])

    cor_line = ', '.join(sorted(cor_asw))
    while True:
        qu_eps = sorted(list(np.random.choice(answers, 5, False)))
        if cor_line in qu_eps:
            break



    K = 0
    qu_ep_list = []
    for i, qu_ep in enumerate(qu_eps):
        qu_ep_list.append(qu_ep)
        if cor_line == qu_ep:
            K = multiple_choice_nums[i]
            cor_qu_ep = qu_ep

    stem = stem.format(stem1=stem1, bogi1=bogi_list[0], bogi2=bogi_list[1], bogi3=bogi_list[2], bogi4=bogi_list[3],
                       qu_ep1=qu_ep_list[0], qu_ep2=qu_ep_list[1], qu_ep3=qu_ep_list[2], qu_ep4=qu_ep_list[3], qu_ep5=qu_ep_list[4])
    answer = answer.format(asw1=K)
    comment = comment.format(cor_qu_ep=cor_qu_ep, stem1=stem1, com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-359
def factorization312_Stem_299():
    stem = "$$수식$${stem1}$$/수식$$는 $$수식$${stem2}$$/수식$$로 인수분해될 때, $$수식$$ab$$/수식$$의 값을 구하시오. (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수이다.)\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$${com3}$$/수식$$, $$수식$${com4}$$/수식$$\n" \
              "$$수식$${com5}$$/수식$$\n\n"

    while True:
        A, C = np.random.choice(np.arange(1, 10), 2, True)
        B, D = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        E = A + C
        F = B + D
        K = E * F
        if (F !=0) and (E != 0) and (A != B) and (A != D) and (C != B) and (C != D) \
                and (is_gcd(A, B) == True) and (is_gcd(C, D) == True) and (is_gcd(E, F) == True) and abs(K) < 100 :
            break

    insu1 = ' ( %sx %sy  )' % (int_str_converter(A, True, True), int_str_converter(B, False, True))
    insu2 = ' ( %sx %sy  )' % (int_str_converter(C, True, True), int_str_converter(D, False, True))
    stem1 = '%s ^{2} `+` %s %s' % (insu1, insu1, insu2)
    stem2 = '%sLEFT ( ax `+` by  )' % insu1

    com1 = '%sLEFT { %s `+` %s  }' % (insu1, insu1, insu2)
    com2 = '%sLEFT ( %sx %sy  )' % (insu1, int_str_converter(E, True, True), int_str_converter(F, False, True))
    com3 = 'a `=` %d' % E
    com4 = 'b `=` %s' % F
    com5 = 'THEREFORE~ab `=` %d' % K

    stem = stem.format(stem1=stem1, stem2=stem2)
    answer = answer.format(asw1=K)
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-360
def factorization312_Stem_300():
    stem = "이차식 $$수식$${stem1}$$/수식$$를 완전제곱식으로 인수분해할 수 있을 때, 상수 $$수식$$a$$/수식$$의 값에 대하여 $$수식$${stem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${asw1}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 식이 (다항식)² 꼴이어야 하므로\n" \
              "$$수식$${com1}$$/수식$$, $$수식$${com2}$$/수식$$\n" \
              "따라서 $$수식$${com3}$$/수식$$이므로\n" \
              "$$수식$${com4}$$/수식$$\n\n"


    while True:
        A, C, D = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        E = A - D
        F = 1 - C
        G = C * E
        if (A != D) and (abs(C) != 1) and (is_gcd(F, C)==True) and (is_gcd(F, G)==True) and abs(G) < 11 :
            break

    s1 = '-' if C < 0 else ''
    s1_1 = '-' if C < 0 else '+'
    c = '%s {1} over {%d}' % (s1, abs(C))
    stem1 = ' ( x %sa `+` 1  ) ( x `%s` %s %sa  )' \
            '' % (int_str_converter(A, False, True), s1_1, c, int_str_converter(D, False, False))
    stem2 = '%sa' % G
    com1 = '%sa `+` 1 `=` %s' % (int_str_converter(A, True, True), c)
    s2 = '-' if F * C < 0 else ''
    com2 = '%sa `=` %s {%d} over {%d}' % (int_str_converter(E, True, True), s2, abs(F), abs(C))
    s3 = '-' if F * G < 0 else ''
    f_c= '%s {%d} over {%d}' % (s3, abs(F), abs(G))
    com3 = 'a `=` %s' % f_c
    com4 = '%sa `=` %s' % (int_str_converter(G, True,True), int_str_converter(F, True, False))

    stem = stem.format(stem1=stem1, stem2=stem2)
    answer = answer.format(asw1=F)
    comment = comment.format(com1=com1, com2=com2, com3=com3, com4=com4)

    return stem, answer, comment


# 3-1-2-361
def factorization312_Stem_301():
    stem = "다음 중 완전제곱식으로 인수분해할 수 있는 것을 보기에서 모두 고른 것은? (단, $$수식$$a$$/수식$$는 상수이다.)\n" \
           "㈀ $$수식$${b1}$$/수식$$\n" \
           "㈁ $$수식$${b2}$$/수식$$\n" \
           "㈂ $$수식$${b3}$$/수식$$\n" \
           "㈃ $$수식$${b4}$$/수식$$\n" \
           "➀ {a1}\n" \
           "➁ {a2}\n" \
           "➂ {a3}\n" \
           "➃ {a4}\n" \
           "➄ {a5}\n"
    answer = "(답) : {asw_num}\n"
    comment = "(해설)\n" \
              "{M} $$수식$${com1}$$/수식$$,    {N} $$수식$${com2}$$/수식$$\n" \
              "따라서 보기 중 완전제곱식으로 인수분해할 수 있는 보기는 {M}, {N}이다.\n\n"

    while True:
        A, B, I = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        C = np.random.choice(np.arange(1, 10), 1)[0]
        J = np.random.choice(np.arange(1, 20), 1)[0]
        D = 2 * A
        E = A ** 2
        G = 2 * B * C
        H = B ** 2 * C
        k, l = np.random.choice(np.arange(1, 10), 2)
        K = k ** 2
        L = l ** 2
        if (J != I **2) and (abs(J)!=1) and (abs(I) != 1) \
                and max([abs(D), abs(E), abs(I), abs(J), abs(C), abs(G), abs(H), abs(K), abs(L)]) < 21 \
                and abs(K) != abs(L) :
            break

    c_bogi1 = 'x^{2} %sx %s' % (int_str_converter(D, False, True), int_str_converter(E, False, False))
    s1 = '`-`' if I < 0 else '`+`'
    i = '%s {1} over {%d}' % (s1, abs(I))
    e_bogi1 = 'y^{2} %sy `+` {1} over {%d}' % (i, J)
    c_bogi2 = '%sy^{2} %sy %s' % (int_str_converter(C, True, True), int_str_converter(G, False, True)
                                  , int_str_converter(H, False, False))
    e_bogi2 = '%sx^{2} %sxy %sy^{2}' % (int_str_converter(K, True,True), int_str_converter(-1* L, False, True)
                                        , int_str_converter(L, False, True))

    c1 = ' ( x %s  )^2' % (int_str_converter(A, False, False))
    c2 = '%s  ( y %s  )^2' % (int_str_converter(C, True, True), int_str_converter(B, False, False))
    ans_dict = {c_bogi1 : c1, c_bogi2 : c2, e_bogi1 : '', e_bogi2 : ''}
    bogis = list(ans_dict.keys())
    b1, b2, b3, b4 = bogis
    np.random.shuffle(bogis)
    com1, com2 = [k for k in bogis if ans_dict.get(k) != '']
    M = multiple_choice_jaem_3.get(bogis.index(com1))
    N = multiple_choice_jaem_3.get(bogis.index(com2))
    com_dict = {M : com1, N : com2}
    ans_keys = sorted(list(com_dict.keys()))
    com1, com2 = [com_dict.get(i) for i in ans_keys]
    M, N = ans_keys
    F = ', '.join(ans_keys)

    ans = ['㈀, ㈁', '㈀, ㈂', '㈀, ㈃', '㈁, ㈂', '㈁, ㈃', '㈂, ㈃']
    while True :
        answers = sorted(list(np.random.choice(ans, 5, False)))
        if F in answers :
            break

    a1, a2, a3, a4, a5 = answers
    stem = stem.format(b1=b1, b2=b2, b3=b3, b4=b4, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(asw_num=F)
    comment = comment.format(M=M, N=N, com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-362     최종 결과 값 범위 지정
def factorization312_Stem_302():
    stem = "$$수식$${stem1} `=` {stem2}$$/수식$$을 만족시키는 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오. (단, $$수식$$a{left}0$$/수식$$)\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "$$수식$${com2}$$/수식$$이므로 $$수식$${com3}$$/수식$$\n" \
              "$$수식$${com4}$$/수식$$이므로 $$수식$${com5}$$/수식$$\n" \
              "$$수식$$a{left}0$$/수식$$이므로 $$수식$${com6}$$/수식$$, $$수식$${com7}$$/수식$$\n" \
              "따라서 $$수식$${com8}$$/수식$$\n\n"

    while 1:
        B = np.random.choice(np.arange(1, 10), 1)[0]
        A = B ** 2
        C = 2 * B
        K = B * C
        if K < 100:
            break

    stem1 = 'x  ( x `+` a  ) %s' % int_str_converter(A, False, False)
    stem2 = ' ( x`+`b  )^{2}'
    com1 = '%s `=` x^{2} `+` ax %s `=` %s' % (stem1, int_str_converter(A, False, False), stem2)
    com2 = '%d `=` b^{2}' % A
    com3 = 'b `=` +-%d' % B
    com4 = 'ax `=` 2 `TIMES` x `TIMES` b'
    com5 = 'a `=` +-%d' % C
    com6 = 'a `=` %d' % C
    com7 = 'b `=` %d' % B
    com8 = 'ab `=` %d `TIMES` %d `=` %d' % (C, B, K)


    stem = stem.format(stem1=stem1, stem2=stem2, left=left)
    answer = answer.format(K=K)
    comment = comment.format(left=left, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6, com7=com7, com8=com8)

    return stem, answer, comment


# 3-1-2-363
def factorization312_Stem_303():
    stem = "다항식 $$수식$${stem1}$$/수식$${josa} 완전제곱식이 될 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com1}$$/수식$$이 되어야 하므로\n" \
              "$$수식$${com2}$$/수식$$\n" \
              "따라서 $$수식$${com3}$$/수식$$\n\n"

    while True:
        B, C, D = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        A = 2 * D
        E = D ** 2
        s1 = '-' if (E-C) * B < 0 else ''
        K = '%s {%d} over {%d}' % (s1, abs(E-C), abs(B))
        if is_gcd(E-C, B) and abs(B) != 1:
            break

    josa = '이' if abs(C) in have_jongsung_num else '가'
    stem1 = 'x^{2} %sx %sa %s' % (int_str_converter(A, False, True), int_str_converter(B, False, True), int_str_converter(C, False, False))

    com1 = '%s `=`  ( x %s  ) ^{2}' % (stem1, int_str_converter(D, False, False))
    com2 = '%sa %s `=` %d' % (int_str_converter(B, True, True), int_str_converter(C, False, False), E)
    com3 = 'a `=` %s' % K

    stem = stem.format(stem1=stem1, josa=josa)
    answer = answer.format(K=K)
    comment = comment.format(com1=com1, com2=com2, com3=com3)

    return stem, answer, comment


# 3-1-2-364
def factorization312_Stem_304():
    stem = "다항식 $$수식$${stem1}$$/수식$$가 완전제곱식이 되도록 하는 상수 $$수식$$k$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$가 완전제곱식이 되려면\n" \
              "$$수식$${com2}$$/수식$$\n" \
              "따라서 $$수식$${com3}$$/수식$$\n\n"

    while True:
        A, B = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        C = A + B
        D = A * B
        s2 = '-' if C ** 2 < 0 else ''
        c_4 = get_gcd(C ** 2, 4)
        if 4//c_4 == 1:
            E = '%s %d' % (s2, C**2//c_4)
        else:
            E = '%s {%d} over {%d}' % (s2, C**2//c_4, 4//c_4)
        a_b_4 = get_gcd((A-B)**2, 4)
        if 4//a_b_4 == 1:
            K = str((A-B)**2//a_b_4)
        else:
            K = '{%d} over {%d}' % ((A-B)**2//a_b_4, 4//a_b_4)

        if (A!=B) and (C!=0) and (is_gcd(C**2, 4)!=True):
            break

    stem1 = ' ( x %s  )  ( x %s  ) `+` k' % (int_str_converter(A, False, False), int_str_converter(B, False, False))

    com1 = 'x^ {2} %sx %s `+` k' % (int_str_converter(C, False, True), int_str_converter(D, False, False))
    s1 = '-' if C * 2 < 0 else ''
    c_frac = '%s {%d} over {2}' % (s1, abs(C))
    com2 = '%s `+` k `=`  ( %s  ) ^{2} `=` %s' % (int_str_converter(D, True, False), c_frac, E)
    com3 = 'k `=` %s' % (K)

    stem = stem.format(stem1=stem1)
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3)

    return stem, answer, comment


# 3-1-2-365
def factorization312_Stem_305():
    stem = "다항식 $$수식$${stem1}$$/수식$$이 완전제곱식이 될 때, 상수 $$수식$$k$$/수식$$의 값은?\n" \
           "➀ {nums1}\n" \
           "➁ {nums2}\n" \
           "➂ {nums3}\n" \
           "➃ {nums4}\n" \
           "➄ {nums5}\n"
    answer = "(답) : {K}\n"
    comment = "(해설)\n" \
              "$$수식$${com1}`=`{com2}$$/수식$$\n" \
              "따라서 $$수식$${com3}$$/수식$$ 또는 $$수식$${com4}$$/수식$$\n\n"

    while 1:
        AA, BB, C = np.random.choice(np.arange(1, 10), 3)
        A = AA ** 2
        B = BB ** 2
        D = 2 * AA * BB
        M = -1 *D -C
        N = D - C
        if abs(M) < 100 and abs(N) < 100:
            break

    qu_list = [[M, N], [-1*N, -1*M], [M, -1*M], [-1*N, N], [N, -1*M]]
    np.random.shuffle(qu_list)

    nums = []
    K = 0
    for i, qu in enumerate(qu_list):
        nums.append('$$수식$$%d$$/수식$$ 또는 $$수식$$%d$$/수식$$' % (qu[0], qu[1]))
        if (qu[0]==M) and (qu[1]==N):
            K = i

    com1 = 'k `+` %d' % C
    stem1 = '%sx^{2} `+` (%s)xy %sy^{2}' % (int_str_converter(A, True, True), com1, int_str_converter(B, False, True))
    com2 = ' +-2 `TIMES` %d `TIMES` %d `=` +-%d' % (AA, BB, D)
    com3 = 'k `=` %d' % M
    com4 = 'k `=` %d' % N

    stem = stem.format(stem1=stem1, nums1=nums[0], nums2=nums[1], nums3=nums[2], nums4=nums[3], nums5=nums[4])
    answer = answer.format(K=multiple_choice_nums[K])
    comment = comment.format(com1=com1, com2=com2, com3=com3, com4=com4)

    return stem, answer, comment


# 3-1-2-366
def factorization312_Stem_306():
    stem = "다항식 $$수식$${stem1}$$/수식$${josa} 완전제곱식이 되도록 하는 모든 상수 $$수식$$n$$/수식$$의 값의 합을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$에서\n" \
              "$$수식$${com2}$$/수식$$이므로\n" \
              "$$수식$${com3}$$/수식$$에서 $$수식$${com4}$$/수식$$\n" \
              "$$수식$${com5}$$/수식$$에서 $$수식$${com6}$$/수식$$\n" \
              "따라서 구하는 $$수식$$n$$/수식$$의 값의 합은\n" \
              "$$수식$${com7}$$/수식$$\n\n"

    A, B = np.random.randint(1, 10, 2)
    C = B ** 2
    D = 2 * B
    E = D - A
    F = -1 * D - A
    K = E + F

    josa = '이' if C in have_jongsung_num else '가'

    stem1 = 'x^{2} `+`  ( n `+` %d  ) x `+` %d' % (A, C)

    com1 = 'x^{2} `+`  ( n `+` %d  ) x `+` %d' % (A, B**2)
    com2 = 'n `+` %d `=` +-2 `TIMES` %d `=` +-%d' % (A, B, D)
    com3 = 'n `+` %d `=` %d' % (A, D)
    com4 = 'n `=` %d' % E
    com5 = 'n `+` %d `=` %d' % (A, -1*D)
    com6 = 'n `=` %d' % F
    com7 = '%d `+`  ( %d  ) `=` %d' % (E, F, K)


    stem = stem.format(stem1=stem1, josa=josa)
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1,com1=com1, com2=com2, com3=com3,com4=com4,com5=com5,com6=com6,com7=com7)

    return stem, answer, comment


# 3-1-2-367
def factorization312_Stem_307():
    stem = "$$수식$${stem1}$$/수식$$일 때, $$수식$${stem2}$$/수식$${josa} 간단히 하시오.\n"
    answer = "(답) : $$수식$${A}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$에서 $$수식$${com1}$$/수식$$, $$수식$${com2}$$/수식$$이므로\n" \
              "$$수식$${stem2} `=` {com3}$$/수식$$\n" \
              "$$수식$$=` {com4}$$/수식$$\n" \
              "$$수식$$=` {com5}$$/수식$$\n\n"

    A = np.random.choice(np.arange(1, 10), 1)[0]
    B = 2 * A
    C = A ** 2

    stem1 = '0 {right} x {right} {A}'.format(right=right, A=A)
    stem2 = 'sqrt {x^{2}} `+` sqrt {x^{2} `-` %dx `+` %d}' % (B, C)
    josa = '를' if C in have_jongsung_num else '을'

    com1 = 'x {left} 0'.format(left=left)
    com2 = 'x `-` {A} {right} 0'.format(A=A, right=right)
    com3 = 'sqrt {x^{2}} `+` sqrt { ( x`-` %d  ) ^{2}}' % A
    com4 = 'x `-`  ( x `-` %d  )' % A
    com5 = 'x `-` x `+` %d `=` %d' % (A, A)


    stem = stem.format(stem1=stem1, stem2=stem2, josa=josa)
    answer = answer.format(A=A)
    comment = comment.format(A=A, stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5)

    return stem, answer, comment


# 3-1-2-368
def factorization312_Stem_308():
    stem = "$$수식$${stem1}$$/수식$$일 때, $$수식$${stem2} `+` {stem3}$$/수식$${josa} 간단히 하면?\n" \
           "➀ $$수식$${num1}$$/수식$$\n" \
           "➁ $$수식$${num2}$$/수식$$\n" \
           "➂ $$수식$${num3}$$/수식$$\n" \
           "➃ $$수식$${num4}$$/수식$$\n" \
           "➄ $$수식$${num5}$$/수식$$\n"
    answer = "(답) : {asw1}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1}$$/수식$$에서 $$수식$${com1}$$/수식$$이므로\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${stem2} `+` {stem3}$$/수식$$\n" \
              "$$수식$$=` {com4}$$/수식$$\n" \
              "$$수식$$=` {com5} `=` {com6}$$/수식$$\n\n"

    A = np.random.randint(1, 10, 1)[0]
    B = 4 * A
    C = 2 * A

    josa = '을' if int(str(B)[-1]) in have_jongsung_num else '를'
    stem1 = '0{right}a{right}{A}'.format(right=right, A=A)
    stem2 = 'sqrt { ( a`+` {%d} over {a}  ) ^{2} `-`%d}' % (A, B)
    stem3 = 'sqrt { ( a`-` {%d} over {a}  ) ^{2} `+`%d}' % (A, B)

    com1 = '{1} over {a} %s 1' % left
    com2 = 'a`-`{1} over {a} %s0' % right
    com3 = 'a`+`{1} over {a} %s0' % left
    com4 = 'sqrt { ( a`-` {%d} over {a}  ) ^{2}} `+` sqrt { ( a`+` {%d} over {a}  ) ^{2}}' % (A, A)
    com5 = '-  ( a`-` {%d} over {a}  ) `+`  ( a`+` {%d} over {a}  )' % (A, A)
    com6 = '{%d} over {a}' % C

    nums = ['-{%d} over {a}'%C,'-%da'%C,'0','%da'%C,'{%d} over {a}'%C]
    np.random.shuffle(nums)

    K = nums.index('{%d} over {a}'%C)

    stem = stem.format(josa=josa, stem1=stem1, stem2=stem2, stem3=stem3, num1=nums[0], num2=nums[1], num3=nums[2], num4=nums[3], num5=nums[4])
    answer = answer.format(asw1=multiple_choice_nums[K])
    comment = comment.format(stem1=stem1, stem2=stem2, stem3=stem3, com1=com1, com2=com2, com3=com3, com4=com4, com5=com5, com6=com6)

    return stem, answer, comment


# 3-1-2-371
def factorization312_Stem_309():
    stem = "$$수식$${stem1}$$/수식$$ 일 때, 자연수 $$수식$$A$$/수식$$, $$수식$$B$$/수식$$에 대하여 $$수식$${stem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${com1}$$/수식$$\n" \
              "따라서 $$수식$$A `=` {Z}$$/수식$$, $$수식$$B `=` {Y}$$/수식$$이므로\n" \
              "$$수식$${com2}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(1, 10, 1)[0]
        Y = np.random.randint(1, 30, 1)[0]
        X = Z ** 2
        W = Y ** 2
        K = int(Y/Z)
        if Y % Z == 0 and K < 100:
            break

    stem1 = '%sx^ {2} `-` %d `=`  ( Ax `+` B  ) ( Ax `-` B  )' % (int_str_converter(X, True,True), W)
    stem2 = '{B} over {A}'

    com1 = '%sx^ {2} `-` %d `=` %s `-` %d^ {2} `=` ' \
           ' ( %sx `+` %d  ) ( %sx `-` %d  )' \
           % (int_str_converter(X, True, True), W,
              ' ( %sx  )^ {2}' % int_str_converter(Z, True, True) if Z != 1 else 'x^{2}', Y,
              int_str_converter(Z, True, True), Y,
              int_str_converter(Z, True, True), Y)
    com2 = '%s `=` {%d} over {%d} `=` %d' % (stem2, Y, Z, K)

    stem = stem.format(stem1=stem1, stem2=stem2)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z, Y=Y, stem1=stem1, com1=com1, com2=com2)

    return stem, answer, comment


# 3-1-2-373
def factorization312_Stem_310():
    stem = "다항식 $$수식$${stem1}$$/수식$$가 $$수식$${stem2}$$/수식$$로 인수분해될 때, 상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `-` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {stem2}$$/수식$$에서\n" \
              "$$수식$${com1}$$/수식$$이고, $$수식$${com2}$$/수식$$이므로\n" \
              "$$수식$$b `=` {C}$$/수식$$, $$수식$$a `=` {D}b {D2} `=` {E}$$/수식$$\n" \
              "따라서 $$수식$${com3}$$/수식$$\n\n"

    while 1:
        A = np.random.randint(1, 10, 1)[0] * np.reshape(np.random.choice([-1, 1], 1), -1)[0]
        B = np.random.randint(-9, 0, 1)[0]
        C = B - A
        D = -B
        E = D * C
        K = E - C
        if abs(K) < 100:
            break

    stem1 = 'x^{2} %sx `+` a' % int_str_converter(A, False, True)
    stem2 = ' ( x %s  )  ( x `-` b  )' % int_str_converter(B, False, False)

    com1 = '%d `+`  ( -b  ) `=` %d' % (B, A)
    com2 = '%d  `TIMES`  ( -b  ) `=` a' % B
    e = ' ( %s  )' % E if E < 0 else str(E)
    c = ' ( %s  )' % C if C < 0 else str(C)
    com3 = '%s `=` %s `-` %s `=` %d' % ('a `-` b', e, c, K)
    D2 = '`=` {%s} `TIMES` {%s}' % (D, c) if D != 1 else ''

    stem = stem.format(stem1=stem1, stem2=stem2)
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1, stem2=stem2, com1=com1, com2=com2, com3=com3, E=E, C=C,
                             D=D if D != 1 else '', C2=c, D2=D2)

    return stem, answer, comment


# 3-1-2-374
def factorization312_Stem_311():
    stem = "다음 중 $$수식$${stem1}$$/수식$${josa} 인수로 갖지 않는 다항식은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {K}\n"
    comment = "(해설)\n" \
              "➀ $$수식$${qu_ep1} `=` {com1}$$/수식$$\n" \
              "➁ $$수식$${qu_ep2} `=` {com2}$$/수식$$\n" \
              "➂ $$수식$${qu_ep3} `=` {com3}$$/수식$$\n" \
              "➃ $$수식$${qu_ep4} `=` {com4}$$/수식$$\n" \
              "➄ $$수식$${qu_ep5} `=` {com5}$$/수식$$\n" \
              "따라서 $$수식$${stem1}$$/수식$${josa} 인수로 갖지 않는 다항식은 {K}이다.\n\n"

    while True:
        A, B, E, H, L, O = np.random.randint(1, 10, 6) * np.reshape(np.random.choice([-1, 1], 6), -1)
        C = A + B
        D = A * B

        F = A + E
        G = A * E
        if F == C and G == D:
            continue
        I = A + H
        J = A * H
        if I == C and J == D:
            continue
        if I == F and J == G:
            continue
        M = L - A
        N = -A * L
        if M == C and N == D:
            continue
        if M == F and N == G:
            continue
        if M == I and N == J:
            continue
        P = A + O
        Q = A * O
        if P == C and Q == D:
            continue
        if P == F and Q == G:
            continue
        if P == I and Q == J:
            continue
        if P == M and Q == N:
            continue
        if L != -A:
            break

    stem1 = 'x %s' % int_str_converter(A, False, False)
    josa = '을' if abs(A) in have_jongsung_num else '를'
    K = ''
    nums = [[C, D, B, A], [F, G, A, E], [I, J, H, A], [M, N, -1*A, L], [P, Q, O, A]]
    np.random.shuffle(nums)
    qu_eps = []
    coms = []

    for ind, num in enumerate(nums):
        f_num = '' if num[0]==0 else '%sx' % int_str_converter(num[0], False, True)
        qu_eps.append('x^ {2} %s %s' % (f_num, int_str_converter(num[1], False, False)))
        coms.append(' ( x %s  )  ( x %s  ) ' % (int_str_converter(num[2], False, False), int_str_converter(num[3], False, False)))
        if num ==  [M, N, -1*A, L]:
            K = multiple_choice_nums[ind]



    stem = stem.format(stem1=stem1, josa=josa, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(K=K)
    comment = comment.format(K=K, stem1=stem1, josa=josa, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4],
                             com1=coms[0], com2=coms[1], com3=coms[2], com4=coms[3], com5=coms[4])

    return stem, answer, comment


# 3-1-2-375
def factorization312_Stem_312():
    stem = "다항식 $$수식$${stem1}$$/수식$${josa} $$수식$${stem2}$$/수식$$로 인수분해될 때, 상수 $$수식$$a$$/수식$$, " \
           "$$수식$$b$$/수식$$에 대하여 $$수식$$ | a`-`b  |$$/수식$$의 값을 구하시오.\n"
    answer = "(답) :  $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$이므로\n" \
              "$$수식$$a `=` {A}$$/수식$$, $$수식$$b `=` {B_M}$$/수식$$ 또는 $$수식$$a `=` {B_M}$$/수식$$, $$수식$$b `=` {A}$$/수식$$\n" \
              "따라서 $$수식$$ | a `-` b  | `=` {K}$$/수식$$\n\n"
    while True:
        A = np.random.randint(1, 10, 1)[0]
        B = A - 1
        B_M = B * -1
        C = A * B
        K = A + B
        if (C!=0):
            break

    stem1 = 'x^ {2} `+` x %s' % int_str_converter(-1 * C, False, False)
    stem2 = ' ( x `+` a  ) ( x `+` b  )'

    josa = '이' if int(str(C)[-1]) in have_jongsung_num else '가'

    com1 = ' ( x %s  ) ( x %s  )' % (int_str_converter(A, False,False), int_str_converter(B_M, False, False))

    stem = stem.format(stem1=stem1, stem2=stem2, josa=josa)
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1, josa=josa, A=A, B_M=B_M, K=K, com1=com1)

    return stem, answer, comment


# 3-1-2-376
def factorization312_Stem_313():
    stem = "$$수식$${stem1}$$/수식$${josa} $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 두 일차식의 곱으로 인수분해될 때, 정수 $$수식$$A$$/수식$$의 개수를 구하시오.\n"
    answer = "(답) : $$수식$${F}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$A$$/수식$$는 곱이 $$수식$${B}$$/수식$$인 두 정수의 합이어야 한다.\n" \
              "곱이 $$수식$${B}$$/수식$$인 두 정수는 \n" \
              "{com1}\n" \
              "따라서 정수 $$수식$$A$$/수식$$는 {E}의 $$수식$${F}$$/수식$$개이다.\n\n"

    while True:
        c_list = []
        B = np.random.randint(2, 10, 1)[0] * np.reshape(np.random.choice([-1, 1], 1), -1)[0]
        if B < 0:
            for i in range(B, -1*B+1):
                if i == 0:
                    pass
                elif abs(B) % i == 0:
                    if (i not in c_list) and (B // i not in c_list):
                        c_list.append(i)
                        c_list.append(B//i)
        else:
            for i in range(-B, B + 1):
                if i == 0:
                    pass
                elif abs(B) % i == 0:
                    if (i not in c_list) and (B // i not in c_list):
                        c_list.append(i)
                        c_list.append(B // i)
        if B != 0:
            break

    stem1 = 'x^ {2} `+` Ax %s' % int_str_converter(B, False, False)
    josa = '이' if abs(B) in have_jongsung_num else '가'

    result = [[c_list[i], c_list[i + 1], c_list[i] + c_list[i + 1]] for i in range((len(c_list))) if i % 2 == 0]
    result.sort(key=lambda x: x[2])

    tmp_lst = []
    tmp_lst2 = []
    for i in result:
        if i[0] > i[1]:
            i[0], i[1] = i[1], i[0]
        tmp_lst.append('$$수식$${0}$$/수식$$, $$수식$${1}$$/수식$$'.format(i[0], i[1]))
        tmp_lst2.append('$$수식$${0}$$/수식$$'.format(i[2]))

    com1 = ' 또는 '.join(tmp_lst)
    E = ', '.join(tmp_lst2)

    F = len(result)

    stem = stem.format(stem1=stem1, josa=josa)
    answer = answer.format(F=F)
    comment = comment.format(E=E, F=F, B=B, com1=com1)

    return stem, answer, comment


# 3-1-2-377
def factorization312_Stem_314():
    stem = "다음 중 $$수식$${stem1}$$/수식$$의 인수인 것은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {K}\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {com1}$$/수식$$\n" \
              "$$수식$$=` {com2}$$/수식$$\n" \
              "$$수식$$=` {com4}$$/수식$$\n" \
              "따라서 $$수식$${stem1}$$/수식$$의 인수인 것은 $$수식$${com3}$$/수식$$이다.\n\n"
    z_w = []
    while True:
        A, B, E = np.random.randint(1, 10, 3) * np.reshape(np.random.choice([-1, 1], 3), -1)
        C = A + B
        D = A * B
        F = C - E
        H = E * F
        G = D - H
        if abs(G) > 100:
            continue
        I = H + G
        z_w = np.random.choice(np.arange(1, 10), 4, False) * np.reshape(np.random.choice([-1, 1], 4), -1)
        if (A!=B) and (A not in z_w) and (B not in z_w) and (E != F) and (F != 0) and (G != 0):
            break

    Z, Y, X, W = z_w
    stem1 = ' ( x %s  ) ( x %s  ) %s' % (int_str_converter(E, False, False), int_str_converter(F, False, False), int_str_converter(G,False, False))

    nums = [B, Z, Y, X, W]
    nums.sort()

    qu_eps = ['x %s'% int_str_converter(n, False, False) for n in nums]
    K = multiple_choice_nums[qu_eps.index('x %s' % int_str_converter(B, False, False))]

    com1 = 'x^{2} %sx %s %s' % (int_str_converter(C, False, True), int_str_converter(H, False, False), int_str_converter(G, False, False))
    com2 = 'x^{2} %sx %s' % (int_str_converter(C, False, True), int_str_converter(I, False, False))
    com3 = 'x %s' % int_str_converter(B, False, False)
    com4 = ' ( x %s  ) ( x %s  )' % (int_str_converter(A, False, False), int_str_converter(B, False, False))


    stem = stem.format(stem1=stem1, qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1, com1=com1, com2=com2, com3=com3, com4=com4)

    return stem, answer, comment


# 3-1-2-378
def factorization312_Stem_315():
    stem = "다음 중 바르게 인수분해한 것은?\n" \
           "➀ $$수식$${qu_ep1}$$/수식$$\n" \
           "➁ $$수식$${qu_ep2}$$/수식$$\n" \
           "➂ $$수식$${qu_ep3}$$/수식$$\n" \
           "➃ $$수식$${qu_ep4}$$/수식$$\n" \
           "➄ $$수식$${qu_ep5}$$/수식$$\n"
    answer = "(답) : {KK}\n"
    comment = "(해설)\n" \
              "{num1} $$수식$${com1}$$/수식$$\n" \
              "{num2} $$수식$${com2}$$/수식$$\n" \
              "{num3} $$수식$${com3}$$/수식$$\n" \
              "{num4} $$수식$${com4}$$/수식$$\n" \
              "따라서 바르게 인수분해한 것은 {KK}이다.\n\n"

    while True:
        while True:
            A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q = np.random.randint(1, 10, 17) * np.reshape(np.random.choice([-1, 1], 17), -1)
            if E < 0 or B < 0 or H < 0:
                continue
            R = C + A * B
            if R == 0:
                continue
            S = A * C
            T = F + D * E
            if T == 0:
                continue
            U = D * F
            V = I + G * H
            if V == 0:
                continue
            W = G * I
            X = J * L
            if X < 0:
                continue
            Y = J * M + K * L
            if Y == 0:
                continue
            Z = K * M
            AA = N * P
            if AA < 0:
                continue
            BB = N * Q + O * P
            if BB == 0:
                continue
            CC = O * Q
            GG, II = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
            if J < 0 and L < 0:
                continue
            if N < 0 and P < 0:
                continue
            if (GG != G) and (II != I) and (B != E != H != X != AA):
                if -100 < abs(R) < 100 and -100 < abs(T) < 100 and -100 < abs(V) < 100 and -100 < abs(Y) < 100 \
                        and -100 < abs(BB) < 100:
                    if is_gcd(B, C) and is_gcd(E, F) and is_gcd(H, II) and is_gcd(J, K) and is_gcd(L, M) \
                            and is_gcd(N, O) and is_gcd(P, Q):
                        break

        qu_nums = [[B, R, S, 1, A, B, C], [E, T, U, 1, -1 * D, E, -1 * F], [H, V, W, 1, GG, H, II],
                   [X, Y, Z, J, -1 * K, L, -1 * M]]
        qu_eps = ['%sx^{2} %sx %s `=`  ( %sx %s  ) ( %sx %s  )'
                  % (int_str_converter(num[0], True, True),
                     int_str_converter(num[1], False, True),
                     int_str_converter(num[2], False, False),
                     int_str_converter(num[3], True, True),
                     int_str_converter(num[4], False, False),
                     int_str_converter(num[5], True, True),
                     int_str_converter(num[6], False, False)) for num in qu_nums]

        qu_eps.append('%sx^{2} %sxy %sy^{2} `=`  ( %sx %sy  ) ( %sx %sy  )'
                      % (int_str_converter(AA, True, True),
                         int_str_converter(BB, False, True),
                         int_str_converter(CC, False, False),
                         int_str_converter(N, True, False),
                         int_str_converter(-1*O, False, True),
                         int_str_converter(P, True,True),
                         int_str_converter(-1*Q,False,True)))
        np.random.shuffle(qu_eps)
        cor_line = '%sx^{2} %sx %s `=`  ( %sx %s  ) ( %sx %s  )' \
                   % (int_str_converter(B, True, True),
                      int_str_converter(R, False, True),
                      int_str_converter(S, False, False),
                      int_str_converter(1, True, True),
                      int_str_converter(A, False, False),
                      int_str_converter(B, True, True),
                      int_str_converter(C, False, False))
        cor_num = qu_eps.index(cor_line)
        KK = multiple_choice_nums[cor_num]

        coms = [line.split('`=`')[0] for line in qu_eps]
        com_dict = {}
        for ind, com in enumerate(coms):
            if com == cor_line:
                pass
            else:
                if com.startswith(int_str_converter(E, True, True)):
                    com_dict[ind] = '%s `=`  ( x %s  ) ( %sx %s  )' \
                                    % (com,
                                       int_str_converter(D, False, False),
                                       int_str_converter(E, True,True),
                                       int_str_converter(F, False, False))
                elif com.startswith(int_str_converter(H, True, True)):
                    com_dict[ind] = '%s `=`  ( x %s  ) ( %sx %s  )' \
                                    % (com,
                                       int_str_converter(G, False, False),
                                       int_str_converter(H, True,True),
                                       int_str_converter(I, False, False))
                elif com.startswith(int_str_converter(X, True, True)):
                    com_dict[ind] = '%s `=`  ( %sx %s  ) ( %sx %s  )' \
                                    % (com,
                                       int_str_converter(J, True, True),
                                       int_str_converter(K, False, False),
                                       int_str_converter(L, True,True),
                                       int_str_converter(M, False, False))
                elif com.startswith(int_str_converter(AA, True, True)):
                    com_dict[ind] = '%s `=`  ( %sx %sy  ) ( %sx %sy  )'\
                                    % (com,
                                       int_str_converter(N, True, True),
                                       int_str_converter(O, False, True),
                                       int_str_converter(P, True,True),
                                       int_str_converter(Q, False, True))

        if len(com_dict.keys()) == 4:
            a, b, c, d = com_dict.keys()
            break

    stem = stem.format(qu_ep1=qu_eps[0], qu_ep2=qu_eps[1], qu_ep3=qu_eps[2], qu_ep4=qu_eps[3], qu_ep5=qu_eps[4])
    answer = answer.format(KK=KK)
    comment = comment.format(num1=multiple_choice_nums[a], num2=multiple_choice_nums[b], num3=multiple_choice_nums[c],
                             num4=multiple_choice_nums[d], com1=com_dict[a], com2=com_dict[b], com3=com_dict[c],
                             com4=com_dict[d], KK=KK)

    return stem, answer, comment


# 3-1-2-379
def factorization312_Stem_316():
    stem = "$$수식$${stem1}$$/수식$${josa} 인수분해하면 $$수식$${stem2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$, " \
           "$$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${stem1} `=` {stem2}$$/수식$$\n" \
              "$$수식$$=` {com1}$$/수식$$이므로\n" \
              "$$수식$${com2}$$/수식$$, $$수식$${com3}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {I}$$/수식$$, $$수식$$b `=` {J}$$/수식$$이므로\n" \
              "$$수식$$ab `=` {K}$$/수식$$\n\n"

    while True:
        A, E = np.random.randint(1, 10, 2) * np.reshape(np.random.choice([-1, 1], 2), -1)
        B, D = np.random.randint(2, 10, 2)
        C = A * B
        H = np.random.randint(10, 100, 1)[0]

        if abs(A) == 1:
            J = str(H // get_gcd(H, A))
        else:
            s1 = '-' if H * A < 0 else ''
            J = '%s {%d} over {%d}' % (s1, abs(H), abs(A))
        J = H // get_gcd(abs(H), abs(A)) * int(A / abs(A))
        if abs(A * D) == 1:
            I = str((H+A*C-A*E) // get_gcd((H+A*C-A*E), A*D))
        else:
            s2 = '-' if (H + A * C - A * E) * A * D < 0 else ""
            I = '%s {%d} over {%d}' % (s2, abs(H+A*C-A*E), abs(A*D))
        if abs(A**2 * D) == 1:
            K = str(H * (H+A*C-A*E))
        else:
            s3 = '-' if ((H+A*C-A*E)*H) * (A**2*D)<0 else ''
            K = '%s {%d} over {%d}' % (s3, abs((H+A*C-A*E)*H), abs(A**2*D))
        if (abs((H + A * C - A * E) * H) < 100) and (H % abs(A) == 0) and (is_gcd(H, A) == True) and (
                is_gcd(H + A * C - A * E, A * D) == True) and (is_gcd((H + A * C - A * E) * H, A ** 2 * D) == True):
            break

    stem1 = '%sx^ {2} `+`  ( %sa %s  )x %s ' % (int_str_converter(B, True, True), int_str_converter(D, True, True), int_str_converter(E, False, False), int_str_converter(H, False, False))
    stem2 = ' ( x %s  ) ( %sx `+` b  )' % (int_str_converter(A, False, False), int_str_converter(B, True, True))

    com1 = '%sx^ {2} `+`  ( b %s  )x %sb ' % (int_str_converter(B, True, True), int_str_converter(C, False, True), int_str_converter(A, False, True))
    com2 = '%sa %s `=` b %s' % (int_str_converter(D, True, True), int_str_converter(E, False, False), int_str_converter(C, False, False))
    com3 = '%s `=` %sb' % (int_str_converter(H, True, False), int_str_converter(A, True, True))
    josa = '을' if int(str(H)[-1]) in have_jongsung_num else '를'
    stem = stem.format(stem1=stem1, stem2=stem2, josa=josa)
    answer = answer.format(K=K)
    comment = comment.format(stem1=stem1,stem2=stem2,com1=com1, com2=com2, com3=com3, K=K, I=I, J=J)

    return stem, answer, comment


# 3-1-2-380
def factorization312_Stem_317():
    stem = "$$수식$${s1}$$/수식$${s1_josa} $$수식$$(` ax `+` b `) (` cx `+` d `)$$/수식$$로 인수분해될 때, " \
           "$$수식$$ab `-` cd$$/수식$$의 값을 모두 구하시오. " \
           "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$, $$수식$$d$$/수식$$는 정수, " \
           "$$수식$$a `&gt;` 0$$/수식$$, $$수식$$c `&gt;` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${K}$$/수식$$, $$수식$${K_reverse}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s1} `=` {c1}$$/수식$$이므로\n" \
              "$$수식$$a `=` {A}$$/수식$$, $$수식$$b `=` {B}$$/수식$$, $$수식$$c `=` {C}$$/수식$$, $$수식$$d `=` {D}$$/수식$$ 또는\n" \
              "$$수식$$a `=` {C}$$/수식$$, $$수식$$b `=` {D}$$/수식$$, $$수식$$c `=` {A}$$/수식$$, $$수식$$d `=` {B}$$/수식$$\n" \
              "따라서 $$수식$$ab `-` cd `=` {K}$$/수식$$ 또는 $$수식$$ab `-` cd `=` {K_reverse}$$/수식$$\n\n"

    flag = True
    while flag:
        A, C = np.random.choice(range(2, 10), 2, replace=False)
        B, D = np.random.choice(range(1, 10), 2, replace=False)

        E = A * C
        G = B * D
        F = (A * D) + (B * C)
        K = (A * B) - (C * D)
        K_reverse = -1 * K

        # 정답조건 : -100 < 정답 < 100
        if 0 < abs(K) < 100:

            s1 = "%sx ^{2} `+` %sx `+` %s" % (E, F, G)
            s1_josa = num_josa(G)[3]

            c1 = " ( %sx `+` %s  )  ( %sx `+` %s  )" % (A, B, C, D)

            # A&B, C&D가 각각 서로소일 조건 (두 수의 최대공약수가 1인 경우와 동일함)
            if greatest_common_divisor(A, B)[0] == 1 and greatest_common_divisor(C, D)[0] == 1:
                # A, B, C, D가 모두 같은 값이면 안되는 조건 추가
                if len([A, B, C, D]) == len(set([A, B, C, D])):
                    flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa)
    answer = answer.format(K=K, K_reverse=K_reverse)
    comment = comment.format(s1=s1, c1=c1, A=A, B=B, C=C, D=D, E=E, F=F, G=G, K=K, K_reverse=K_reverse)

    return stem, answer, comment


# 3-1-2-383
def factorization312_Stem_318():
    stem = "$$수식$${s1}$$/수식$${s1_josa} 인수로 갖는 것을 보기에서 모두 고른 것은?\n" \
           "㈀ $$수식$${a1}$$/수식$$\n" \
           "㈁ $$수식$${a2}$$/수식$$\n" \
           "㈂ $$수식$${a3}$$/수식$$\n" \
           "㈃ $$수식$${a4}$$/수식$$\n"
    answer = "(답) : {ans1}, {ans2}\n"
    comment = "(해설)\n" \
              "㈀ $$수식$${c1}$$/수식$$\n" \
              "㈁ $$수식$${c2}$$/수식$$\n" \
              "㈂ $$수식$${c3}$$/수식$$\n" \
              "㈃ $$수식$${c4}$$/수식$$\n" \
              "따라서 $$수식$${s1}$$/수식$${s1_josa} 인수로 갖는 것은 {ans1}, {ans2}이다.\n\n"

    flag = True
    while flag:
        A, C, D, G = np.random.choice(range(1, 10), 4)
        B, E, F = np.random.choice(range(2, 10), 3)

        s1_josa = num_josa(A)[2]
        s1 = "x `+` %s" % A

        # B,C/F,G가 각각 서로소일 조건
        if greatest_common_divisor(B, C)[0] == 1 and greatest_common_divisor(F, G)[0] == 1:
            # A,D가 서로 다른값일 조건
            if A != D:
                ans_dict, index = {}, 0

                # (ㄱ) x ^{2} + Hx + I
                H = -2 * A
                I = A ** 2
                a1 = "x ^ {2} %sx %s" % (int_str_converter(H, False, True), int_str_converter(I))
                a1_comment = " `=`  ( x %s  )  ^ {2}" % int_str_converter(-1 * A)
                ans_dict[index] = [False, a1, a1 + a1_comment]
                index += 1

                # (ㄴ) Bx ^{2} + Jx + L
                J = (A * B) + C
                L = A * C
                a2 = "%sx ^{2} %sx %s" % (int_str_converter(B, True, True), int_str_converter(J, False, True), int_str_converter(L))
                a2_com = " `=`  ( %sx %s  )  ( x %s  )" % (int_str_converter(B, True, True), int_str_converter(C), int_str_converter(A))
                ans_dict[index] = [True, a2, a2 + a2_com]
                index += 1

                # (ㄷ) Ex ^{2} + Mx + N
                M = E * (A + D)
                N = E * A * D
                a3 = "%sx ^{2} %sx %s" % (int_str_converter(E, True, True), int_str_converter(M, False, True), int_str_converter(N))
                a3_com = " `=` %s  ( x %s  )  ( x %s  )" % (int_str_converter(E, True, True), int_str_converter(D), int_str_converter(A))
                ans_dict[index] = [True, a3, a3 + a3_com]
                index += 1

                # (ㄹ) Ox ^{2} + Px + Q
                O = F ** 2
                Q = G ** 2
                P = 2 * F * G
                a4 = "%sx ^{2} %sx %s" % (int_str_converter(O, True, True), int_str_converter(P, False, True), int_str_converter(Q))
                a4_com = "`=`  ( %sx %s  ) ^{2}" % (int_str_converter(F, True, True), int_str_converter(G))
                ans_dict[index] = [False, a4, a4 + a4_com]
                index += 1

                # 보기, 해설
                answers, comments, ans_indexs = [], [], []

                # 보기, 해설 만들기
                dict_keys = list(ans_dict.keys())
                random.shuffle(dict_keys)

                for j, i in enumerate(dict_keys):
                    # True이면 ans_indexs에 정답으로 추가
                    if ans_dict[i][0]:
                        answers.append(ans_dict[i][1])
                        comments.append(ans_dict[i][2])
                        ans_indexs.append(multiple_choice_hangul[j])
                    else:
                        answers.append(ans_dict[i][1])
                        comments.append(ans_dict[i][2])

                a1, a2, a3, a4 = answers
                c1, c2, c3, c4 = comments
                ans1, ans2 = ans_indexs


                flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, a1=a1, a2=a2, a3=a3, a4=a4)
    answer = answer.format(ans1=ans1, ans2=ans2)
    comment = comment.format(s1=s1, s1_josa=s1_josa, c1=c1, c2=c2, c3=c3, c4=c4, ans1=ans1, ans2=ans2)


    return stem, answer, comment


# 3-1-2-384
def factorization312_Stem_319():
    stem = "다음 다항식 중 $$수식$${s1}$$/수식$${s1_josa} 인수로 갖지 않는 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "➀ $$수식$${c1}$$/수식$$\n" \
              "➁ $$수식$${c2}$$/수식$$\n" \
              "➂ $$수식$${c3}$$/수식$$\n" \
              "➃ $$수식$${c4}$$/수식$$\n" \
              "➄ $$수식$${c5}$$/수식$$\n" \
              "따라서 $$수식$${s1}$$/수식$${s1_josa} 인수로 갖지 않는 것은 {ans_num}이다.\n\n"

    flag = True
    while flag:
        # A, B가 서로 다른 값일 조건
        A, B = np.random.choice(range(1, 10), 2, replace=True)
        D, F = np.random.choice(range(1, 10), 2)
        C, E = np.random.choice(range(2, 10), 2, replace=True)

        s1 = "x %s" % int_str_converter(A)
        s1_josa = num_josa(A)[2]

        # C&D, E&F가 서로소일 조건 (두 수의 최대공약수가 1일 것)
        if greatest_common_divisor(C, D)[0] == 1 and greatest_common_divisor(E, F)[0] == 1:
            # 차항 기준으로 작은 수부터 큰 수로 ①~⑤번 배열, 최고차항이 같으면 그 다음 고차항을 기준으로 작은 수부터 배열
            # 차항 리스트를 만들어서 관리 [[2차항, 1차항, 상수, 수식, 해설], [2차항, 1차항, 상수, 수식, 해설], ...]
            degree_list = []

            # a1 : x ^{2} + G
            G = A ** 2
            a1 = "x ^{2} %s" % int_str_converter(G)
            a1_comment = " `=`  ( x %s  )  ( x %s  )" % (int_str_converter(-1*A), int_str_converter(A))
            degree_list.append([1, 0, G, a1, a1 + a1_comment])

            # a2 : x ^{2} + Hx + G
            H = 2 * A
            a2 = "x ^{2} %sx %s" % (int_str_converter(H, False, True), int_str_converter(G))
            a2_com = " `=`  ( x %s  ) ^{2}" % int_str_converter(A)
            degree_list.append([1, H, G, a2, a2 + a2_com])

            # a3 : x ^{2} + Ix + J
            I = A + B
            J = A * B
            a3 = "x ^{2} %sx %s" % (int_str_converter(I, False, True), int_str_converter(J))
            a3_com = " `=`  ( x %s  )  ( x %s  )" % (int_str_converter(A), int_str_converter(B))
            degree_list.append([1, I, J, a3, a3 + a3_com])

            # a4 : Cx ^{2} + Lx + M
            L = D + (A * C)
            M = A * D
            a4 = "%sx ^{2} %sx %s" % (int_str_converter(C, True, True), int_str_converter(L, False, True), int_str_converter(M))
            a4_com = " `=`  ( x %s  )  ( %sx %s  )" % (int_str_converter(A), int_str_converter(C, True, True), int_str_converter(D))
            degree_list.append([C, L, M, a4, a4 + a4_com])

            # Ex ^{2} + Nx + O
            N = F - (A * E)
            O = -1 * A * F
            a5 = "%sx ^{2} %sx %s" % (int_str_converter(E, True, True), int_str_converter(N, False, True), int_str_converter(O))
            a5_com = " `=`  ( x %s  )  ( %sx %s  )" % (int_str_converter(-1 * A), int_str_converter(E, True, True), int_str_converter(F))
            degree_list.append([E, N, O, a5, a5 + a5_com])

            # 보기 생성
            # 최고차항 기준으로 작은 수부터 큰 수로 배열
            degree_list.sort()
            answers, comments = [], []
            for i, d in enumerate(degree_list):
                answers.append(d[3])
                comments.append(d[4])
                if d[3] == a5:
                    ans_num = multiple_choice_nums[i]

            a1, a2, a3, a4, a5 = answers
            c1, c2, c3, c4, c5 = comments

            flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, s1=s1, s1_josa=s1_josa, ans_num=ans_num)

    return stem, answer, comment


# 3-1-2-385
def factorization312_Stem_320():
    stem = "다음 중 나머지 넷과 같은 인수를 갖지 않는 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "➀ $$수식$${c1}$$/수식$$\n" \
              "➁ $$수식$${c2}$$/수식$$\n" \
              "➂ $$수식$${c3}$$/수식$$\n" \
              "➃ $$수식$${c4}$$/수식$$\n" \
              "➄ $$수식$${c5}$$/수식$$\n" \
              "따라서 나머지 넷과 같은 인수를 갖지 않는 것은 {ans_num}이다.\n\n"

    flag = True
    while flag:
        A, B, C, D, E, G = np.random.choice(range(1, 10), 6)
        F = np.random.choice(range(2, 10))

        if C != A and D != A:
            # 차항 기준으로 작은 수부터 큰 수로 ①~⑤번 배열, 최고차항이 같으면 그 다음 고차항을 기준으로 작은 수부터 배열
            # 차항 리스트를 만들어서 관리 [[2차항, 1차항, 상수, 수식, 해설], [2차항, 1차항, 상수, 수식, 해설], ...]
            degree_list = []

            # a1 = x ^{2} + Ax
            a1 = "x ^{2} %sx" % int_str_converter(A)
            a1_comment = " `=` x  ( x %s  )" % int_str_converter(A)
            degree_list.append([1, A, 0, a1, a1 + a1_comment])

            # a2 = x ^{2} + Gx + H
            G = A + B
            H = A * B
            a2 = "x ^{2} %sx %s" % (int_str_converter(G, False, True), int_str_converter(H))
            a2_com = " `=`  ( x %s  )  ( x %s  )" % (int_str_converter(B), int_str_converter(A))
            degree_list.append([1, G, H, a2, a2 + a2_com])

            # a3 = x ^{2} + Ix + J
            I = C + D
            J = C * D
            a3 = "x ^{2} %sx %s" % (int_str_converter(I, False, True), int_str_converter(J))
            a3_com = " `=`  ( x %s  )  ( x %s  )" % (int_str_converter(C), int_str_converter(D))
            degree_list.append([1, I, J, a3, a3 + a3_com])

            # a4 = x ^{2} + Kx + L
            K = A + E
            L = A * E
            a4 = "x ^{2} %sx %s" % (int_str_converter(K, False, True), int_str_converter(L))
            a4_com = " `=`  ( x %s  )  ( x %s  )" % (int_str_converter(E), int_str_converter(A))
            degree_list.append([1, K, L, a4, a4 + a4_com])

            # a5 = Fx ^{2} + Mx + N
            M = (F * A) + G
            N = A * G
            a5 = "%sx ^{2} %s x %s" % (int_str_converter(F, True, True), int_str_converter(M, False, True), int_str_converter(N))
            a5_com = " `=`  ( %sx %s  )  ( x %s  )" % (int_str_converter(F, True, True), int_str_converter(G), int_str_converter(A))
            degree_list.append([F, M, N, a5, a5 + a5_com])

            # 차항 기준으로 작은수부터 큰 수로 정렬
            degree_list.sort()

            # 보기, 해설 세팅
            answers, comments = [], []
            for i, d in enumerate(degree_list):
                answers.append(d[3])
                comments.append(d[4])
                if d[3] == a3:
                    ans_num = multiple_choice_nums[i]

            a1, a2, a3, a4, a5 = answers
            c1, c2, c3, c4, c5 = comments

            flag = False

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, ans_num=ans_num)


    return stem, answer, comment


# 3-1-2-386
def factorization312_Stem_321():
    stem = "다음 네 다항식의 공통인 인수가 $$수식$$ax `+` b`$$/수식$$일 때, 정수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `-` b$$/수식$$의 값을 구하시오. " \
           "(단, $$수식$$a$$/수식$$는 자연수, $$수식$$b$$/수식$$는 정수이다.)\n" \
           "$$수식$${s1}$$/수식$$,    $$수식$${s2}$$/수식$$,    $$수식$${s3}$$/수식$$,    $$수식$${s4}$$/수식$$\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "각 다항식을 인수분해하면\n" \
              "$$수식$${s1} `=` {c1}$$/수식$$\n" \
              "$$수식$${s2} `=` {c2}$$/수식$$\n" \
              "$$수식$${s3} `=` {c3}$$/수식$$\n" \
              "$$수식$${s4} `=` {c4}$$/수식$$\n" \
              "따라서 네 다항식의 공통인 인수가 $$수식$${c5}$$/수식$$이므로\n" \
              "$$수식$$a `=` 1$$/수식$$, $$수식$$b `=` {A}$$/수식$$이다.\n" \
              "따라서 $$수식$${c6}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B = np.random.choice(range(1, 10), 2, replace=False)
        C = np.random.choice(range(2, 10))

        s1 = "x ^{2} %sx" % int_str_converter(A, False, True)
        c1  = "x  ( x %s  )" % int_str_converter(A)

        D = A + B
        E = A * B
        s2 = "x ^{2} %sx %s" % (int_str_converter(D, False, True), int_str_converter(E))
        c2 = " ( x %s  )  ( x %s  )" % (int_str_converter(B), int_str_converter(A))

        F = 2 * A
        G = A ** 2
        s3 = "x ^{2} %s x %s" % (int_str_converter(F, False, True), int_str_converter(G))
        c3 = " ( x %s  ) ^{2}" % int_str_converter(A)

        H = C * (A ** 2)
        K = 1 - A
        s4 = "%sx ^{2} %s" % (int_str_converter(C, True, True), int_str_converter(H))
        c4 = "%s  ( x %s  )  ( x %s  )" % (int_str_converter(C, True, True), int_str_converter(-1 * A), int_str_converter(A))

        c5 = "x `+` {A}".format(A=A)
        c6 = "a `-` b `=` 1 `-` {A} `=` {K}".format(A=A, K=K)

        flag = False

    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4)
    answer = answer.format(K=K)
    comment = comment.format(s1=s1, s2=s2, s3=s3, s4=s4, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, A=A)


    return stem, answer, comment


# 3-1-2-387
def factorization312_Stem_322():
    stem = "다항식 $$수식$${s1}$$/수식$${s1_josa} $$수식$${s2}$$/수식$${s2_josa1} 나누어 떨어질 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s2}$$/수식$${s2_josa2} $$수식$${s1}$$/수식$$의 인수이고 $$수식$$x ^{{2}}$$/수식$$의 계수가 $$수식$${B}$$/수식$$이므로\n" \
              "$$수식$${s1} `=` {c1}$$/수식$$로 놓으면\n" \
              "$$수식$${s1} `=` {c2}$$/수식$$에서\n" \
              "$$수식$${c3}$$/수식$$, $$수식$${c4}$$/수식$$\n" \
              "따라서 $$수식$$b `=` {E}$$/수식$$이므로\n" \
              "$$수식$${c5}$$/수식$$\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(1, 10))
        B = np.random.choice(range(2, 10))
        C = np.random.choice(range(-99, 100)) * A

        s1 = "%sx ^{2} `+` ax %s" % (int_str_converter(B, True, True), int_str_converter(C))
        s1_josa = num_josa(C)[3]
        s2 = "x %s" % int_str_converter(A)
        s2_josa1 = num_josa(A)[4]
        s2_josa2 = num_josa(A)[3]

        # 보기에 등장하는 숫자 절댓값 100 미만으로 제한
        if C != 0 and abs(C) < 100:
            D = A * B
            E = C // A
            K = E + D

            c1 = " ( x %s  )  ( %sx `+` b  )" % (int_str_converter(A), int_str_converter(B, True, True))
            c2 = "%sx ^{2} `+`  ( b %s  ) x %sb" % (int_str_converter(B, True, True), int_str_converter(D, False, True), int_str_converter(A, False, True))
            c3 = "a `=` b %s`" % int_str_converter(D)
            c4 = "%s `=` %sb" % (int_str_converter(C), int_str_converter(A, True, True))
            c5 = "a `=` b %s `=` %s %s `=` %s" \
                 "" % (int_str_converter(D, False, False), int_str_converter(E, True, False),
                       int_str_converter(D, False, False), K)

            flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, s2=s2, s2_josa1=s2_josa1)
    answer = answer.format(K=K)
    comment = comment.format(s1=s1, s2=s2, s2_josa2=s2_josa2, B=B, E=E, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)


    return stem, answer, comment


# 3-1-2-388
def factorization312_Stem_323():
    stem = "$$수식$${s1}$$/수식$${s1_josa} $$수식$${s2}$$/수식$$의 인수일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s2} `=` {c1}$$/수식$$라 하면\n" \
              "$$수식$${B}x `=` {c2}$$/수식$$이므로 $$수식$$m `=` {C}$$/수식$$\n" \
              "따라서 상수항에서\n" \
              "$$수식$${c3}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B = np.random.choice(range(1, 10), 2, replace=False)
        C = B - A
        K = A * C

        s1 = "x %s" % int_str_converter(A)
        s1_josa = num_josa(A)[3]
        s2 = "x ^{2} %sx `+` a" % int_str_converter(B, False, True)
        c1 = " ( x %s  )  ( x `+` m  )" % int_str_converter(A)
        c2 = " ( m %s  ) x" % int_str_converter(A)

        if C < 0:
            c3 = "a `=` %sm `=` %s `TIMES`  ( %s  ) `=` %s" % (
            int_str_converter(A, True, True), int_str_converter(A, True), int_str_converter(C, True),
            int_str_converter(K, True))
        else:
            c3 = "a `=` %sm `=` %s `TIMES` %s `=` %s" % (
            int_str_converter(A, True, True), int_str_converter(A, True), int_str_converter(C, True),
            int_str_converter(K, True))

        flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, s2=s2)
    answer = answer.format(K=K)
    comment = comment.format(s2=s2, c1=c1, c2=c2, c3=c3, B=B, C=C)


    return stem, answer, comment

# 3-1-2-389
def factorization312_Stem_324():
    stem = "다음 중 다항식 $$수식$${eq}$$/수식$$의 인수를 모두 고르면? (정답 2개)\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}, {a2}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "따라서 주어지 다항식의 인수인 것은 $$수식$${ans1}$$/수식$$, $$수식$${ans2}$$/수식$$이다.\n\n"

    eq_f = "{a}x` ({a}x`{s_b}`y )`{s_b}`y` ({b}y`{s_a}`x )`{s_a}`x`{s_b}`y`"
    eq1_f = "{a}x` ({a}x`{s_b}`y )`{s_b}`y` ({a}x`{s_b}`y )`+`({a}`x`{s_b}`y )`"
    eq2_f = "( {ans1} ) ( {ans2} )"

    sign = ["+", "-"]
    num = ["", "-"]

    a_pm = np.random.randint(0,2)
    b_pm = np.random.randint(0,2)
    
    s_a = sign[a_pm]
    a = num[a_pm]
    s_b = sign[b_pm]
    s_b_ = sign[1-b_pm]
    b = num[b_pm]

    eq = eq_f.format(a=a, b=b, s_a=s_a, s_b=s_b)
    eq1 = eq1_f.format(a=a, b=b, s_a=s_a, s_b=s_b)
    ans1 = "{a}x`{s_b}`y".format(a=a, s_b=s_b)
    ans2 = "{a}x`{s_b}`y`+1".format(a=a, s_b=s_b)
    eq2 = eq2_f.format(ans1=ans1, ans2=ans2)
    
    ex_lists = [ans1, ans2, "{a}x`{s_b}`y".format(a=a, s_b=s_b_), "{a}x`{s_b}`y`-`1".format(a=a, s_b=s_b), "{a}x`{s_b}`y`-`1".format(a=a, s_b=s_b_)]
    example_list = make_shuffle_example2(ex_lists, [0,1])
    example_list[0].sort()

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0][0]], a2=answer_dict[example_list[0][1]])
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, ans1=ans1, ans2=ans2)

    return stem, answer, comment


# 3-1-2-391
def factorization312_Stem_325():
    stem = "$$수식$${x_sq}$$/수식$$의 계수가 $$수식$${k}$$/수식$$인 어떤 이차식을 인수분해하는데 재연이는 $$수식$$x$$/수식$$의 계수를 잘못 보고 "\
        "$$수식$${wr_eq1}`$$/수식$$으로, 민아는 상수항을 잘못 보고 $$수식$${wr_eq2}`$$/수식$$으로 인수분해하였다. 처음 이차식을 바르게 인수분해하면 "\
        "$$수식$${k_}( x`+`a )( x`-`b )$$/수식$$라 할 때, 자연수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${a1}$$/수식$$\n"
    comment = "(해설)\n"\
        "재연이는 상수항을 제대로 보았으므로\n"\
        "$$수식$${wr_eq1}`=`{wr_eq1_}$$/수식$$\n"\
        "에서 처음 이차식의 상수항은 $$수식$${n}$$/수식$$이다.\n"\
        "민아는 $$수식$$x$$/수식$$의 계수를 제대로 보았으므로\n"\
        "$$수식$${wr_eq2}`=`{wr_eq2_}$$/수식$$\n"\
        "에서 처음 이차식의 $$수식$$x$$/수식$$의 계수는 $$수식$${m}$$/수식$$이다.\n"\
        "따라서 처음 이차식을 바르게 인수분해하면\n"\
        "$$수식$${ri_eq_}`=`{ri_eq}$$/수식$$\n"\
        "이므로 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$\n"\
        "따라서 $$수식$$ab`=`{ans}$$/수식$$\n\n"

    x_sq = "x^{2}"
    k = np.random.randint(1, 5)
    ans_ = random.sample([2, 3, 4, 5, 6], 2)
    
    # right equation res : -a, b
    a = ans_[0]
    b = ans_[1]
    ans = a * b

    # wrong1 eq res : c, d / wrong2 eq res : e, f
    factors = factor(a*b)
    c = random.sample(factors, 1)[0] * random.sample([-1, 1], 1)[0]
    d = int(-a * b / c)
    wr_eq1s = make_equation("x", 0, k, c, d)
    wr_eq1 = wr_eq1s[0]
    wr_eq1_ = wr_eq1s[2]

    e = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
    f = b-a - e
    wr_eq2s = make_equation("x", 0, k, e, f)
    wr_eq2 = wr_eq2s[0]
    wr_eq2_ = wr_eq2s[2]

    ri_eqs = make_equation("x", 0, k, -a, b)
    ri_eq = ri_eqs[0]
    ri_eq_ = ri_eqs[2]

    m = k * (a-b)
    n = k * (-a*b)

    stem = stem.format(x_sq=x_sq, k=k, k_=k if k != 1 else "", wr_eq1=wr_eq1, wr_eq2=wr_eq2)
    answer = answer.format(a1=ans)
    comment = comment.format(wr_eq1=wr_eq1, wr_eq1_=wr_eq1_, n=n, wr_eq2=wr_eq2, wr_eq2_=wr_eq2_, m=m, ri_eq=ri_eq, ri_eq_=ri_eq_, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-392
def factorization312_Stem_326():
    stem = "어떤 이차식을 인수분해하는데 원종이는 $$수식$${x_sq}$$/수식$$의 계수만 잘못 보고 "\
        "$$수식$${wr_eq1}`$$/수식$$으로, 미영이는 $$수식$$x$$/수식$$의 계수만 잘못 보고 $$수식$${wr_eq2}`$$/수식$$으로 인수분해하였다. 처음 이차식을 바르게 인수분해한 것은?\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "원종이는 $$수식$$x$$/수식$$의 계수와 상수항을 제대로 보았으므로\n"\
        "$$수식$${wr_eq1}`=`{wr_eq1_}$$/수식$$\n"\
        "에서 $$수식$$x$$/수식$$의 계수는 $$수식$${m}$$/수식$$, 상수항은 $$수식$${n}$$/수식$$이다.\n"\
        "미영이는 $$수식$${x_sq}$$/수식$$의 계수와 상수항을 제대로 보았으므로\n"\
        "$$수식$${wr_eq2}`=`{wr_eq2_}$$/수식$$\n"\
        "에서 $$수식$${x_sq}$$/수식$$의 계수는 $$수식$${k}$$/수식$$, 상수항은 $$수식$${n}$$/수식$$이다.\n"\
        "따라서 처음 이차식을 바르게 인수분해하면\n"\
        "$$수식$${ri_eq_}`=`{ri_eq}$$/수식$$\n\n"

    x_sq = "x^{2}"
    
    ri_eqs = random_eq_gen(1, "x", 0)
    ri_eq = ri_eqs[1]
    ri_eq_ = ri_eqs[2]

    a = ri_eqs[0][0][1]
    b = -ri_eqs[0][0][0]
    c = ri_eqs[0][1][1]
    d = -ri_eqs[0][1][0]

    k = a * c
    m = a * d + b * c
    n = b * d
    nfac = factor(abs(n))
    kfac = factor(abs(k))

    # generating wr_eq1
    k3 = random.sample(nfac, 1)[0]
    k4 = int(n/k3)
    k1 = np.random.randint(1,4)
    k2 = int((m - k1*k4)/k3)
    while k2*k3 != m - k1*k4 or k2*k3 == 0 or ((-b/a == -k3/k1 and -d/c == -k4/k2) or (-d/c == -k3/k1 and -b/a == -k4/k2)):
        print("trying....")
        k3 = random.sample(nfac, 1)[0]
        k4 = int(n/k3)
        k1 = np.random.randint(1,4)
        k2 = int((m - k1*k4)/k3)
    print([-k3, k1, -k4, k2])
    wr_eq1s = make_equation2("x", 0, [[-k3, k1], -k3/k1], [[-k4, k2], -k4/k2])
    wr_eq1 = wr_eq1s[0]
    wr_eq1_ = wr_eq1s[1]

    # generationg wr_eq2
    l1 = random.sample(kfac, 1)[0]
    l2 = int(k/l1)
    l3 = random.sample(nfac, 1)[0]
    l4 = int(n/l3)
    print(-b/a, -d/c, [-l3, l1, -l4, l2])
    while (-b/a == -l3/l1 and -d/c == -l4/l2) or (-d/c == -l3/l1 and -b/a == -l4/l2):
        l1 = random.sample(kfac, 1)[0] * random.sample([-1, 1], 1)[0]
        l2 = int(k/l1)
        l3 = random.sample(nfac, 1)[0] * random.sample([-1, 1], 1)[0]
        l4 = int(n/l3)
        print(-b/a, -d/c, [-l3, l1, -l4, l2])
    wr_eq2s = make_equation2("x", 0, [[-l3, l1], -l3/l1], [[-l4, l2], -l4/l2])
    wr_eq2 = wr_eq2s[0]
    wr_eq2_ = wr_eq2s[1]

    example_list = make_equation_example2("x", 0, [[-k3, k1], [-l3, l1]], ri_eqs, 0)

    stem = stem.format(x_sq=x_sq, wr_eq1=wr_eq1, wr_eq2=wr_eq2, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(wr_eq1=wr_eq1, wr_eq1_=wr_eq1_, n=n, wr_eq2=wr_eq2, wr_eq2_=wr_eq2_, m=m, ri_eq=ri_eq, ri_eq_=ri_eq_, k=k, x_sq=x_sq)
    
    return stem, answer, comment


# 3-1-2-393
def factorization312_Stem_327():
    stem = "넓이가 $$수식$${eq}$$/수식$$인 정사각형의 한 변의 길이를 $$수식$$Ax`+`B$$/수식$$라 할 때, "\
        "$$수식$$A`+`B$$/수식$$의 값을 구하시오. (단, $$수식$$x`SUCC`0$$/수식$$)\n"
    answer = "(답): $$수식$${a1}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eq_}$$/수식$$이고 $$수식$$x`SUCC`0$$/수식$$이므로\n"\
        "구하는 정사각형의 한 변의 길이는 $$수식$${x}$$/수식$$이다.\n"\
        "따라서 $$수식$$A`=`{a}$$/수식$$, $$수식$$B`=`{b}$$/수식$$이므로\n"\
        "따라서 $$수식$$A`+`B`=`{ans}$$/수식$$\n\n"

    eqs = random_eq_gen(2, "x", 0)
    eq = eqs[2]
    eq_ = eqs[1]
    fr = eqs[0][0]

    x = print_sol([fr], "x")

    a = fr[1]
    b = -fr[0]
    ans = a + b

    stem = stem.format(eq=eq)
    answer = answer.format(a1=ans)
    comment = comment.format(eq=eq, eq_=eq_, x=x, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-394
def factorization312_Stem_328():
    stem = "넓이가 $$수식$${eq}$$/수식$$인 직사각형의 가로의 길이가 $$수식$${e1}$$/수식$$라 할 때, "\
        "이 직사각형의 세로의 길이를 $$수식$$Ax`+`B$$/수식$$라 하자. $$수식$$A`+`B$$/수식$$의 값을 구하시오. (단, $$수식$$x`SUCC`0$$/수식$$)\n"
    answer = "(답): $$수식$${a1}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eq_}$$/수식$$이므로\n"\
        "세로의 길이는 $$수식$${e2}$$/수식$$이다.\n"\
        "따라서 $$수식$$A`=`{a}$$/수식$$, $$수식$$B`=`{b}$$/수식$$이므로\n"\
        "따라서 $$수식$$A`+`B`=`{ans}$$/수식$$\n\n"

    eqs = random_eq_gen(1, "x", 0)
    eq = eqs[2]
    eq_ = eqs[1]
    fr1 = eqs[0][0]
    fr2 = eqs[0][1]

    e1 = print_sol([fr1], "x")
    e2 = print_sol([fr2], "x")

    a = fr2[1]
    b = -fr2[0]
    ans = a + b

    stem = stem.format(eq=eq, e1=e1)
    answer = answer.format(a1=ans)
    comment = comment.format(eq=eq, eq_=eq_, e2=e2, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-395
def factorization312_Stem_329():
    stem = "다음 중 넓이가 $$수식$${wr1}$$/수식$$인 직사각형의 한 변의 길이가 될 수 있는 것은? "\
        "(정답 2개)(단, $$수식$$x`SUCC`{below}$$/수식$$)\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}, {a2}\n"
    comment = "(해설)\n"\
        "$$수식$${wr1}`=`{wr1_}$$/수식$$\n"\
        "$$수식$$=`{ri_}$$/수식$$\n"\
        "$$수식$$=`{ri}$$/수식$$\n"\
        "따라서 보기 중 넓이가 $$수식$${wr1}$$/수식$$인 직사각형의 한 변의 길이가 될 수 있는 것은\n"\
        "$$수식$${e1}$$/수식$$, $$수식$${e2}$$/수식$$이다.\n\n"

    ri_eqs = random_eq_gen(0, "x", 0)
    ri = ri_eqs[1]
    ri_ = ri_eqs[2]

    x1 = ri_eqs[0][0]
    x2 = ri_eqs[0][1]

    m = x1+x2
    k1 = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
    k2 = m-k1
    while k1 * k2 == x1 * x2:
        k1 = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        k2 = m-k1
    p = x1 * x2 - k1 * k2
    
    wrs = make_equation("x", 0, 1, k1, k2)
    wr = wrs[0]
    wr_ = wrs[2]

    if p > 0:
        wr1 = wr + "`+`{p}".format(p=p)
        wr1_ = wr_ + "`+`{p}".format(p=p)
    else:
        wr1 = wr + "`-`{p}".format(p=abs(p))
        wr1_ = wr_ + "`-`{p}".format(p=abs(p))

    e1 = print_sol([[x1,1]], "x")
    e2 = print_sol([[x2,1]], "x")

    ex_lists = [e1, e2]
    sols = [x1, x2]
    for i in range(3):
        k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        while k in sols:
            k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        sols.append(k)
        ex_lists.append(print_sol([[k,1]], "x"))
    
    below = max(sols)

    example_list = make_shuffle_example2(ex_lists, [0,1])
    example_list[0].sort()

    stem = stem.format(wr1=wr1, below=below, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0][0]], a2=answer_dict[example_list[0][1]])
    comment = comment.format(wr1=wr1, wr1_=wr1_, ri=ri, ri_=ri_, e1=e1, e2=e2)
    
    return stem, answer, comment


# 3-1-2-396
def factorization312_Stem_330():
    stem = "다음 중 $$수식$${eq}$$/수식$$의 인수를 모두 고르면? "\
        "(정답 2개)\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}, {a2}\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq}`=`{eqA1}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n\n"

    s = random.sample(["+", "-"], 1)[0]
    k1 = np.random.randint(1,4)
    k2 = np.random.randint(1,4)
    st = "%sa`%s`%sb" % (k1 if k1 != 1 else "", s, k2 if k2 != 1 else "")


    A_eqs = random_eq_gen(0, "A", 0)
    eqA = A_eqs[1]
    eqA_ = A_eqs[2]

    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]

    m = -x1-x2
    A_eqs2 = make_equation("A", 0, 1, 0, m)
    eqA1 = A_eqs2[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    
    eq = make_equation(st, 1, 1, 0, m)[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    eqs = make_equation(st, 1, 1, x1, x2)
    eq_ = eqs[0]

    e1 = print_sol([[x1,1]], st)
    e2 = print_sol([[x2,1]], st)

    ex_lists = [e1, e2]
    sols = [x1, x2]
    for i in range(3):
        k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        while k in sols:
            k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        sols.append(k)
        ex_lists.append(print_sol([[k,1]], st))

    example_list = make_shuffle_example2(ex_lists, [0,1])
    example_list[0].sort()

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0][0]], a2=answer_dict[example_list[0][1]])
    comment = comment.format(st=st, eq=eq, eqA1=eqA1, eqA=eqA, eqA_=eqA_, eq_=eq_)
    
    return stem, answer, comment


# 3-1-2-397
def factorization312_Stem_331():
    stem = "$$수식$${eq}$$/수식$$을 인수분해하였더니 $$수식$$(x`+`a ) (x`+`b )$$/수식$$가 되었다. "\
        "이때 $$수식$$ab$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$ 또는 $$수식$$a`=`{b}$$/수식$$, $$수식$$b`=`{a}$$/수식$$이므로\n"\
        "$$수식$$ab`=`{ans}$$/수식$$\n\n"

    k = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    st = "x`%s`%s" % ("+" if k > 0 else "-", abs(k))

    A_eqs = random_eq_gen(0, "A", 0)
    eqA = A_eqs[1]
    eqA_ = A_eqs[2]

    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]
    
    eqs = make_equation(st, 1, 1, x1, x2)
    eq_ = eqs[0]
    eq = eqs[2]

    p1 = x1 - k
    p2 = x2 - k
    fin_eq = make_equation("x", 0, 1, p1, p2)[0]

    a = -p1
    b = -p2
    ans = a * b

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(st=st, eq=eq, eqA=eqA, eqA_=eqA_, eq_=eq_, fin_eq=fin_eq, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-398
# hap - cha
def factorization312_Stem_332():
    stem = "$$수식$${eq}`=`({e1_} )({e2_} )$$/수식$$일 때, "\
        "$$수식$$a`-`b$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 정수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st1}`=`A$$/수식$$, $$수식$${st2}`=`B$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA_}`=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`-`b`=`{a}`-`{b_}`=`{ans}$$/수식$$\n\n"

    ks = random.sample([1,2,3,4,5], 2)
    ks.sort()
    ks2 = random.sample(list(range(1,8)), 2)

    k1 = ks[1]
    k2 = ks2[0] * random.sample([-1, 1], 2)[0]
    st1 = "%sx`%s`%s" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2))

    k3 = ks[0]
    k4 = ks2[1] * random.sample([-1, 1], 2)[0]
    st2 = "%sx`%s`%s" % (k3 if k3 != 1 else "", "+" if k4 > 0 else "-", abs(k4))

    eq = "( %s)^{2}`-`( %s)^{2}" % (st1, st2)
    eq_ = "{ ( %s)`+`( %s) } { ( %s)`-`( %s) }" % (st1, st2, st1, st2)
    
    p1 = k1 + k3
    p2 = k2 + k4
    e1 = "%sx`%s`%s" % (p1 if p1 != 1 else "", "+" if p2 >= 0 else "-", abs(p2))
    e1_ = "%sx`+`a" % (p1 if p1 != 1 else "")
    a = p2
    
    p3 = k1 - k3
    p4 = k2 - k4
    e2 = "%sx`%s`%s" % (p3 if p3 != 1 else "", "+" if p4 >= 0 else "-", abs(p4))
    e2_ = "%sx`+`b" % (p3 if p3 != 1 else "")
    b = p4

    ans = a - b

    fin_eq = "( %s) ( %s)" % (e1, e2)

    eqA_ = "A^{2}`-`B^{2}"
    eqA = "(A`+`B )(A`-`B )"

    if b < 0:
        b_ = "( %d )" % b
    else:
        b_ = b

    stem = stem.format(eq=eq, e1_=e1_, e2_=e2_)
    answer = answer.format(ans=ans)
    comment = comment.format(st1=st1, st2=st2, eq=eq, eqA=eqA, eqA_=eqA_, eq_=eq_, fin_eq=fin_eq, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-399
def factorization312_Stem_333():
    stem = "$$수식$${eq}`=`(x`+`a ) (bx`+`c )$$/수식$$일 때, 정수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, "\
        "$$수식$$c$$/수식$$에 대해서 $$수식$$abc$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$$(주어진식)`=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$, $$수식$$c`=`{c}$$/수식$$이므로\n"\
        "$$수식$$abc`=`{a}`times`{b_}`times`{c_}`=`{ans}$$/수식$$\n\n"

    k = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    st = "x`%s`%s" % ("+" if k > 0 else "-", abs(k))

    x1 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
    while x1 == k:
        x1 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
    f1 = [[x1, 1], x1/1]
    f2 = frac_gen3(0, 1, [2, 3, 4, 5], 1)
    while f2[0][0] == k*f2[0][1]:
        f2 = frac_gen3(0, 1, [2, 3, 4, 5], 1)

    eqAs = make_equation2("A", 0, f1, f2)
    eqA = eqAs[0]
    eqA_ = eqAs[1]
    
    eqs = make_equation2(st, 1, f1, f2)
    eq_ = eqs[0]
    eq = eqs[1]

    p1 = [[x1 - k, 1], x1-k]
    p2 = [[f2[0][0] - k*f2[0][1], f2[0][1]], f2[0][0] - k*f2[0][1]]
    fin_eq = make_equation2("x", 0, p1, p2)[0]

    a = k - x1
    b = f2[0][1]
    c = f2[0][1]*k - f2[0][0]
    ans = a * b * c

    b_ = "( %d)" % b if b < 0 else b
    c_ = "( %d)" % c if c < 0 else c

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(st=st, eqA=eqA, eqA_=eqA_, eq_=eq_, fin_eq=fin_eq, a=a, b=b, c=c, b_=b_, c_=c_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-400
def factorization312_Stem_334():
    stem = "다음 중 두 다항식 $$수식$${eq1_1}$$/수식$$과 $$수식$${eq2}$$/수식$$의 공통인 인수는?\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${eq1_1}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$이므로\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq1}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq1_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq1}$$/수식$$\n"\
        "한편, $$수식$${eq2}`=`{eq2_}$$/수식$$\n"\
        "따라서 두 다항식의 공통인 인수는 $$수식$${e}$$/수식$$이다.\n\n"

    k = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    st = "x`%s`%s" % ("+" if k > 0 else "-", abs(k))
    st_ = "%s`-`x" % (-k)
    
    xs = random.sample(list(range(1,6)), 2)
    x1 = xs[0] * random.sample([-1,1], 1)[0]
    x2 = xs[1] * random.sample([-1,1], 1)[0]
    m = -(x1 + x2)
    n = x1 * x2

    eq1 = "(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (st, "+" if m > 0 else "-", abs(m) if abs(m) != 1 else "", st, "+" if n > 0 else "-", abs(n))
    eq1_1 = "(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (st, "+" if m < 0 else "-", abs(m) if abs(m) != 1 else "", st_, "+" if n > 0 else "-", abs(n))

    A_eqs = make_equation("A", 0, 1, x1, x2)
    eqA = A_eqs[2]
    eqA_ = A_eqs[0]

    eqs = make_equation(st, 1, 1, x1, x2)
    eq1_ = eqs[0]

    p1 = x1 - k
    p2 = x2 - k
    fins = make_equation("x", 0, 1, p1, p2)
    fin_eq1 = fins[0]

    fr = frac_gen3(0, 1, [2,3,4,5], 2)
    rf = np.random.randint(0,2)
    eq2s = make_equation2("x", 0, fr, [[[p1,p2][rf],1], [p1, p2][rf]])
    eq2 = eq2s[1]
    eq2_ = eq2s[0]

    e = print_sol([[[p1, p2][rf],1]], "x")

    ex_lists = [e]
    sols = [[p1, p2][rf]]
    for i in range(4):
        k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        while k in sols:
            k = np.random.randint(1,6) * random.sample([-1, 1], 1)[0]
        sols.append(k)
        ex_lists.append(print_sol([[k,1]], "x"))

    example_list = make_shuffle_example(ex_lists, 0)

    stem = stem.format(eq1_1=eq1_1, eq2=eq2, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(eq1_1=eq1_1, eq1=eq1, eq1_=eq1_, fin_eq1=fin_eq1, st=st, eqA=eqA, eqA_=eqA_, eq2=eq2, eq2_=eq2_, e=e)
    
    return stem, answer, comment


# 3-1-2-401
def factorization312_Stem_335():
    stem = "$$수식$${eq_1}$$/수식$$가 $$수식$$( Ax`+`By`{r1} )( Cx`+`Dy`{r2} )$$/수식$$로 인수분해될 때, "\
        "$$수식$$AC`+`BD$$/수식$$의 값을 구하시오. (단, $$수식$$A$$/수식$$, $$수식$$B$$/수식$$, $$수식$$C$$/수식$$, $$수식$$D$$/수식$$는 정수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq_1}$$/수식$$\n"\
        "$$수식$$`={eq}$$/수식$$에서\n"\
        "$$수식$${st}`=`X$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqX}$$/수식$$\n"\
        "$$수식$$=`{eqX_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$A`=`{A}$$/수식$$, $$수식$$B`=`{B}$$/수식$$, $$수식$$C`=`{C}$$/수식$$, $$수식$$D`=`{D}$$/수식$$이므로\n"\
        "$$수식$$AC`+`BD`=`{A}`times`{B_}`+`{C_}`times`{D_}`=`{ans}$$/수식$$\n\n"

    k1 = np.random.randint(1,4)
    k2 = np.random.randint(1,4) * random.sample([1, -1], 1)[0]
    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", "" if abs(k2) == 1 else abs(k2))

    X_eqs = random_eq_gen(1, "X", 0)
    eqX_ = X_eqs[1]
    eqX = X_eqs[2]
    f1 = X_eqs[0][0]
    f2 = X_eqs[0][1]
    a = f1[1]
    b = -f1[0]
    c = f2[1]
    d = -f2[0]

    while b == d or b*c == -a*d:
        X_eqs = random_eq_gen(1, "X", 0)
        eqX_ = X_eqs[1]
        eqX = X_eqs[2]
        f1 = X_eqs[0][0]
        f2 = X_eqs[0][1]
        a = f1[1]
        b = -f1[0]
        c = f2[1]
        d = -f2[0]

    m = b*c + a*d
    n = b*d
    r1 = "%s`%s" % ("+" if b > 0 else "-", abs(b))
    r2 = "%s`%s" % ("+" if d > 0 else "-", abs(d))

    eq_1 = "%sLEFT(%s )^{2}`%s`%sx`%s`%sy`%s`%d" % (a*c if a*c != 1 else "", st, "+" if m*k1 > 0 else "-", abs(m*k1), "+" if m*k2 > 0 else "-", abs(m*k2), "+" if n > 0 else "-", abs(n))
    eqs = make_equation2(st, 1, [f1, f1[0]/f1[1]], [f2, f2[0]/f2[1]])
    eq = eqs[1]
    eq_ = eqs[0]

    fin_eq = "(%sx`%s`%sy`%s )(%sx`%s`%sy`%s )" % (a*k1 if a*k1 != 1 else "", "+" if a*k2 > 0 else "-", "" if abs(a*k2) == 1 else abs(a*k2), r1, c*k1 if c*k1 != 1 else "", "+" if c*k2 > 0 else "-", "" if abs(c*k2) == 1 else abs(c*k2), r2)
    A = a*k1
    B = a*k2
    C = c*k1
    D = c*k2

    B_ = B
    C_ = C
    D_ = D
    if B < 0:
        B_ = "( %s )" % B
    if C < 0:
        C_ = "( %s )" % C
    if D < 0:
        D_ = "( %s )" % D

    ans = A*B + C*D

    stem = stem.format(eq_1=eq_1, r1=r1, r2=r2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_1=eq_1, eq=eq, eq_=eq_, fin_eq=fin_eq, st=st,\
        eqX=eqX, eqX_=eqX_, A=A, B=B, C=C, D=D, B_=B_, C_=C_, D_=D_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-402
def factorization312_Stem_336():
    stem = "다항식 $$수식$${eq}$$/수식$$를 인수분해하면?\n"\
        "① $$수식$${ex1}$$/수식$$\n② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$\n④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA1}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n\n"

    k1 = np.random.randint(1,3)
    k2 = np.random.randint(1,3) * random.sample([1, -1], 1)[0]
    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", "" if abs(k2) == 1 else abs(k2))

    mode = [-1, 0][int(np.random.rand()+0.3)]

    A_eqs = random_eq_gen(mode, "A", 0)
    eqA = A_eqs[1]
    eqA_ = A_eqs[2]

    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]

    m = -x1-x2
    A_eqs2 = make_equation("A", 0, 1, 0, m)
    eqA1 = A_eqs2[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    
    eq = make_equation(st, 1, 1, 0, m)[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    eqs = make_equation(st, 1, 1, x1, x2)
    eq_ = eqs[0]

    example_list = make_equation_example(st, 1, [-x1, x2*2], [[x1, x2] ,eqs[0], eqs[2]], 0)

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(st=st, eq=eq, eqA1=eqA1, eqA=eqA, eqA_=eqA_, eq_=eq_)
    
    return stem, answer, comment


# 3-1-2-403
def factorization312_Stem_337():
    stem = "$$수식$${eq}$$/수식$$이 $$수식$$x$$/수식$$의 계수가 1인 두 일차식의 곱으로 인수분해 될 때, "\
        "두 일차식의 합을 $$수식$$Ax`+`By`+`C$$/수식$$라 하자. $$수식$$A`+`B`+`C$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`X$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA1}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "따라서 두 일차식의 합은\n"\
        "$$수식$$({e1} )`+`({e2} )`=`{eans}$$/수식$$이므로\n"\
        "$$수식$$A`=`{A}$$/수식$$, $$수식$$B`=`{B}$$/수식$$, $$수식$$C`=`{C}$$/수식$$\n"\
        "$$수식$$A`+`B`+`C`=`{A}`+`{B_}`+`{C_}`=`{ans}$$/수식$$\n\n"

    k1 = np.random.randint(1,4)
    k2 = np.random.randint(1,4) * random.sample([1, -1], 1)[0]
    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", "" if abs(k2) == 1 else abs(k2))
    st2 = "%sx`%s`%sy" % (2*k1, "+" if k2 > 0 else "-", 2*abs(k2))

    A = 2*k1
    B = 2*k2

    A_eqs = random_eq_gen(0, "X", 0)
    eqA = A_eqs[1]
    eqA_ = A_eqs[2]

    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]

    m = -x1-x2
    A_eqs2 = make_equation("X", 0, 1, 0, m)
    eqA1 = A_eqs2[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    
    eq = make_equation(st, 1, 1, 0, m)[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    eqs = make_equation(st, 1, 1, x1, x2)
    eq_ = eqs[0]

    e1 = print_sol([[x1,1]], st)
    e2 = print_sol([[x2,1]], st)

    eans = print_sol([[x1+x2,1]], st2)
    C = m

    B_ = B
    C_ = C
    if B < 0 :
        B_ = "( %s)" % B
    if C < 0 :
        C_ = "( %s)" % C
    ans = A + B + C

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(st=st, eq=eq, eqA1=eqA1, eqA=eqA, eqA_=eqA_, eq_=eq_, \
        e1=e1, e2=e2, eans=eans, A=A, B=B, C=C, B_=B_, C_=C_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-404
def factorization312_Stem_338():
    stem = "$$수식$${eq}`=`{eq_pq}$$/수식$$일 때, "\
        "상수 $$수식$$p$$/수식$$, $$수식$$q$$/수식$$에 대하여 $$수식$$p`+`q$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA1}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "따라서 $$수식$$p`=`{p}$$/수식$$, $$수식$$q`=`{q}$$/수식$$ 또는 $$수식$$p`=`{q}$$/수식$$, $$수식$$q`=`{p}$$/수식$$이므로\n"\
        "$$수식$$p`+`q`=`{ans}$$/수식$$\n\n"

    k1 = np.random.randint(1,4)
    k2 = np.random.randint(1,4) * random.sample([1, -1], 1)[0]
    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", "" if abs(k2) == 1 else abs(k2))

    eq_pq = "(%s`+`p ) (%s`+q )" % (st, st)

    A_eqs = random_eq_gen(0, "A", 0)
    eqA = A_eqs[1]
    eqA_ = A_eqs[2]

    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]

    m = -x1-x2
    A_eqs2 = make_equation("A", 0, 1, 0, m)
    eqA1 = A_eqs2[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    
    eq = make_equation(st, 1, 1, 0, m)[0] + "`%s`%d" % ("+" if abs(x1*x2) > 0 else "-", abs(x1*x2))
    eqs = make_equation(st, 1, 1, x1, x2)
    eq_ = eqs[0]

    p = -x1
    q = -x2
    ans = p + q

    stem = stem.format(eq=eq, eq_pq=eq_pq)
    answer = answer.format(ans=ans)
    comment = comment.format(st=st, eq=eq, eqA1=eqA1, eqA=eqA, eqA_=eqA_, eq_=eq_, \
        p=p, q=q, ans=ans)
    
    return stem, answer, comment


# 3-1-2-405
def factorization312_Stem_339():
    stem = "$$수식$${eq}`=`({e1_} )({e2_} )$$/수식$$일 때, "\
        "$$수식$$a`-`b$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 정수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st1}`=`A$$/수식$$, $$수식$${st2}`=`B$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA_}`=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`-`b`=`{a}`-`{b_}`=`{ans}$$/수식$$\n\n"

    ks = random.sample([1,2,3,4,5], 2)
    ks.sort()
    ks2 = random.sample(list(range(1,8)), 2)

    k1 = ks[1]
    k2 = ks2[0] * random.sample([-1, 1], 2)[0]
    st1 = "%sx`%s`%s" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2))

    k3 = ks[0]
    k4 = ks2[1] * random.sample([-1, 1], 2)[0]
    st2 = "%sx`%s`%s" % (k3 if k3 != 1 else "", "+" if k4 > 0 else "-", abs(k4))

    eq = "( %s)^{2}`-`( %s)^{2}" % (st1, st2)
    eq_ = "{ ( %s)`+`( %s) } { ( %s)`-`( %s) }" % (st1, st2, st1, st2)
    
    p1 = k1 + k3
    p2 = k2 + k4
    e1 = "%sx`%s`%s" % (p1 if p1 != 1 else "", "+" if p2 >= 0 else "-", abs(p2))
    e1_ = "%sx`+`a" % (p1 if p1 != 1 else "")
    a = p2
    
    p3 = k1 - k3
    p4 = k2 - k4
    e2 = "%sx`%s`%s" % (p3 if p3 != 1 else "", "+" if p4 >= 0 else "-", abs(p4))
    e2_ = "%sx`+`b" % (p3 if p3 != 1 else "")
    b = p4

    ans = a - b

    fin_eq = "( %s) ( %s)" % (e1, e2)

    eqA_ = "A^{2}`-`B^{2}"
    eqA = "(A`+`B )(A`-`B )"

    if b < 0:
        b_ = "( %d )" % b
    else:
        b_ = b

    stem = stem.format(eq=eq, e1_=e1_, e2_=e2_)
    answer = answer.format(ans=ans)
    comment = comment.format(st1=st1, st2=st2, eq=eq, eqA=eqA, eqA_=eqA_, eq_=eq_, fin_eq=fin_eq, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-406
def factorization312_Stem_340():
    stem = "$$수식$${eq}`=`{eq_abc}$$/수식$$일 때, "\
        "정수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 $$수식$$abc$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st1}`=`A$$/수식$$, $$수식$${st2}`=`B$$/수식$$로 놓으면\n"\
        "(주어진식)$$수식$$`=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$, $$수식$$c`=`{c}$$/수식$$이므로\n"\
        "$$수식$$abc`=`{ans}$$/수식$$\n\n"

    ks2 = random.sample(list(range(1,8)), 2)

    k1 = np.random.randint(1,4)
    k2 = ks2[0] * random.sample([-1, 1], 2)[0]
    st1 = "%sx`%s`%s" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2))

    k3 = np.random.randint(1,4)
    k4 = ks2[1] * random.sample([-1, 1], 2)[0]
    st2 = "%sx`%s`%s" % (k3 if k3 != 1 else "", "+" if k4 > 0 else "-", abs(k4))

    A_eqs = random_eq_gen_v2(1, "A", "B", 0)
    eqA = A_eqs[2]
    eqA_ = A_eqs[1]
    f1 = A_eqs[0][0]
    f2 = A_eqs[0][1]
    a = f1[1]
    b = -f1[0]
    c = f2[1]
    d = -f2[0]

    while a * k1 + b * k3 == 0 or c * k1 + d * k3 == 0 or a * k1 + b * k3 == c * k1 + d * k3:
        A_eqs = random_eq_gen_v2(1, "A", "B", 0)
        eqA = A_eqs[2]
        eqA_ = A_eqs[1]
        f1 = A_eqs[0][0]
        f2 = A_eqs[0][1]
        a = f1[1]
        b = -f1[0]
        c = f2[1]
        d = -f2[0]


    p1 = a * k1 + b * k3
    p2 = a * k2 + b * k4
    e1 = "%sx`%s`%s" % (("" if p1 == 1 else "-") if abs(p1) == 1 else p1, "+" if p2 >= 0 else "-", abs(p2))
    
    p3 = c * k1 + d * k3
    p4 = c * k2 + d * k4
    e2 = "%sx`%s`%s" % (("" if p3 == 1 else "-") if abs(p3) == 1 else p3, "+" if p4 >= 0 else "-", abs(p4))

    eq_abc = "(ax`+`b ) (%sx`+`c )" % (p3 if p3 != 1 else "")
    fin_eq = "(%s )(%s )" % (e1, e2)

    a = p1
    b = p2
    c = p4
    ans = a*b*c

    eqs = make_equation2_v2(st1, st2, 1, [f1, f1[0]/f1[1]], [f2, f2[0]/f2[1]])
    eq = eqs[1]
    eq_ = eqs[0]

    stem = stem.format(eq=eq, eq_abc=eq_abc)
    answer = answer.format(ans=ans)
    comment = comment.format(st1=st1, st2=st2, eqA=eqA, eqA_=eqA_, eq_=eq_, \
        fin_eq=fin_eq, a=a, b=b, c=c, ans=ans)
    
    return stem, answer, comment


# 3-1-2-407
def factorization312_Stem_341():
    stem = "$$수식$${eq}$$/수식$$이 $$수식$${eq_abc}$$/수식$$로 인수분해 될 때, "\
        "정수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$에 대하여 $$수식$$abc$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${st1}`=`A$$/수식$$, $$수식$${st2}`=`B$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n"\
        "$$수식$$=`{fin_eq2}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$, $$수식$$c`=`{c}$$/수식$$이므로\n"\
        "$$수식$$abc`=`{ans}$$/수식$$\n\n"

    ks2 = random.sample(list(range(1,8)), 2)

    k1 = np.random.randint(1,4)
    k2 = ks2[0] * random.sample([-1, 1], 2)[0]
    st1 = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2) if abs(k2) != 1 else "")

    k3 = np.random.randint(1,4)
    k4 = ks2[1] * random.sample([-1, 1], 2)[0]
    st2 = "%sx`%s`%sy" % (k3 if k3 != 1 else "", "+" if k4 > 0 else "-", abs(k4) if abs(k4) != 1 else "")

    A_eqs = random_eq_gen_v2(1, "A", "B", 0)
    eqA = A_eqs[2]
    eqA_ = A_eqs[1]
    f1 = A_eqs[0][0]
    f2 = A_eqs[0][1]
    a = f1[1]
    b = -f1[0]
    c = f2[1]
    d = -f2[0]

    p1 = a * k1 + b * k3
    p2 = a * k2 + b * k4
    p3 = c * k1 + d * k3
    p4 = c * k2 + d * k4

    while p1 == 0 or p3 == 0 or p1 == p3:
        print("trying...")
        A_eqs = random_eq_gen_v2(1, "A", "B", 0)
        eqA = A_eqs[2]
        eqA_ = A_eqs[1]
        f1 = A_eqs[0][0]
        f2 = A_eqs[0][1]
        a = f1[1]
        b = -f1[0]
        c = f2[1]
        d = -f2[0]

        p1 = a * k1 + b * k3
        p2 = a * k2 + b * k4
        p3 = c * k1 + d * k3
        p4 = c * k2 + d * k4

    gcd1 = gcd(abs(p1), abs(p2))
    gcd2 = gcd(abs(p3), abs(p4))
    if gcd1 * gcd2 == 1:
        rf = np.random.randint(0,2)
        mul_f = np.random.randint(2, 5)
        if rf == 0:
            f1 = [f1[0]*mul_f, f1[1]*mul_f]
        else:
            f2 = [f2[0]*mul_f, f2[1]*mul_f]
        A_eqs = make_equation2_v2("A", "B", 0, [f1, f1[0]/f1[1]], [f2, f2[0]/f2[1]])
        eqA = A_eqs[1]
        eqA_ = A_eqs[0]
    
    a = f1[1]
    b = -f1[0]
    c = f2[1]
    d = -f2[0]
    p1 = a * k1 + b * k3
    p2 = a * k2 + b * k4
    p3 = c * k1 + d * k3
    p4 = c * k2 + d * k4
    
    gcd1 = gcd(abs(p1), abs(p2))
    gcd2 = gcd(abs(p3), abs(p4)) 

    e1 = "%sx`%s`%sy" % (("" if p1 == 1 else "-") if abs(p1) == 1 else p1, "+" if p2 >= 0 else "-", abs(p2) if abs(p2) != 1 else "")
    e2 = "%sx`%s`%sy" % (("" if p3 == 1 else "-") if abs(p3) == 1 else p3, "+" if p4 >= 0 else "-", abs(p4) if abs(p4) != 1 else "")

    e1_ = "%sx`%s`%sy" % (("" if int(p1/gcd1) == 1 else "-") if abs(int(p1/gcd1)) == 1 else int(p1/gcd1), "+" if int(p2/gcd1) >= 0 else "-", abs(int(p2/gcd1)) if abs(int(p2/gcd1)) != 1 else "")
    e2_ = "%sx`%s`%sy" % (("" if int(p3/gcd2) == 1 else "-") if abs(int(p3/gcd2)) == 1 else int(p3/gcd2), "+" if int(p4/gcd2) >= 0 else "-", abs(int(p4/gcd2)) if abs(int(p4/gcd2)) != 1 else "")

    eq_abc = "a (bx`%s`%sy ) (%sx`+`cy )" % ("+" if int(p2/gcd1) >= 0 else "-", abs(int(p2/gcd1)) if abs(int(p2/gcd1)) != 1 else "", ("" if int(p3/gcd2) == 1 else "-") if abs(int(p3/gcd2)) == 1 else int(p3/gcd2))
    fin_eq = "(%s )(%s )" % (e1, e2)
    fin_eq2 = "%sLEFT(%s )(%s )" % (gcd1*gcd2, e1_, e2_)

    a = gcd1 * gcd2
    b = int(p1/gcd1)
    c = int(p4/gcd2)
    ans = a*b*c

    eqs = make_equation2_v2(st1, st2, 1, [f1, f1[0]/f1[1]], [f2, f2[0]/f2[1]])
    eq = eqs[1]
    eq_ = eqs[0]

    stem = stem.format(eq=eq, eq_abc=eq_abc)
    answer = answer.format(ans=ans)
    comment = comment.format(st1=st1, st2=st2, eq=eq, eqA=eqA, eqA_=eqA_, eq_=eq_, \
        fin_eq=fin_eq, fin_eq2=fin_eq2, a=a, b=b, c=c, ans=ans)
    
    return stem, answer, comment


# 3-1-2-408
def factorization312_Stem_342():
    stem = "$$수식$${eq}$$/수식$$의 인수인 것은?\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${st1}`=`A$$/수식$$, $$수식$${st2}`=`B$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n\n"

    ks2 = random.sample(list(range(1,8)), 2)

    k1 = np.random.randint(1,4)
    k2 = ks2[0] * random.sample([-1, 1], 2)[0]
    st1 = "%sx`%s`%s" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2))

    k3 = np.random.randint(1,4)
    k4 = ks2[1] * random.sample([-1, 1], 2)[0]
    st2 = "%sx`%s`%s" % (k3 if k3 != 1 else "", "+" if k4 > 0 else "-", abs(k4))

    A_eqs = random_eq_gen_v2(2, "A", "B", 0)
    eqA = A_eqs[2]
    eqA_ = A_eqs[1]
    f1 = A_eqs[0][0]
    a = f1[1]
    b = -f1[0]

    while a * k1 + b * k3 == 0:
        A_eqs = random_eq_gen_v2(2, "A", "B", 0)
        eqA = A_eqs[2]
        eqA_ = A_eqs[1]
        f1 = A_eqs[0][0]
        a = f1[1]
        b = -f1[0]


    p1 = a * k1 + b * k3
    p2 = a * k2 + b * k4
    e1 = "%sx`%s`%s" % (("" if p1 == 1 else "-") if abs(p1) == 1 else p1, "+" if p2 >= 0 else "-", abs(p2))
    if p2 == 0:
        e1 = "%sx" % (("" if p1 == 1 else "-") if abs(p1) == 1 else p1)
    fin_eq = "(%s )^{2}" % (e1)

    eqs = make_equation2_v2(st1, st2, 1, [f1, f1[0]/f1[1]], [f1, f1[0]/f1[1]])
    eq = eqs[1]
    eq_ = eqs[0]

    ex_lists = [e1]
    sols = [[[-p2, p1], p2/p1]]
    base_list = [abs(p1), abs(p1)-1, abs(p1)-2]
    if abs(p1) < 3:
        base_list = [1, 2, 3, 4]
    
    for i in range(4):
        f = frac_gen3(0, 1, base_list, 3)
        while f[1] in list(map(lambda x: x[1], sols)):
            f = frac_gen3(0, 1, base_list, 3)
        sols.append(f)
        ex_lists.append(print_sol([f[0]], "x"))
    
    example_list = make_shuffle_example(ex_lists, 0)

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(st1=st1, st2=st2, eq=eq, eqA=eqA, eqA_=eqA_, eq_=eq_, \
        fin_eq=fin_eq)
    
    return stem, answer, comment


# 3-1-2-409
# match1
def factorization312_Stem_343():
    stem = "$$수식$${eq}$$/수식$$가 완전제곱식이 되도록 하는 상수 $$수식$$k$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq_match}$$/수식$$\n"\
        "$$수식$$=`{eqA1_}$$/수식$$\n"\
        "$$수식$$=`{eqA1}$$/수식$$\n"\
        "이것이 완전제곱식이 되려면\n"\
        "$$수식$${k_eq}`=`{n}`=`{n_2}$$/수식$$\n"\
        "따라서 $$수식$$k`=`{ans}$$/수식$$\n\n"

    var = "a"
    plus = np.random.randint(1,6) * random.sample([1, -1], 1)[0]
    st = "%s^{2}`%s`%s%s" % (var, "+" if plus > 0 else "-", abs(plus) if abs(plus) != 1 else "", var)

    k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
    k1 = k_ls[0]
    k2 = plus - k1
    k3 = k_ls[1]
    k4 = plus - k3

    while abs(k1*k2 + k3*k4) % 2 != 0 or k1 == k4 or k1 == 0 or k2 == 0 or k3 == 0 or k4 == 0:
        k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
        k1 = k_ls[0]
        k2 = plus - k1
        k3 = k_ls[1]
        k4 = plus - k3
    
    ks = [k1, k2, k3, k4]
    random.shuffle(ks)
    eq = "( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) `%s`%s" % (var, "+" if ks[0] > 0 else "-", abs(ks[0]), \
        var, "+" if ks[1] > 0 else "-", abs(ks[1]), var, "+" if ks[2] > 0 else "-", abs(ks[2]), var, "+" if ks[3] > 0 else "-", abs(ks[3]), "+", "k")
    eq_match_ = "{ ( %s`%s`%s ) ( %s`%s`%s ) } { ( %s`%s`%s ) ( %s`%s`%s ) } `%s`%s" % \
        (var, "+" if k1 > 0 else "-", abs(k1), var, "+" if k2 > 0 else "-", abs(k2), var, "+" if k3 > 0 else "-", abs(k3), var, "+" if k4 > 0 else "-", abs(k4), "+", "k")
    eq_match = "(%s`%s`%s ) (%s`%s`%s ) `%s`%s" % (st, "+" if k1*k2 > 0 else "-", abs(k1*k2), st, "+" if k3*k4 > 0 else "-", abs(k3*k4), "+", "k")

    A_eqs = make_equation("A", 0, 1, -k1*k2, -k3*k4)
    eqA = A_eqs[2]
    eqA_ = A_eqs[0]
    eqA1 = eqA + "`%s`%s" % ("+", "k")
    eqA1_ = eqA_ + "`%s`%s" % ("+", "k")
    
    k_eq = "%s`+`k" % (k1*k2*k3*k4)
    n = "( {%d} over {%d} )^{2}" % (k1*k2 + k3*k4, 2)
    n_2 = int((k1*k2 + k3*k4) ** 2 / 4)
    ans = n_2 - k1*k2*k3*k4

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, st=st, eq=eq, eqA1=eqA1, eqA1_=eqA1_, k_eq=k_eq, n=n, n_2=n_2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-410
# match2
def factorization312_Stem_344():
    stem = "다음 중 다항식 $$수식$${eq}$$/수식$$의 인수인 것을 모두 고르면? (정답 $$수식$$2$$/수식$$개)\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}, {a2}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq_match}$$/수식$$\n"\
        "$$수식$$=`{eqA1_}$$/수식$$\n"\
        "$$수식$$=`{eqA2}$$/수식$$\n"\
        "$$수식$$=`{eqA2_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n\n"

    var = "x"
    plus = np.random.randint(1,6) * random.sample([1, -1], 1)[0]
    st = "%s^{2}`%s`%s%s" % (var, "+" if plus > 0 else "-", abs(plus) if abs(plus) != 1 else "", var)

    k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
    k1 = k_ls[0]
    k2 = plus - k1
    k3 = k_ls[1]
    k4 = plus - k3

    while k1 == k4 or k1 == 0 or k2 == 0 or k3 == 0 or k4 == 0:
        k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
        k1 = k_ls[0]
        k2 = plus - k1
        k3 = k_ls[1]
        k4 = plus - k3
    
    ks = [k1, k2, k3, k4]
    random.shuffle(ks)
    eq = "( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) `%s`%s" % (var, "+" if ks[0] > 0 else "-", abs(ks[0]), \
        var, "+" if ks[1] > 0 else "-", abs(ks[1]), var, "+" if ks[2] > 0 else "-", abs(ks[2]), var, "+" if ks[3] > 0 else "-", abs(ks[3]), "+", "k")
    eq_match_ = "{ ( %s`%s`%s ) ( %s`%s`%s ) } { ( %s`%s`%s ) ( %s`%s`%s ) } `%s`%s" % \
        (var, "+" if k1 > 0 else "-", abs(k1), var, "+" if k2 > 0 else "-", abs(k2), var, "+" if k3 > 0 else "-", abs(k3), var, "+" if k4 > 0 else "-", abs(k4), "+", "k")
    eq_match = "(%s`%s`%s ) (%s`%s`%s ) `%s`%s" % (st, "+" if k1*k2 > 0 else "-", abs(k1*k2), st, "+" if k3*k4 > 0 else "-", abs(k3*k4), "+", "k")

    A_eqs = make_equation("A", 0, 1, -k1*k2, -k3*k4)
    eqA = A_eqs[2]
    eqA_ = A_eqs[0]

    p1 = np.random.randint(1,4) * random.sample([-1, 1], 1)[0]
    p2 = -(k1*k2 + k3*k4) - p1
    k = p1*p2 - k1*k2*k3*k4
    while p2 == 0 or k == 0:
        p1 = np.random.randint(1,4) * random.sample([-1, 1], 1)[0]
        p2 = -(k1*k2 + k3*k4) - p1
        k = p1*p2 - k1*k2*k3*k4
    
    eqA1_ = eqA_ + "`%s`%s" % ("+", k)
    A2_eqs = make_equation("A", 0, 1, p1, p2)
    eqA2 = A2_eqs[2]
    eqA2_ = A2_eqs[0]
    eqs = make_equation(st, 0, 1, p1, p2)
    eq_ = eqs[0]
    
    e1 = print_sol([[p1,1]], st)
    e2 = print_sol([[p2,1]], st)

    ex_lists = [e1, e2]
    sols = [p1, p2]
    for i in range(3):
        k = np.random.randint(1,max(max(sols), 6)) * random.sample([-1, 1], 1)[0]
        while k in sols:
            k = np.random.randint(1,max(max(sols), 6)) * random.sample([-1, 1], 1)[0]
        sols.append(k)
        ex_lists.append(print_sol([[k,1]], st))

    example_list = make_shuffle_example2(ex_lists, [0,1])
    example_list[0].sort()

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0][0]], a2=answer_dict[example_list[0][1]])
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, st=st, eq=eq, eqA2=eqA2, eqA1_=eqA1_, eqA2_=eqA2_, eq_=eq_)
    
    return stem, answer, comment


# 3-1-2-411
def factorization312_Stem_345():
    stem = "다음 중 다항식 $$수식$${eq}$$/수식$$이 $$수식$${eq_ab}$$/수식$$로 인수분해 될 때, $$수식$$ab$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq_match}$$/수식$$\n"\
        "$$수식$$=`{eqA1_}$$/수식$$\n"\
        "$$수식$$=`{eqA2}$$/수식$$\n"\
        "$$수식$$=`{eqA2_}$$/수식$$\n"\
        "$$수식$$=`{eq_}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$ab`=`{ans}$$/수식$$\n\n"

    var = "x"
    plus = np.random.randint(1,6) * random.sample([1, -1], 1)[0]
    st = "%s^{2}`%s`%s%s" % (var, "+" if plus > 0 else "-", abs(plus) if abs(plus) != 1 else "", var)

    eq_ab = "(%s^{2}`+`a%s`+`b )^{2}" % (var, var)

    k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
    k1 = k_ls[0]
    k2 = plus - k1
    k3 = k_ls[1]
    k4 = plus - k3

    while abs(k1*k2 + k3*k4) % 2 != 0 or k1 == k4 or k1 == 0 or k2 == 0 or k3 == 0 or k4 == 0:
        k_ls = random.sample([-1, -2, -3, 1, 2, 3], 2)
        k1 = k_ls[0]
        k2 = plus - k1
        k3 = k_ls[1]
        k4 = plus - k3

    ks = [k1, k2, k3, k4]
    random.shuffle(ks)
    eq = "( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) ( %s`%s`%s ) `%s`%s" % (var, "+" if ks[0] > 0 else "-", abs(ks[0]), \
        var, "+" if ks[1] > 0 else "-", abs(ks[1]), var, "+" if ks[2] > 0 else "-", abs(ks[2]), var, "+" if ks[3] > 0 else "-", abs(ks[3]), "+", "k")
    eq_match_ = "{ ( %s`%s`%s ) ( %s`%s`%s ) } { ( %s`%s`%s ) ( %s`%s`%s ) } `%s`%s" % \
        (var, "+" if k1 > 0 else "-", abs(k1), var, "+" if k2 > 0 else "-", abs(k2), var, "+" if k3 > 0 else "-", abs(k3), var, "+" if k4 > 0 else "-", abs(k4), "+", "k")
    eq_match = "(%s`%s`%s ) (%s`%s`%s ) `%s`%s" % (st, "+" if k1*k2 > 0 else "-", abs(k1*k2), st, "+" if k3*k4 > 0 else "-", abs(k3*k4), "+", "k")

    A_eqs = make_equation("A", 0, 1, -k1*k2, -k3*k4)
    eqA = A_eqs[2]
    eqA_ = A_eqs[0]

    p1 = int(-(k1*k2 + k3*k4) / 2)
    p2 = p1
    k = p1*p2 - k1*k2*k3*k4
    while p2 == 0 or k == 0:
        p1 = np.random.randint(1,4) * random.sample([-1, 1], 1)[0]
        p2 = -(k1*k2 + k3*k4) - p1
        k = p1*p2 - k1*k2*k3*k4
    
    eqA1_ = eqA_ + "`%s`%s" % ("+", k)
    A2_eqs = make_equation("A", 0, 1, p1, p2)
    eqA2 = A2_eqs[2]
    eqA2_ = A2_eqs[0]
    eqs = make_equation(st, 0, 1, p1, p2)
    eq_ = eqs[0]
    
    b = -p1 
    a = plus
    ans = a*b

    stem = stem.format(eq=eq, eq_ab=eq_ab)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, st=st, eq=eq, eqA2=eqA2, eqA1_=eqA1_, eqA2_=eqA2_, eq_=eq_, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-412
def factorization312_Stem_346():
    stem = "$$수식$${eq}$$/수식$$이 $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 세 일차식의 곱으로 인수분해 될 때, "\
        "세 일차식의 합을 $$수식$$Ax`+`B$$/수식$$라 하자. $$수식$$AB$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$$=`{eq_fin}$$/수식$$\n"\
        "따라서 세 일차식은 $$수식$${e1}$$/수식$$, $$수식$${e2}$$/수식$$, $$수식$${e3}$$/수식$$이므로 이들의 합은\n"\
        "$$수식$$( {e1} ) `+` ({e2} ) `+` ({e3} ) `=` {eq_AB}$$/수식$$\n"\
        "따라서 $$수식$$A`=`3$$/수식$$, $$수식$$B`=`{B}$$/수식$$이므로\n"\
        "$$수식$$AB`=`{ans}$$/수식$$\n\n"

    var = "x"
    a = np.random.randint(1, 7)*random.sample([-1,1],1)[0]
    k = np.random.randint(1,5)

    e1 = "%s`%s`%s" % (var, "+" if a > 0 else "-", abs(a))
    e2 = "%s`%s`%s" % (var, "+", k)
    e3 = "%s`%s`%s" % (var, "-", k)

    eq = "%s^{3}`%s`%s%s^{2}`%s`%s%s`%s`%s" % (var, "+" if a > 0 else "-", abs(a) if abs(a) != 1 else "", var, "-", k**2 if k**2 != 1 else "", var, "-" if a > 0 else "+", abs(a*(k**2)))
    eq_match_ = "%s^{2}(%s )`%s`%sLEFT(%s )" % (var, e1, "-", k**2 if k**2 != 1 else "", e1)
    eq_match = "(%s )(%s^{2}`%s`%s )" % (e1, var, "-", k**2)
    eq_fin = "(%s ) (%s ) (%s )" % (e1, e2, e3)

    eq_AB = "3%s`%s`%s" % (var, "+" if a > 0 else "-", abs(a))

    B = a
    ans = a*3

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, eq_fin=eq_fin, eq=eq, e1=e1, e2=e2, e3=e3, eq_AB=eq_AB, B=B, ans=ans)
    
    return stem, answer, comment


# 3-1-2-415
# hap - cha2
def factorization312_Stem_347():
    stem = "$$수식$${eq}$$/수식$$의 $$수식$$x$$/수식$$의 계수가 $$수식$$1$$/수식$$인 두 일차식의 곱으로 인수분해 될 때, "\
        "두 일차식의 합을 $$수식$$Ax`+`By`+`C$$/수식$$라 하자. $$수식$$A`+`B`+`C$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_fin}$$/수식$$\n"\
        "이므로 두 일차식의 합은\n"\
        "$$수식$$({e1} )`+`({e2} )`=`{ans_ABC} $$/수식$$\n"\
        "따라서 $$수식$$A`=`{A}$$/수식$$, $$수식$$B`=`{B}$$/수식$$, $$수식$$C`=`{C}$$/수식$$이므로\n"\
        "$$수식$$A`+`B`+`C`=`{ans}$$/수식$$\n\n"

    rf = np.random.randint(0,2)

    if rf == 0:
        var1 = "x"
        var2 = "y"
    else:
        var2 = "x"
        var1 = "y"

    m = np.random.randint(1,5)
    
    k = np.random.randint(1,9) * random.sample([-1,1], 1)[0]
    st = "%s`%s`%s" % (var2, "+" if k > 0 else "-", abs(k))
    st_ = "%s`%s`%s" % (var2, "-" if k > 0 else "+", abs(k))
    y_2 = "`%s`%s^{2}" % ("-", var2)
    y_1 = "`%s`%s%s" % ("-" if k > 0 else "+", abs(2*k), var2)
    y_0 = "`%s`%s" % ("-", k**2)
    ys = [y_2, y_1, y_0]
    random.shuffle(ys)

    eq = "%s%s^{2}" % (m**2 if m**2 != 1 else "", var1) + ys[0] + ys[1] + ys[2]
    eq_match = "%s%s^{2}`-`(%s^{2}`%s`%s%s`%s`%s )" % (m**2 if m**2 != 1 else "", var1, var2, "+" if k > 0 else "-", abs(k*2), var2, "+", k**2)
    eq_match_ = "(%s%s )^{2}`-`( %s)^{2}" % (m if m != 1 else "", var1, st)
    
    e1 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "+", st)
    e2 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "-", st_)
    eq_fin = "(%s ) (%s )" % (e1, e2)
    
    A = 0
    B = 0
    C = 0
    if rf == 0:
        A = 2*m
    else:
        B = 2*m

    ans = A + B + C
    ans_ABC = "%s%s" % (ans, var1)

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, eq_fin=eq_fin, eq=eq, e1=e1, e2=e2, A=A, B=B, C=C, ans_ABC=ans_ABC, ans=ans)
    
    return stem, answer, comment


# 3-1-2-416
def factorization312_Stem_348():
    stem = "두 다항식 $$수식$${eq1}$$/수식$$, $$수식$${eq2_1}$$/수식$$의 공통인 인수가 $$수식$${k1}x`+`ay`+`b$$/수식$$일 때, "\
        "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}$$/수식$$\n"\
        "$$수식$$=`{eq1_match}$$/수식$$\n"\
        "$$수식$$=`{eq1_match_}$$/수식$$\n"\
        "$$수식$$=`{eq1_fin}$$/수식$$\n"\
        "$$수식$${eq2_1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq2}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq2_fin}$$/수식$$\n"\
        "이므로 두 다항식의 공통인 인수는 $$수식$${e}$$/수식$$이다.\n"\
        "따라서 $$수식$$a={a}$$/수식$$, $$수식$$b={b}$$/수식$$이므로\n$$수식$$ab={ans}$$/수식$$\n\n"

    ks = random.sample(list(range(1,7)), 2)
    k1 = ks[0]
    k2 = ks[1] * random.sample([-1, 1], 1)[0]

    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2) if abs(k2) != 1 else "")
    st_ = "%sy`-`%sx" % (-k2 if -k2 != 1 else "", k1 if k1 != 1 else "")
    
    xs = random.sample(list(range(1,6)), 2)
    x1 = xs[0] * random.sample([-1,1], 1)[0]
    x2 = xs[1] * random.sample([-1,1], 1)[0]
    m = -(x1 + x2)
    n = x1 * x2

    eq2 = "(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (st, "+" if m > 0 else "-", abs(m) if abs(m) != 1 else "", st, "+" if n > 0 else "-", abs(n))
    eq2_1 = "(%s )^{2}`%s`%sLEFT(%s )`%s`%d" % (st, "+" if m < 0 else "-", abs(m) if abs(m) != 1 else "", st_, "+" if n > 0 else "-", abs(n))

    A_eqs = make_equation("A", 0, 1, x1, x2)
    eqA = A_eqs[2]
    eqA_ = A_eqs[0]

    eqs = make_equation(st, 0, 1, x1, x2)
    eq2_fin = eqs[0]

    rf = np.random.randint(0,2)
    if rf == 0:
        k = x1
    else:
        k = x2

    eq1 = "%sx^{2}" % (k1**2 if k1**2 != 1 else "")
    eq1s = ["`-`%s" % (k**2), "`%s`%sxy" % ("+" if k1*k2 > 0 else "-", abs(2*k1*k2)), "`+`%sy^{2}" % (k2**2 if k2**2 != 1 else "")]
    eq1_match = "(%s )`-`%s" % (eq1+eq1s[1]+eq1s[2], k**2)  
    random.shuffle(eq1s)
    eq1 = eq1 + eq1s[0] + eq1s[1] + eq1s[2]

    eq1_match_ = "(%s )^{2}`-`%s^{2}" % (st, abs(k))
    e1 = "%s`%s`%s" % (st, "+", abs(k))
    e2 = "%s`%s`%s" % (st, "-", abs(k))
    eq1_fin = "(%s ) (%s )" % (e1, e2)

    e = print_sol([[k,1]], st)
    a = k2
    b = -k
    ans = a*b

    stem = stem.format(eq1=eq1, eq2_1=eq2_1, k1=k1)
    answer = answer.format(ans=ans)
    comment = comment.format(eq2_1=eq2_1, eq2=eq2, st=st, eqA=eqA, eqA_=eqA_, eq2_fin=eq2_fin, \
        eq1=eq1, eq1_match=eq1_match, eq1_match_=eq1_match_, eq1_fin=eq1_fin, e=e, a=a, b=b, ans=ans)
    
    return stem, answer, comment


# 3-1-2-417
def factorization312_Stem_349():
    stem = "$$수식$${eq1}$$/수식$$을 인수분해하였더니 $$수식$$({k1}x`+`ay`+`b ) ({k1}x`+`cy`+`d )$$/수식$$이 되었다. "\
        "이때 $$수식$$abcd$$/수식$$의 값을 구하시오. (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$, $$수식$$c$$/수식$$, $$수식$$d$$/수식$$는 상수이다.)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}$$/수식$$\n"\
        "$$수식$$=`{eq1_match}$$/수식$$\n"\
        "$$수식$$=`{eq1_match_}$$/수식$$\n"\
        "$$수식$$=`{eq1_fin}$$/수식$$\n"\
        "따라서 $$수식$$a={a}$$/수식$$, $$수식$$b={b}$$/수식$$, $$수식$$c={a}$$/수식$$, $$수식$$d={d}$$/수식$$ 또는 "\
        "$$수식$$a={a}$$/수식$$, $$수식$$b={d}$$/수식$$, $$수식$$c={a}$$/수식$$, $$수식$$d={b}$$/수식$$이므로\n"\
        "$$수식$$abcd={ans}$$/수식$$\n\n"

    ks = random.sample(list(range(1,7)), 2)
    k1 = ks[0]
    k2 = ks[1] * random.sample([-1, 1], 1)[0]

    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2) if abs(k2) != 1 else "")
    st_ = "%sy`-`%sx" % (-k2 if -k2 != 1 else "", k1 if k1 != 1 else "")

    k = np.random.randint(1,7)

    eq1 = "%sx^{2}" % (k1**2 if k1**2 != 1 else "")
    eq1s = ["`-`%s" % (k**2), "`%s`%sxy" % ("+" if k1*k2 > 0 else "-", abs(2*k1*k2)), "`+`%sy^{2}" % (k2**2 if k2**2 != 1 else "")]
    eq1_match = "(%s )`-`%s" % (eq1+eq1s[1]+eq1s[2], k**2)  
    random.shuffle(eq1s)
    eq1 = eq1 + eq1s[0] + eq1s[1] + eq1s[2]

    eq1_match_ = "(%s )^{2}`-`%s^{2}" % (st, abs(k))
    e1 = "%s`%s`%s" % (st, "+", abs(k))
    e2 = "%s`%s`%s" % (st, "-", abs(k))
    eq1_fin = "(%s ) (%s )" % (e1, e2)

    a = k2
    b = k
    d = -k
    ans = a*a*b*d

    stem = stem.format(eq1=eq1, k1=k1)
    answer = answer.format(ans=ans)
    comment = comment.format(eq1=eq1, eq1_match=eq1_match, eq1_match_=eq1_match_, eq1_fin=eq1_fin, a=a, b=b, d=d, ans=ans)
    
    return stem, answer, comment


# 3-1-2-419
def factorization312_Stem_350():
    stem = "다음 중 $$수식$${eq}$$/수식$$의 인수를 모두 고르면?\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}, {a2}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_m}$$/수식$$\n"\
        "$$수식$$=`{eq_m_}$$/수식$$\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq_m_}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{fin_eq}$$/수식$$\n\n"

    k1 = np.random.randint(1,3)
    k2 = np.random.randint(1,3) * random.sample([-1, 1], 1)[0]
    st = "%sa`%s`%sb" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2) if abs(k2) != 1 else "")
        
    A_eqs = random_eq_gen_v2(0, "x", "A", 0)
    eqA = A_eqs[2]
    eqA_ = A_eqs[1]
    
    x1 = A_eqs[0][0]
    x2 = A_eqs[0][1]
    m = -x1-x2
    n = x1*x2

    eqs = ["`%s`%sa^{2}" % ("+" if n > 0 else "-", abs(n*(k1**2)) if abs(n*(k1**2)) != 1 else ""), "`%s`%sab" % ("+" if k1*k2*n > 0 else "-", abs(2*k1*n*k2)), \
        "`%s`%sb^{2}" % ("+" if n > 0 else "-", abs(n*(k2**2)) if abs(n*(k2**2)) != 1 else ""), "`%s`%sax" % ("+" if m*k1 > 0 else "-", abs(m*k1)), "`%s`%sbx" % ("+" if m*k2 > 0 else "-", abs(m*k2))]
    st_2 = eqs[0] + eqs[1] + eqs[2]
    random.shuffle(eqs)
    eq = "x^{2}" + eqs[0] + eqs[1] + eqs[2] + eqs[3] + eqs[4]

    eq_m_ = "x^{2}`%s`%sLEFT(%s )x`%s`%sLEFT(%s )^{2}" % ("+" if m > 0 else "-", abs(m) if abs(m) != 1 else "", st, "+" if n > 0 else "-", abs(n) if abs(n) != 1 else "", st)
    eq_m = "x^{2}`%s`%sLEFT(%s )x"  % ("+" if m > 0 else "-", abs(m) if abs(m) != 1 else "", st) + st_2

    e1 = "x`%s`%sa`%s`%sb" % ("+" if -k1*x1 > 0 else "-", abs(k1*x1) if abs(k1*x1) != 1 else "", "+" if -k2*x1 > 0 else "-", abs(k2*x1) if abs(k2*x1) != 1 else "")
    e2 = "x`%s`%sa`%s`%sb" % ("+" if -k1*x2 > 0 else "-", abs(k1*x2) if abs(k1*x2) != 1 else "", "+" if -k2*x2 > 0 else "-", abs(k2*x2) if abs(k2*x2) != 1 else "")
    fin_eq = "(%s ) (%s )" % (e1, e2)

    ex_lists = [e1, e2]
    sols = [[-k1*x1, -k2*x1], [-k1*x2, -k2*x2]]
    lim = max(abs(k1*x1), abs(k2*x1), abs(k1*x2), abs(k2*x2), 3)

    for i in range(3):
        p1 = np.random.randint(1, lim) * random.sample([-1, 1], 1)[0]
        p2 = np.random.randint(1, lim) * random.sample([-1, 1], 1)[0]
        while p1 in list(map(lambda x: x[0], sols)) and p2 in list(map(lambda x: x[1], sols)):
            p1 = np.random.randint(1, lim) * random.sample([-1, 1], 1)[0]
            p2 = np.random.randint(1, lim) * random.sample([-1, 1], 1)[0]
        sols.append([p1,p2])
        
        e = "x`%s`%sa`%s`%sb" % ("+" if p1 > 0 else "-", abs(p1) if abs(p1) != 1 else "", "+" if p2 > 0 else "-", abs(p2) if abs(p2) != 1 else "")
        ex_lists.append(e)
    
    example_list = make_shuffle_example2(ex_lists, [0,1])
    example_list[0].sort()

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0][0]], a2=answer_dict[example_list[0][1]])
    comment = comment.format(st=st, eq=eq, eqA=eqA, eqA_=eqA_, eq_m=eq_m, eq_m_=eq_m_, fin_eq=fin_eq)
    
    return stem, answer, comment


# 3-1-2-420
def factorization312_Stem_351():
    stem = "인수분해를 이용하여 $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    alpha = random.sample([0.15, 0.25, 0.35, 0.45], 1)[0]
    alpha_ = 1 - alpha

    k_1 = random.sample(list(range(1, 5)), 1)[0]
    k_2 = 10 - k_1
    k1 = k_2 + alpha
    k2 = k_1 + alpha_

    p = round(k1-k2, 1)

    eq = "%s^{2}`-`%s^{2}" % (k1, k2)
    eq_ = "(%s`+`%s ) (%s`-`%s )" % (k1, k2, k1, k2)
    eq_n = "10`times`%s" % p
    ans = int(10 * p)

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq_=eq_, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-422
def factorization312_Stem_352():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}$$/수식$$을 계산하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq3}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    k = np.random.randint(20,80)
    k1 = np.random.randint(10,k)
    k2 = k - k1
    p2 = 100 - k
    
    B = np.random.randint(p2/5, p2/3)
    A = p2 + B
    p1 = A + B

    eq = "%s^{2}`-`%s^{2}`+`%s`times`%s`+`%s`times`%s" % (A, B, p1, k1, p1, k2)
    eq1 = "(%s`+`%s ) (%s`-`%s )`+` %sLEFT(%s`+`%s )" % (A, B, A, B, p1, k1, k2)
    eq2 = "%s`times`%s`+`%s`times`%s" % (p1, p2, p1, k)
    eq3 = "%sLEFT(%s`+`%s )" % (p1, p2, k)
    eq_n = "%s`times`100" % p1
    ans = p1 * 100

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, eq3=eq3, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-423
def factorization312_Stem_353():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}$$/수식$$을 계산하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{ans}$$/수식$$\n\n"
    
    rf = np.random.randint(0,2)
    k = np.random.randint(1, 10)

    if rf == 0:
        k1 = np.random.randint(1,6) * 100 + k
        
        eq = "sqrt{%s^{2} `-`2`%s`times%s`+`%s}" % (k1, "`times`{k}".format(k=k) if k !=1 else "", k1, k**2)
        eq1 = "sqrt{ (%s`-`%s )^{2} }" % (k1, k)
        eq2 = "sqrt{ %s^{2} }" % (k1-k)
        ans = k1-k
    else:
        k1 = np.random.randint(1,6) * 100 - k

        eq = "sqrt{%s^{2} `+`2`%s`times%s`+`%s}" % (k1, "`times`{k}".format(k=k) if k !=1 else "", k1, k**2)
        eq1 = "sqrt{ (%s`+`%s )^{2} }" % (k1, k)
        eq2 = "sqrt{ %s^{2} }" % (k1+k)
        ans = k1+k

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-424
def factorization312_Stem_354():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}$$/수식$$을 계산하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq3}$$/수식$$\n"\
        "$$수식$$=`{eq4}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    ks = random.sample(list(range(2,10)), 3)
    k = ks[0]
    p1 = max(ks[1], ks[2])
    p2 = min(ks[1], ks[2])
    while (p1 + p2) % 2 != 0:
        ks = random.sample(list(range(2,10)), 3)
        k = ks[0]
        p1 = max(ks[1], ks[2])
        p2 = min(ks[1], ks[2])

    A = int((p1**2 + p2**2)/2)
    B = int((p1**2 - p2**2)/2)

    eq = "sqrt {%s` TIMES `%s^{2} `-`%s ^{2} ` TIMES `%s}" % (k**2, A, B, k**2)
    eq1 = "sqrt{ %s`times`(%s^{2}`-`%s^{2} ) }" % (k**2, A, B)
    eq2 = "sqrt{ %s`times`(%s`+`%s ) (%s`-`%s )}" % (k**2, A, B, A, B)
    eq3 = "sqrt{%s`times`%s`times`%s}" % (k**2, p1**2, p2**2)
    eq4 = "sqrt{%s^{2}`times`%s^{2}`times`%s^{2}}" % (k, p1, p2)
    eq_n = "%s`times`%s`times`%s" % (k, p1, p2)
    ans = k*p1*p2

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, eq3=eq3, eq4=eq4, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-425
def factorization312_Stem_355():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}$$/수식$$을 계산하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    A = np.random.randint(100, 1000)
    facs = factor(A)
    f = random.sample(facs, 1)[0]
    while int(A/f) < 10:
        f = random.sample(facs, 1)[0]
    B = int(A/f) + 1
    

    eq = "{%s` TIMES` %s`+`%s} over {%s^{2} `-`1}" % (A, B, A, B)
    eq1 = "{%s`TIMES` (%s`+`1)} over {(%s`+`1)(%s`-`1)}" % (A, B, B, B)
    eq_n = "{%s`TIMES` %s} over {%s`TIMES`%s}" % (A, B+1, B+1, B-1)
    ans = f

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-426
def factorization312_Stem_356():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}`=`A$$/수식$$일 때, $$수식$${p}A$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "(주어진식)\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq3}`=`{A}`=`A$$/수식$$\n"\
        "따라서 $$수식$${p}A`=`{p}`times`{A}`=`{ans}$$/수식$$\n\n"

    a = np.random.randint(2,5)
    k = np.random.randint(a+1, 11)

    eq = "( 1`-` {1} over {%s ^{2}} )  ( 1`-` {1} over {%s ^{2}}  )  ( 1`-` {1} over {%s ^{2}}  ) `CDOTS` ( 1`-` {1} over {%s ^{2}}  )  ( 1`-` {1} over {%s ^{2}}  )" % \
        (a, a+1, a+2, a+k-1, a+k)
    eq1_ = " ( 1`-` {1} over {%s}  )  ( 1`+` {1} over {%s}  )  ( 1`-` {1} over {%s}  )  ( 1`+` {1} over {%s}  )  ( 1`-` {1} over {%s}  )" + \
        " ( 1`+` {1} over {%s}  )` CDOTS ` ( 1`-` {1} over {%s}  )  ( 1`+` {1} over {%s}  )  ( 1`-`{1} over {%s}  )  ( 1`+` {1} over {%s}  )" 
    eq1 = eq1_ % (a, a, a+1, a+1, a+2,a+2, a+k-1, a+k-1, a+k, a+k)
    eq3 = "{%s} over {%s} `TIMES` {%s} over {%s}" % (a-1, a, a+k+1, a+k)
    eq2 = "{%s} over {%s} `TIMES` {%s} over {%s} `TIMES` {%s} over {%s} `TIMES` {%s} over {%s}`CDOTS`{%s} over {%s} `TIMES` {%s} over {%s}" % \
        (a-1, a, a+1, a, a, a+1, a+2, a+1, a+k-1, a+k, a+k+1, a+k)

    ctr = ctr_frac2((a-1)*(a+k+1),a*(a+k))
    A = print_ans(ctr[0], ctr[1])
    p = ctr[1]
    ans = ctr[0]

    stem = stem.format(eq=eq, p=p)
    answer = answer.format(ans=ans)
    comment = comment.format(eq1=eq1, eq2=eq2, eq3=eq3, A=A, p=p, ans=ans)
    
    return stem, answer, comment


# 3-1-2-427
def factorization312_Stem_357():
    stem = "인수분해 공식을 이용하여 $$수식$${eq}$$/수식$$를 계산하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{ans}$$/수식$$\n\n"

    a = np.random.randint(1,3)
    d = np.random.randint(1,4)
    num = np.random.randint(4, 7)
    
    eq_f = "%s ^{2} `-`%s ^{2}"
    eq1_f = "(%s`+`%s ) (%s`-`%s )"
    eq = ""
    eq1 = ""
    eq2_f = ""
    for i in range(num):
        if eq == "":
            eq = eq + eq_f % (a+d*2*i, a+d*(2*i+1))
            eq1 = eq1 + eq1_f % (a+d*2*i, a+d*(2*i+1), a+d*2*i, a+d*(2*i+1))
            eq2_f = eq2_f + str(a+d*2*i) + "`+`" + str(a+d*(2*i+1))
        elif i == 4:
            eq = eq + "`+`" + eq_f % (a+d*2*i, a+d*(2*i+1))
            eq1 = eq1 + "$$/수식$$\n$$수식$$````+`" + eq1_f % (a+d*2*i, a+d*(2*i+1), a+d*2*i, a+d*(2*i+1))
            eq2_f = eq2_f + "`+`" + str(a+d*2*i) + "`+`" + str(a+d*(2*i+1))
        else:
            eq = eq + "`+`" + eq_f % (a+d*2*i, a+d*(2*i+1))
            eq1 = eq1 + "`+`" + eq1_f % (a+d*2*i, a+d*(2*i+1), a+d*2*i, a+d*(2*i+1))
            eq2_f = eq2_f + "`+`" + str(a+d*2*i) + "`+`" + str(a+d*(2*i+1))

    eq2 = "-%s`times`(%s )" % (d, eq2_f)
    
    plus = (a + 2*num - 1) * num
    ans = -d * plus

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-428
def factorization312_Stem_358():
    stem = "$$수식$${eq}$$/수식$$는 어떤 자연수 $$수식$$x$$/수식$$의 제곱일 때, $$수식$$x$$/수식$$의 값은?\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq3}$$/수식$$\n"\
        "$$수식$$=`{eq4}`=`{eq5}$$/수식$$\n"\
        "따라서 $$수식$$x`=`{ans}$$/수식$$\n\n"

    year = 2020

    p = np.random.randint(1, 10)
    m = 2*p
    n = p**2

    eq = "%s`times`%s`+`%s" % (year, year+m, n)
    eq1 = "%s`times`(%s`+`%s )`+`%s" % (year, year, m, n)
    eq2 = "%s^{2}`+`%s`times`%s`+`%s" % (year, m, year, n)
    eq3 = "%s^{2}`+`2`times`%s`times`%s`+`%s^{2}" % (year, year, p, p)
    eq4 = "(%s`+`%s )^{2}" % (year, p)
    eq5 = "%s^{2}" % (year+p)
    ans = year+p

    example_list = make_example(ans)

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, eq3=eq3, eq4=eq4, eq5=eq5, ans=ans)
    
    return stem, answer, comment


# 3-1-2-429
def factorization312_Stem_359():
    stem = "다음 보기 중 $$수식$${eq}$$/수식$$을 계산하는 데 사용되는 인수분해 공식을 모두 고르면?\n"\
        "$$표$$㈀ $$수식$${e1}$$/수식$$\n㈁ $$수식$${e2}$$/수식$$\n㈂ $$수식$${e3}$$/수식$$\n㈃ $$수식$${e4}$$/수식$$ $$/표$$\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "{coms}"\
        "따라서 주어진 풀이 과정에서 사용된 인수분해 공식은 {lists}이다.\n\n"

    signs = ["㈀", "㈁", "㈂", "㈃"]
    
    e1 = "ma`+`mb`=`m(a`+`b)"
    e2 = "a ^{2} `+`2ab`+`b ^{2} `=`(a`+`b) ^{2}"
    e3 = "a ^{2} `-`b ^{2} `=`(a`+`b)(a`-`b)"
    e4 = "x ^{2} `+`(a`+`b)x`+`ab`=`(x`+`a)(x`+`b)"

    # 12 orders
    order_l = [[0], [1], [2], [0,1], [0,2], [0,3], [1,2], [1,3], [2,3], [0,1,2], [0,2,3], [1,2,3]]

    rf = np.random.randint(1, 6)

    if rf == 1:
        coms = "$$수식$${eq}`=`{eq_}$$/수식$$\n" + \
            "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n"

        alpha = random.sample([0.15, 0.25, 0.35, 0.45], 1)[0]
        alpha_ = 1 - alpha

        k_1 = random.sample(list(range(1, 5)), 1)[0]
        k_2 = 10 - k_1
        k1 = k_2 + alpha
        k2 = k_1 + alpha_

        p = round(k1-k2, 1)

        eq = "%s^{2}`-`%s^{2}" % (k1, k2)
        eq_ = "(%s`+`%s ) (%s`-`%s )" % (k1, k2, k1, k2)
        eq_n = "10`times`%s" % p
        ans = int(10 * p)

        coms = coms.format(eq=eq, eq_=eq_, eq_n=eq_n, ans=ans)
        o_idx = 2
    elif rf == 2:
        coms = "$$수식$${eq}$$/수식$$\n" + \
            "$$수식$$=`{eq1}$$/수식$$\n" + \
            "$$수식$$=`{eq2}$$/수식$$\n" + \
            "$$수식$$=`{eq3}$$/수식$$\n" + \
            "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n"

        k = np.random.randint(20,80)
        k1 = np.random.randint(10,k)
        k2 = k - k1
        p2 = 100 - k
        
        B = np.random.randint(p2/5, p2/3)
        A = p2 + B
        p1 = A + B

        eq = "%s^{2}`-`%s^{2}`+`%s`times`%s`+`%s`times`%s" % (A, B, p1, k1, p1, k2)
        eq1 = "(%s`+`%s ) (%s`-`%s )`+` %sLEFT(%s`+`%s )" % (A, B, A, B, p1, k1, k2)
        eq2 = "%s`times`%s`+`%s`times`%s" % (p1, p2, p1, k)
        eq3 = "%sLEFT(%s`+`%s )" % (p1, p2, k)
        eq_n = "%s`times`100" % p1
        ans = p1 * 100

        coms = coms.format(eq=eq, eq1=eq1, eq2=eq2, eq3=eq3, eq_n=eq_n, ans=ans)
        o_idx = 4
    elif rf == 3:
        coms = "$$수식$${eq}$$/수식$$\n"\
            "$$수식$$=`{eq1}$$/수식$$\n"\
            "$$수식$$=`{eq2}$$/수식$$\n"\
            "$$수식$$=`{ans}$$/수식$$\n"

        k = np.random.randint(1, 10)
        k1 = np.random.randint(1,4) * 100 + k

        eq = "sqrt{%s^{2} `-`2`%s`times%s`+`%s}" % (k1, "`times`{k}".format(k=k) if k !=1 else "", k1, k**2)
        eq1 = "sqrt{ (%s`-`%s )^{2} }" % (k1, k)
        eq2 = "sqrt{ %s^{2} }" % (k1-k)
        ans = k1-k

        coms = coms.format(eq=eq, eq1=eq1, eq2=eq2, ans=ans)
        o_idx = 1
    elif rf == 4:
        coms = "$$수식$${eq}$$/수식$$\n"\
            "$$수식$$=`{eq1}$$/수식$$\n"\
            "$$수식$$=`{eq2}$$/수식$$\n"\
            "$$수식$$=`{eq3}$$/수식$$\n"\
            "$$수식$$=`{ans}$$/수식$$\n"

        k = random.sample([3.14, 1.41, 2.71, 1.73, 1.61], 1)[0]
        B = np.random.randint(10,50)
        A = 100 - B

        eq = "%s` TIMES `%s^{2} `-`%s` TIMES `%s^{2}" % (k, A, k, B)
        eq1 = "%s`times`(%s^{2}`-`%s^{2} )" % (k, A, B)
        eq2 = "%s`times`(%s`+`%s ) (%s`-`%s )" % (k, A, B, A, B)
        eq3 = "%s`times`%s`times`%s" % (k, 100, A-B)
        ans = int(k*100*(A-B))

        coms = coms.format(eq=eq, eq1=eq1, eq2=eq2, eq3=eq3, ans=ans)
        o_idx = 4
    else:
        coms = "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n"

        A = np.random.randint(100, 1000)
        facs = factor(A)
        f = random.sample(facs, 1)[0]
        while int(A/f) < 10:
            f = random.sample(facs, 1)[0]
        B = int(A/f) + 1
        
        eq = "{%s` TIMES` %s`+`%s} over {%s^{2} `-`1}" % (A, B, A, B)
        eq1 = "{%s`TIMES` (%s`+`1)} over {(%s`+`1)(%s`-`1)}" % (A, B, B, B)
        eq_n = "{%s`TIMES` %s} over {%s`TIMES`%s}" % (A, B+1, B+1, B-1)
        ans = f

        coms = coms.format(eq=eq, eq1=eq1, eq_n=eq_n, ans=ans)
        o_idx = 4

    ans_order = order_l[o_idx]
    lists = ""
    for i in range(len(ans_order)):
        if lists == "":
            lists = lists + signs[ans_order[i]]
        else:
            lists = lists + ", " + signs[ans_order[i]]
    
    base_idxs = random.sample(list(range(0,12)), 5)
    if o_idx in base_idxs:
        base_idxs.sort()
    else:
        del base_idxs[4]
        base_idxs.append(o_idx)
        base_idxs.sort()

    for i in range(5):
        if o_idx == base_idxs[i]:
            ans_idx = i
    
    example_list = [ans_idx]
    for i in range(5):
        idxs = order_l[base_idxs[i]]
        e = ""
        for j in range(len(idxs)):
            if e == "":
                e = e + signs[idxs[j]]
            else:
                e = e + ", " + signs[idxs[j]]
        example_list.append(e)

    stem = stem.format(eq=eq, e1=e1, e2=e2, e3=e3, e4=e4, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(coms=coms, lists=lists)
    
    return stem, answer, comment


# 3-1-2-430
def factorization312_Stem_360():
    stem = "$$수식$${eq}$$/수식$$이 $$수식$$a$$/수식$$의 배수일 때, 다음 중 자연수 $$수식$$a$$/수식$$의 값이 될 수 없는 것은?\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "{eqs}"\
        "{eq_nums}"\
        "따라서 자연수 $$수식$$a$$/수식$$의 값이 될 수 없는 것은 {a1}이다.\n\n"

    a = np.random.randint(2,4)
    if a == 2:
        b = random.sample([8, 16, 32], 1)[0]
    else:
        b = random.sample([8], 1)[0]
    eq = "%s ^{%s} `-`1`" % (a, b)
    n = get_factorization(b)[0][1]
    
    eq_add = ""
    eq_ = "(%s`+`%s ) (%s`-`%s )"
    eqs = ""
    k = "%s ^{%s}"
    eq_nums = "$$수식$$=`"
    numbers = []

    for i in range(n-1):
        b = int(b/2)
        k_ = k % (a, b)
        eq1 = eq_ % (k_, 1, k_, 1)
        eqs = eqs + "$$수식$$=`%s%s$$/수식$$\n" % (eq_add, eq1)
        eq_add = eq_add + "(%s`+`%s )" % (k_, 1)
        num = a ** b + 1
        eq_nums = eq_nums + "%s`times`" % num
        numbers.append(num)
    eq_nums = eq_nums + "%s$$/수식$$\n" % (a**2 - 1)
    numbers.append(a**2 - 1)

    all_f = "$$수식$$=`"
    need = 0
    for i in range(len(numbers)):
        if i != 0:
            all_f = all_f + "`times`"
        fac = get_factorization(numbers[i])
        
        if len(fac) == 1 and fac[0][1] == 1:
            all_f = all_f + str(numbers[i])
        else:
            need = 1
            if len(fac) == 1:
                all_f = all_f + "%s^{%s}" % (fac[0][0], fac[0][1])
            else:
                for j in range(len(fac)):
                    now_mult = "%s" % fac[j][0] if fac[j][1] == 1 else "%s^{%s}" % (fac[j][0], fac[j][1])
                    if j == 0:
                        all_f = all_f + now_mult
                    else:
                        all_f = all_f + "`times`" + now_mult
    all_f = all_f + "$$/수식$$\n"
    if need == 1:
        eq_nums = eq_nums + all_f
    
    ans_num = a ** b - 1
    factors = factor(ans_num)
    
    ex_lists = []
    if len(numbers) < 4:
        ex_lists = numbers + [numbers[0] * numbers[1]]
    elif len(numbers) == 4:
        ex_lists = numbers
    else:
        del numbers[0]
        random.shuffle(numbers)
        ex_lists = numbers[0:4]
    ex_lists.sort()

    k = np.random.randint(ex_lists[0], ex_lists[2])
    while k in factors:
        k = np.random.randint(ex_lists[0], ex_lists[2])
    
    ex_lists.append(k)
    ex_lists.sort()
    for i in range(5):
        if ex_lists[i] == k:
            ans_idx = i

    example_list = [ans_idx] + ex_lists
    a1 = answer_dict[example_list[0]]

    stem = stem.format(eq=eq, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=a1)
    comment = comment.format(eq=eq, eq1=eq1, eqs=eqs, eq_nums=eq_nums, a1=a1)
    
    return stem, answer, comment


# 3-1-2-431
def factorization312_Stem_361():
    stem = "$$수식$${eq}$$/수식$$의 약수의 개수를 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eqh}$$/수식$$\n"\
        "{eqs}"\
        "{eq_nums}"\
        "따라서 $$수식$${eq}$$/수식$$의 약수의 개수는\n$$수식$${mults}`=`{ans}$$/수식$$\n\n"

    a = np.random.randint(3,6)
    b = random.sample([4, 8], 1)[0]
    c = np.random.randint(2, a)
    if b == 8:
        c = 2
    eq = "%s^{%s} `-`%s" % (a, b, c**b)
    eqh = "%s^{%s} `-`%s^{%s}" % (a, b, c, b)
    n = get_factorization(b)[0][1]

    ans_num = (a**b) - (c**b)
    
    eq_add = ""
    eq_ = "(%s`+`%s ) (%s`-`%s )"
    eqs = ""
    k = "%s^{%s}"
    eq_nums = "$$수식$$=`"
    numbers = []

    for i in range(n):
        b = int(b/2)
        k_1 = k % (a, b)
        k_2 = k % (c, b)
        if b == 1:
            k_1 = str(a)
            k_2 = str(c)
        eq1 = eq_ % (k_1, k_2, k_1, k_2)
        eqs = eqs + "$$수식$$=`%s%s$$/수식$$\n" % (eq_add, eq1)
        eq_add = eq_add + "(%s`+`%s )" % (k_1, k_2)
        
        num = a ** b + c ** b
        eq_nums = eq_nums + "%s`times`" % num
        numbers.append(num)
    eq_nums = eq_nums + "%s$$/수식$$\n" % (a - c)
    numbers.append(a - c)

    fac = get_factorization(ans_num)
    sq = []
    all_f = "$$수식$$=`"
    for j in range(len(fac)):
        now_mult = "%s" % fac[j][0] if fac[j][1] == 1 else "%s^{%s}" % (fac[j][0], fac[j][1])
        sq.append(fac[j][1]+1)
        if j == 0:
            all_f = all_f + now_mult
        else:
            all_f = all_f + "`times`" + now_mult
    all_f = all_f + "$$/수식$$\n"
    eq_nums = eq_nums + all_f

    mults = ""
    ans = 1
    for i in range(len(sq)):
        if mults == "":
            mults = mults + str(sq[i])
        else:
            mults = mults + "`times`" + str(sq[i])
        ans = ans * sq[i]

    stem = stem.format(eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eqh=eqh, eqs=eqs, eq_nums=eq_nums, mults=mults, ans=ans)
    
    return stem, answer, comment


# 3-1-2-432
def factorization312_Stem_362():
    stem = "자연수 $$수식$${eq}$$/수식$$은 {com} {c} 자연수로 나누어떨어진다. 이때 이 {c} 자연수의 합을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "{eqs}"\
        "{eq_nums}"\
        "따라서 $$수식$${eq}$$/수식$$은 {com} 자연수인 {answers_l}으로 나누어떨어지므로 이 {c} 자연수의 합은\n"\
        "$$수식$${sum_ans}`=`{ans}$$/수식$$\n\n"

    com1 = "$$수식$${n1}$$/수식$$과 $$수식$${n2}$$/수식$$ 사이의"
    com2 = "한자리의"

    b = random.sample([12, 20], 1)[0]
    if b == 20:
        a = random.sample([2, 3], 1)[0]
    else:
        a = random.sample([2,3,4,5], 1)[0]

    eq = "%s^{%s} `-`1" % (a, b)
    n = get_factorization(b)[0][1]
    
    eq_add = ""
    eq_ = "(%s`+`%s ) (%s`-`%s )"
    eqs = ""
    k = "%s^{%s}"
    eq_nums = "$$수식$$=`"
    numbers = []

    for i in range(n):
        b = int(b/2)
        k_ = k % (a, b)
        eq1 = eq_ % (k_, 1, k_, 1)
        eqs = eqs + "$$수식$$=`%s%s$$/수식$$\n" % (eq_add, eq1)
        eq_add = eq_add + "(%s`+`%s )" % (k_, 1)
        
        num = a ** b + 1
        eq_nums = eq_nums + "%s`times`" % num
        numbers.append(num)
    eq_nums = eq_nums + "%s$$/수식$$\n" % (a**b - 1)
    numbers.append(a**b - 1)

    ans1 = a**b + 1
    ans2 = a**b - 1
    ans = ans1 + ans2
    sum_ans = "%s`+`%s" % (ans1, ans2)
    answers_l = "$$수식$${ans1}$$/수식$$, $$수식$${ans2}$$/수식$$".format(ans1=ans1, ans2=ans2)
    c = "두"
    
    if ans1 // 10 == 0:
        com = com2
    else:
        com = com1.format(n1=(ans1//10)*10, n2=(ans1//10)*10+10)

    fac = get_factorization(numbers[0])
    sq = []
    all_f = "$$수식$$=`"
    num_ans = 2

    for j in range(len(fac)):
        if fac[j][0]//10 == ans1//10:
            num_ans = num_ans + 1
            ans3 = fac[j][0]
        now_mult = "%s" % fac[j][0] if fac[j][1] == 1 else "%s^{%s}" % (fac[j][0], fac[j][1])
        sq.append(fac[j][1]+1)
        if j == 0:
            all_f = all_f + now_mult
        else:
            all_f = all_f + "`times`" + now_mult
    all_f = all_f + "`times`%s`times`%s$$/수식$$\n" % (ans1, ans2)
    eq_nums = eq_nums + all_f

    if num_ans == 3:
        c = "세"
        sum_ans = sum_ans + "`+`%s" % ans3
        answers_l = answers_l + ", $$수식$${ans3}$$/수식$$".format(ans3=ans3)
        ans = ans + ans3

    stem = stem.format(eq=eq, com=com, c=c)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eqs=eqs, eq_nums=eq_nums, com=com, c=c, answers_l=answers_l, sum_ans=sum_ans, ans=ans)
    
    return stem, answer, comment


# 3-1-2-433
def factorization312_Stem_363():
    stem = "$$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$$a`=`{a}`=`{a_cal}$$/수식$$\n"\
        "$$수식$$=`{a_}$$/수식$$\n"\
        "$$수식$$b`=`{b}`=`{b_cal}$$/수식$$\n"\
        "$$수식$$=`{b_}$$/수식$$\n"\
        "이므로 $$수식$$a`+`b`=`{plus}$$/수식$$, $$수식$$a`-`b`=`{minus}$$/수식$$\n"\
        "따라서 $$수식$${eq}`=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{p}`times`{plus}`times`({minus} )`=`{ans}$$/수식$$\n\n"

    p2 = np.random.randint(1, 6)
    p1 = p2**2 + 1

    a = "{1} over {sqrt {%s} `+`%s}" % (p1, p2)
    b = "{1} over {sqrt {%s} `-`%s}" % (p1, p2)
    a_cal = "{sqrt {%s} `-`%s} over {(` sqrt {%s} `+`%s`)(` sqrt {%s} `-`%s`)}" % (p1, p2, p1, p2, p1, p2)
    b_cal = "{sqrt {%s} `+`%s} over {(` sqrt {%s} `-`%s`)(` sqrt {%s} `+`%s`)}" % (p1, p2, p1, p2, p1, p2)
    a_ = "sqrt {%s} `-`%s" % (p1, p2)
    b_ = "sqrt {%s} `+`%s" % (p1, p2)

    plus = "2 sqrt{%s}" % (p1)
    minus = "-%s" % (2*p2)
    p = "sqrt{%s}" % (p1)
    ans = -4 * p1 * p2

    eq = "sqrt{%s} ( a ^{2} `-`b ^{2} )" % p1
    eq_ = "sqrt{%s} ( a`+`b ) ( a`-`b )" % p1

    stem = stem.format(eq=eq, a=a, b=b)
    answer = answer.format(ans=ans)
    comment = comment.format(a=a, b=b, a_=a_, b_=b_, a_cal=a_cal, b_cal=b_cal, plus=plus, minus=minus, eq=eq, eq_=eq_, p=p, ans=ans)
    
    return stem, answer, comment


# 3-1-2-434
def factorization312_Stem_364():
    stem = "$$수식$$x`=`{x}$$/수식$$, $$수식$$y`=`{y}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}`=`{eq_}$$/수식$$\n"\
        "$$수식$$=`{eq_1}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}$$/수식$$\n"\
        "$$수식$$=`{eq_n2}`=`{ans}$$/수식$$\n\n"

    alpha = random.sample([0.25, 0.2, 0.3, 0.4], 1)[0]
    alpha_ = 1 - alpha

    ns1 = np.random.randint(1,4)
    ns2 = np.random.randint(6,9)
    x = ns2 + alpha
    y = ns1 + alpha_

    ps = ctr_frac2(alpha*100, alpha_*100)
    f2 = [[ps[0],ps[1]], ps[0]/ps[1]]
    f1 = [[-1, 1], -1]
    m = ps[0] - ps[1]

    k = np.random.randint(2,5)

    eq = "%sx^{2}`-`%sxy`-`%sy^{2}" % (ps[0]*k if ps[0]*k != 1 else "", abs(m*k) if abs(m*k) != 1 else "", ps[1]*k if ps[1]*k != 1 else "")
    eq_ = "%sLEFT( %sx^{2}`-`%sxy`-`%sy^{2} )" % (k, ps[0] if ps[0] != 1 else "", abs(m) if abs(m) != 1 else "", ps[1])
    eq_1 = "%sLEFT( x`+`y ) (%sx`-`%sy )" % (k, ps[0] if ps[0] != 1 else "", ps[1])
    eq_n1 = "%sLEFT( %s`+`%s ) (%s`times`%s`-`%s`times`%s )" % (k, x, y, ps[0], x, ps[1], y)
    
    last = round(ps[0]*x-ps[1]*y)
    if last < 0:
        last = "(%s )" % last
    eq_n2 = "%s`times`%s`times`%s" % (k, int(x+y), last)
    ans = k * int(x+y) * round(ps[0]*x-ps[1]*y)

    if ans == 0:
        example_list = make_example_minus(ans, 5)
    else:
        sols = [-ans]
        fac = factor(abs(ans))
        del fac[0]
        del fac[len(fac)-1]

        if len(fac) == 0:
            for i in range(2):
                e1 = abs(ans) * (i+2)
                e2 = -abs(ans) * (i+2)
                sols.append(e1)
                sols.append(e2)
        else:
            rf = np.random.randint(0,2)
            if rf == 0:
                itr = min(1, len(fac))
                for i in range(itr):
                    e1 = abs(int(ans/fac[i]))
                    e2 = -abs(int(ans/fac[i]))
                    sols.append(e1)
                    sols.append(e2)
            for i in range(2):
                e1 = abs(ans) * (i+2)
                e2 = -abs(ans) * (i+2)
                sols.append(e1)
                sols.append(e2)

        ex_list = sols[0:4]
        ex_list.append(ans)
        ex_list.sort()

        for i in range(5):
            if ex_list[i] == ans:
                ans_idx = i

        example_list = [ans_idx] + ex_list

    stem = stem.format(eq=eq, x=x, y=y, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(eq=eq, eq_=eq_, eq_1=eq_1, eq_n1=eq_n1, eq_n2=eq_n2, ans=ans)
    
    return stem, answer, comment



# 3-1-2-435
def factorization312_Stem_365():
    stem = "$$수식$$x`=`{x}$$/수식$$, $$수식$$y`=`{y}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$$x$$/수식$$일 때, $$수식$$y$$/수식$$의 분모를 각각 유리화하면\n"\
        "$$수식$$x`=`{x_}$$/수식$$일 때, $$수식$$y`=`{y_}$$/수식$$\n"\
        "따라서\n"\
        "$$수식$${eq}`=`{eq_1}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}$$/수식$$\n"\
        "$$수식$$=`{eq_n2}`=`{ans}$$/수식$$\n\n"

    A = np.random.randint(2,7)
    B = A + 1
    if np.random.randint(0,2) == 0:
        A_ = A
        A = B
        B = A_

    x = "{sqrt {%s} `-` sqrt {%s}} over {sqrt {%s} `+` sqrt {%s}}" % (A, B, A, B)
    y = "{sqrt {%s} `+` sqrt {%s}} over {sqrt {%s} `-` sqrt {%s}}" % (A, B, A, B)
    x_ = "-%s`+`2 sqrt {%s}" % (A+B, A*B)
    y_ = "-%s`-`2 sqrt {%s}" % (A+B, A*B)
    if A > B:
        x_ = "%s`-`2 sqrt {%s}" % (A+B, A*B)
        y_ = "%s`+`2 sqrt {%s}" % (A+B, A*B)

    k1 = 1
    k2 = k1
    st = "%sx`+`%sy" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2)
    st_ = "%sx`-`%sy" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2)
    mid = "%sxy" % (2*k1*k2)

    eq = "(%s )^{2}`-`%s" % (st, mid)
    eq_1 = "(%s )^{2}" % (st_)
    eq_n1 = "%sLEFT{ (%s ) `-` (%s ) }^{2}" % (k1**2, x, y)
    eq_n2 = "(4 sqrt{%s} )^{2}" % (A*B)
    if A > B:
        eq_n2 = "( -4 sqrt{%s})^{2}" % (A*B)
    if k1 != 1:
        eq_n2 = "%s`times`" % (k1**2) + eq_n2
    ans = (k1**2) * 16 * A * B

    example_list = make_example_by_interval(ans, int(ans/3))

    stem = stem.format(eq=eq, x=x, y=y, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(eq=eq, x_=x_, y_=y_, eq_1=eq_1, eq_n1=eq_n1, eq_n2=eq_n2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-436
def factorization312_Stem_366():
    stem = "$$수식$$x`=`{x}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값은?\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${st}`=`A$$/수식$$로 놓으면\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eqA}$$/수식$$\n"\
        "$$수식$$=`{eqA_}$$/수식$$\n"\
        "$$수식$$=`{eq_m1}$$/수식$$\n"\
        "$$수식$$=`{eq_m2}$$/수식$$\n"\
        "$$수식$$=`{eq_n}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}`=`{ans}$$/수식$$\n\n"

    m = np.random.randint(1,4) * random.sample([-1, 1],1)[0]
    k = np.random.randint(1,4) * random.sample([-1, 1],1)[0]
    while m+k == 0:
        m = np.random.randint(1,4) * random.sample([-1, 1],1)[0]
        k = np.random.randint(1,4) * random.sample([-1, 1],1)[0]
    l = m + k
    p = random.sample([2,3,5,6,7,11], 1)[0]
    x = "sqrt{%s} `%s` %s" % (p, "-" if l > 0 else "+", abs(l))

    st = "x`%s`%s" % ("+" if m > 0 else "-", abs(m))
    eqAs = make_equation("A", 0, 1, -k, -k)
    eqA = eqAs[1]
    eqA_ = eqAs[0]
    eqs = make_equation(st, 1, 1, -k, -k)
    eq = eqs[2]
    eq_m1 = "{ (%s )`%s`%s }^{2}" % (st, "+" if k > 0 else "-", abs(k))
    eq_m2 = "( x`%s`%s )^{2}" % ("+" if l > 0 else "-", abs(l))
    eq_n = "{ (%s )`%s`%s }^{2}" % (x, "+" if l > 0 else "-", abs(l))
    eq_n1 = "(sqrt{%s} )^{2}" % p
    ans = p

    example_list = make_example_by_interval(ans, max(int(ans/3), np.random.randint(1,3)))

    stem = stem.format(eq=eq, x=x, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(st=st, eq=eq, eqA=eqA, eqA_=eqA_, eq_m1=eq_m1, eq_m2=eq_m2, eq_n=eq_n, eq_n1=eq_n1, ans=ans)
    
    return stem, answer, comment


# 3-1-2-437
def factorization312_Stem_367():
    stem = "$$수식$$x`=`{x}$$/수식$$, $$수식$$y`=`{y}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}$$/수식$$\n"\
        "$$수식$$=`{eq_n2}`=`{ans}$$/수식$$\n\n"

    ans = np.random.randint(1, 6)
    m = random.sample([2,3,5,6,7], 1)[0]

    k1 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
    k2 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
    while abs(k1) == abs(k2):
        k1 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]
        k2 = np.random.randint(1,5) * random.sample([-1, 1], 1)[0]

    rf = np.random.randint(0,2)
    if rf == 0:
        k1_ = k1
        k2_ = k2
    else:
        k1_ = k2
        k2_ = k1

    a = np.random.randint(1, 6)
    c = np.random.randint(1, 6)
    while a + c * k2_ == 0:
        a = np.random.randint(1, 6)
        c = np.random.randint(1, 6)
    b = np.random.randint(1, 4)

    x = "%s`%s`%s sqrt{%s}" % (a, "+" if -b*k2_ > 0 else "-", abs(b*k2_) if abs(b*k2_) != 1 else "", m)
    y = "%s sqrt{%s} `%s`%s" % (("" if b == 1 else "-") if abs(b) == 1 else b, m, "+" if c > 0 else "-", abs(c))
    
    eqs = make_equation_v2("x", "y", 0, -k1, -k2)
    eq_b = eqs[1]
    eq_b1 = eqs[0]
    st = "x`%s`%sy" % ("+" if k1_ > 0 else "-", abs(k1_) if abs(k1_) != 1 else "")
    st_ = "x`%s`%sy" % ("+" if k2_ > 0 else "-", abs(k2_) if abs(k2_) != 1 else "")
    P = ans * (a + c*k2_)    

    eq = "{%s (%s )} over {%s}" % (("" if P == 1 else "-") if abs(P) == 1 else P, st, eq_b)
    eq1 = "{%s (%s )} over {%s}" % (("" if P == 1 else "-") if abs(P) == 1 else P, st, eq_b1)
    eq2 = "{%s} over {%s}" % (P, st_)
    eq_n1 = "{%s} over {(%s )`%s`%sLEFT(%s )}" % (P, x, "+" if k2_ > 0 else "-", abs(k2_) if abs(k2_) != 1 else "", y)
    eq_n2 = "{%s} over {%s`%s`%s sqrt{%s}`%s`%s}" % (P, x, "+" if -b*k2_ > 0 else "-", abs(b*k2_) if abs(b*k2_) != 1 else "", m, "+" if c*k2_ > 0 else "-", abs(c*k2_))

    stem = stem.format(eq=eq, x=x, y=y)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, eq_n1=eq_n1, eq_n2=eq_n2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-438
def factorization312_Stem_368():
    stem = "$$수식$${eq_cond}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$$x`!=`0$$/수식$$이므로 $$수식$${eq_cond}$$/수식$$의 양변을 $$수식$$x$$/수식$$로 나누면\n"\
        "$$수식$${eq_cond1}$$/수식$$에서 $$수식$${eq1}$$/수식$$\n"\
        "따라서\n$$수식$${eq}`=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    A = np.random.randint(2, 10) * random.sample([-1, 1], 1)[0]
    eq_cond = "x^{2}`%s`%sx`+`1`=`0" % ("+" if A > 0 else "-", abs(A))
    eq = "x ^{2} `+` {1} over {x ^{2}}"
    eq_cond1 = "x`%s`%s`+`{1} over {x}`=`0" % ("+" if A > 0 else "-", abs(A))
    eq1 = "x`+`{1} over {x}`=`%s" % (-A)
    eq2 = "(x`+`{1} over {x} )^{2} - 2"
    A_ = -A
    if A > 0:
        A_ = "(%s )" % (-A)
    eq_n = "%s^{2}`-`2" % A_
    ans = A**2 - 2

    stem = stem.format(eq=eq, eq_cond=eq_cond)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq_cond=eq_cond, eq_cond1=eq_cond1, eq1=eq1, eq2=eq2, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-439
def factorization312_Stem_369():
    stem = "$$수식$$x`=`{x}$$/수식$$, $$수식$$y`=`{y}$$/수식$$일 때, $$수식$${static_eq}`=`A$$/수식$$이다. $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$$x`=`{x}$$/수식$$\n"\
        "$$수식$$=`{x1}$$/수식$$\n"\
        "$$수식$$=`{x2}$$/수식$$\n"\
        "$$수식$$y`=`{y}$$/수식$$\n"\
        "$$수식$$=`{y1}$$/수식$$\n"\
        "$$수식$$=`{y2}$$/수식$$\n"\
        "$$수식$${static_eq}`=`{static_eq2}`=`{static_eq3}$$/수식$$\n"\
        "이때 $$수식$$y`+`x`=`{plus}{plus_}$$/수식$$, $$수식$$y`-`x`=`{minus}{minus_}$$/수식$$\n"\
        "$$수식$$xy`=`{mult1}`=`{mult2}$$/수식$$이므로\n"\
        "$$수식$${static_eq}`=`{eq1}`=`{eq2}`=`A$$/수식$$\n"\
        "따라서 $$수식$${eq}`=`{p}`times`{eq2_}`=`{ans}$$/수식$$\n\n"

    static_eq = "{y} over {x} `-` {x} over {y}"
    static_eq2 = "{y ^{2} `-`x ^{2}} over {xy}"
    static_eq3 = "{(y`+`x)(y`-`x)} over {xy}"

    ns = random.sample([2,3,5,6,7], 2)
    while gcd(ns[0], ns[1]) != 1:
        ns = random.sample([2,3,5,6,7], 2)
    ns.sort()
    A = ns[1]
    B = ns[0]
    C = A - B
    D = C ** 2

    x = "{1} over {sqrt {%s} `-` sqrt {%s}}" % (A, B)
    y = "{1} over {sqrt {%s} `+` sqrt {%s}}" % (A, B)
    x1 = "{sqrt {%s} `+` sqrt {%s}} over {( sqrt {%s} `-` sqrt {%s} )( sqrt {%s} `+` sqrt {%s} )}" % (A, B, A, B, A, B)
    y1 = "{sqrt {%s} `-` sqrt {%s}} over {( sqrt {%s} `+` sqrt {%s} )( sqrt {%s} `-` sqrt {%s} )}" % (A, B, A, B, A, B)
    x2 = "{sqrt {%s} `+` sqrt {%s}} over {%s}" % (A, B, C)
    y2 = "{sqrt {%s} `-` sqrt {%s}} over {%s}" % (A, B, C)
    
    plus = "{2 sqrt {%s}} over {%s}" % (A, C)
    minus = "{-2 sqrt {%s}} over {%s}" % (B, C)
    plus_c = ctr_frac(2, C)
    if plus_c[0] == -1:
        plus_ = ""
        minus_ = ""
        plus_c[0] = 2
        plus_c[1] = C
    else:
        if plus_c[1] == 1:
            plus_ = "`=`%s sqrt{%s}" % (("" if plus_c[0] == 1 else "-") if abs(plus_c[0]) == 1 else plus_c[0], A)
            minus_ = "`=`%s sqrt{%s}" % (("" if -plus_c[0] == 1 else "-") if abs(plus_c[0]) == 1 else -plus_c[0], B)
        else:
            plus_ = "`=`{%s sqrt {%s}} over {%s}" % (("" if plus_c[0] == 1 else "-") if abs(plus_c[0]) == 1 else plus_c[0], A, plus_c[1])
            minus_ = "`=`{%s sqrt {%s}} over {%s}" % (("" if -plus_c[0] == 1 else "-") if abs(plus_c[0]) == 1 else -plus_c[0], B, plus_c[1])
    
    mult1 = "{ ( sqrt {%s}  ) ^{2} `-`  ( sqrt {%s}  ) ^{2}} over {%s}" % (A, B, D)
    mult = ctr_frac2(A-B, D)
    mult2 = print_ans(mult[0], mult[1])
    mult2_ = print_frac3(mult[0], mult[1])
    eq1 = " { %s TIMES (%s )  } DIVIDE %s" % (plus, minus, mult2_)
    
    cont = ctr_frac2(-(plus_c[0]**2)*D, (plus_c[1]**2) * (A-B))
    if cont[1] == 1:
        eq2 = "%s sqrt{%s}" % (("" if cont[0] == 1 else "-") if abs(cont[0]) == 1 else cont[0], A*B)
    else:
        eq2 = "{%s sqrt{%s}} over {%s}" % (("" if cont[0] == 1 else "-") if abs(cont[0]) == 1 else cont[0], A*B, cont[1])
    eq2_ = eq2
    if cont[0] < 0:
        eq2_ = "(%s )" % eq2

    eq = "sqrt{%s}A" % (A*B)
    p = "sqrt{%s}" % (A*B)
    ans_f = ctr_frac2(A*B*cont[0], cont[1])
    if ans_f[1] == 1:
        ans = ans_f[0]
    else:
        ans = print_ans(ans_f[0], ans_f[1])

    stem = stem.format(eq=eq, static_eq=static_eq, x=x, y=y)
    answer = answer.format(ans=ans)
    comment = comment.format(x=x, x1=x1, x2=x2, y=y, y1=y1, y2=y2, static_eq=static_eq, static_eq2=static_eq2, static_eq3=static_eq3, \
        plus=plus, plus_=plus_, minus=minus, minus_=minus_, mult1=mult1, mult2=mult2, eq1=eq1, eq2=eq2, eq=eq, p=p, eq2_=eq2_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-440
def factorization312_Stem_370():
    stem = "$$수식$${a1}$$/수식$$의 소수 부분을 $$수식$$a$$/수식$$, $$수식$${b1}$$/수식$$의 정수 부분을 "\
        "$$수식$$b$$/수식$$라 할 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${a_b}`PREC`{a1}`PREC`{a_h}$$/수식$$이므로 $$수식$$a`=`{a1}`-`{a_b}$$/수식$$\n"\
        "$$수식$${b1}=`{b1_}$$/수식$$이고 "\
        "$$수식$${a_b}`PREC`{b1_}`PREC`{a_h}$$/수식$$이므로 $$수식$$b`=`{a_b}$$/수식$$\n"\
        "따라서\n"\
        "{eqs}"\
        "$$수식$$=`{eq_f}`=`{ans}$$/수식$$\n\n"

    eq = "{a ^{3} `-`b ^{3} `+`a ^{2} `b`-`a`b ^{2}} over {a`-`b}"
    eqs = "$$수식$${a ^{3} `-`b ^{3} `+`a ^{2} `b`-`a`b ^{2}} over {a`-`b}$$/수식$$\n" + \
        "$$수식$$=`{a ^{3} `+`a ^{2} `b`-`a`b ^{2} `-`b ^{3}} over {a`-`b}$$/수식$$\n" + \
        "$$수식$$=`{a ^{2} `(a`+`b)`-`b ^{2} `(a`+`b)} over {a`-`b} $$/수식$$\n" + \
        "$$수식$$=`{(a`+`b)(a ^{2} `-`b ^{2} `)} over {a`-`b} $$/수식$$\n" + \
        "$$수식$$=`(a`+`b) ^{2}$$/수식$$\n"
    
    a_b = np.random.randint(2, 6)
    a_h = a_b + 1
    num = a_h ** 2 - a_b ** 2 - 1

    a_list = []
    b_list = []
    for i in range(num):
        fac = get_factorization(a_b**2+1+i)
        isb = 0

        for k in list(map(lambda x: x[1], fac)):
            if k != 1:
                isb = 1
                b_list.append(a_b**2+1+i)
                break
        
        if isb == 0:
            a_list.append(a_b**2+1+i)

    a1_val = random.sample(a_list, 1)[0]
    b1_val = random.sample(b_list, 1)[0]
    a1 = "sqrt{%s}" % a1_val
    a = "sqrt{%s}`-`%s" % (a1_val, a_b)
    b = a_b
    b1_ = "sqrt{%s}" % b1_val

    fac = get_factorization(b1_val)
    ins = 1
    out = 1
    for i in range(len(fac)):
        if fac[i][1] == 1:
            ins = ins * fac[i][0]
        elif fac[i][1] == 2:
            out = out * fac[i][0]
        else:
            ins = ins * (fac[i][0] ** (fac[i][1]-2))
            out = out * fac[i][0]
    b1 = "%s sqrt{%s}" % (out, ins)
    eq_f = "{ (%s )`+`%s }^{2}" % (a, b)
    ans = a1_val

    stem = stem.format(eq=eq, a1=a1, b1=b1)
    answer = answer.format(ans=ans)
    comment = comment.format(a_b=a_b, a1=a1, a_h=a_h, b1=b1, b1_=b1_, eqs=eqs, eq_f=eq_f, ans=ans)
    
    return stem, answer, comment


# 3-1-2-441
def factorization312_Stem_371():
    stem = "$$수식$${a1}$$/수식$$의 소수 부분을 $$수식$$a$$/수식$$라 할 때, "\
        "$$수식$${eq}$$/수식$$의 값을 구하시오.\n"\
        "① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${a_b}`PREC`{a1}`PREC`{a_h}$$/수식$$이므로 $$수식$$a`=`{a1}`-`{a_b}$$/수식$$\n"\
        "따라서\n"\
        "$$수식$${eq}`=`{eq1}$$/수식$$\n"\
        "$$수식$$=`{eq2}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}$$/수식$$\n"\
        "$$수식$$=`{eq_n2}$$/수식$$\n"\
        "$$수식$$=`{ans}$$/수식$$\n\n"
    
    a_b = np.random.randint(2, 6)
    a_h = a_b + 1
    num = a_h ** 2 - a_b ** 2 - 1

    a_list = []
    b_list = []
    for i in range(num):
        fac = get_factorization(a_b**2+1+i)
        isb = 0

        for k in list(map(lambda x: x[1], fac)):
            if k != 1:
                isb = 1
                b_list.append(a_b**2+1+i)
                break
        
        if isb == 0:
            a_list.append(a_b**2+1+i)

    a1_val = random.sample(a_list, 1)[0]
    b1_val = random.sample(b_list, 1)[0]
    a1 = "sqrt{%s}" % a1_val
    a = "sqrt{%s}`-`%s" % (a1_val, a_b)

    eq = "a ^{3}`+`%sa ^{2}`+`%sa" % (3*a_b, 2*(a_b**2))
    eq1 = "a (a^{2}`+`%sa`+`%s )" % (3*a_b, 2*(a_b**2))
    eq2 = "a (a`+`%s ) (a`+`%s )" % (a_b, a_b*2)
    eq_n1 = "(%s ) (%s`+`%s ) (%s`+`%s )" % (a, a, a_b, a, a_b*2)
    eq_n2 = "sqrt{%s} (sqrt{%s}`-`%s ) (sqrt{%s}`+`%s )" % (a1_val, a1_val, a_b, a1_val, a_b)
    k = a1_val - a_b**2
    ans = "%s sqrt{%s}" % (("" if k == 1 else "-") if abs(k) == 1 else k, a1_val)

    el = []
    el.append(a1_val)
    el.append(int(a1_val/2))
    el.append("%s sqrt{%s}" % (k*2, a1_val))
    el.append("%s sqrt{%s}" % (k*3, a1_val))
    el.append("sqrt{%s}" % (int(a1_val/2))) 
    random.shuffle(el)
    ex_lists = [ans] + el[0:4]

    example_list = make_shuffle_example(ex_lists, 0)

    stem = stem.format(eq=eq, a1=a1, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(a_b=a_b, a1=a1, a_h=a_h, eq=eq, eq1=eq1, eq2=eq2, eq_n1=eq_n1, eq_n2=eq_n2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-442
def factorization312_Stem_372():
    stem = "$$수식$${c1}`=`{A}$$/수식$$, $$수식$${c2}`=`{B}$$/수식$$일 때, $$수식$${eq}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq1}$$/수식$$\n"\
        "{eq2}"\
        "$$수식$$=`{eq_n}`=`{ans}$$/수식$$\n\n"

    A = np.random.randint(1, 10)
    B = np.random.randint(1, 10)

    rf1 = np.random.randint(0, 2)
    if rf1 == 0:
        c1 = "a`-`b"
        c2 = "b`-`c"
        rf2 = np.random.randint(0,4)
        if rf2 == 0:
            eq = "ac`-`bc`-`ab`+`b^{2}"
            eq1 = "c (a`-`b )`-`b (a`-`b )"
            eq2 = "$$수식$$=`( a`-`b ) (c`-`b )$$/수식$$\n" + "$$수식$$=`( a`-`b ) { -(b`-`c ) }$$/수식$$\n"
            eq_n = "%s`times`(-%s )" % (A, B)
            ans = A * -B
        elif rf2 == 1:
            eq = "ab`-`b^{2}`-`ac`+`bc"
            eq1 = "b (a`-`b )`-`c (a`-`b )"
            eq2 = "$$수식$$=`( a`-`b ) (b`-`c )$$/수식$$\n"
            eq_n = "%s`times`%s" % (A, B)
            ans = A * B    
        elif rf2 == 2:
            eq = "ab`-`ac`-`b^{2}`+`bc"
            eq1 = "a (b`-`c )`-`b (b`-`c )"
            eq2 = "$$수식$$=`( a`-`b ) (b`-`c )$$/수식$$\n"
            eq_n = "%s`times`%s" % (A, B)
            ans = A * B
        else:
            eq = "b^{2}`-`bc`-`ab`+`ac"
            eq1 = "b (b`-`c )`-`a (b`-`c )"
            eq2 = "$$수식$$=`( b`-`a ) (b`-`c )$$/수식$$\n" + "$$수식$$=`{ -(a`-`b ) } ( b`-`c )$$/수식$$\n"
            eq_n = "-%s`times`%s" % (A, B)
            ans = A * -B
    else:
        c1 = "a`+`b"
        c2 = "b`+`c"
        rf2 = np.random.randint(0,2)
        if rf2 == 0:
            eq = "ab`+`b^{2}`+`ac`+`bc"
            eq1 = "b (a`+`b )`+`c (a`+`b )"
            eq2 = "$$수식$$=`( a`+`b ) (b`+`c )$$/수식$$\n"
            eq_n = "%s`times`%s" % (A, B)
            ans = A*B
        else:
            eq = "ab`+`ac`+`bc`+`b^{2}"
            eq1 = "a (b`+`c )`+`b (c`+`b )"
            eq2 = "$$수식$$=`( a`+`b ) (b`+`c )$$/수식$$\n"
            eq_n = "%s`times`%s" % (A, B)
            ans = A*B
            


    stem = stem.format(c1=c1, c2=c2, A=A, B=B, eq=eq)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq2=eq2, eq_n=eq_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-443
def factorization312_Stem_373():
    stem = "$$수식$${st}`=`{p}$$/수식$$일 때, $$수식$${eq1}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}$$/수식$$\n"\
        "$$수식$$=`{eq1_match}$$/수식$$\n"\
        "$$수식$$=`{eq1_match_}$$/수식$$\n"\
        "$$수식$$=`{eq1_n}`=`{ans}$$/수식$$\n\n"

    ks = random.sample(list(range(1,7)), 2)
    k1 = ks[0]
    k2 = ks[1] * random.sample([-1, 1], 1)[0]
    st = "%sx`%s`%sy" % (k1 if k1 != 1 else "", "+" if k2 > 0 else "-", abs(k2) if abs(k2) != 1 else "")

    ns = random.sample(list(range(1,7)), 2)
    ns.sort()
    k = ns[0]
    p = ns[1]

    eq1 = "%sx^{2}" % (k1**2 if k1**2 != 1 else "")
    eq1s = ["`-`%s" % (k**2), "`%s`%sxy" % ("+" if k1*k2 > 0 else "-", abs(2*k1*k2)), "`+`%sy^{2}" % (k2**2 if k2**2 != 1 else "")]
    eq1_match = "(%s )`-`%s" % (eq1+eq1s[1]+eq1s[2], k**2)  
    random.shuffle(eq1s)
    eq1 = eq1 + eq1s[0] + eq1s[1] + eq1s[2]

    eq1_match_ = "(%s )^{2}`-`%s" % (st, k**2)
    eq1_n = "%s^{2}`-`%s" % (p, k**2)
    ans = p**2 - k**2

    stem = stem.format(st=st, eq1=eq1, p=p)
    answer = answer.format(ans=ans)
    comment = comment.format(eq1=eq1, eq1_match=eq1_match, eq1_match_=eq1_match_, eq1_n=eq1_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-444
def factorization312_Stem_374():
    stem = "$$수식$${st_f1}`=`{A}$$/수식$$, $$수식$${eq}`=`{B}$$/수식$$일 때, "\
        "$$수식$${st_f2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_fin}$$/수식$$\n"\
        "즉, $$수식$${eq_fin}`=`{B}$$/수식$$이므로\n"\
        "$$수식$$({A_k} )({e2} )`=`{B} $$/수식$$\n"\
        "$$수식$${e2}`=`{ans_}$$/수식$$\n"\
        "따라서 $$수식$${st_f2}`=`{ans}$$/수식$$\n\n"

    rf = 0
    if rf == 0:
        var1 = "x"
        var2 = "y"
    else:
        var2 = "x"
        var1 = "y"

    m = np.random.randint(1,5)
    k = np.random.randint(1,9) * random.sample([-1,1], 1)[0]
    A = np.random.randint(2, 10)
    while A + k == 0:
        A = np.random.randint(2, 10)
    ans = np.random.randint(abs(k)+1, max(2*abs(k), 4))
    B = (A+k) * (ans-k)
    ans_ = ans - k

    st = "%s`%s`%s" % (var2, "+" if k > 0 else "-", abs(k))
    st_ = "%s`%s`%s" % (var2, "-" if k > 0 else "+", abs(k))
    y_2 = "`%s`%s^{2}" % ("-", var2)
    y_1 = "`%s`%s%s" % ("-" if k > 0 else "+", abs(2*k), var2)
    y_0 = "`%s`%s" % ("-", k**2)
    ys = [y_2, y_1, y_0]
    random.shuffle(ys)

    eq = "%s%s^{2}" % (m**2 if m**2 != 1 else "", var1) + ys[0] + ys[1] + ys[2]
    eq_match = "%s%s^{2}`-`(%s^{2}`%s`%s%s`%s`%s )" % (m**2 if m**2 != 1 else "", var1, var2, "+" if k > 0 else "-", abs(k*2), var2, "+", k**2)
    eq_match_ = "(%s%s )^{2}`-`( %s)^{2}" % (m if m != 1 else "", var1, st)
    
    e1 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "+", st)
    e2 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "-", st_)
    eq_fin = "(%s ) (%s )" % (e1, e2)
    
    st_f1 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "+", "y")
    st_f2 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "-", "y")
    A_k = "%s`%s`%s" % (A, "+" if k > 0 else "-", abs(k))

    stem = stem.format(eq=eq, st_f1=st_f1, A=A, B=B, st_f2=st_f2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, eq_fin=eq_fin, eq=eq, e2=e2, A_k=A_k, A=A, B=B, st_f1=st_f1, st_f2=st_f2, k=k, ans_=ans_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-445
def factorization312_Stem_375():
    stem = "$$수식$${eq1}`=`{A}$$/수식$$, $$수식$${eq2}`=`{B}$$/수식$$일 때, $$수식$${eq_tar}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}`=`{A}$$/수식$$에서\n"\
        "$$수식$${eq1_1}`=`{A}$$/수식$$\n"\
        "$$수식$${eqab}$$/수식$$\n"\
        "$$수식$$THEREFORE```ab`=`{ab}$$/수식$$\n"\
        "또, $$수식$${eq2}`=`{B}$$/수식$$에서\n"\
        "$$수식$${eq2_1}`=`{B}$$/수식$$\n"\
        "$$수식$${eq2_2}`=`{B}$$/수식$$\n"\
        "$$수식$$THEREFORE```{eqab2}$$/수식$$\n"\
        "따라서\n"\
        "$$수식$${eq_tar}`=`{eq_tar1}$$/수식$$\n"\
        "$$수식$$=`{eq_tar2}$$/수식$$\n"\
        "$$수식$$=`{eq_n1}$$/수식$$\n"\
        "$$수식$$=`{eq_n2}`=`{ans}$$/수식$$\n\n"

    k1 = np.random.randint(1,4)
    k2 = np.random.randint(1,4)
    st1 = "%sa`+`%sb" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2)
    st2 = "%sa`-`%sb" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2)

    eq1 = "(%s )^{2}`-`(%s )^{2}" % (st1, st2)
    eq1_1 = "(%sa^{2}`+`%sab`+`%sb^{2} )`-`(%sa^{2}`-`%sab`+`%sb^{2} )" % (k1**2 if k1**2 != 1 else "", 2*k1*k2, k2**2 if k2**2 != 1 else "", k1**2 if k1**2 != 1 else "", 2*k1*k2, k2**2 if k2**2 != 1 else "")
    ab = np.random.randint(1, 5) * random.sample([-1, 1], 1)[0]
    A = 4*k1*k2 * ab
    eqab = "%sab`=`%s" % (4*k1*k2, A)

    eq2 = "(%sa`+`1 ) (%sb`+`1 )" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2)
    eq2_1 = "%sab`+`%sa`+`%sb`+`1" % (k1*k2 if k1*k2 != 1 else "", k1 if k1 != 1 else "", k2 if k2 != 1 else "")
    eq2_2 = "%s`+`(%sa`+`%sb )`+`1" % (ab*k1*k2, k1 if k1 != 1 else "", k2 if k2 != 1 else "")
    if ab > 0:
        hap = np.random.randint(int((2*ab*k1*k2)**0.5), min(9, 2*ab*k1*k2+2))
    else:
        hap = np.random.randint(1, 5)
    B = hap + 1 + ab*k1*k2
    eqab2 = "%sa`+`%sb`=`%s" % (k1 if k1 != 1 else "", k2 if k2 != 1 else "", hap)

    eq_tar = "%sa^{3}b`+`%sab^{3}" % (k1**2 if k1**2 != 1 else "", k2**2 if k2**2 != 1 else "")
    eq_tar1 = "ab (%sa^{2}`+`%sb^{2} )" % (k1**2 if k1**2 != 1 else "", k2**2 if k2**2 != 1 else "")
    eq_tar2 = "ab { (%sa`+`%sb )^{2} `-`%sab }" % (k1 if k1 != 1 else "", "" if k2 == 1 else k2, 2*k1*k2)
    ab_ = ab
    if ab_ < 0:
        ab_ = "(%s )" % ab
    eq_n1 = "%s`times`(%s^{2}`-`%s`times`%s )" % (ab, hap, 2*k1*k2, ab_)
    ans1 = hap**2 - 2*k1*k2*ab
    ans1_ = ans1
    if ans1_ < 0:
        ans1_ = "(%s )" % (ans1)
    eq_n2 = "%s`times`%s" % (ab, ans1_)
    ans = ab * ans1

    stem = stem.format(eq1=eq1, eq2=eq2, A=A, B=B, eq_tar=eq_tar)
    answer = answer.format(ans=ans)
    comment = comment.format(eq1=eq1, eq1_1=eq1_1, eqab=eqab, ab=ab, A=A, eq2=eq2, eq2_1=eq2_1, eq2_2=eq2_2, \
        eqab2=eqab2, B=B, eq_tar=eq_tar, eq_tar1=eq_tar1, eq_tar2=eq_tar2, eq_n1=eq_n1, eq_n2=eq_n2, ans=ans)
    
    return stem, answer, comment


# 3-1-2-446
def factorization312_Stem_376():
    stem = "$$수식$${hap}`=`{A}$$/수식$$, $$수식$${eq}`=`{B}$$/수식$$일 때, "\
        "$$수식$${cha}$$/수식$$의 값을 구하시오.\n"\
        "① $$수식$${ex1}$$/수식$$         ② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$         ④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_fin}$$/수식$$\n"\
        "즉, $$수식$${eq_fin_}`=`{B}$$/수식$$이므로\n"\
        "$$수식$${e2}`=`{e2_a1}$$/수식$$\n"\
        "$$수식$$=`{e2_a3}$$/수식$$\n"\
        "따라서\n$$수식$${cha}`=`{cha_n}$$/수식$$\n$$수식$$=`{ans}$$/수식$$\n\n"

    a_b = np.random.randint(2, 5)
    a_h = a_b + 1
    num = a_h ** 2 - a_b ** 2 - 1

    a_list = []
    b_list = []
    for i in range(num):
        fac = get_factorization(a_b**2+1+i)
        isb = 0

        for k in list(map(lambda x: x[1], fac)):
            if k != 1:
                isb = 1
                b_list.append(a_b**2+1+i)
                break
        
        if isb == 0:
            a_list.append(a_b**2+1+i)

    A = random.sample(a_list, 1)[0]

    var1 = "a"
    var2 = "b"

    m = np.random.randint(1,5)
    k = a_b

    hap = "%sa`+`b" % (m if m != 1 else "")
    cha = "%sa`-`b" % (m if m != 1 else "")

    st = "%s`%s`%s" % (var2, "+" if k > 0 else "-", abs(k))
    st_ = "%s`%s`%s" % (var2, "-" if k > 0 else "+", abs(k))
    y_2 = "`%s`%s^{2}" % ("-", var2)
    y_1 = "`%s`%s%s" % ("-" if k > 0 else "+", abs(2*k), var2)
    y_0 = "`%s`%s" % ("-", k**2)
    ys = [y_2, y_1, y_0]
    random.shuffle(ys)

    eq = "%s%s^{2}" % (m**2 if m**2 != 1 else "", var1) + ys[0] + ys[1] + ys[2]
    eq_match = "%s%s^{2}`-`(%s^{2}`%s`%s%s`%s`%s )" % (m**2 if m**2 != 1 else "", var1, var2, "+" if k > 0 else "-", abs(k*2), var2, "+", k**2)
    eq_match_ = "(%s%s )^{2}`-`( %s)^{2}" % (m if m != 1 else "", var1, st)
    
    e1 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "+", st)
    e2 = "%s%s`%s`%s" % (m if m != 1 else "", var1, "-", st_)
    eq_fin = "(%s ) (%s )" % (e1, e2)
    eq_fin_ = "(sqrt{%s}`+`%s ) (%s )" % (A, k, e2)
    B = (A - k**2) * np.random.randint(1, 5) * 2

    e2_a1 = "{%s} over {sqrt{%s}`+`%s}" % (B, A, k)
    e2_a2 = "{%s (sqrt{%s}`-`%s )} over {(sqrt{%s}`+`%s ) (sqrt{%s}`-`%s )}" % (B, A, k, A, k, A, k)
    e2_a1 = e2_a1 + "`=`" + e2_a2
    
    ans1 = int(B/(A - k**2))
    e2_a3 = "%s (sqrt{%s}`-`%s )" % (ans1, A, k)
    e2_a4 = "%s sqrt{%s} `-` %s" % (ans1, A, ans1*k)
    e2_a3 = e2_a3 + "`=`" + e2_a4
    cha_n = "%s sqrt{%s} `-` %s `+` %s" % (ans1, A, ans1*k, k)
    ans = "%s sqrt{%s} `-`%s" % (ans1, A, (ans1-1)*k)
    
    ex_l = [ans]
    f1 = "%s sqrt{%s} `+`%s"
    f2 = "%s sqrt{%s} `-`%s"
    ex_l.append(f1%(ans1, A, (ans1-1)*k))
    ex_l.append(f1%(int(ans1/2), A, (ans1-1)*k))
    ex_l.append(f2%(int(ans1/2), A, (ans1-1)*k))
    ex_l.append(f1%(ans1, A, ans1*k))

    example_list = make_shuffle_example(ex_l, 0)

    stem = stem.format(eq=eq, hap=hap, A=A, B=B, cha=cha, \
        ex1=example_list[1], ex2=example_list[2], ex3=example_list[3], ex4=example_list[4], ex5=example_list[5])
    answer = answer.format(a1=answer_dict[example_list[0]])
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, eq_fin=eq_fin, eq=eq, e2=e2, \
        eq_fin_=eq_fin_, B=B, e2_a1=e2_a1, e2_a3=e2_a3, cha=cha, cha_n=cha_n, ans=ans)
    
    return stem, answer, comment


# 3-1-2-447
def factorization312_Stem_377():
    stem = "다음 이차방정식을 $$수식$${eq_ab}$$/수식$$ 꼴로 나타낼 때, $$수식$$a`+`b$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n"\
        "$$표$$ $$수식$${eq1}`=`{eq2}$$/수식$$ $$/표$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}`=`{eq2}$$/수식$$에서\n"\
        "$$수식$${eq1_}`=`{eq2}$$/수식$$\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`+`b`=`{a}`+`{b_}`=`{ans}$$/수식$$\n\n"

    A = np.random.randint(2,7)
    BC = random.sample([1,2,3], 2)
    B = BC[0]
    C = BC[1] * random.sample([-1, 1], 1)[0]
    
    DE = random.sample(list(range(1,6)), 2)
    D = DE[0]
    E = DE[1] * random.sample([-1, 1], 1)[0]
    while A*B - D <= 0 or A*C == E:
        DE = random.sample(list(range(1,6)), 2)
        D = DE[0]
        E = DE[1] * random.sample([-1, 1], 1)[0]
    
    F = 1 * random.sample([-1, 1], 1)[0]
    F_m = -F

    eq1 = "%sx (%sx`%s`%s )" % (A if A != 1 else "", B if B != 1 else "", "+" if C > 0 else "-", abs(C))
    eq1_ = "%sx^{2}`%s`%sx" % (A*B if A*B != 1 else "", "+" if C > 0 else "-", abs(A*C) if abs(A*C) != 1 else "")
    eq2 = "%sx^{2}`%s`%sx`%s`%s" % (D if D != 1 else "", "+" if E > 0 else "-", abs(E) if abs(E) != 1 else "", "+" if F > 0 else "-", abs(F))

    eq_ab = "ax^{2}`+`bx`%s`1`=`0" % ("+" if F_m > 0 else "-")
    a = A*B-D
    b = A*C-E
    eq = "%sx^{2}`%s`%sx`%s`1`=`0" % (a if a != 1 else "", "+" if b > 0 else "-", abs(b) if abs(b) != 1 else "", "+" if F_m > 0 else "-")
    b_ = b
    if b_ < 0:
        b_ = "(%s )" % b
    ans = a+b
    
    stem = stem.format(eq_ab=eq_ab, eq1=eq1, eq2=eq2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq1_=eq1_, eq2=eq2, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-448
def factorization312_Stem_378():
    stem = "다음 이차방정식을 $$수식$${eq_ab}$$/수식$$ 꼴로 나타낼 때, $$수식$$a`+`b$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n"\
        "$$표$$ $$수식$${eq1}`=`{eq2}$$/수식$$ $$/표$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}`=`{eq2}$$/수식$$에서\n"\
        "$$수식$${eq1_}`=`{eq2}$$/수식$$\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`+`b`=`{a}`+`{b_}`=`{ans}$$/수식$$\n\n"

    m = np.random.randint(3, 6)
    n = m - 1
    
    A = np.random.randint(1,6)
    B = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    C = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    while m*A-B == 0 or (gcd(abs(m*A - B), n) != 1 and gcd(abs(C), n) != 1):
        B = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
        C = np.random.randint(1,7) * random.sample([-1, 1], 1)[0]
    
    a = m*A - B
    b = -C

    eq1 = "%sx (x`%s`%s )" % (m, "+" if A > 0 else "-", abs(A))
    eq1_ = "%sx^{2}`%s`%sx" % (m, "+" if A > 0 else "-", abs(A*m))
    eq2 = "x^{2}`%s`%sx`%s`%s" % ("+" if B > 0 else "-", abs(B) if abs(B) != 1 else "", "+" if C > 0 else "-", abs(C))

    eq_ab = "%sx^{2}`+`ax`+`b`=`0" % n
    eq = "%sx^{2}`%s`%sx`%s`%s`=`0" % (n, "+" if a > 0 else "-", abs(a) if abs(a) != 1 else "", "+" if b > 0 else "-", abs(b))
    b_ = b
    if b_ < 0:
        b_ = "(%s )" % b
    ans = a+b
    
    stem = stem.format(eq_ab=eq_ab, eq1=eq1, eq2=eq2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq1_=eq1_, eq2=eq2, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-449
def factorization312_Stem_379():
    stem = "이차방정식 $$수식$${eq1}`=`{eq2}$$/수식$$를 $$수식$${eq_ab}$$/수식$$ 꼴로 나타낼 때, "\
        "$$수식$$ab$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}`=`{eq2}$$/수식$$에서\n"\
        "$$수식$${eq1_}`=`{eq2}$$/수식$$\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`+`b`=`{a}`+`{b_}`=`{ans}$$/수식$$\n\n"

    
    m = np.random.randint(2, 5)
    
    A = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
    B = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
    C = np.random.randint(1, 7)
    D = np.random.randint(1, 7) * random.sample([-1, 1], 1)[0]
    a = A + m*B - C
    b = A*B - D

    while a == 0 or b == 0 or (gcd(m, abs(a)) != 1 and gcd(m, abs(b)) != 1):
        A = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
        B = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
        C = np.random.randint(1, 7)
        D = np.random.randint(1, 7) * random.sample([-1, 1], 1)[0]
        a = A + m*B - C
        b = A*B - D

    k1 = A + m*B
    k2 = A*B

    eq1 = "(%sx`%s`%s ) (x`%s`%s )" % (m, "+" if A > 0 else "-", abs(A), "+" if B > 0 else "-", abs(B))
    eq1_ = "%sx^{2}`%s`%sx`%s`%s" % (m, "+" if k1 > 0 else "-", abs(k1) if abs(k1) != 1 else "", "+" if k2 > 0 else "-", abs(k2))
    eq2 = "%sx`%s`%s" % (C if C != 1 else "", "+" if D > 0 else "-", abs(D))

    eq_ab = "%sx^{2}`+`ax`+`b`=`0" % m
    eq = "%sx^{2}`%s`%sx`%s`%s`=`0" % (m, "+" if a > 0 else "-", abs(a) if abs(a) != 1 else "", "+" if b > 0 else "-", abs(b))
    b_ = b
    if b_ < 0:
        b_ = "(%s )" % b
    ans = a+b
    
    stem = stem.format(eq_ab=eq_ab, eq1=eq1, eq2=eq2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq1_=eq1_, eq2=eq2, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-450 _ NOTYET
def factorization312_Stem_380():
    stem = "이차방정식 $$수식$${eq1}`=`{eq2}$$/수식$$를 $$수식$${eq_ab}$$/수식$$ 꼴로 나타낼 때, "\
        "$$수식$$ab$$/수식$$의 값을 구하시오. "\
        "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq1}`=`{eq2}$$/수식$$에서\n"\
        "$$수식$${eq1_}`=`{eq2}$$/수식$$\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "따라서 $$수식$$a`=`{a}$$/수식$$, $$수식$$b`=`{b}$$/수식$$이므로\n"\
        "$$수식$$a`+`b`=`{a}`+`{b_}`=`{ans}$$/수식$$\n\n"

    
    m = np.random.randint(2, 5)
    m2 = np.random.randint(1, 3)
    
    A = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
    B = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
    C = np.random.randint(1, 7)
    D = np.random.randint(1, 7) * random.sample([-1, 1], 1)[0]
    a = m*m2
    b = m2*A + m*B - C
    c = A*B - D

    while b == 0 or c == 0 or (gcd(a, abs(b)) != 1 and gcd(a, abs(c)) != 1):
        A = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
        B = np.random.randint(1, 6) * random.sample([-1, 1], 1)[0]
        C = np.random.randint(1, 7)
        D = np.random.randint(1, 7) * random.sample([-1, 1], 1)[0]
        a = m*m2
        b = m2*A + m*B - C
        c = A*B - D

    k1 = A*m2 + m*B
    k2 = A*B

    eq1 = "(%sx`%s`%s ) (%sx`%s`%s )" % (m, "+" if A > 0 else "-", abs(A), m2 if m2 != 1 else "", "+" if B > 0 else "-", abs(B))
    eq1_ = "%sx^{2}`%s`%sx`%s`%s" % (m*m2, "+" if k1 > 0 else "-", abs(k1) if abs(k1) != 1 else "", "+" if k2 > 0 else "-", abs(k2))
    eq2 = "%sx`%s`%s" % (C if C != 1 else "", "+" if D > 0 else "-", abs(D))

    eq_ab = "ax^{2}`+`bx`%s`%s`=`0" % ("+" if c > 0 else "-", abs(c))
    eq = "%sx^{2}`%s`%sx`%s`%s`=`0" % (a, "+" if b > 0 else "-", abs(b) if abs(b) != 1 else "", "+" if c > 0 else "-", abs(c))
    b_ = b
    if b_ < 0:
        b_ = "(%s )" % b
    ans = a+b
    
    stem = stem.format(eq_ab=eq_ab, eq1=eq1, eq2=eq2)
    answer = answer.format(ans=ans)
    comment = comment.format(eq=eq, eq1=eq1, eq1_=eq1_, eq2=eq2, a=a, b=b, b_=b_, ans=ans)
    
    return stem, answer, comment


# 3-1-2-418
def factorization312_Stem_381():
    stem = "$$수식$${eq}$$/수식$$이 소수가 되도록 하는 자연수 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$에 대하여 "\
        "$$수식$${cha}$$/수식$$의 최댓값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n"\
        "$$수식$${eq}$$/수식$$\n"\
        "$$수식$$=`{eq_match}$$/수식$$\n"\
        "$$수식$$=`{eq_match_}$$/수식$$\n"\
        "$$수식$$=`{eq_fin}$$/수식$$\n"\
        "즉, $$수식$${e1}`=`1$$/수식$$ 또는 $$수식$${e2}`=`1$$/수식$$\n"\
        "그런데 $$수식$${e1}`PREC`{e2}$$/수식$$이므로\n"\
        "$$수식$${e1}`=`1$$/수식$$에서 $$수식$${hap}`=`{ans1}$$/수식$$\n"\
        "이때 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$는 자연수이므로 "\
        "$$수식$${cha}$$/수식$$의 최댓값은 $$수식$${ans}$$/수식$$이다.\n\n"

    b = np.random.randint(1, 5)
    k1 = -np.random.randint(b, 6)
    p = random.sample([2,3,5,7], 1)[0]
    k2 = k1-1+p
    while k2 == 0:
        p = random.sample([2,3,5,7], 1)[0]
        k2 = k1-1+p 

    hap = "x`+`%sy" % (b if b != 1 else "")
    cha = "x`-`%sy" % (b if b != 1 else "")
    e1 = "%s`-`%s" % (hap, abs(k1))
    e2 = "%s`%s`%s" % (hap, "+" if k2 > 0 else "-", abs(k2))
    eq_fin = "(%s ) (%s )" % (e1, e2)

    k12 = k1+k2
    bk12 = b*k1 + b*k2
    k1k2 = k1*k2
    eq_match_ = "x^{2}`+`(%sy`%s`%s )x`+`(%sy`-`%s ) (%sy`%s`%s )" % (2*b, "+" if k12 > 0 else "-", abs(k12), b if b != 1 else "", abs(k1), b if b != 1 else "", "+" if k2 > 0 else "-", abs(k2))
    eq_match = "x^{2}`+`(%sy`%s`%s )x`+`%sy^{2}`%s`%sy`%s`%s" % (2*b, "+" if k12 > 0 else "-", abs(k12), b**2 if b != 1 else "", "+" if bk12 > 0 else "-", abs(bk12) if abs(bk12) != 1 else "", "+" if k1k2 > 0 else "-", abs(k1k2))
    eq = "x^{2}`%s`%sx`+`%sxy`+`%sy^{2}`%s`%sy`%s`%s" % ("+" if k12 > 0 else "-", abs(k12), 2*b, b**2 if b != 1 else "", "+" if bk12 > 0 else "-", abs(bk12) if abs(bk12) != 1 else "", "+" if k1k2 > 0 else "-", abs(k1k2))
    
    if k12 == 0:
        eq = "x^{2}`+`%sxy`+`%sy^{2}`%s`%s" % (2*b, b**2 if b != 1 else "", "+" if k1k2 > 0 else "-", abs(k1k2))
        eq_match_ = "x^{2}`+`(%sy )x`+`(%sy`-`%s ) (%sy`%s`%s )" % (2*b, b if b != 1 else "", abs(k1), b if b != 1 else "", "+" if k2 > 0 else "-", abs(k2))
        eq_match = "x^{2}`+`(%sy )x`+`%sy^{2}`%s`%s" % (2*b, b**2 if b != 1 else "", "+" if k1k2 > 0 else "-", abs(k1k2))

    ans1 = 1 - k1
    ans = ans1 - 2*b

    stem = stem.format(eq=eq, cha=cha)
    answer = answer.format(ans=ans)
    comment = comment.format(eq_match=eq_match, eq_match_=eq_match_, eq_fin=eq_fin, eq=eq, \
        e1=e1, e2=e2, hap=hap, cha=cha, ans1=ans1, ans=ans)
    
    return stem, answer, comment

# 3-1-2-452
def factorization312_Stem_382():
    stem = "다음 중 $$수식$$x$$/수식$$에 대한 이차방정식이 아닌 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "{ans_num} $$수식$${c1}$$/수식$$은 분모에 미지수가 있으므로 이차방정식이 아니다.\n\n"

    flag = True
    while flag:
        # a1 = (Ax + B)(Cx + D) = 0
        A, B, C, D, E = np.random.choice(range(1, 10), 5, replace=False)
        a1 = " ( %s x %s  )  ( %sx %s  ) `=` 0" % (
            int_str_converter(A, True, True), int_str_converter(B), int_str_converter(C, True, True), int_str_converter(D)
        )

        # a2 = (E + Fx)(G + Hx) = Ix + Jx ^{2}
        E, F, G, H, I, J = np.random.choice(range(1, 10), 6, replace=False)
        a2 = " ( %s %s x  )  ( %s %s x  ) `=` %s x %s x ^{2}" % (
            int_str_converter(E, True), int_str_converter(F, False, True), int_str_converter(G, True), int_str_converter(H, False, True),
            int_str_converter(I, True, True), int_str_converter(J, False, True)
        )

        # a3 = x ^{3} + Kx = (x + L)(x + M)(x + N)
        K, L, M, N = np.random.choice(range(1, 10), 4, replace=False)
        a3 = "x ^{3} %s x `=`  ( x %s  )  ( x %s  )  ( x %s  )" % (
            int_str_converter(K, False, True), int_str_converter(L), int_str_converter(M), int_str_converter(N)
        )

        # a4 = Ox ^{2} + Px + Q = Rx
        O, P, Q, R = np.random.choice(range(1, 10), 4)
        a4 = "%sx ^{2} %s x %s `=` %sx" % (
            int_str_converter(O, True, True), int_str_converter(P, False, True), int_str_converter(Q), int_str_converter(R, True, True)
        )

        # a5 = {S} over {x ^{2}} + {T} over {x} + U = 0
        # 정답은 항상 해당 식으로 고정되고 보기만 랜덤으로 섞어줌
        S, T, U = np.random.choice(range(1, 10), 3)
        a5 = "{%s} over {x ^{2}} `+` {%s} over {x} %s `=`0" % (
            int_str_converter(S, True), int_str_converter(T, True), int_str_converter(U)
        )

        # A와 B는 서로소
        if greatest_common_divisor(A, B)[0] == 1:
            # C와 D는 서로소
            if greatest_common_divisor(C, D)[0] == 1:
                # E와 F는 서로소
                if greatest_common_divisor(E, F)[0] == 1:
                    # G와 H는 서로소
                    if greatest_common_divisor(G, H)[0] == 1:
                        # F * H != J
                        if F * H != J:
                            answers = [a1, a2, a3, a4, a5]
                            random.shuffle(answers)

                            ans_num = multiple_choice_nums[answers.index(a5)]
                            c1 = a5
                            a1, a2, a3, a4, a5 = answers
                            flag = False


    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(ans_num=ans_num, c1=c1)


    return stem, answer, comment


# 3-1-2-453
def factorization312_Stem_383():
    stem = "$$수식$${s1}$$/수식$$이 이차방정식이 되기 위한 상수 $$수식$$a$$/수식$$의 조건은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${s1}$$/수식$$에서\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "이때 이차항의 계수가 $$수식$$0$$/수식$$이 아니어야 하므로\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "따라서 $$수식$$a `!=` {I}$$/수식$$\n\n"

    flag = True
    while flag:
        A, D = np.random.choice(range(1, 10), 2)
        B, C = np.random.choice(range(1, 10), 2, replace=False)

        # 절댓값이 30 이하인 두 자리 정수
        E = np.random.choice(range(10, 31)) * random.choice([-1, 1])

        s1 = " ( %sx %s  )  ( ax %s  ) `=` %s %sx ^{2} `" % (
            int_str_converter(A, True, True), int_str_converter(B), int_str_converter(C), int_str_converter(D, True), int_str_converter(E, False, True)
        )

        # A와 B는 서로소
        if greatest_common_divisor(A, B)[0] == 1:
            # 정답 조건 추가 : 0이 아닌 자연수
            if E % A == 0:
                I = E // A
                J = -1 * A
                K = reduction(B, A)
                L = 2 * A
                M = -1 * I

                # 오름차순 정렬을 위해 [[실제값, 보기], [실제값, 보기], ...]] 리스트 생성
                answers = [[I, "a `!=` %s" % I], [J, "a `!=` %s" % J], [B/A, "a `!=` %s" % K], [L, "a `=` %s" % L], [M, "a `=` %s" % M]]
                answers.sort()

                answers = [ans[1] for ans in answers]
                a1, a2, a3, a4, a5 = answers
                ans_num = multiple_choice_nums[answers.index("a `!=` %s" % I)]

                F = A * C
                G = B * C
                H = G - D

                # 해설 작성
                c1 = "%s ax ^{2} %s ax %sx %s `=` %s %s x ^{2}" % (
                    int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(F, False, True),
                    int_str_converter(G), int_str_converter(D, True), int_str_converter(E, False, True))
                c2 = " ( %s a %s  )x ^{2} `+`  ( %sa %s  ) x %s `=` 0" % (
                    int_str_converter(A, True, True), int_str_converter(-1*E), int_str_converter(B, True, True,),
                    int_str_converter(F), int_str_converter(H)
                )
                c3 = "%sa %s `!=` 0" % (int_str_converter(A, True, True), int_str_converter(-1*E))

                flag = False


    stem = stem.format(s1=s1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, c1=c1, c2=c2, c3=c3, I=I)


    return stem, answer, comment


# 3-1-2-454
def factorization312_Stem_384():
    stem = "다음 중 방정식 $$수식$${s1}$$/수식$${s1_josa} $$수식$$x$$/수식$$에 대한 이차방정식이 되도록 하는 상수 $$수식$$x$$/수식$$의 값으로 " \
           "적당하지 않은 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${s1}$$/수식$$에서\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "이때 이차항의 계수가 $$수식$$0$$/수식$$이 아니어야 하므로\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "따라서 $$수식$$a `!=` {F}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B, C, D, E = np.random.choice(range(1, 10), 5)

        s1 = "ax ^{2} %s `=`  ( %sx %s  )  ( %sx %s  )" % (
            int_str_converter(A), int_str_converter(B, True, True), int_str_converter(C),
            int_str_converter(D, True, True), int_str_converter(E)
        )
        s1_josa = num_josa(E)[3]

        # B와 C, D와 E는 서로소
        if greatest_common_divisor(B, C)[0] == 1 and greatest_common_divisor(D, E)[0] == 1:
            # C와 E는 다른수
            if C != E:
                F = B * D
                G = (B * E) + (C * D)
                H = C * E
                I = A - H

                c1 = "ax ^{2} %s `=` %sx ^{2} %sx %s" % (
                    int_str_converter(A), int_str_converter(F, True, True), int_str_converter(G, False, True), int_str_converter(H)
                )
                c2 = " ( a %s  ) x ^{2} %sx %s `=` 0" % (
                    int_str_converter(-1 * F), int_str_converter(-1 * G, False, True), int_str_converter(I)
                )
                c3 = "a %s `!=` 0" % (int_str_converter(-1 * F))

                # 보기 생성
                # I, J : 한자리 정수
                J = np.random.choice(10)
                if 0 < I < 10:
                    # F, I, J는 각각 다른 수
                    if len([F, I, J]) == len(set([F, I, J])):
                        answers = [-1*F, -1*I, J, I, F]
                        answers.sort()

                        a1, a2, a3, a4, a5 = answers
                        ans_num = multiple_choice_nums[answers.index(F)]

                        flag = False


    stem = stem.format(s1=s1, s1_josa=s1_josa, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, c1=c1, c2=c2, c3=c3, F=F)


    return stem, answer, comment


# 3-1-2-455
def factorization312_Stem_385():
    stem = "등식 $$수식$${s1} {s2}$$/수식$${s2_josa} 이차방정식이 되지 않기 위한 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${P}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 식을 좌변으로 이항하여 정리하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "이 등식이 $$수식$$x$$/수식$$에 대한 이차방정식이 되지 않으려면\n" \
              "$$수식$$x ^{{2}}$$/수식$$의 계수가 $$수식$$0$$/수식$$이어야 하므로\n" \
              "$$수식$${c4}$$/수식$$, $$수식$${c5}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {P}$$/수식$$\n\n"

    flag = True
    while flag:
        int_list = list(range(-9, 0)) + list(range(1, 10))

        D, E = np.random.choice(int_list, 2, replace=False)
        F = np.random.choice(range(1, 10))
        G, H, I = np.random.choice(int_list, 3, replace=False)
        P = np.random.choice(range(1, 10))
        A = (F ** 2) + 1
        B = (2 * F * G) + (2 * P)
        C = (G ** 2) + (P ** 2)
        if is_gcd(get_gcd(abs(A), abs(B)), C) :

            s1 = " ( %sa ^{2} %sa %s  ) x ^{2} %sx %sa" % (
                int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(C),
                int_str_converter(D, False, True), int_str_converter(E, False, True)
            )
            s2 = "=`  ( %sa %s  ) ^{2} x ^{2} %sax %s" % (
                int_str_converter(F, True, True), int_str_converter(G), int_str_converter(H, False, True), int_str_converter(I)
            )
            s2_josa = num_josa(I)[3]

            J = F ** 2
            K = 2 * F * G
            L = G ** 2

            c1 = "%s `-`  ( %sa %s  ) ^{2} x ^{2} %sax %s `=` 0" % (
                s1, int_str_converter(F, True, True), int_str_converter(G), int_str_converter(-1 * H, False, True), int_str_converter(-1 * I)
            )

            c2 = "%s `-`  ( %s ^{2} %sa %s  ) x ^{2} %sax %s `=` 0" % (
                s1, int_str_converter(J, True, True), int_str_converter(K, False, True), int_str_converter(L),
                int_str_converter(-1 * H, False, True), int_str_converter(-1 * I)
            )

            M = A - J
            N = 2 * P
            O = P ** 2

            if H > 0:
                c3_sign = "`-`"
                c3 = " ( %sa ^{2} %sa %s  ) x ^{2} %s  ( %sa %s  ) x %s a %s `=` 0" % (
                    int_str_converter(M, True, True), int_str_converter(N, False, True), int_str_converter(O),
                    c3_sign, abs(H), int_str_converter(-1 * D), int_str_converter(E, False, True),
                    int_str_converter(-1 * I)
                )
            else:
                c3_sign = "`+`"
                c3 = " ( %sa ^{2} %sa %s  ) x ^{2} %s  ( %sa %s  ) x %s a %s `=` 0" % (
                    int_str_converter(M, True, True), int_str_converter(N, False, True), int_str_converter(O),
                    c3_sign, abs(H), int_str_converter(D), int_str_converter(E, False, True),
                    int_str_converter(-1 * I)
                )

            c4 = "%sa ^{2} %sa %s `=` 0" % (
                int_str_converter(M, True, True), int_str_converter(N, False, True), int_str_converter(O)
            )

            if N < 0:
                c5 = " ( a %s  ) ^{2} `=` 0" % (int_str_converter(-1 * P))
            else:
                c5 = " ( a %s  ) ^{2} `=` 0" % (int_str_converter(P))
                P = -1 * P


            flag = False

    stem = stem.format(s1=s1, s2=s2, s2_josa=s2_josa)
    answer = answer.format(P=P)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, P=P)


    return stem, answer, comment


# 3-1-2-456
def factorization312_Stem_386():
    stem = "방정식 $$수식$${s1}$$/수식$$가 $$수식$$x$$/수식$$에 대한 이차방정식이 되기 위한 조건은?\n" \
           "➀ {a1}\n" \
           "➁ {a2}\n" \
           "➂ {a3}\n" \
           "➃ {a4}\n" \
           "➄ {a5}\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${s1}$$/수식$$를 정리하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "이때 이차방정식이 되기 위해서는\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "$$수식$${c4}$$/수식$$의 조건만 만족하는 경우 $$수식$${c5}$$/수식$$일 때 $$수식$${c6}$$/수식$$이 되므로 이차항의 계수가 " \
              "$$수식$$0$$/수식$$이 되어 이차방정식이 되지 않는다.\n" \
              "마찬가지로 $$수식$${c7}$$/수식$$의 조건만 만족하는 경우 $$수식$${c8}$$/수식$$일 때 $$수식$${c6}$$/수식$$이 되므로 " \
              "이차항의 계수가 $$수식$$0$$/수식$$이 되어 이차방정식이 되지 않는다.\n" \
              "따라서 $$수식$${c4}$$/수식$$이고 $$수식$${c7}$$/수식$$ 모두 만족하는 경우 이차방정식이 된다.\n\n"

    flag = True
    while flag:
        B, E = np.random.choice(range(1, 10), 2, replace=False)
        C = np.random.choice(range(10, 31)) * random.choice([-1, 1])        #  절댓값이 30 이하인 두 자리 정수
        F, G, H, I = np.random.choice(range(0, 10), 4, replace=False)
        A = F + G
        D = -1 * (F * G)

        # E/B != -F and E/B != -G
        if E / B != -1 * F and E / B != -1 * G:
            # F, G는 0 제외
            if F != 0 and G != 0:
                s1 = " ( a ^{2} %sa  ) x ^{2} %sax %s `=` %sx ^{2} %sx" % (
                    int_str_converter(A, False, True), int_str_converter(B, False, True), int_str_converter(C),
                    int_str_converter(D, True, True), int_str_converter(E, False, True)
                )

                c1 = " ( a ^{2} %sa %s  ) x ^{2} `+`  ( %sa %s  ) x %s `=` 0" % (
                    int_str_converter(A, False, True), int_str_converter(-1 * D),
                    int_str_converter(B, True, True), int_str_converter(-1 * E), int_str_converter(C)
                )
                c2 = "a ^{2} %s a %s `!=` 0" % (int_str_converter(A, False, True), int_str_converter(-1 * D))
                c3 = " ( a %s  )  ( a %s ) `!=` 0`" % (int_str_converter(F), int_str_converter(G))
                c4 = "a `!=` %s" % (-1 * F)
                c5 = "a `=` %s" % (-1 * G)
                c6 = "a ^{2} %s a %s `=` 0" % (int_str_converter(A, False, True), int_str_converter(-1 * D))
                c7 = "a `!=` %s" % (-1 * G)
                c8 = "a `=` %s" % (-1 * F)

                # 보기 생성
                a1 = "$$수식$$a `!=` %s$$/수식$$ 또는 $$수식$$a `=` %s$$/수식$$" % (-1 * F, -1 * G)
                a2 = "$$수식$$a `!=` %s$$/수식$$이고 $$수식$$a `!=` %s$$/수식$$" % (-1 * F, -1 * G)
                a3 = "$$수식$$a `!=` %s$$/수식$$" % (-1 * G)
                a4 = "$$수식$$a `!=` %s$$/수식$$ 또는 $$수식$$a `!=` %s$$/수식$$" % (H, I)
                a5 = "$$수식$$a `!=` %s$$/수식$$이고 $$수식$$a `!=` %s$$/수식$$" % (H, I)

                answers = [a1, a2, a3, a4, a5]
                random.shuffle(answers)
                ans_num = multiple_choice_nums[answers.index(a1)]
                a1, a2, a3, a4, a5 = answers

                flag = False

    stem = stem.format(s1=s1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8)


    return stem, answer, comment


# 3-1-2-457
def factorization312_Stem_387():
    stem = "다음 이차방정식 중에서 $$수식$$x `=` {A}$$/수식$${A_josa} 근으로 갖는 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "{ans_num} $$수식$${exp}$$/수식$$에 $$수식$$x `=` {A}$$/수식$${A_josa} 대입하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "즉, 등식이 성립한다.\n" \
              "따라서 $$수식$$x `=` {A}$$/수식$${A_josa2} 이차방정식 $$수식$${exp}$$/수식$$의 근이다\n\n"

    flag = True
    while flag:
        num_list = list(range(-9, 0)) + list(range(1, 10))
        A = np.random.choice(range(1, 10))
        A_josa = num_josa(A)[2]
        A_josa2 = num_josa(A)[1]

        exp_dict, comment_dict = {}, {}
        index = 0

        # a1 : x ^{2} + Bx + C = 0
        B = np.random.choice(num_list)
        C_true = -1 * ((A ** 2) + (B * A))
        C_false = -1 * C_true
        a1_true = "x ^{2} %s x %s `=` 0" % (int_str_converter(B, False, True), int_str_converter(C_true))
        a1_false = "x ^{2} %s x %s `=` 0" % (int_str_converter(B, False, True), int_str_converter(C_false))
        if A < 0:
            a1_comment = " ( %s  ) ^{2} `+`  ( %s `TIMES` %s  ) %s `=` 0" % (A, B, A, int_str_converter(C_true))
        else:
            a1_comment = "%s ^{2} `+`  ( %s `TIMES` %s  ) %s `=` 0" % (A, B, A, int_str_converter(C_true))
        exp_dict[index] = [a1_true, a1_false]
        comment_dict[a1_true] = a1_comment
        index += 1

        # a2 : (x + D)(x + E) = F
        D_true = np.random.choice(num_list)
        D_false = -1 * A
        E = np.random.choice(num_list)
        F = (A + D_true) * (A + E)
        if D_true != D_false:
            a2_true = " ( x %s  )  ( x %s  ) `=` %s" % (int_str_converter(D_true), int_str_converter(E), F)
            a2_false = " ( x %s  )  ( x %s  ) `=` %s" % (int_str_converter(D_false), int_str_converter(E), F)
            a2_comment = " ( %s %s  )  ( %s %s  ) `=` %s" % (int_str_converter(A, True, False), int_str_converter(D_true), int_str_converter(A, True, False), int_str_converter(E), F)
            exp_dict[index] = [a2_true, a2_false]
            comment_dict[a2_true] = a2_comment
            index += 1

        # a3 : x ^{2} + Gx + H = 0
        # a4 : x ^{2} + Ix + J = 0
        # a1과 형식이 동일하여 x = A를 근으로 갖지 않는 경우만 만들었음
        G, H, I, J = np.random.choice(num_list, 4, replace=False)
        if (A ** 2) + (G * A) + H != 0:
            a3_false = "x ^{2} %s x %s `=` 0" % (int_str_converter(G, False, True), int_str_converter(H))
            exp_dict[index] = ['', a3_false]
            index += 1
        if (A ** 2) + (I * A) + J != 0:
            a4_false = "x ^{2} %s x %s `=` 0" % (int_str_converter(I, False, True), int_str_converter(J))
            exp_dict[index] = ['', a4_false]
            index += 1

        # a5 : (x + K) ^{2} = L
        K_true = np.random.choice(num_list)
        K_false = -1 * K_true
        L = (A + K_true) ** 2
        a5_true = " ( x %s  ) ^{2} `=` %s" % (int_str_converter(K_true), L)
        a5_false = " ( x %s  ) ^{2} `=` %s" % (int_str_converter(K_false), L)
        a5_comment = " ( %s %s  ) ^{2} `=` %s" % (A, int_str_converter(K_true), L)
        exp_dict[index] = [a5_true, a5_false]
        comment_dict[a5_true] = a5_comment

        if len(exp_dict) == 5 and len(comment_dict) == 3:
            keys = list(exp_dict.keys())
            random.shuffle(keys)

            # 보기, 정답 세팅
            ans_index = np.random.choice(5)
            answers = []
            for i, k in enumerate(keys):
                if i == ans_index and exp_dict[k][0]:
                    ans = exp_dict[k][0]
                    answers.append(ans)
                    exp = ans
                    c1 = comment_dict[ans]
                    ans_num = multiple_choice_nums[i]
                elif i != ans_index:
                    answers.append(exp_dict[k][1])

            if len(answers) == 5:
                a1, a2, a3, a4, a5 = answers

                # 변수 범위 체크
                if check_abs([A, B, C_true, D_true, E, F, G, H, I, J, K_true, L]):
                    flag = False

    stem = stem.format(A=A, A_josa=A_josa, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(ans_num=ans_num, exp=exp, A=A, A_josa=A_josa, A_josa2=A_josa2, c1=c1)


    return stem, answer, comment


# 3-1-2-458
def factorization312_Stem_388():
    stem = "다음 이차방정식 중에서 $$수식$$x `=` {A}$$/수식$${A_josa} 근으로 갖지 않는 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "{ans_num} $$수식$${exp}$$/수식$$에 $$수식$$x `=` {A}$$/수식$${A_josa} 대입하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "즉, $$수식$${c2}$$/수식$$이므로 $$수식$$x `=` {A}$$/수식$${A_josa} 근으로 갖지 않는다.\n\n"

    flag = True
    while flag:
        num_list = list(range(-5,0)) + list(range(1, 6))
        A = np.random.choice(range(1, 5))
        A_josa = num_josa(A)[2]

        exp_dict, comment_dict = {}, {}
        index = 0

        # a1 : x ^{2} + Bx + C = 0
        B = np.random.choice(num_list)
        # x=A를 근으로 갖지 않는 것 - True, 근으로 갖는 것 - False
        C_false = -1 * ((A ** 2) + (B * A))
        C_true = -1 * C_false
        D = (A ** 2) + (A * B) + C_true
        if D != 0:
            a1_true = "x ^{2} %s x %s `=` 0" % (int_str_converter(B, False, True), int_str_converter(C_true))
            a1_false = "x ^{2} %s x %s `=` 0" % (int_str_converter(B, False, True), int_str_converter(C_false))
            a1_c1 = "%s ^{2} `+`  ( %s `TIMES` %s  ) %s `=` %s" % (A, B, A, int_str_converter(C_true), D)
            a1_c2 = "x ^{2} %s x %s `!=` 0" % (int_str_converter(B, False, True), int_str_converter(C_true))
            exp_dict[index] = [a1_true, a1_false]
            comment_dict[a1_true] = [a1_c1, a1_c2]
            index += 1

        # a2 : Ex ^{2} + F = 0
        E = np.random.choice(range(2, 5))
        # 근으로 갖지 않는 것 - True, 근으로 갖는 것 - False
        F_true = E * (A ** 2)
        F_false = -1 * F_true
        G = (E * (A ** 2)) + F_true
        a2_true = "%sx ^{2} %s `=` 0" % (int_str_converter(E, True, True), int_str_converter(F_true))
        a2_false = "%sx ^{2} %s `=` 0" % (int_str_converter(E, True, True), int_str_converter(F_false))
        a2_c1 = "%sx ^{2} %s `=` %s" % (int_str_converter(E, True, True), int_str_converter(F_true), G)
        a2_c2 = "%sx ^{2} %s `!=` 0" % (int_str_converter(E, True, True), int_str_converter(F_true))
        exp_dict[index] = [a2_true, a2_false]
        comment_dict[a2_true] = [a2_c1, a2_c2]
        index += 1

        # a3 : H(x + I)(Jx + K) = 0
        H = np.random.choice(range(2, 4))
        I_true = A
        I_false = -1 * A
        J = np.random.choice(range(2, 5))
        K = np.random.choice(num_list)
        L = 3 * (A + I_true) * ((J * A) + K)
        a3_true = "%s  ( x %s  )  ( %sx %s  ) `=` 0" % (
            int_str_converter(H, True, True), int_str_converter(I_true), int_str_converter(J, True, True), int_str_converter(K))
        a3_false = "%s  ( x %s  )  ( %sx %s  ) `=` 0" % (
            int_str_converter(H, True, True), int_str_converter(I_false), int_str_converter(J, True, True), int_str_converter(K))
        a3_c1 = "%s  ( x %s  )  ( %sx %s  ) `=` %s" % (
            int_str_converter(H, True, True), int_str_converter(I_true), int_str_converter(J, True, True), int_str_converter(K), L)
        a3_c2 = "%s  ( x %s  )  ( %sx %s  ) `!=` 0" % (
            int_str_converter(H, True, True), int_str_converter(I_true), int_str_converter(J, True, True), int_str_converter(K))
        exp_dict[index] = [a3_true, a3_false]
        comment_dict[a3_true] = [a3_c1, a3_c2]
        index += 1

        # a4 : M(x + N) ^{2} = Ox + P
        M = np.random.choice(range(2, 4))
        N_true = -1 * A
        N_false = np.random.choice(range(2, 4))
        O = random.choice(range(2, 5))
        P = (M * ((A + N_false) ** 2)) - (O * A)
        Q = M * ((A + N_true) ** 2)
        R = (O * A) + P
        a4_true = "%s  ( x %s  ) ^{2} `=` %sx %s" % (
            int_str_converter(M, True, True), int_str_converter(N_true), int_str_converter(O, True, True), int_str_converter(P)
        )
        a4_false = "%s  ( x %s  ) ^{2} `=` %sx %s" % (
            int_str_converter(M, True, True), int_str_converter(N_false), int_str_converter(O, True, True), int_str_converter(P)
        )
        a4_c1 = "%s  ( x %s  ) ^{2} `=` %s  ( %s %s  ) ^{2} `=` %s$$/수식$$\n" \
                "$$수식$$%sx %s `=`  ( %s `TIMES` %s  ) %s `=` %s" % (
            int_str_converter(M, True, True), int_str_converter(N_true), int_str_converter(M, True, True), int_str_converter(A, True), int_str_converter(N_true), Q,
            int_str_converter(O, True, True), int_str_converter(P), int_str_converter(O, True, True), int_str_converter(A, True), int_str_converter(P), R
        )
        a4_c2 = "%s  ( x %s  ) ^{2} `!=` %sx %s" % (
            int_str_converter(M, True, True), int_str_converter(N_true), int_str_converter(O, True, True),
            int_str_converter(P)
        )
        exp_dict[index] = [a4_true, a4_false]
        comment_dict[a4_true] = [a4_c1, a4_c2]
        index += 1

        # a5 : S(x + T) ^{2} = Ux + V
        S = np.random.choice(range(2, 5))
        # 근으로 갖지 않는 것 - True, 갖는 것 - False
        T_true = A
        T_false = -1 * A
        U = np.random.choice(range(2, 5))
        V = -1 * ((S * ((A + T_true) ** 2)) - (U * A))
        W = S * ((A + T_true) ** 2)
        X = (U * A) + V
        if W != X:
            a5_true = "%s  ( x %s  ) ^{2} `=` %sx %s" % (
                int_str_converter(S, True, True), int_str_converter(T_true), int_str_converter(U, True, True), int_str_converter(V)
            )
            a5_false = "%s  ( x %s  ) ^{2} `=` %sx %s" % (
                int_str_converter(S, True, True), int_str_converter(T_false), int_str_converter(U, True, True), int_str_converter(V)
            )
            a5_c1 = "%s  ( x %s  ) ^{2} `=` %s  ( %s %s  ) ^{2} `=` %s$$/수식$$\n" \
                    "$$수식$$%sx %s `=`  ( %s `TIMES` %s  ) %s `=` %s" % (
                int_str_converter(S, True, True), int_str_converter(T_true), int_str_converter(S, True, True), int_str_converter(A, True, False), int_str_converter(T_true), W,
                int_str_converter(U, True, True), int_str_converter(V), int_str_converter(U, True, False), int_str_converter(A, True, False), int_str_converter(V), X
            )
            a5_c2 = "%s  ( x %s  ) ^{2} `!=` %sx %s" % (
                int_str_converter(S, True, True), int_str_converter(T_true), int_str_converter(U, True, True), int_str_converter(V)
            )
            exp_dict[index] = [a5_true, a5_false]
            comment_dict[a5_true] = [a5_c1, a5_c2]


        if len(exp_dict) == 5 and len(comment_dict) == 5:
            keys = list(exp_dict.keys())
            random.shuffle(keys)

            answers = []
            ans_index = np.random.choice(5)
            for i, k in enumerate(keys):
                if i == ans_index:
                    ans_num = multiple_choice_nums[i]
                    exp = exp_dict[k][0]
                    answers.append(exp)
                    c1, c2 = comment_dict[exp]
                else:
                    answers.append(exp_dict[k][1])

            if len(answers) == 5:
                a1, a2, a3, a4, a5 = answers

                # 범위 체크
                if check_abs([P, V]):
                    flag = False

    stem = stem.format(A=A, A_josa=A_josa, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(ans_num=ans_num, exp=exp, A=A, A_josa=A_josa, c1=c1, c2=c2)


    return stem, answer, comment


# 3-1-2-461
def factorization312_Stem_389():
    stem = "$$수식$${s1}$$/수식$$인 정수 $$수식$$x$$/수식$$에 대하여 이차방정식 $$수식$${s2}$$/수식$$의 해 $$수식$$x$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${B}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$의 값이 $$수식$${c1}$$/수식$$이므로 이를 이차방정식 $$수식$${s2}$$/수식$$에 대입하여 등식이 성립하는 것을 찾는다.\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "따라서 주어진 이차방정식의 해는 $$수식$${B}$$/수식$$이다.\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-2, 4))
        B = A + 3
        C = np.random.choice(range(1, 10))
        D = -1 * ((B ** 2) + (B * C))

        s1 = "%s `LEQ` x `LEQ` %s" % (A, B)
        s2 = "x ^{2} %sx %s `=` 0" % (int_str_converter(C, False, True), int_str_converter(D))
        c1 = "$$/수식$$, $$수식$$".join(map(str, list(range(A, B+1))))

        # c2는 3만큼 반복되므로 견본을 하나 만들어서 루프 돌리며 반복
        c2 = []
        c2_example = "$$수식$$x `=` %s$$/수식$$일 때, $$수식$$%s ^{2} %s `TIMES` %s %s %s 0$$/수식$$"
        for i in range(A, B+1):
            # 음수인경우 괄호처리
            if i < 0:
                i_str = " ( %s  )" % i
            else:
                i_str = i

            if i == B:
                c2.append(c2_example % (i, i, int_str_converter(C), i_str, int_str_converter(D), "`=`"))
            else:
                c2.append(c2_example % (i, i, int_str_converter(C), i_str, int_str_converter(D), "`!=`"))
        c2 = "$$/수식$$\n$$수식$$".join(c2)

        flag = False

    stem = stem.format(s1=s1, s2=s2)
    answer = answer.format(B=B)
    comment = comment.format(s2=s2, c1=c1, c2=c2, B=B)

    return stem, answer, comment


# 3-1-2-462
def factorization312_Stem_390():
    stem = "$$수식$${s1}$$/수식$$인 정수 $$수식$$x$$/수식$$에 대하여 이차방정식 $$수식$${s2}$$/수식$$의 해 $$수식$$x$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${B}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x$$/수식$$의 값이 $$수식$${c1}$$/수식$$이므로 이를 이차방정식 $$수식$${s2}$$/수식$$에 대입하여 등식이 성립하는 것을 찾는다.\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "따라서 주어진 이차방정식의 해는 $$수식$${A}$$/수식$$이다.\n\n"

    flag = True
    while flag:
        A = np.random.choice(range(-6, 6))
        B = A + 3
        C = np.random.choice(range(1, 10))
        D = -1 * ((A ** 2) + (A * C))

        s1 = "%s `LEQ` x `LEQ` %s" % (A, B)
        s2 = "x ^{2} %sx %s `=` 0" % (int_str_converter(C, False, True), int_str_converter(D))
        c1 = "$$/수식$$, $$수식$$".join(map(str, list(range(A, B + 1))))

        # c2는 3만큼 반복되므로 견본을 하나 만들어서 루프 돌리며 반복
        c2 = []
        c2_example = "$$수식$$x `=` %s$$/수식$$일 때, $$수식$$%s ^{2} %s `TIMES` %s %s %s 0$$/수식$$"
        for i in range(A, B + 1):
            # 음수일때 괄호 처리
            if i < 0:
                i_str = " ( %s  )" % i
            else:
                i_str = i

            if i == A:
                c2.append(c2_example % (i, i_str, int_str_converter(C), i_str, int_str_converter(D), "`=`"))
            else:
                c2.append(c2_example % (i, i_str, int_str_converter(C), i_str, int_str_converter(D), "`!=`"))
        c2 = "$$/수식$$\n$$수식$$".join(c2)

        flag = False

    stem = stem.format(s1=s1, s2=s2)
    answer = answer.format(B=B)
    comment = comment.format(s2=s2, c1=c1, c2=c2, A=A)

    return stem, answer, comment


# 3-1-2-463
def factorization312_Stem_391():
    stem = "부등식 $$수식$${s1}$$/수식$${s1_josa} 만족시키는 자연수 $$수식$$x$$/수식$$중에서 이차방정식 $$수식$${s2}$$/수식$$의 해는?\n" \
           "➀ {a1}\n" \
           "➁ {a2}\n" \
           "➂ {a3}\n" \
           "➃ {a4}\n" \
           "➄ {a5}\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "주어진 조건에서 $$수식$$x$$/수식$$는 자연수이고\n" \
              "$$수식$${s1}$$/수식$$에서 $$수식$${c1}$$/수식$$이므로\n" \
              "$$수식$$x$$/수식$$의 값은 {c2}이다.\n" \
              "이를 주어진 이차방정식 $$수식$${s2}$$/수식$$에 대입하여 등식이 성립하는 것을 찾는다.\n" \
              "{c3}\n" \
              "따라서 주어진 이차방정식의 해는 $$수식$$x `=` {K}$$/수식$$이다.\n\n"

    flag = True
    while flag:
        H = np.random.choice((range(3, 6)))
        A = np.random.choice(range(2, 10))
        B = np.random.choice(range(-9, 10))
        C = A - 1
        D = B + H

        s1 = "%sx %s `LEQ` %sx %s" % (
        int_str_converter(A, True, True), int_str_converter(B), int_str_converter(C, True, True), int_str_converter(D)
        )
        s1_josa = num_josa(D)[2]
        c1 = "x `LEQ` %s" % H
        c2 = "$$수식$$" + "$$/수식$$, $$수식$$".join(map(str, list(range(1, H+1)))) + "$$/수식$$"

        if B != 0 and D != 0:
            K = np.random.choice(range(2, 5))
            E = np.random.choice(range(2, 6))
            F = np.random.choice(range(-9, 10))
            G = (E * (K ** 2)) - (F * K)
            G = G * -1

            if F != 0:
                s2 = "%sx ^{2} %sx %s `=` 0`" % (int_str_converter(E, True, True), int_str_converter(F, False, True), int_str_converter(G))

                # c3은 H만큼 반복되므로 견본을 하나 만들어서 루프 돌리며 반복
                c3 = []
                c3_example = "$$수식$$x `=` %s$$/수식$$일 때, $$수식$$%s `TIMES` %s ^{2} %s `TIMES` %s %s `%s` 0$$/수식$$"
                for i in range(1, H+1):
                    if i == H:
                        c3.append(c3_example % (i, E, i, int_str_converter(F), i, int_str_converter(G), "="))
                    else:
                        c3.append(c3_example % (i, E, i, int_str_converter(F), i, int_str_converter(G), "!="))
                c3 = "\n".join(c3)

                # 보기 생성 (자연수 2개, 정답 1개, 자연수 쌍 2개)
                answers = []

                # 자연수 2개, 정답 1개
                integers = np.random.choice(range(H+1), 2, replace=False).tolist() + [K]
                integers.sort()
                answers += ["$$수식$$%s$$/수식$$" % num for num in integers]

                combinations = random.sample(list(itertools.combinations(range(1, H+1), 2)), 2)
                combinations.sort()
                answers += ["$$수식$$" + "$$/수식$$, $$수식$$".join(map(str,comb)) + "$$/수식$$" for comb in combinations]

                if len(answers) == len(set(answers)):
                    a1, a2, a3, a4, a5 = answers
                    ans_num = multiple_choice_nums[answers.index("$$수식$$%s$$/수식$$" % K)]

                    flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, s2=s2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, s2=s2, c1=c1, c2=c2, c3=c3, K=K)

    return stem, answer, comment


# 3-1-2-464
def factorization312_Stem_392():
    stem = "이차방정식 $$수식$${s1}$$/수식$$의 한 근이 $$수식$${s2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${H}$$/수식$$\n"
    comment = "(해셜)\n" \
              "$$수식$${s1}$$/수식$$에 $$수식$${s2}$$/수식$${s2_josa} 대입하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$에서 $$수식$$a `=` {H}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B, C, D, E = np.random.choice(range(1, 10), 5, replace=False)
        F = (A * (E ** 2)) + D
        G = (B * (E ** 2)) + (C * E)
        H = -1 * (G // F)

        if F != 0 and G % F == 0:
            s1 = " ( %sa %s  )x ^{2} %sx %sa `=` 0`" % (
                int_str_converter(A, True, True), int_str_converter(B), int_str_converter(C, False, True), int_str_converter(D, False, True))
            s2 = "x `=` %s" % E
            s2_josa = num_josa(E)[2]

            c1 = " ( %sa %s  ) `TIMES` %s ^{2} %s `TIMES` %s %sa `=` 0" % (
                int_str_converter(A, True, True), int_str_converter(B), int_str_converter(E, True, False),
                int_str_converter(C), int_str_converter(E, True, False), int_str_converter(D, False, True)
            )
            c2 = "%sa %s `=` 0`" % (int_str_converter(F, True, True), int_str_converter(G))

            # 범위 제한
            if abs(F) < 100 and abs(G) < 100 and abs(H) < 100:
                flag = False

    stem = stem.format(s1=s1, s2=s2)
    answer = answer.format(H=H)
    comment = comment.format(s1=s1, s2=s2, s2_josa=s2_josa, c1=c1, c2=c2, H=H)

    return stem, answer, comment


# 3-1-2-466
def factorization312_Stem_393():
    stem = "이차방정식 $$수식$${s1}$$/수식$$의 한 근이 $$수식$${s2}$$/수식$$이고, $$수식$${s3}$$/수식$$의 한 근이 $$수식$${s4}$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${H}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${s1}$$/수식$$의 한 근이 $$수식$${s2}$$/수식$$ 이므로\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$에서 $$수식$${c3}$$/수식$$\n" \
              "이차방정식 $$수식$${s3}$$/수식$$의 한 근이 $$수식$${s4}$$/수식$$ 이므로\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$에서 $$수식$${c6}$$/수식$$\n" \
              "따라서 $$수식$$a `+` b = {H}$$/수식$$\n\n"

    flag = True
    while flag:
        A, C, D, E, F = np.random.choice(range(2, 7), 5, replace=False)
        B = np.random.choice(range(-9, -1))
        I = (A * (C ** 2)) + (B * C)
        G = (D * (F ** 2)) + (E * F)
        H = I + G

        s1 = "%sx ^{2} %sx `-` a `=` 0`" % (int_str_converter(A, True, True), int_str_converter(B, False, True))
        s2 = "x `=` %s" % C
        c1 = "%s `TIMES` %s ^{2} %s `TIMES` %s `-` a `=` 0" % (A, int_str_converter(C, True, False), int_str_converter(B), int_str_converter(C, True, False))
        c2 = "%s `-` a `=` 0" % I
        c3 = "a `=` %s" % I

        s3 = "%sx ^{2} %sx `-` b `=` 0`" % (int_str_converter(D, True, True), int_str_converter(E, False, True))
        s4 = "x `=` %s" % F
        c4 = "%s `TIMES` %s ^{2} %s `TIMES` %s `-` b `=` 0" % (D, int_str_converter(F, True, False), int_str_converter(E), int_str_converter(F, True, False))
        c5 = "%s `-` b `=` 0" % G
        c6 = "b `=` %s" % G

        # 숫자 범위 체크
        if abs(H) < 100:
            flag = False

    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4)
    answer = answer.format(H=H)
    comment = comment.format(s1=s1, s2=s2, s3=s3, s4=s4, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, H=H)

    return stem, answer, comment


# 3-1-2-467
def factorization312_Stem_394():
    stem = "$$수식$${s1}$$/수식$${s1_josa} 이차방정식 $$수식$${s2}$$/수식$$의 근이면서 $$수식$${s3}$$/수식$$의 근일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${s1}$$/수식$${s1_josa} 이차방정식 $$수식$${s2}$$/수식$$의 근이면서 $$수식$${s3}$$/수식$$의 근이므로\n" \
              "$$수식$${s2}$$/수식$$에 $$수식$${s1}$$/수식$${s1_josa2} 대입하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$에서 $$수식$${c3}$$/수식$$\n" \
              "$$수식$${s3}$$/수식$$에 $$수식$${s1}$$/수식$${s1_josa2} 대입하면\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$에서 $$수식$${c6}$$/수식$$\n" \
              "따라서 $$수식$${c7}$$/수식$$\n\n"

    flag = True
    while flag:
        # A : 1 초과 5 이하의 한자리수 소수
        A = np.random.choice([2, 3, 5])
        B, C, D, E = np.random.choice(range(2, 10), 4, replace=False)

        F = (B * (A ** 2)) + (C * A)
        H = (D * (A ** 2)) + E

        if H % A == 0:
            I = -1 * (H // A)
            J = I + F

            s1 = "x `= %s" % A
            s1_josa = num_josa(A)[3]
            s1_josa2 = num_josa(A)[2]

            s2 = "%s x ^{2} %s x `+` a `=` 0" % (int_str_converter(B, True, True), int_str_converter(C, False, True))
            c1 = "%s ` TIMES ` %s ^{2} %s ` TIMES ` %s `+` a `=` 0" % (B, A, int_str_converter(C), A)   # A가 항상 양수여서 괄호 처리 생략함
            c2 = "%s `+` a `=` 0" % F
            c3 = "a `=` %s" % (-1*F)

            s3 = "%s x ^{2} `+` bx %s `=` 0" % (int_str_converter(D, True, True), int_str_converter(E))
            c4 = "%s ` TIMES ` %s ^{2} `+` b ` TIMES ` %s %s `=` 0" % (D, A, A, int_str_converter(E))    # A가 항상 양수여서 괄호 처리 생략함
            c5 = "%sb %s `=` 0" % (int_str_converter(A, True, True), int_str_converter(H))
            c6 = "b `=` %s" % I

            c7 = "a `+` b `=` %s %s `=` %s" % (F, int_str_converter(I), J)    # F는 항상 양수여서 괄호처리 생략

            answers = list(range(J-5, J+5))
            ans_index = np.random.choice(5)
            answers = answers[ans_index : ans_index+5]

            if len(answers) == len(set(answers)) and J in answers:
                a1, a2, a3, a4, a5 = answers
                ans_num = multiple_choice_nums[answers.index(J)]
                flag = False

    stem = stem.format(s1=s1, s1_josa=s1_josa, s2=s2, s3=s3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, s1_josa=s1_josa, s1_josa2=s1_josa2, s2=s2, s3=s3, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7)

    return stem, answer, comment


# 3-1-2-468
def factorization312_Stem_395():
    stem = "이차방정식 $$수식$${s1}$$/수식$$을 만족시키는 한 근이 $$수식$$x `=` {D}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${G}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 이차방정식의 해가 $$수식$${D}$$/수식$$이므로\n" \
              "$$수식$${s1}$$/수식$$에 $$수식$$x `=` {D}$$/수식$${D_josa} 대입하여 성립하는 $$수식$$a$$/수식$$의 값을 구한다.\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$에서 $$수식$$a `=` {G}$$/수식$$\n\n"

    flag = True
    while flag:
        A, D = np.random.choice(range(1,10), 2, replace=False)
        D_josa = num_josa(D)[2]

        # B, C : 절댓값이 50보다 작은 두 자리 정수
        B, C = np.random.choice(range(10, 51), 2, replace=False)
        B *= random.choice([-1, 1])
        C *= random.choice([-1, 1])

        E = (D ** 2) + (D * A)
        F = (B * E) + C
        G = -1 * (F // E)

        if E != 0 and F % E == 0:
            s1 = "ax  ^{2} `+`  ( %sa %s  ) x %s `=` 0} `" % (int_str_converter(A, True, True), int_str_converter(B, False, True), int_str_converter(C))
            c1 = "a ` TIMES ` %s ^{2} `+`  ( %sa %s  ) `TIMES` %s %s `=` 0" % (
                D, int_str_converter(A, True, True), int_str_converter(B), D, int_str_converter(C)
            )
            c2 = "%sa %s" % (int_str_converter(E, True, True), int_str_converter(F))

            # 범위 제한
            if abs(E) < 100 and abs(F) < 100 and abs(G) < 100:
                flag = False

    stem = stem.format(s1=s1, D=D)
    answer = answer.format(G=G)
    comment = comment.format(s1=s1, c1=c1, c2=c2, D=D, D_josa=D_josa, G=G)

    return stem, answer, comment


# 3-1-2-469
def factorization312_Stem_396():
    stem = "$$수식$$x `=` {A}$$/수식$${A_josa} 이차방정식 $$수식$${s1}$$/수식$$의 근이면서 $$수식$${s2}$$/수식$$의 근일 때, \n" \
           "상수 $$수식$$m$$/수식$$, $$수식$$n$$/수식$$에 대하여 $$수식$$mn$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n" \
              "두 이차방정식을 모두 만족하는 해가 $$수식$$x `=` {A}$$/수식$$이므로 주어진 해를 각각의 이차방정식에 대입한다.\n" \
              "$$수식$${s1}$$/수식$$에서 $$수식$$x `=` {A}$$/수식$$이므로\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$에서 $$수식$$m `=` {F}$$/수식$$\n" \
              "$$수식$${s2}$$/수식$$에서 $$수식$$x `=` {A}$$/수식$$이므로\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "$$수식$${c4}$$/수식$$에서 $$수식$$n `=` {I}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B, C, D = np.random.choice(range(2, 10), 4, replace=False)
        E = (B * (A ** 2)) + C
        F = -1 * (E // A)
        G = A * D
        K = np.random.choice(range(2, 10))
        H = (A ** 2) + K

        A_josa = num_josa(A)[3]

        if H != 0:
            if E % A == 0 and G % H == 0:
                I = -1 * (G // H)
                J = F * I

                s1 = "%sx ^{2} `-` mx %s `=` 0" % (int_str_converter(B, True, True), int_str_converter(C))
                s2 = "nx ^{2} %s x %sn `=` 0" % (int_str_converter(D, False, True), int_str_converter(K, False, True))

                c1 = "%s ` TIMES` %s ^{2} `-` m ` TIMES ` %s %s `=` 0" % (B, A, A, int_str_converter(C))
                c2 = "%s %sm `=` 0" % (E, int_str_converter(A, False, True))
                c3 = "n `TIMES` %s ^{2} %s `TIMES` %s %sn `=` 0" % (A, int_str_converter(D), A, int_str_converter(K, False, True))
                c4 = "%s %sn `=` 0" % (G, int_str_converter(H, False, True))
                if I < 0:
                    c5 = "mn `=` %s `TIMES `   (%s  ) `=` %s" % (F, I, J)
                else:
                    c5 = "mn `=` %s `TIMES ` %s `=` %s" % (F, I, J)

                # 정답 범위 제한
                if abs(J) < 100:
                    flag = False

    stem = stem.format(A=A, A_josa=A_josa, s1=s1, s2=s2)
    answer = answer.format(J=J)
    comment = comment.format(A=A, F=F, I=I, s1=s1, s2=s2, c1=c1, c2=c2, c3=c3, c4=c4, c5=c5)

    return stem, answer, comment


# 3-1-2-470
def factorization312_Stem_397():
    stem = "이차방정식 $$수식$${s1}$$/수식$$의 한 근이 $$수식$${s2}$$/수식$$이고, $$수식$${s3}$$/수식$$의 한 근이 $$수식$${s4}$$/수식$$일 때, " \
           "상수 $$수식$$m$$/수식$$, $$수식$$n$$/수식$$에 대하여 $$수식$$m `+` n$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${s1}$$/수식$$의 한 근이 $$수식$${s2}$$/수식$$이므로\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "이차방정식 $$수식$${s3}$$/수식$$의 한 근이 $$수식$${s4}$$/수식$$이므로\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "$$수식$${c4}$$/수식$$\n" \
              "$$수식$$㉠$$/수식$$과 $$수식$$㉡$$/수식$$을 연립하여 풀면\n" \
              "$$수식$$m `=` {E}$$/수식$$, $$수식$$n `=` {F}$$/수식$$\n" \
              "따라서 $$수식$$m `+` n `=` {G}$$/수식$$\n\n"

    flag = True
    while flag:
        A, B, C = np.random.choice(range(1, 10), 3, replace=False)
        D = C * (B ** 2)
        G = A * D

        if ((2 * D) - A) % ((-2 * A) - (-2 * B)) == 0:
            E = ((2 * D) - A) // ((-2 * A) - (-2 * B))
            F = D + (B * E)

            # A, B 모두 양수이기 때문에 괄호 처리 안함

            s1 = "x ^{2} `-` 2mx `-` 2n `=` 0"
            s2 = "x `=` %s" % A
            s3 = "%sx ^{2} `+` mx `-` n `=` 0" % int_str_converter(C, True, True)
            s4 = "x `=` %s" % B

            c1 = "%s ^{2} `-` 2m ` TIMES ` %s `-` 2n `=` 0" % (A, A)
            c2 = "%s %sm `-` 2n `=` 0 ~ CDOTS  CDOTS ~ ㉠" % (A, int_str_converter(A * -2))
            c3 = "%s ` TIMES %s ^{2} `+` m ` TIMES ` %s `-` n `=` 0" % (C, B, B)
            c4 = "%s %sm `-` n `=` 0 ~ CDOTS  CDOTS ~ ㉡" % (D, int_str_converter(B, False, True))

            # 정답 범위 제한
            if abs(G) < 100:
                # 보기 생성
                answers = list(range(G - 5, G + 5))
                ans_index = np.random.choice(5)
                answers = answers[ans_index: ans_index + 5]

                if len(answers) == len(set(answers)) and G in answers:
                    a1, a2, a3, a4, a5 = answers
                    ans_num = multiple_choice_nums[answers.index(G)]

                    flag = False

    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, s2=s2, s3=s3, s4=s4, c1=c1, c2=c2, c3=c3, c4=c4, E=E, F=F, G=G)

    return stem, answer, comment


# 3-1-2-471
def factorization312_Stem_398():
    stem = "$$수식$$a$$/수식$$가 $$수식$${s1}$$/수식$$의 한 근일 때, $$수식$${s2}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "이차방정식 $$수식$${s1}$$/수식$$에 $$수식$$x `=` a$$/수식$$를 대입하면\n" \
              "$$수식$${c1}$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "따라서 $$수식$${c3}$$/수식$$\n\n"

    flag = True
    while flag:
        B, C, D = np.random.choice(range(2, 10), 3, replace=False)
        E = D - C

        s1 = "x ^{2} %sx %s" % (int_str_converter(B, False, True), int_str_converter(C))
        s2 = "a ^{2} %sa %s" % (int_str_converter(B, False, True), int_str_converter(D))
        c1 = "a ^{2} %sa %s `=` 0" % (int_str_converter(B, False, True), int_str_converter(C))
        c2 = "a ^{2} %sa `=` %s" % (int_str_converter(B, False, True), -1 * C)
        c3 = "%s `=` %s %s `=` %s" % (s2, -1 * C, int_str_converter(D), E)

        if E < 0:
            F, G, H, I = np.random.choice(range(-9, 0), 4, replace=False)
        else:
            F, G, H, I = np.random.choice(range(1, 10), 4, replace=False)

        answers = [E, F, G ,H, I]
        answers.sort()

        if len(answers) == len(set(answers)):
            a1, a2, a3, a4, a5 = answers
            ans_num = multiple_choice_nums[answers.index(E)]

            flag = False

    stem = stem.format(s1=s1, s2=s2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(s1=s1, c1=c1, c2=c2, c3=c3)

    return stem, answer, comment


# 3-1-2-472
def factorization312_Stem_399():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$일 때, " \
           "$$수식$$a `+` {{ 1 }} OVER {{ a }}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$$x `=` a$$/수식$$를 대입하면 $$수식$${explain2}$$/수식$$\n" \
              "이때 $$수식$$a `=` 0$$/수식$$이면 등식이 성립하지 않으므로 $$수식$$a `!=` 0$$/수식$$\n" \
              "$$수식$${explain2}$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "따라서 $$수식$${explain4}$$/수식$$\n\n"
    while 1:
        A, B, C, D = random.sample([i for i in range(-9, 10) if i != 0], 4)
        K = -A
        if abs(C) not in [abs(K), abs(B), abs(D)]:
            if abs(K) not in [abs(C), abs(B), abs(D)]:
                break
    problem1 = 'x^{{ 2 }} `{0}` {1}x `+` 1 `=` 0'.format(sign(A), post_variable(A))

    explain1 = problem1
    explain2 = 'a^{{ 2 }} `{0}` {1}a `+` 1 `=` 0'.format(sign(A), post_variable(A))
    explain3 = 'a `{0}` {1} `+` {{ 1 }} OVER {{ a }} `=` 0'.format(sign(A), abs(A))
    explain4 = 'a `+` {{ 1 }} OVER {{ a }} `=` {0}'.format(-A)

    answer_lst = [[K, 1], [B, 0], [C, 0], [-C, 0], [D, 0]]
    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = [i[0] for i in answer_lst]

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4)

    return stem, answer, comment


# 3-1-2-473
def factorization312_Stem_400():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근이 $$수식$$x `=` k$$/수식$$일 때, " \
           "상수 $$수식$$k$$/수식$$의 값을 구하시오. (단, $$수식$$k `!=` 0$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$$x `=` k$$/수식$$를 대입하면\n" \
              "$$수식$${explain2}$$/수식$$, $$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$ 또는 $$수식$${explain5}$$/수식$$\n" \
              "그런데 $$수식$$k `!=` 0$$/수식$$이므로 $$수식$${explain6}$$/수식$$\n\n"

    A = random.choice([i for i in range(-30, 31) if i % 2 == 0 and i != 0])
    B = int(A / 2)

    problem1 = 'x^{{ 2 }} `+` kx `{0}` {1}k `=` 0'.format(sign(A), post_variable(A))

    explain1 = problem1
    explain2 = 'k^{{ 2 }} `+` k^{{ 2 }} `{0}` {1}k `=` 0'.format(sign(A), post_variable(A))
    explain3 = '2k ( k `{0}` {1} ) `=` 0'.format(sign(B), abs(B))
    explain4 = 'k `=` 0'
    explain5 = 'k `=` {0}'.format(-B)
    explain6 = 'k `=` {0}'.format(-B)

    answer_num = -B

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-474
def factorization312_Stem_401():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 두 근을 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$${problem2}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에\n" \
              "$$수식$$x `=` a$$/수식$$를 대입하면\n" \
              "$$수식$${explain2}$$/수식$$, $$수식$${explain3}$$/수식$$\n" \
              "$$수식$$x `=` b$$/수식$$를 대입하면\n" \
              "$$수식$${explain4}$$/수식$$, $$수식$${explain5}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain6}$$/수식$$\n" \
              "$$수식$$=` {explain7}$$/수식$$\n" \
              "$$수식$$=` {explain8}$$/수식$$\n\n"
    while 1:
        A = random.randint(1, 9) * random.choice([-1, 1])
        B, C, D, E = random.sample([i for i in range(-30, 31) if i != 0], 4)
        F = C - B
        if F == 0:
            continue
        G = D - B
        if G == 0:
            continue
        H = F * G + E
        if H != 0 and abs(H) < 10:
            break

    while 1:
        I, J, K, L = random.sample([i for i in range(-9, 10) if i != 0], 4)
        if H not in [I, J, K, L]:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = '( a^{{ 2 }} `{0}` {1}a `{2}` {3} ) ' \
               '( b^{{ 2 }} `{0}` {1}b `{4}` {5} ) `{6}` {7}'\
        .format(sign(A), post_variable(A), sign(C), abs(C), sign(D), abs(D), sign(E), abs(E))

    explain1 = problem1
    explain2 = 'a^{{ 2 }} `{0}` {1}a `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    explain3 = 'a^{{ 2 }} `{0}` {1}a `=` {2}'.format(sign(A), post_variable(A), -B)
    explain4 = 'b^{{ 2 }} `{0}` {1}b `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    explain5 = 'b^{{ 2 }} `{0}` {1}b `=` {2}'.format(sign(A), post_variable(A), -B)
    explain6 = problem2
    explain7 = '( {0} `{1}` {2} ) ( {0} `{3}` {4} ) `{5}` {6}'\
        .format(-B, sign(C), abs(C), sign(D), abs(D), sign(E), abs(E))
    explain8 = '{0} `TIMES` {1} `{2}` {3} `=` {4}'.format(F, trans_squared(G, 1), sign(E), abs(E), H)

    answer_lst = [[H, 1], [I, 0], [J, 0], [K, 0], [L, 0]]
    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = [i[0] for i in answer_lst]

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8)

    return stem, answer, comment


# 3-1-2-475
def factorization312_Stem_402():
    stem = "$$수식$$a$$/수식$$는 이차방정식 $$수식$${problem1}$$/수식$$의 한 근이고, $$수식$$b$$/수식$$는 이차방정식 " \
           "$$수식$${problem2}$$/수식$$의 한 근일 때, $$수식$${problem3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$$x `=` a$$/수식$$를 대입하면\n" \
              "$$수식$${explain2}$$/수식$$, $$수식$${explain3}$$/수식$$\n" \
              "이차방정식 $$수식$${explain9}$$/수식$$에 $$수식$$x `=` b$$/수식$$를 대입하면\n" \
              "$$수식$${explain4}$$/수식$$, $$수식$${explain5}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain6}$$/수식$$\n" \
              "$$수식$$=` {explain7}$$/수식$$\n" \
              "$$수식$$=` {explain8}$$/수식$$\n\n"

    while 1:
        A, B, C, D, E, F = random.sample([i for i in range(-9, 10) if i != 0], 6)
        A = abs(A)
        D = abs(D)
        G = C - F
        if 0 < abs(G) < 100:
            if is_gcd(A, B) or is_gcd(A, C) or is_gcd(B, C):
                if is_gcd(D, E) or is_gcd(D, F) or is_gcd(E, F):
                    if is_gcd(A, D) or is_gcd(A, E) or is_gcd(D, B) or is_gcd(B, E):
                        break

    problem1 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0'\
        .format(ppost_variable(A), sign(B), post_variable(B), sign(-C), abs(C))
    problem2 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0'\
        .format(ppost_variable(D), sign(E), post_variable(E), sign(-F), abs(F))
    problem3 = '{0}a^{{ 2 }} `{1}` {2}b^{{ 2 }} `{3}` {4}a `{5}` {6}b'\
        .format(ppost_variable(A), sign(-D), post_variable(D), sign(B), post_variable(B), sign(-E), post_variable(E))

    explain1 = problem1
    explain2 = '{0}a^{{ 2 }} `{1}` {2}a `{3}` {4} `=` 0'\
        .format(ppost_variable(A), sign(B), post_variable(B), sign(-C), abs(C))
    explain3 = '{0}a^{{ 2 }} `{1}` {2}a `=` {3}'\
        .format(ppost_variable(A), sign(B), post_variable(B), C)
    explain4 = '{0}b^{{ 2 }} `{1}` {2}b `{3}` {4} `=` 0' \
        .format(ppost_variable(D), sign(E), post_variable(E), sign(-F), abs(F))
    explain5 = '{0}b^{{ 2 }} `{1}` {2}b `=` {3}' \
        .format(ppost_variable(D), sign(E), post_variable(E), F)
    explain6 = problem3
    explain7 = '( {0}a^{{ 2 }} `{1}` {2}a ) `-` ( {3}b^{{ 2 }} `{4}` {5}b ) `=` 0'\
        .format(ppost_variable(A), sign(B), post_variable(B), ppost_variable(D), sign(E), post_variable(E))
    explain8 = '{0} `-` {1} `=` {2}'.format(C, trans_squared(F, 1), G)
    explain9 = problem2

    answer_num = G

    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9)

    return stem, answer, comment


# 3-1-2-476
def factorization312_Stem_403():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근이 $$수식$$a$$/수식$$일 때, " \
           "$$수식$${problem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$의 한 근이 $$수식$$a$$/수식$$이므로\n" \
              "$$수식$${explain2}$$/수식$$이고,\n" \
              "$$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain5}$$/수식$$\n" \
              "$$수식$$=` {explain6}$$/수식$$\n\n"

    while 1:
        B, C, D = random.sample(range(1, 10), 3)
        if D % B != 0:
            continue
        E = -int(D / B)
        A = random.randint(1, 9) * random.choice([-1, 1])
        F = E - A
        if is_gcd(D, C) or is_gcd(A, C) or is_gcd(D, A):
            break

    problem1 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0'\
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))
    problem2 = '{{ {0}a `{1}` {2} }} OVER {{ a^{{ 2 }} }} `+` {{ {3}a }} OVER {{ {4} `{5}` {6}a^{{ 2 }} }}'\
        .format(ppost_variable(B), sign(C), abs(C), ppost_variable(D), C, sign(A), post_variable(A))

    explain1 = problem1
    explain2 = '{0}a^{{ 2 }} `{1}` {2}a `{3}` {4} `=` 0'\
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))
    explain3 = '{0}a `{1}` {2} `=` {3}a^{{ 2 }}'\
        .format(ppost_variable(B), sign(C), abs(C), ppost_variable(-A))
    explain4 = '{0} `{1}` {2}a^{{ 2 }} `=` {3}a'\
        .format(C, sign(A), post_variable(A), ppost_variable(-B))
    explain5 = '{0} `=` {{ {1}a^{{ 2 }} }} OVER {{ a^{{ 2 }} }} `+` {{ {2}a }} OVER {{ {3}a }}' \
        .format(problem2, ppost_variable(-A), ppost_variable(D), ppost_variable(-B))
    explain6 = '{0} `+` {1} `=` {2}'.format(trans_squared(-A, 1), trans_squared(E, 1), F)

    answer_num = F

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-477
def factorization312_Stem_404():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$a$$/수식$$라 할 때, " \
           "$$수식$${problem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$\n" \
              "이차방정식의 한 근이 $$수식$$a$$/수식$$이므로\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "이때 $$수식$${explain4}$$/수식$$이면 등식이 성립하지 않으므로 $$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n" \
              "$$수식$${explain7}$$/수식$$, $$수식$${explain8}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain9}$$/수식$$\n\n"
    while 1:
        A, B, C = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(3)]
        D = A - B
        F = C - 1
        if F == 0:
            continue
        E = D ** 2 - 2
        if D != 0 and C != 0 and E < 100:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` {4}x `{5}` {6}' \
        .format(sign(A), post_variable(A), sign(C), abs(C), ppost_variable(B), sign(F), abs(F))
    problem2 = 'a^{{ 2 }} `+` {{ 1 }} over {{ a^{{ 2 }} }}'

    explain1 = problem1
    explain2 = 'x^{{ 2 }} `{0}` {1}x `+` 1 `=` 0'.format(sign(D), post_variable(D))
    explain3 = 'a^{{ 2 }} `{0}` {1}a `+` 1 `=` 0'.format(sign(D), post_variable(D))
    explain4 = 'a `=` 0'
    explain5 = 'a `!=` 0'
    explain6 = explain3
    explain7 = 'a `{0}` {1} `+` {{ 1 }} OVER {{ a }} `=` 0'.format(sign(D), abs(D))
    explain8 = 'a `+` {{ 1 }} OVER {{ a }} `=` {0}'.format(-D)
    explain9 = '{0} `=` ( a `+` {{ 1 }} OVER {{ a }} )^{{ 2 }} `-` 2 `=` {1} `-` 2 `=` {2}' \
        .format(problem2, trans_squared(-D, 2), E)
    answer_num = E

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5, explain6=explain6,
                             explain7=explain7, explain8=explain8, explain9=explain9)

    return stem, answer, comment


# 3-1-2-478
def factorization312_Stem_405():
    stem = "$$수식$${problem1}$$/수식$$가 이차방정식 $$수식$${problem2}$$/수식$$의 한 근일 때, " \
           "$$수식$${problem3}$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$$를 대입하면\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain4}$$/수식$$\n" \
              "$$수식$$=`{explain5}$$/수식$$\n" \
              "$$수식$$=`{explain6}$$/수식$$\n\n"

    while 1:
        A, B, C, D = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(4)]
        A = abs(A)
        E = D + C
        if E != 0 and -2 <= E < 20:
            break

    problem1 = 'x `=` k'
    problem2 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))
    problem3 = '{0}k^{{ 5 }} `{1}` {2}k^{{ 4 }} `{3}` {4}k^{{ 3 }} `{5}` {6}k^{{ 2 }} `{7}` {8}k `{9}` {10}' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), post_variable(C), sign(-A),
                post_variable(-A),
                sign(-B), post_variable(-B), sign(D), abs(D))

    explain1 = problem2
    explain2 = 'x `=` k'
    explain3 = '{0}k^{{ 2 }} `{1}` {2}k `{3}` {4} `=` 0' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))
    explain4 = problem3
    explain5 = 'k^{{ 3 }} ( {0}k^{{ 2 }} `{1}` {2}k `{3}` {4} ) `-` ' \
               '( {0}k^{{ 2 }} `{1}` {2}k `{3}` {4} ) `{5}` {6} `{7}` {8}' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C), sign(C), abs(C), sign(D), abs(D))
    explain6 = 'k^{{ 3 }} `TIMES` 0 `-` 0 `{0}` {1} `=` {2}'.format(sign(E), abs(E), E)

    result = E

    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    interval = 2
    for i in range(5):
        lst.append(result + (i - answer_num) * interval)
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3,
                             explain4=explain4, explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-479
def factorization312_Stem_406():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$a$$/수식$$라 할 때, " \
           "$$수식$${problem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$$를 대입하면 $$수식$${explain3}$$/수식$$\n" \
              "이때 $$수식$${explain4}$$/수식$$이면 등식이 성립하지 않으므로 $$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n" \
              "$$수식$${explain7}$$/수식$$, $$수식$${explain8}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain9}$$/수식$$\n" \
              "$$수식$$=`{explain10}$$/수식$$\n" \
              "$$수식$$=`{explain11}$$/수식$$\n\n"
    while 1:
        A = random.randint(1, 9) * random.choice([-1, 1])
        B = A ** 2 - 2
        break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `+` 1 `=` 0'.format(sign(A), post_variable(A))
    problem2 = 'a ( a `-` {{ 1 }} over {{ a }} ) `+` ' \
               '{{ 1 }} over {{ a }} ( a `+` {{ 1 }} over {{ a }} )'

    explain1 = problem1
    explain2 = 'x `=` a'
    explain3 = 'a^{{ 2 }} `{0}` {1}a `+` 1 `=` 0'.format(sign(A), post_variable(A))
    explain4 = 'a `=` 0'
    explain5 = 'a `!=` 0'
    explain6 = explain3
    explain7 = 'a `{0}` {1} `+` {{ 1 }} OVER {{ a }} `=` 0'.format(sign(A), abs(A))
    explain8 = 'a `+` {{ 1 }} OVER {{ a }} `=` {0} '.format(-A)
    explain9 = problem2
    explain10 = 'a^{{ 2 }} `-` 1 `+` 1 `+` {{ 1 }} OVER {{ a^{{ 2 }} }} `=` ' \
                'a^{{ 2 }} `+` {{ 1 }} OVER {{ a^{{ 2 }} }}'
    explain11 = '( a `+` {{ 1 }} OVER {{ a }} )^{{ 2 }} `-` 2 `=` ' \
                '{0} `-` 2 `=` {1}'.format(trans_squared(-A, 2), B)

    answer_num = B

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11)

    return stem, answer, comment


# 3-1-2-480
def factorization312_Stem_407():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$x `=` a$$/수식$$, " \
           "이차방정식 $$수식$${problem2}$$/수식$$의 한 근을 $$수식$$x `=` b$$/수식$$라 할 때, " \
           "$$수식$${problem3}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$$를 대입하면\n" \
              "$$수식$${explain3}$$/수식$$이므로 $$수식$${explain4}$$/수식$$\n" \
              "$$수식$${explain5}$$/수식$$에 $$수식$${explain6}$$/수식$$를 대입하면\n" \
              "$$수식$${explain7}$$/수식$$이므로 $$수식$${explain8}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${explain9}$$/수식$$\n" \
              "$$수식$$=`{explain10}$$/수식$$\n" \
              "$$수식$$=`{explain11}$$/수식$$\n" \
              "$$수식$$=`{explain12}$$/수식$$\n\n"
    while 1:
        A, B, C, D, E, F = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(6)]
        G = E * -B + F * -D
        if -10 < G < 100:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(C), post_variable(C), sign(D), abs(D))
    problem3 = '{0}a^{{ 2 }} `{1}` {2}b^{{ 2 }} `{3}` {4}a `{5}` {6}b' \
        .format(ppost_variable(E), sign(F), post_variable(F), sign(E * A), post_variable(E * A),
                sign(F * C), post_variable(F * C))

    explain1 = problem1
    explain2 = 'x `=` a'
    explain3 = 'a^{{ 2 }} `{0}` {1}a `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    explain4 = 'a^{{ 2 }} `{0}` {1}a `=` {2}'.format(sign(A), post_variable(A), -B)
    explain5 = problem2
    explain6 = 'x `=` b'
    explain7 = 'b^{{ 2 }} `{0}` {1}b `{2}` {3} `=` 0'.format(sign(C), post_variable(C), sign(D), abs(D))
    explain8 = 'b^{{ 2 }} `{0}` {1}b `=` {2}'.format(sign(C), post_variable(C), -D)
    explain9 = problem3
    explain10 = '{0}a^{{ 2 }} `{3}` {4}a `{1}` {2}b^{{ 2 }} `{5}` {6}b' \
        .format(ppost_variable(E), sign(F), post_variable(F), sign(E * A), post_variable(E * A),
                sign(F * C), post_variable(F * C))
    explain11 = '{0} ( a^{{ 2 }} `{1}` {2}a ) `{3}` {4} ( b^{{ 2 }} `{5}` {6}b )' \
        .format(ppost_variable(E), sign(A), post_variable(A), sign(F), post_variable(F), sign(C), post_variable(C))
    explain12 = '{0} `TIMES` {1} `{2}` {3} `TIMES` {4} `=` {5}' \
        .format(E, trans_squared(-B, 1), sign(F), abs(F), trans_squared(-D, 1), G)

    answer_num = G

    stem = stem.format(problem1=problem1, problem2=problem2, problem3=problem3)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12)

    return stem, answer, comment


# 3-1-2-481
def factorization312_Stem_408():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$일 때, " \
           "$$수식$${problem2}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$$를 대입하면 $$수식$${explain3}$$/수식$$\n" \
              "이때 $$수식$${explain4}$$/수식$$이면 등식이 성립하지 않으므로 $$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n" \
              "$$수식$${explain7}$$/수식$$이므로 $$수식$${explain8}$$/수식$$\n" \
              "$$수식$${explain9}$$/수식$$\n" \
              "$$수식$$=`{explain10}$$/수식$$\n\n"
    while 1:
        A, B = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(2)]
        C = 4 * B
        D = A ** 2 - C
        if abs(D) < 100:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = '( a `{0}` {{ {1} }} over {{ a }} )^{{ 2 }}'.format(sign(-B), abs(B))

    explain1 = problem1
    explain2 = 'x `=` a'
    explain3 = 'a^{{ 2 }} `{0}` {1}a `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    explain4 = 'a `=` 0'
    explain5 = 'a `!=` 0'
    explain6 = explain3
    explain7 = 'a `{0}` {1} `{2}` {{ {3} }} OVER {{ a }} `=` 0'.format(sign(A), abs(A), sign(B), abs(B))
    explain8 = 'a `{0}` {{ {1} }} OVER {{ a }} `=` {2}'.format(sign(B), abs(B), -A)
    explain9 = '( a `{0}` {{ {1} }} OVER {{ a }} )^{{ 2 }}$$/수식$$\n' \
               '$$수식$$=` ( a `{2}` {{ {1} }} OVER {{ a }} )^{{ 2 }} `{0}` 4 `TIMES` a `TIMES` {{ {1} }} OVER {{ a }}' \
        .format(sign(-B), abs(B), sign(B))
    explain10 = '{0} `{1}` {2} `=` {3}'.format(trans_squared(-A, 2), sign(-C), abs(C), D)

    answer_num = D

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10)

    return stem, answer, comment


# 3-1-2-482
def factorization312_Stem_409():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$a$$/수식$$라 할 때, 다음 중 옳지 않은 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "➀ {explain1}\n" \
              "➁ {explain2}\n" \
              "➂ {explain3}\n" \
              "➃ {explain4}\n" \
              "➄ {explain5}\n" \
              "따라서 옳지 않은 것은 {answer_num}이다.\n\n"

    while 1:
        A, B, C, G = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(4)]
        C = abs(C)
        E = B ** 2
        D = B + C
        F = A ** 2 - 2 * B
        H = A ** 2 - 4 * B
        if G != H and 0 not in [D, F, H]:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))

    a1 = 'a^{{ 2 }} `{0}` {1}a `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    e1 = '이차방정식 $$수식$${0}$$/수식$$에 $$수식$$x `=` a$$/수식$$를 대입하면 $$수식$${1}$$/수식$$'.format(problem1, a1)

    a2 = '{0} `-` a^{{ 2 }} `{1}` {2}a `=` {3}'.format(C, sign(-A), post_variable(A), D)
    e2 = '$$수식$${0} `-` a^{{ 2 }} `{1}` {2}a `&amp; =` {3} `-` ( a^{{ 2 }} `{4}` {2}a )#' \
         '&amp; =` {3} `-` {5} `=` {6}$$/수식$$' \
        .format(C, sign(-A), post_variable(A), C, sign(A), trans_squared(-B, 1), D)

    a3 = 'a `{0}` {{ {1} }} OVER {{ a }} `=` {2}'.format(sign(B), abs(B), -A)
    e3 = '$$수식$$a `=` 0$$/수식$$이면 $$수식$$a^{{ 2 }} `{0}` {1}a `{2}` {3} `!=` 0$$/수식$$이므로\n' \
         '$$수식$$a^{{ 2 }} `{0}` {1}a `{2}` {3} `=` 0$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n' \
         '$$수식$$a `{0}` {4} `{2}` {{ {3} }} OVER {{ a }} `=` 0$$/수식$$, ' \
         '$$수식$$a `{2}` {{ {3} }} OVER {{ a }} `=` {5}$$/수식$$' \
        .format(sign(A), post_variable(A), sign(B), abs(B), abs(A), -A)

    a4 = 'a^{{ 2 }} `{0}` {{ {1} }} OVER {{ a^{{ 2 }} }} `=` {2}'.format(sign(E), abs(E), F)
    e4 = '$$수식$$a^{{ 2 }} `{0}` {{ {1} }} OVER {{ a^{{ 2 }} }} ` &amp; =` ' \
         '( a `{2}` {{ {3} }} OVER {{ a }} )^{{ 2 }} `{4}` 2 `TIMES` a `TIMES` {{ {3} }} OVER {{ a }}#' \
         '&amp; =` {5} `{4}` {6} `=` {7}$$/수식$$' \
        .format(sign(E), abs(E), sign(B), abs(B), sign(-B), trans_squared(-A, 2), abs(2 * B), F)

    a5 = '( a `{0}` {{ {1} }} OVER {{ a }} )^{{ 2 }} `=` {2}'.format(sign(E), abs(E), G)
    e5 = '$$수식$$( a `{0}` {{ {1} }} OVER {{ a }} )^{{ 2 }} `&amp; =` ' \
         '( a `{2}` {{ {1} }} OVER {{ a }} )^{{ 2 }} `{0}` 4 `TIMES` a `TIMES` {{ {1} }} OVER {{ a }}#' \
         '&amp; =` {3} `{0}` {4} `=` {5}$$/수식$$'.format(sign(B), abs(B), sign(-B), trans_squared(-A, 2), abs(4 * B),
                                                        H)

    lst = [[a1, e1, 0], [a2, e2, 0], [a3, e3, 0], [a4, e4, 0], [a5, e5, 1]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][2] == 1:
            cor_num = i

    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    e1, e2, e3, e4, e5 = lst[0][1], lst[1][1], lst[2][1], lst[3][1], lst[4][1]
    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=e1, explain2=e2, explain3=e3,
                             explain4=e4, explain5=e5, answer_num=multiple_choice_nums[cor_num])

    return stem, answer, comment


# 3-1-2-483
def factorization312_Stem_410():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근이 $$수식$$a$$/수식$$라 할 때, " \
           "$$수식$${problem2}$$/수식$$의 값을 구하시오. (단, $$수식$$a `&gt;` 1$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$의 한 근이 $$수식$$a$$/수식$$이므로 $$수식$${explain2}$$/수식$$\n" \
              "따라서 $$수식$$a `&gt;` 1$$/수식$$이므로 $$수식$${explain3}$$/수식$$의 양변을 $$수식$$a$$/수식$$로 나누면\n" \
              "$$수식$${explain4}$$/수식$$, $$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$이므로\n" \
              "$$수식$${explain7}$$/수식$$\n" \
              "$$수식$${explain8}$$/수식$$ 또는 $$수식$${explain9}$$/수식$$\n" \
              "그런데 $$수식$$a `&gt;` 1$$/수식$$에서 $$수식$${{ 1 }} OVER {{ a }} `&lt;` 1$$/수식$$이므로 " \
              "$$수식$$a `-` {{ 1 }} OVER {{ a }} `&gt;` 0$$/수식$$\n" \
              "따라서 $$수식$${explain10}$$/수식$$이므로\n" \
              "$$수식$${explain11}$$/수식$$\n\n"
    while 1:
        B = random.choice([1, 9, 25, 49, 81])
        A = B + 4
        C = int(B ** 0.5)
        D = A * C
        # 랜덤 수가 하나라 경우의 수가 적음....
        # if abs(D) < 100:
        #     break
        break
    problem1 = 'x^{{ 2 }} `-` sqrt {{ {0} }}x `+` 1 `=` 0'.format(abs(A))
    problem2 = '( a `+` {{ 1 }} over {{ a }} ) ( a^{{ 2 }} `-` {{ 1 }} OVER {{ a^{{ 2 }} }} )'

    explain1 = problem1
    explain2 = 'a^{{ 2 }} `-` sqrt {{ {0} }}a `+` 1 `=` 0'.format(abs(A))
    explain3 = explain2
    explain4 = 'a `-` sqrt {{ {0} }} `+` {{ 1 }} OVER {{ a }} `=` 0'.format(abs(A))
    explain5 = 'a `+` {{ 1 }} OVER {{ a }} `=` sqrt {{ {0} }} '.format(abs(A))
    explain6 = '( a `-` {{ 1 }} OVER {{ a }} )^{{ 2 }} `=` ' \
               '( a `+` {{ 1 }} over {{ a }} )^{{ 2 }} `-` 4'
    explain7 = '{0} `=` ( sqrt{{ {1} }} )^{{ 2 }} `-` 4 `=` {2}'.format(explain6, abs(A), B)
    explain8 = 'a `-` {{ 1 }} OVER {{ a }} `=` {0}'.format(-C)
    explain9 = 'a `-` {{ 1 }} OVER {{ a }} `=` {0}'.format(C)
    explain10 = explain9
    explain11 = '{0} `=` ( a `+` {{ 1 }} over {{ a }} )^{{ 2 }} ( a `-` {{ 1 }} OVER {{ a }} ) `=` ' \
                '( sqrt{{ {1} }} )^{{ 2 }} `TIMES` {2} `=` {3}'.format(problem2, abs(A), C, D)

    answer_num = D

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11)

    return stem, answer, comment


# 3-1-2-484
def factorization312_Stem_411():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 해를 구하면 $$수식$$a$$/수식$$ 또는 $$수식$$b$$/수식$$이다. " \
           "이때 $$수식$$a `-` b$$/수식$$의 값을 구하시오. (단, $$수식$$a `&gt;` b$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$ 또는 $$수식$${explain3}$$/수식$$\n" \
              "따라서 이차방정식의 해는 $$수식$${explain4}$$/수식$$ 또는 $$수식$${explain5}$$/수식$$이다.\n" \
              "$$수식$$a `&gt;` b$$/수식$$이므로 $$수식$${explain6}$$/수식$$, $$수식$${explain7}$$/수식$$\n" \
              "따라서 $$수식$${explain8}$$/수식$$\n\n"
    while 1:
        A, B = [random.randint(1, 9) * random.choice([-1, 1]) for _ in range(2)]
        if A > B:
            break
    C = A - B

    problem1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-A), abs(A), sign(-B), abs(B))

    explain1 = problem1
    explain2 = 'x `{0}` {1} `=` 0'.format(sign(-A), abs(A))
    explain3 = 'x `{0}` {1} `=` 0'.format(sign(-B), abs(B))
    explain4 = A
    explain5 = B
    explain6 = 'a `=` {0}'.format(A)
    explain7 = 'b `=` {0}'.format(B)
    explain8 = 'a `-` b `=` {0} `-` {1} `=` {2}'.format(A, trans_squared(B, 1), C)

    answer_num = C

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8)

    return stem, answer, comment


# 3-1-2-486
def factorization312_Stem_412():
    stem = "다음 이차방정식 중 해가 다른 하나는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "{sign1} $$수식$${explain1}$$/수식$$ 또는 $$수식$${explain2}$$/수식$$\n" \
              "{sign2} $$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n\n"

    while 1:
        A, B, D = [random.randint(1, 5) * random.choice([-1, 1]) for _ in range(3)]
        C = A
        if B != D and A != B and C != D:
            break

    answer_num = [0, 0, 0, 0, 1]
    random.shuffle(answer_num)

    if answer_num[0] == 1:
        a1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0' \
            .format(sign(C), frac(1, abs(C)), sign(D), frac(1, abs(D)))
    else:
        a1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0' \
            .format(sign(A), frac(1, abs(A)), sign(B), frac(1, abs(B)))

    if answer_num[1] == 1:
        a2 = '( {0}x `{1}` 1 ) ( {2}x `{3}` 2 ) `=` 0' \
            .format(ppost_variable(abs(C)), sign(C), abs(D * 2), sign(D))
    else:
        a2 = '( {0}x `{1}` 1 ) ( {2}x `{3}` 2 ) `=` 0' \
            .format(ppost_variable(abs(A)), sign(A), abs(B * 2), sign(B))

    if answer_num[2] == 1:
        a3 = '( {0}x `{1}` 2 ) ( {2}x `{3}` 2 ) `=` 0' \
            .format(abs(2 * C), sign(C), abs(D * 2), sign(D))
    else:
        a3 = '( {0}x `{1}` 2 ) ( {2}x `{3}` 2 ) `=` 0' \
            .format(abs(2 * A), sign(A), abs(B * 2), sign(B))

    if answer_num[3] == 1:
        a4 = '( {1} `{0}` x ) ( {3} `{2}` x ) `=` 0' \
            .format(sign(C), frac(1, abs(C)), sign(D), frac(1, abs(D)))
    else:
        a4 = '( {1} `{0}` x ) ( {3} `{2}` x ) `=` 0' \
            .format(sign(A), frac(1, abs(A)), sign(B), frac(1, abs(B)))

    if answer_num[4] == 1:
        a5 = '( 2 `{1}` {0}x ) ( 4 `{3}` {2}x ) `=` 0' \
            .format(abs(2 * C), sign(C), abs(D * 4), sign(D))
    else:
        a5 = '( 2 `{1}` {0}x ) ( 4 `{3}` {2}x ) `=` 0' \
            .format(abs(2 * A), sign(A), abs(B * 4), sign(B))

    explain1 = 'x `=` {0}{1}'.format(answer_sign(-A), frac(1, abs(A)))
    explain2 = 'x `=` {0}{1}'.format(answer_sign(-B), frac(1, abs(B)))
    explain3 = 'x `=` {0}{1}'.format(answer_sign(-C), frac(1, abs(C)))
    explain4 = 'x `=` {0}{1}'.format(answer_sign(-D), frac(1, abs(D)))

    sign_lst = ['➀', '➁', '➂', '➃', '➄']
    sign1 = []
    sign2 = ''
    lst = [[a1, answer_num[0]], [a2, answer_num[1]], [a3, answer_num[2]], [a4, answer_num[3]], [a5, answer_num[4]]]
    random.shuffle(lst)
    for i in range(5):
        if lst[i][1] == 1:
            cor_num = i
            sign2 = sign_lst[i]
        else:
            sign1.append(sign_lst[i])

    a1, a2, a3, a4, a5 = lst[0][0], lst[1][0], lst[2][0], lst[3][0], lst[4][0]
    sign1 = ', '.join(sign1)

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             sign1=sign1, sign2=sign2)

    return stem, answer, comment


# 3-1-2-487
def factorization312_Stem_413():
    stem = "다음 이차방정식 $$수식$${problem1}$$/수식$$의 해를 구하면? (정답 $$수식$$2$$/수식$$개)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$ 또는 $$수식$${explain3}$$/수식$$\n\n"

    while 1:
        B, C, D, E = random.sample(range(-9, 10),
                                   4)  # [random.randint(0, 9) * random.choice([-1, 1]) for _ in range(4)]
        A = random.randint(1, 9)
        if B == 0:
            continue
        if is_gcd(A, B):  # and C != D and C != E and D != E:
            if B % A == 0:
                if int(B / A) != C and int(B / A) != D and int(B / A) != E:
                    break
            else:
                break

    problem1 = '( {0}x `{1}` {2} ) ( x `{3}` {4} ) `=` 0' \
        .format(ppost_variable(A), sign(-B), abs(B), sign(-C), abs(C))

    explain1 = problem1
    explain2 = 'x `=` {0} {1}'.format(answer_sign(B * A), frac(abs(B), abs(A)))
    explain3 = 'x `=` {0}'.format(C)

    answer_lst = [[-D, -D, 0], [B / A, '{0}{1}'.format(answer_sign(B * A), frac(abs(B), abs(A))), 1],
                  [E, E, 0], [C, C, 1], [D, D, 0]]
    answer_lst.sort(key=lambda x: x[0])

    sign_lst = ['➀', '➁', '➂', '➃', '➄']

    answer_num = []
    for i in range(5):
        if answer_lst[i][2] == 1:
            answer_num.append(sign_lst[i])

    a1, a2, a3, a4, a5 = answer_lst[0][1], answer_lst[1][1], answer_lst[2][1], answer_lst[3][1], answer_lst[4][1]
    answer_num = ', '.join(answer_num)

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3)

    return stem, answer, comment


# 3-1-2-488
def factorization312_Stem_414():
    stem = "이차방정식 중 두 근의 합이 $$수식$${problem1}$$/수식$$인 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "➀ {explain1}\n" \
              "➁ {explain2}\n" \
              "➂ {explain3}\n" \
              "➃ {explain4}\n" \
              "➄ {explain5}\n\n"

    while 1:
        A, B = random.sample([i for i in range(-9, 10) if i != 0], 2)
        C, D = random.sample([i for i in range(-9, 10) if i != 0], 2)
        H, I = random.sample([i for i in range(-9, 10) if i != 0], 2)
        J, K = random.sample([i for i in range(-9, 10) if i != 0], 2)
        E, F, G = random.sample([i for i in range(-9, 10) if i != 0], 3)
        L = A + B
        M = C + D
        N = H + I
        O = J + K
        answer_lst = [L, M, N, O]
        answer_num = random.choice(answer_lst)
        if answer_lst.count(answer_num) == 1:
            break
    answer_lst.insert(2, '{0}{1}'.format(sign(F * G), frac(abs(G), abs(F))))
    problem1 = answer_num

    a1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-A), abs(A), sign(-B), abs(B))
    e1 = '$$수식$${0}$$/수식$$에서 $$수식$$x `=` {1}$$/수식$$ 또는 $$수식$$x `=` {2}$$/수식$$이므로\n' \
         '(두 근의 합) $$수식$$=` {1} `+` {3} `=` {4}$$/수식$$'.format(a1, A, B, trans_squared(B, 1), L)

    a2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-C), abs(C), sign(-D), abs(D))
    e2 = '$$수식$${0}$$/수식$$에서 $$수식$$x `=` {1}$$/수식$$ 또는 $$수식$$x `=` {2}$$/수식$$이므로\n' \
         '(두 근의 합) $$수식$$=` {1} `+` {3} `=` {4}$$/수식$$'.format(a2, C, D, trans_squared(D, 1), M)

    a3 = '{0}x ( {1}x `{2}` {3} ) `=` 0'.format(ppost_variable(E), ppost_variable(F), sign(G), abs(G))
    e3 = '$$수식$${0}$$/수식$$에서 $$수식$$x `=` 0$$/수식$$ 또는 $$수식$$x `=` {1}{2}$$/수식$$이므로\n' \
         '(두 근의 합) $$수식$$=` 0 `+` {3} `=` {1}{2}$$/수식$$' \
        .format(a3, answer_sign(G * F), frac(abs(G), abs(F)),
                frac(abs(G), abs(F)) if G * F > 0 else '( -{0} )'.format(frac(abs(G), abs(F))))

    a4 = '-( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-H), abs(H), sign(-I), abs(I))
    e4 = '$$수식$${0}$$/수식$$에서 $$수식$$x `=` {1}$$/수식$$ 또는 $$수식$$x `=` {2}$$/수식$$이므로\n' \
         '(두 근의 합) $$수식$$=` {1} `+` {3} `=` {4}$$/수식$$'.format(a4, H, I, trans_squared(I, 1), N)

    a5 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-J), abs(J), sign(-K), abs(K))
    e5 = '$$수식$${0}$$/수식$$에서 $$수식$$x `=` {1}$$/수식$$ 또는 $$수식$$x `=` {2}$$/수식$$이므로\n' \
         '(두 근의 합) $$수식$$=` {1} `+` {3} `=` {4}$$/수식$$'.format(a5, J, K, trans_squared(K, 1), O)

    cor_num = answer_lst.index(answer_num)

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[cor_num])
    comment = comment.format(explain1=e1, explain2=e2, explain3=e3,
                             explain4=e4, explain5=e5)

    return stem, answer, comment


# 3-1-2-489
def factorization312_Stem_415():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 해가 $$수식$${problem2}$$/수식$$ 또는 $$수식$$x `=` b$$/수식$$일 때, " \
           "$$수식$$a `+` b$$/수식$$의 값은? (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$${post1} 대입하면\n" \
              "$$수식$${explain3}$$/수식$$,\n" \
              "$$수식$${explain4}$$/수식$$,\n" \
              "$$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$에 $$수식$${explain7}$$/수식$${post2} 대입하면\n" \
              "$$수식$${explain8}$$/수식$$\n" \
              "$$수식$${explain9}$$/수식$$ 또는 $$수식$${explain10}$$/수식$$이므로 $$수식$${explain11}$$/수식$$\n" \
              "따라서 $$수식$${explain12}$$/수식$$\n\n"
    while 1:
        A, B = random.sample([i for i in range(-9, 10) if i != 0], 2)
        C = B + A
        if C == 0:
            continue
        D = -B - A
        E, F, G, H = random.sample([i for i in range(-9, 10) if i != 0], 4)
        if D not in [E, F, G, H]:
            break

    problem1 = '( x `+` a ) ( x `{0}` {1} ) `=` 0'.format(sign(A), abs(A))
    problem2 = 'x `=` {0}'.format(B)

    explain1 = problem1
    explain2 = problem2
    post1 = '을' if abs(B) in have_jongsung_num else '를'
    explain3 = '( x `+` a ) ( x `{0}` {1} ) `=` ' \
               '( {2} `+` a ) ( {2} `{0}` {1} ) `=` 0'.format(sign(A), abs(A), B)
    explain4 = '( {0} `+` a ) `TIMES` {1} `=` 0'.format(B, trans_squared(C, 1))
    explain5 = 'a `=` {0}'.format(-B)
    explain6 = problem1
    explain7 = explain5
    post2 = '을' if abs(B) in have_jongsung_num else '를'
    explain8 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-B), abs(B), sign(A), abs(A))
    explain9 = problem2
    explain10 = 'x `=` {0}'.format(-A)
    explain11 = 'b `=` {0}'.format(-A)
    explain12 = 'a `+` b `=` {0}'.format(D)
    answer_lst = [[D, 1], [E, 0], [F, 0], [G, 0], [H, 0]]

    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             post1=post1,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             post2=post2,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12)

    return stem, answer, comment


# 3-1-2-490
def factorization312_Stem_416():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$과 이차방정식 $$수식$${problem2}$$/수식$$을 모두 만족시키는 해는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$ 또는 $$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$에서 $$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "따라서 두 이차방정식을 모두 만족시키는 해는 $$수식$${explain7}$$/수식$$\n\n"
    while 1:
        if random.randint(0, 1) == 0:
            A = 0
            B = random.randint(1, 9) * random.choice([-1, 1])
            C = B
        else:
            A, B = random.sample([i for i in range(-9, 10) if i != 0], 2)
            C = random.choice([A, B])

        D, E = random.sample([i for i in range(-9, 10) if i != 0], 2)

        if not is_gcd(D, E):
            continue

        if D % E == 0:
            if int(E / D) in [A, B]:
                continue
        F = C

        if C != int(E / D) and is_gcd(E, D):
            break

    while 1:
        G, H, I, J = random.sample([i for i in range(-3, 4) if i != 0], 4)
        if F not in [G, H, I, J]:
            break

    if A != 0:
        problem1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-A), abs(A), sign(-B),
                                                                                    abs(B))
    else:
        problem1 = 'x ( x `{0}` {1} )'.format(sign(-B), abs(B))
    problem2 = '( x `{0}` {1} ) ( {2}x `{3}` {4} ) `=` 0' \
        .format(sign(-C), abs(C), ppost_variable(D), sign(-E), abs(E))

    explain1 = problem1
    explain2 = 'x `=` {0}'.format(A)
    explain3 = 'x `=` {0}'.format(B)
    explain4 = problem2
    explain5 = 'x `=` {0}'.format(C)
    explain6 = 'x `=` {0}{1}'.format(answer_sign(E * D), frac(E, D))
    explain7 = 'x `=` {0}'.format(F)

    answer_lst = [[F, 1], [G, 0], [I, 0], [J, 0], [H, 0]]

    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-491
def factorization312_Stem_417():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 해를 구하면?\n" \
           "➀ {a1}\n" \
           "➁ {a2}\n" \
           "➂ {a3}\n" \
           "➃ {a4}\n" \
           "➄ {a5}\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$을 인수분해 하면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "따라서 $$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n\n"
    while 1:
        C, D = random.sample([i for i in range(-9, 10) if i != 0], 2)
        A = -(C + D)
        B = C * D
        E, F = random.sample([i for i in range(-20, 20) if (i > 9 or i < -9)], 2)
        break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-C), abs(C), sign(-D), abs(D))
    explain3 = 'x `=` {0}'.format(C)
    explain4 = 'x `=` {0}'.format(D)

    a1 = '$$수식$${0}$$/수식$$ 또는 $$수식$${1}$$/수식$$'.format(explain3, explain4)
    a2 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(-D, E)
    a3 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(F, B)
    a4 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(D, -C)
    a5 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(E, F)

    answer_lst = [[a1, 1], [a2, 0], [a3, 0], [a4, 0], [a5, 0]]
    random.shuffle(answer_lst)

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4)

    return stem, answer, comment


# 3-1-2-492
def factorization312_Stem_418():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 두 근을 $$수식$$m$$/수식$$, $$수식$$n$$/수식$$이라 할 때, " \
           "$$수식$$m^{{ 2 }} `+` n^{{ 2 }}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$ 또는 $$수식$${explain5}$$/수식$$\n" \
              "따라서 $$수식$${explain6}$$/수식$$\n\n"
    while 1:
        F, G = random.sample([i for i in range(-9, 10) if i != 0], 2)
        D = F + G
        if D == 0:
            continue
        E = F * G
        A = great_common_divisor(abs(D), abs(E))
        B = int(D / A)
        C = int(E / A)
        H = F ** 2 + G ** 2
        if A != 1 and B != 0 and C != 0:
            break

    problem1 = 'x^{{ 2 }} `=` {0} ( {1}x `{2}` {3} )' \
        .format(ppost_variable(A), ppost_variable(B), sign(-C), abs(C))

    explain1 = problem1
    explain2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(-D), post_variable(D), sign(E), abs(E))
    explain3 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-F), abs(F), sign(-G), abs(G))
    explain4 = 'x `=` {0}'.format(F)
    explain5 = 'x `=` {0}'.format(G)
    explain6 = 'm^{{ 2 }} `+` n^{{ 2 }} `=` {0} `+` {1} `=` {2}'.format(trans_squared(F, 2), trans_squared(G, 2), H)

    answer_num = H

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-493
def factorization312_Stem_419():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 두 근을 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$$a `+` 3b$$/수식$$의 값을 구하시오. (단, $$수식$$a `&gt;` b$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$를 정리하면\n" \
              "$$수식$${explain2}$$/수식$$, $$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$이므로\n" \
              "$$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "이때 $$수식$$a `&gt;` b$$/수식$$이므로 $$수식$${explain7}$$/수식$$, $$수식$${explain8}$$/수식$$\n" \
              "따라서 $$수식$${explain9}$$/수식$$\n\n"
    while 1:
        H, I = random.sample([i for i in range(-9, 10) if i != 0], 2)
        tmp = submultiple(abs(H * I))
        if len(tmp) < 4 or len(tmp) % 2 == 1:
            continue
        num1, num2 = random.sample(range(0, int(len(tmp) // 2)), 2)
        H, I = tmp[num1] * random.choice([-1, 1]), tmp[-1 - num1] * random.choice([-1, 1])
        A, B = tmp[num2] * random.choice([-1, 1]), tmp[-1 - num2] * random.choice([-1, 1])

        if H * I != -A * B:
            continue
        if I > H:
            H, I = I, H
        F = -H + -I
        E = H * I
        D = A + B
        C = D - F
        J = H + 3 * I
        if F != 0 and D != 0 and B != 0 and C != 0:
            break

    problem1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 2 x^{{ 2 }} `{4}` {5}x' \
        .format(sign(-A), abs(A), sign(-B), abs(B), sign(-C), post_variable(C))

    explain1 = problem1
    explain2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 2 x^{{ 2 }} `{4}` {5}x' \
        .format(sign(-D), post_variable(D), sign(A * B), abs(E), sign(-C), post_variable(C))
    explain3 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(F), post_variable(F), sign(E), abs(E))
    explain4 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-H), abs(H), sign(-I), abs(I))
    explain5 = 'x `=` {0}'.format(H)
    explain6 = 'x `=` {0}'.format(I)
    explain7 = 'a `=` {0}'.format(H)
    explain8 = 'b `=` {0}'.format(I)
    explain9 = 'a `+` 3b `=` {0} `+` 3 `TIMES` {1} `=` {2}'.format(H, trans_squared(I, 1), J)

    answer_num = J

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7,
                             explain8=explain8, explain9=explain9)

    return stem, answer, comment


# 3-1-2-494
def factorization312_Stem_420():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 해를 구하시오. (단, $$수식$${problem2}$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$ 또는 $$수식$${explain5}$$/수식$$\n" \
              "그런데 $$수식$${explain6}$$/수식$$이므로\n" \
              "$$수식$${explain7}$$/수식$$\n\n"
    while 1:
        C, D = random.sample([i for i in range(-9, 10) if i != 0], 2)
        if C > D:
            C, D = D, C
        if D - C < 2:
            continue
        A = C + D
        B = -(C * D)
        E = random.randint(C + 1, D - 1)
        if A != 0:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 2 x^{{ 2 }}'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = 'x `&gt;` {0}'.format(E)

    explain1 = problem1
    explain2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(-A), post_variable(A), sign(-B), abs(B))
    explain3 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-C), abs(C), sign(-D), abs(D))
    explain4 = 'x `=` {0}'.format(C)
    explain5 = 'x `=` {0}'.format(D)
    explain6 = problem2
    explain7 = 'x `=` {0}'.format(D)

    answer_num = D

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-495
def factorization312_Stem_421():
    stem = "다음 이차방정식 $$수식$${problem1}$$/수식$$의 꼴로 나타낼 때, $$수식$$a `-` b$$/수식$$의 값은? " \
           "(단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수이고, $$수식$$a `&gt;` b$$/수식$$)\n" \
           "$$수식$${problem2}$$/수식$$\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$\n" \
              "$$수식$$a `&gt;` b$$/수식$$이므로 $$수식$${explain5}$$/수식$$, $$수식$${explain6}$$/수식$$\n" \
              "따라서 $$수식$${explain7}$$/수식$$\n\n"
    while 1:
        J, K = random.sample([i for i in range(-9, 10) if i != 0], 2)
        if K > J:
            J, K = K, J
        H = -(J + K)
        I = J * K
        A, B = random.sample([i for i in range(-9, 10) if i != 0], 2)
        D = A + B - H
        if D == 0:
            continue
        if (A * B - I) % D != 0:
            continue
        C = int((A * B - I) / D)
        E = A + B
        F = A * B
        G = D * C
        L = J - K
        M, N = random.sample([i for i in range(-9, 10) if i != 0], 2)

        if abs(L) not in [abs(M), abs(N)] and E != 0 and H != 0 and C != 0 and L != 0:
            break

    problem1 = '( x `+` a ) ( x `+` b ) `=` 0'
    problem2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` {4} ( x `{5}` {6} )' \
        .format(sign(A), abs(A), sign(B), abs(B), ppost_variable(D), sign(C), abs(C))

    explain1 = problem2
    explain2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` {4}x `{5}` {6}' \
        .format(sign(E), post_variable(E), sign(F), abs(F), ppost_variable(D), sign(G), abs(G))
    explain3 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(H), post_variable(H), sign(I), abs(I))
    explain4 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-J), abs(J), sign(-K), abs(K))
    explain5 = 'a `=` {0}'.format(J)
    explain6 = 'b `=` {0}'.format(K)
    explain7 = 'a `-` b `=` {0} `-` {1} `=` {2}'.format(J, trans_squared(K, 1), L)

    answer_lst = [[L, 1], [-L, 0], [M, 0], [-M, 0], [N, 0]]

    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-496
def factorization312_Stem_422():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$a$$/수식$$, $$수식$${problem2}$$/수식$$의 한 근을 " \
           "$$수식$$b$$/수식$$라 할 때, $$수식$$left| a `-` b right|$$/수식$$의 값 중 가장 큰 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n" \
              "따라서 $$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "이차방정식 $$수식$${explain7}$$/수식$$에서\n" \
              "$$수식$${explain8}$$/수식$$\n" \
              "$$수식$${explain9}$$/수식$$ 또는 $$수식$${explain10}$$/수식$$\n" \
              "따라서 $$수식$${explain11}$$/수식$$ 또는 $$수식$${explain12}$$/수식$$\n" \
              "$$수식$${explain13}$$/수식$$의 값은\n" \
              "$$수식$${explain14}$$/수식$$, $$수식$${explain15}$$/수식$$일 때, $$수식$${explain16}$$/수식$$\n" \
              "$$수식$${explain17}$$/수식$$, $$수식$${explain18}$$/수식$$일 때, $$수식$${explain19}$$/수식$$\n" \
              "$$수식$${explain20}$$/수식$$, $$수식$${explain21}$$/수식$$일 때, $$수식$${explain22}$$/수식$$\n" \
              "$$수식$${explain23}$$/수식$$, $$수식$${explain24}$$/수식$$일 때, $$수식$${explain25}$$/수식$$\n" \
              "따라서 구하는 가장 큰 값은 $$수식$${explain26}$$/수식$$이다.\n\n"
    while 1:
        E, F = random.sample([i for i in range(-9, 10) if i != 0], 2)
        G, H = random.sample([i for i in range(-9, 10) if i != 0], 2)
        A = -(E + F)
        if A == 0:
            continue
        B = E * F
        C = -(G + H)
        if C == 0:
            continue
        D = G * H
        I = abs(E - G)
        J = abs(E - H)
        K = abs(F - G)
        L = abs(F - H)
        M = max([I, J, K, L])
        if [I, J, K, L].count(M) == 1:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(C), post_variable(C), sign(D), abs(D))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-E), abs(E), sign(-F), abs(F))
    explain3 = 'x `=` {0}'.format(E)
    explain4 = 'x `=` {0}'.format(F)
    explain5 = 'a `=` {0}'.format(E)
    explain6 = 'a `=` {0}'.format(F)

    explain7 = problem2
    explain8 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-G), abs(G), sign(-H), abs(H))
    explain9 = 'x `=` {0}'.format(G)
    explain10 = 'x `=` {0}'.format(H)
    explain11 = 'b `=` {0}'.format(G)
    explain12 = 'b `=` {0}'.format(H)

    explain13 = 'left| a `-` b right|'
    explain14 = 'a `=` {0}'.format(E)
    explain15 = 'b `=` {0}'.format(G)
    explain16 = '{0} `=` left| {1} `-` {2} right| `=` {3}'.format(explain13, E, trans_squared(G, 1), I)

    explain17 = 'a `=` {0}'.format(E)
    explain18 = 'b `=` {0}'.format(H)
    explain19 = '{0} `=` left| {1} `-` {2} right| `=` {3}'.format(explain13, E, trans_squared(H, 1), J)

    explain20 = 'a `=` {0}'.format(F)
    explain21 = 'b `=` {0}'.format(G)
    explain22 = '{0} `=` left| {1} `-` {2} right| `=` {3}'.format(explain13, F, trans_squared(G, 1), K)

    explain23 = 'a `=` {0}'.format(F)
    explain24 = 'b `=` {0}'.format(H)
    explain25 = '{0} `=` left| {1} `-` {2} right| `=` {3}'.format(explain13, F, trans_squared(H, 1), L)

    explain26 = '{0}'.format(M)

    result = M

    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    interval = 1
    for i in range(5):
        lst.append(result + (i - answer_num) * interval)
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15, explain16=explain16,
                             explain17=explain17, explain18=explain18, explain19=explain19, explain20=explain20,
                             explain21=explain21, explain22=explain22, explain23=explain23, explain24=explain24,
                             explain25=explain25, explain26=explain26)

    return stem, answer, comment


# 3-1-2-497
def factorization312_Stem_423():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 한 근을 $$수식$$a$$/수식$$, $$수식$${problem2}$$/수식$$의 한 근을 " \
           "$$수식$$b$$/수식$$라 할 때, $$수식$$left| a `+` b right|$$/수식$$의 값 중 가장 큰 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n" \
              "따라서 $$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "이차방정식 $$수식$${explain7}$$/수식$$에서\n" \
              "$$수식$${explain8}$$/수식$$\n" \
              "$$수식$${explain9}$$/수식$$ 또는 $$수식$${explain10}$$/수식$$\n" \
              "따라서 $$수식$${explain11}$$/수식$$ 또는 $$수식$${explain12}$$/수식$$\n" \
              "$$수식$${explain13}$$/수식$$의 값은\n" \
              "$$수식$${explain14}$$/수식$$, $$수식$${explain15}$$/수식$$일 때, $$수식$${explain16}$$/수식$$\n" \
              "$$수식$${explain17}$$/수식$$, $$수식$${explain18}$$/수식$$일 때, $$수식$${explain19}$$/수식$$\n" \
              "$$수식$${explain20}$$/수식$$, $$수식$${explain21}$$/수식$$일 때, $$수식$${explain22}$$/수식$$\n" \
              "$$수식$${explain23}$$/수식$$, $$수식$${explain24}$$/수식$$일 때, $$수식$${explain25}$$/수식$$\n" \
              "따라서 구하는 가장 큰 값은 $$수식$${explain26}$$/수식$$이다.\n\n"
    while 1:
        E, F = random.sample([i for i in range(-9, 10) if i != 0], 2)
        G, H = random.sample([i for i in range(-9, 10) if i != 0], 2)
        A = -(E + F)
        if A == 0:
            continue
        B = E * F
        C = -(G + H)
        if C == 0:
            continue
        D = G * H
        I = abs(E + G)
        J = abs(E + H)
        K = abs(F + G)
        L = abs(F + H)
        M = max([I, J, K, L])
        if [I, J, K, L].count(M) == 1:
            break

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(A), post_variable(A), sign(B), abs(B))
    problem2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(C), post_variable(C), sign(D), abs(D))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-E), abs(E), sign(-F), abs(F))
    explain3 = 'x `=` {0}'.format(E)
    explain4 = 'x `=` {0}'.format(F)
    explain5 = 'a `=` {0}'.format(E)
    explain6 = 'a `=` {0}'.format(F)

    explain7 = problem2
    explain8 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-G), abs(G), sign(-H), abs(H))
    explain9 = 'x `=` {0}'.format(G)
    explain10 = 'x `=` {0}'.format(H)
    explain11 = 'b `=` {0}'.format(G)
    explain12 = 'b `=` {0}'.format(H)

    explain13 = 'left| a `+` b right|'
    explain14 = 'a `=` {0}'.format(E)
    explain15 = 'b `=` {0}'.format(G)
    explain16 = '{0} `=` left| {1} `+` {2} right| `=` {3}'.format(explain13, E, trans_squared(G, 1), I)

    explain17 = 'a `=` {0}'.format(E)
    explain18 = 'b `=` {0}'.format(H)
    explain19 = '{0} `=` left| {1} `+` {2} right| `=` {3}'.format(explain13, E, trans_squared(H, 1), J)

    explain20 = 'a `=` {0}'.format(F)
    explain21 = 'b `=` {0}'.format(G)
    explain22 = '{0} `=` left| {1} `+` {2} right| `=` {3}'.format(explain13, F, trans_squared(G, 1), K)

    explain23 = 'a `=` {0}'.format(F)
    explain24 = 'b `=` {0}'.format(H)
    explain25 = '{0} `=` left| {1} `+` {2} right| `=` {3}'.format(explain13, F, trans_squared(H, 1), L)

    explain26 = '{0}'.format(M)

    result = M

    # 정답 번호 랜덤 생성
    answer_num = random.randint(0, 4)
    # 선택지 리스트 선언
    lst = []
    # 선택지 값 추가 (정답 기준으로)
    interval = 1
    for i in range(5):
        lst.append(result + (i - answer_num) * interval)
    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, problem2=problem2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15, explain16=explain16,
                             explain17=explain17, explain18=explain18, explain19=explain19, explain20=explain20,
                             explain21=explain21, explain22=explain22, explain23=explain23, explain24=explain24,
                             explain25=explain25, explain26=explain26)

    return stem, answer, comment


# 3-1-2-498
def factorization312_Stem_424():
    stem = "$$수식$${problem1}$$/수식$${post1} 만족시키는 이차방정식 $$수식$${problem2}$$/수식$$의 한 근을 $$수식$$a$$/수식$$라 " \
           "할 때, $$수식$$a^{{ 2 }}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$ 또는 $$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$, $$수식$${explain7}$$/수식$$이므로 $$수식$${explain8}$$/수식$$\n" \
              "따라서 $$수식$${explain9}$$/수식$$\n\n"
    while 1:
        E, F = random.sample([i for i in range(-9, 10) if i != 0], 2)
        if abs(E) == abs(F):
            continue
        C = random.randint(1, 9) * random.choice([-1, 1])
        A = random.randint(2, 9)
        M, N = random.sample([i for i in range(1, 10) if i != 0], 2)
        if N - M < 2:
            continue
        if M > N:
            M, N = N, M

        I = -(M + N)
        L = M * N
        D = int(I / (E + F))
        if I % (E + F) != 0:
            continue
        if D < 0:
            continue
        J = D * E * F
        H = J - L
        G = D - 1
        if G == 0:
            continue
        O = random.randint(M + 1, N - 1)
        B = C - (O * A)
        if B == 0:
            continue
        P = M ** 2
        if G != 0 and I != 0 and H != 0 and B != 0 and -100 < abs(J) < 100 and -100 < abs(H) < 100:
            break

    problem1 = '{0}x `{1}` {2} `&lt;` {3}'.format(ppost_variable(A), sign(B), abs(B), C)
    post1 = '을' if abs(C) in have_jongsung_num else '를'
    problem2 = '{0} ( x `{1}` {2} ) ( x `{3}` {4} ) `=` {5}x^{{ 2 }} `{6}` {7}' \
        .format(ppost_variable(D), sign(E), abs(E), sign(F), abs(F), ppost_variable(G), sign(H), abs(H))

    explain1 = problem2
    explain2 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` {5}x^{{ 2 }} `{6}` {7}' \
        .format(ppost_variable(D), sign(I), post_variable(I), sign(J), abs(J), ppost_variable(G), sign(H), abs(H))
    explain3 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(I), abs(I), sign(L), abs(L))
    explain4 = 'x `=` {0}'.format(M)
    explain5 = 'x `=` {0}'.format(N)
    explain6 = '{0}x `{1}` {2} `&lt;` {3}'.format(ppost_variable(A), sign(B), abs(B), C)
    explain7 = 'x `&lt;` {0}'.format(O)
    explain8 = 'a `=` {0}'.format(M)
    explain9 = 'a^{{ 2 }} `=` {0}'.format(P)

    answer_num = P

    stem = stem.format(problem1=problem1, problem2=problem2, post1=post1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9)

    return stem, answer, comment


# 3-1-2-500
def factorization312_Stem_425():
    stem = "일차함수 $$수식$${problem1}$$/수식$$의 그래프가 점 $$수식$${problem2}$$/수식$$을 지나고 " \
           "제$$수식$$2$$/수식$$사분면을 지나지 않을 때, 상수 $$수식$$m$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에 $$수식$${explain2}$$/수식$$, $$수식$${explain3}$$/수식$${post1} 대입하면\n" \
              "$$수식$${explain4}$$/수식$$\n" \
              "$$수식$${explain5}$$/수식$$\n" \
              "$$수식$${explain6}$$/수식$$\n" \
              "$$수식$${explain7}$$/수식$$ 또는 $$수식$${explain8}$$/수식$$\n" \
              "이때 일차함수 $$수식$${explain9}$$/수식$$의 그래프가\n" \
              "제$$수식$$2$$/수식$$사분면을 지나지 않으려면\n" \
              "$$수식$${explain10}$$/수식$$이고 $$수식$${explain11}$$/수식$$이어야 하므로\n" \
              "$$수식$${explain12}$$/수식$$\n" \
              "따라서 $$수식$${explain13}$$/수식$$\n\n"
    while 1:
        E = -random.randint(1, 9)
        F = random.randint(1, 9)
        A = E + F
        if A == 0:
            continue
        D = E * F
        U = A - 1
        if U <= 0:
            continue
        C = random.randint(1, 9) * random.choice([-1, 1])
        B = D + C
        if B == 0:
            continue
        G = B / U

        if E < 0 < G <= F:
            break

    problem1 = 'y `=` mx `{0}` ( {1}m `{2}` {3} )'.format(sign(-U), post_variable(U), sign(B * -U), abs(B))
    problem2 = '( m, ~ m `{0}` {1} )'.format(sign(C), abs(C))

    explain1 = problem1
    explain2 = 'x `=` m'
    explain3 = 'y `=` m `{0}` {1}'.format(sign(C), abs(C))
    post1 = '을' if abs(C) in have_jongsung_num else '를'
    explain4 = 'm `{0}` {1} `=` m^{{ 2 }} `{2}` {3}m `{4}` {5}' \
        .format(sign(C), abs(C), sign(-U), post_variable(U), sign(B * U), abs(B))
    explain5 = 'm^{{ 2 }} `{0}` {1}m `{2}` {3} `=` 0'.format(sign(-A), post_variable(A), sign(D), abs(D))
    explain6 = '( m `{0}` {1} ) ( m `{2}` {3} ) `=` 0'.format(sign(-E), abs(E), sign(-F), abs(F))
    explain7 = 'm `=` {0}'.format(E)
    explain8 = 'm `=` {0}'.format(F)
    explain9 = problem1
    explain10 = 'm `&gt;` 0'
    explain11 = '{0} ( {1}m `{2}` {3} ) `LEQ` 0'.format(answer_sign(-U), post_variable(U), sign(B * -U),
                                                                 abs(B))
    explain12 = 'm `GEQ` {0}{1}'.format(answer_sign(B * U), frac(B, U))
    explain13 = 'm `=` {0}'.format(F)

    answer_num = F

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, post1=post1)

    return stem, answer, comment


# 3-1-2-501
def factorization312_Stem_426():
    stem = "두 개의 주사위를 동시에 던져서 나온 눈의 수의 합이 이차방정식 $$수식$${problem1}$$/수식$$의 해가 될 확률은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서 $$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n" \
              "(ⅰ) $$수식$${explain5}$$/수식$$일 때, 두 개의 주사위 눈의 순서쌍은 $$수식$${explain6}$$/수식$$\n" \
              "(ⅱ) $$수식$${explain7}$$/수식$$일 때, 두 개의 주사위 눈의 순서쌍은 $$수식$${explain8}$$/수식$$\n" \
              "따라서 구하는 확률은 $$수식$${explain9}$$/수식$$\n\n"
    while 1:
        C, D = random.sample(range(2, 13), 2)
        A = C + D
        B = C * D
        break

    tmp1 = []
    for i in range(1, C):
        if 0 < i < 7 and 0 < C - i < 7:
            tmp1.append('$$수식$$( {0}, ~ {1} )$$/수식$$'.format(i, C - i))
    E = len(tmp1)

    tmp2 = []
    for i in range(1, D):
        if 0 < i < 7 and 0 < D - i < 7:
            tmp2.append('$$수식$$( {0}, ~ {1} )$$/수식$$'.format(i, D - i))
    F = len(tmp2)

    G = E + F

    problem1 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(-A), post_variable(A), sign(B), abs(B))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(-C), abs(C), sign(-D), abs(D))
    explain3 = 'x `=` {0}'.format(C)
    explain4 = 'x `=` {0}'.format(D)
    explain5 = explain3
    explain6 = ', '.join(tmp1)
    explain7 = explain4
    explain8 = ', '.join(tmp2)
    explain9 = '{{ {0} `+` {1} }} OVER {{ 36 }} `=` {{ {2} }} OVER {{ 36 }} `=` {3}'.format(E, F, G, frac(G, 36))

    result = G

    interval = 1
    while 1:
        flag = 0
        # 정답 번호 랜덤 생성
        answer_num = random.randint(0, 4)
        # 선택지 리스트 선언
        lst = []
        # 선택지 값 추가 (정답 기준으로)
        for i in range(5):
            tmp = result + (i - answer_num) * interval
            if tmp <= 0:
                flag = 1
            else:
                lst.append('{0}'.format(frac(result + (i - answer_num) * interval, 36)))
        if flag == 0:
            break

    a1, a2, a3, a4, a5 = lst

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9)

    return stem, answer, comment


# 3-1-2-502
def factorization312_Stem_427():
    stem = "$$수식$${problem1}$$/수식$$의 해가 $$수식$$x `=` a$$/수식$$ 또는 $$수식$$x `=` b$$/수식$$일 때, " \
           "이차방정식 $$수식$${problem2}$$/수식$$의 해의 합을 구하시오. (단, $$수식$$a `&gt;` b$$/수식$$)\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$\n" \
              "$$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "$$수식$$a `&gt;` b$$/수식$$이므로 $$수식$${explain7}$$/수식$$, $$수식$${explain8}$$/수식$$\n" \
              "$$수식$${explain9}$$/수식$$에서\n" \
              "$$수식$${explain10}$$/수식$$\n" \
              "$$수식$${explain11}$$/수식$$, $$수식$${explain12}$$/수식$$\n" \
              "$$수식$${explain13}$$/수식$$ 또는 $$수식$${explain14}$$/수식$$\n" \
              "따라서 $$수식$${explain15}$$/수식$$\n\n"
    while 1:
        A = random.randint(1, 9) * random.choice([-1, 1])
        B = random.randint(1, 9) * random.choice([-1, 1])
        C = random.randint(1, 9) * random.choice([-1, 1])
        D = 4 * A
        E = 2 * A ** 2
        F = 2 * C
        G = C ** 2
        H = D - F
        if H == 0:
            continue
        I = E + B - G
        if I == 0:
            continue
        J, K = factorization(H, I)
        if J == 0 or J == K:
            continue
        if K < J:
            J, K = K, J
        L = J + K
        if L == 0:
            continue
        M, N = factorization(-J, L)
        if M == 0 or M == N:
            continue
        O = -M + -N
        break

    problem1 = '2 ( x `{0}` {1} )^{{ 2 }} `{2}` {3} `=` ( x `{4}` {5} )^{{ 2 }}' \
        .format(sign(A), abs(A), sign(B), abs(B), sign(C), abs(C))
    problem2 = 'x^{{ 2 }} `+` ax `-` a `-` b `=` 0'

    explain1 = problem1
    explain2 = '2x^{{ 2 }} `{0}` {1}x `{2}` {3} `{4}` {5} `=` x^{{ 2 }} `{6}` {7}x `{8}` {9}' \
        .format(sign(D), post_variable(D), sign(E), abs(E), sign(B), abs(B), sign(F), post_variable(F), sign(G),
                abs(G))
    explain3 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(H), post_variable(H), sign(I), abs(I))
    explain4 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(J), abs(J), sign(K), abs(K))
    explain5 = 'x `=` {0}'.format(-J)
    explain6 = 'x `=` {0}'.format(-K)
    explain7 = 'a `=` {0}'.format(-J)
    explain8 = 'b `=` {0}'.format(-K)
    explain9 = problem2
    explain10 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `{4}` {5} `=` 0' \
        .format(sign(-J), post_variable(J), sign(J), abs(J), sign(K), abs(K))
    explain11 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `=` 0'.format(sign(-J), post_variable(J), sign(L), abs(L))
    explain12 = '( x `{0}` {1} ) ( x `{2}` {3} ) `=` 0'.format(sign(M), abs(M), sign(N), abs(N))
    explain13 = 'x `=` {0}'.format(-M)
    explain14 = 'x `=` {0}'.format(-N)
    explain15 = '{0} `+` {1} `=` {2}'.format(-M, trans_squared(-N, 1), O)

    answer_num = O

    stem = stem.format(problem1=problem1, problem2=problem2)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15)

    return stem, answer, comment


# 3-1-2-503
def factorization312_Stem_428():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 근이 모두 정수일 때, 다음 중 $$수식$$m$$/수식$$의 값이 될 수 없는 것은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$에서 두 근이\n" \
              "(ⅰ) $$수식$${explain2}$$/수식$$ 또는 $$수식$${explain3}$$/수식$$일 때,\n" \
              "두 근 중 한 근 $$수식$${explain2}$$/수식$$을 $$수식$${explain1}$$/수식$$에 대입하면\n" \
              "$$수식$${explain4}$$/수식$$이므로 $$수식$${explain5}$$/수식$$\n" \
              "(ⅱ) $$수식$${explain6}$$/수식$$ 또는 $$수식$${explain7}$$/수식$$일 때,\n" \
              "두 근 중 한 근 $$수식$${explain6}$$/수식$${post1} $$수식$${explain1}$$/수식$$에 대입하면\n" \
              "$$수식$${explain8}$$/수식$$이므로 $$수식$${explain9}$$/수식$$\n" \
              "(ⅲ) $$수식$${explain10}$$/수식$$ 또는 $$수식$${explain11}$$/수식$$일 때,\n" \
              "두 근 중 한 근 $$수식$${explain11}$$/수식$${post1} $$수식$${explain1}$$/수식$$에 대입하면\n" \
              "$$수식$${explain12}$$/수식$$이므로 $$수식$${explain13}$$/수식$$\n" \
              "(ⅳ) $$수식$${explain14}$$/수식$$ 또는 $$수식$${explain15}$$/수식$$일 때,\n" \
              "두 근 중 한 근 $$수식$${explain15}$$/수식$$을 $$수식$${explain1}$$/수식$$에 대입하면\n" \
              "$$수식$${explain16}$$/수식$$이므로 $$수식$${explain17}$$/수식$$\n\n"
    while 1:
        A = random.randint(8, 30)
        lst = submultiple(A)
        if len(lst) != 4:
            continue
        D = A - 1
        B, C = lst[1:3]
        # if (A - B ** 2) % B != 0:
        #     continue
        # E = int((A - B ** 2) / B)
        E = C - B
        break
    while 1:
        F = random.randint(1, 9) * random.choice([-1, 1])
        if F not in [-E, E, D, -D]:
            break

    problem1 = 'x^{{ 2 }} `+` mx `{0}` {1} `=` 0'.format(sign(-A), abs(A))

    explain1 = problem1
    explain2 = 'x `=` 1'
    explain3 = 'x `=` {0}'.format(-A)
    explain4 = '1 `+` m `{0}` {1} `=` 0'.format(sign(-A), abs(A))
    explain5 = 'm `=` {0}'.format(D)

    explain6 = 'x `=` {0}'.format(B)
    explain7 = 'x `=` {0}'.format(-C)
    explain8 = '{0} `{1}` {2}m `{3}` {4} `=` 0'.format(trans_squared(B, 2), sign(B), post_variable(B), sign(-A),
                                                       abs(A))
    explain9 = 'm `=` {0}'.format(E)

    explain10 = 'x `=` {0}'.format(C)
    explain11 = 'x `=` {0}'.format(-B)
    explain12 = '{0} `{1}` {2}m `{3}` {4} `=` 0'.format(trans_squared(-B, 2), sign(-B), post_variable(B), sign(-A),
                                                        abs(A))
    explain13 = 'm `=` {0}'.format(-E)

    explain14 = 'x `=` {0}'.format(A)
    explain15 = 'x `=` -1'
    explain16 = '{0} `-` m `{1}` {2} `=` 0'.format(trans_squared(-1, 2), sign(-A), abs(A))
    explain17 = 'm `=` {0}'.format(-D)

    post1 = '을' if abs(B) in have_jongsung_num else '를'

    answer_lst = [[-E, 0], [-D, 0], [F, 1], [D, 0], [E, 0]]
    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7, explain8=explain8,
                             explain9=explain9, explain10=explain10, explain11=explain11, explain12=explain12,
                             explain13=explain13, explain14=explain14, explain15=explain15, explain16=explain16,
                             explain17=explain17, post1=post1)

    return stem, answer, comment


# 3-1-2-504
def factorization312_Stem_429():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$을 풀면?\n" \
           "➀ {a1}\n" \
           "➁ {a2}\n" \
           "➂ {a3}\n" \
           "➃ {a4}\n" \
           "➄ {a5}\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$을 정리하면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$, $$수식$${explain4}$$/수식$$\n" \
              "{explain5}\n\n"
    while 1:
        I, J = random.sample([i for i in range(-9, 10) if i != 0], 2)
        A, B = random.randint(1, 5), random.randint(1, 9) * random.choice([-1, 1])
        if not is_gcd(A, I):
            continue
        G = (A * -J) + (-I)
        if G == 0:
            continue
        H = I * J
        E = 2 * A * B
        F = A * (B ** 2)
        C = E - G
        if C == 0:
            continue
        D = F - H
        if D == 0:
            continue
        if abs(D) < 100:
            if abs(I) % abs(A) != 0:
                break
            else:
                if abs(J) != int(abs(I) / abs(A)):
                    break
    while 1:
        K = random.randint(1, 9) * random.choice([-1, 1])
        if abs(K) != abs(J):
            if abs(I) % abs(A) != 0:
                break
            else:
                if abs(K) != int(abs(I) / abs(A)):
                    break
    # while 1:
    #     F = random.randint(1, 9) * random.choice([-1, 1])
    #     if F not in [E, D]:
    #         break

    problem1 = '{0} ( x `{1}` {2} )^{{ 2 }} `=` {3}x `{4}` {5}' \
        .format(ppost_variable(A), sign(B), abs(B), ppost_variable(C), sign(D), abs(D))

    explain1 = problem1
    explain2 = '{0}x^{{ 2 }}  `{1}` {2}x `{3}` {4} `=` {5}x `{6}` {7}' \
        .format(ppost_variable(A), sign(E), post_variable(E), sign(F), abs(F), ppost_variable(C), sign(D), abs(D))
    explain3 = '{0}x^{{ 2 }}  `{1}` {2}x `{3}` {4} `=` 0' \
        .format(ppost_variable(A), sign(G), post_variable(G), sign(H), abs(H))
    explain4 = '( {0}x `{1}` {2} ) ( x `{3}` {4} ) `=` 0' \
        .format(ppost_variable(A), sign(-I), abs(I), sign(-J), abs(J))
    explain5 = '$$수식$$x `=` {0}{1}$$/수식$$ 또는 $$수식$$x `=` {2}$$/수식$$' \
        .format(answer_sign(I * A), frac(I, A), J)

    a1 = explain5
    a2 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}{2}$$/수식$$'.format(-K, answer_sign(-I * A), frac(I, A))
    a3 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(-K, J)
    a4 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}{2}$$/수식$$'.format(-J, answer_sign(-I * A), frac(I, A))
    a5 = '$$수식$$x `=` {0}$$/수식$$ 또는 $$수식$$x `=` {1}$$/수식$$'.format(-J, K)

    answer_lst = [[a1, 1], [a2, 0], [a3, 0], [a4, 0], [a5, 0]]
    random.shuffle(answer_lst)

    for i in range(5):
        if answer_lst[i][1] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][0], answer_lst[1][0], answer_lst[2][0], answer_lst[3][0], answer_lst[4][0]

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5)

    return stem, answer, comment


# 3-1-2-505
def factorization312_Stem_430():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 두 근이 $$수식$$x `=` a$$/수식$$ 또는 $$수식$$x `=` b$$/수식$$일 때, " \
           "$$수식$$a `-` b$$/수식$$의 값은? (단, $$수식$$a `&gt;` b$$/수식$$)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {answer_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$의 좌변을 인수분해하면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n" \
              "$$수식$$a `&gt;` b$$/수식$$이므로 $$수식$${explain5}$$/수식$$, $$수식$${explain6}$$/수식$$\n" \
              "따라서 $$수식$${explain7}$$/수식$$\n\n"
    while 1:
        E, D = random.sample([i for i in range(-9, 10) if i != 0], 2)
        A = random.randint(2, 5)  # * random.choice([-1, 1])
        if not is_gcd(A, E):
            continue
        B = -(E + A * D)
        C = D * E
        break
    while 1:
        G, H, I, J = random.sample([i for i in range(-19, 20) if i != 0], 4)
        if D * A - E not in [G, H, I, J]:
            break

    problem1 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))

    explain1 = problem1
    explain2 = '( x `{0}` {1} ) ( {2}x `{3}` {4} ) `=` 0' \
        .format(sign(-D), abs(D), ppost_variable(A), sign(-E), abs(E))
    explain3 = 'x `=` {0}'.format(D)
    explain4 = 'x `=` {0}{1}'.format(answer_sign(E * A), frac(E, A))

    if D > E / A:
        equ = '{0}{1}'.format(answer_sign((D * A - E) * A), frac(D * A - E, A))
        explain5 = 'a `=` {0}'.format(D)
        explain6 = 'b `=` {0}{1}'.format(answer_sign(E * A), frac(E, A))
        answer_lst = [[J, '{0}{1}'.format(answer_sign(J * A), frac(J, A)), 0],
                      [I, '{0}{1}'.format(answer_sign(I * A), frac(I, A)), 0],
                      [H, '{0}{1}'.format(answer_sign(H * A), frac(H, A)), 0],
                      [G, '{0}{1}'.format(answer_sign(G * A), frac(G, A)), 0],
                      [(D * A - E), equ, 1]]
    else:
        equ = '{0}{1}'.format(answer_sign((E - D * A) * A), frac(E - D * A, A))
        explain5 = 'a `=` {0}{1}'.format(answer_sign(E * A), frac(E, A))
        explain6 = 'b `=` {0}'.format(D)
        answer_lst = [[J, '{0}{1}'.format(answer_sign(J * A), frac(J, A)), 0],
                      [I, '{0}{1}'.format(answer_sign(I * A), frac(I, A)), 0],
                      [H, '{0}{1}'.format(answer_sign(H * A), frac(H, A)), 0],
                      [G, '{0}{1}'.format(answer_sign(G * A), frac(G, A)), 0],
                      [(E - D * A), equ, 1]]
    explain7 = 'a `-` b `=` {0}'.format(equ)

    answer_lst.sort(key=lambda x: x[0])

    for i in range(5):
        if answer_lst[i][2] == 1:
            answer_num = i

    a1, a2, a3, a4, a5 = answer_lst[0][1], answer_lst[1][1], answer_lst[2][1], answer_lst[3][1], answer_lst[4][1]

    stem = stem.format(problem1=problem1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(answer_num=multiple_choice_nums[answer_num])
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-506
def factorization312_Stem_431():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 해를 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${explain1}$$/수식$$에서\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$\n" \
              "$$수식$${explain4}$$/수식$$\n" \
              "$$수식$${explain5}$$/수식$$ 또는 $$수식$${explain6}$$/수식$$\n" \
              "따라서 $$수식$${explain7}$$/수식$$\n\n"
    while 1:
        H = random.randint(2, 9)
        K, L = random.sample([i for i in range(-9, 10) if i != 0], 2)
        if not is_gcd(H, L):
            continue
        I = -(L + (K * H))
        if I == 0:
            continue
        J = K * L
        C = H - 1
        A, B = random.sample([i for i in range(-9, 10) if i != 0], 2)
        if K * L != A * B:
            continue
        E = A + B
        if E == 0:
            continue
        F = A * B
        G = I - E
        if G == 0:
            continue
        if G % C == 0:
            D = int(G / C)
            break

    problem1 = '( x `{0}` {1} ) ( x `{2}` {3} ) `{4}` {5}x ( x `{6}` {7} ) `=` 0' \
        .format(sign(A), abs(A), sign(B), abs(B), sign(C), post_variable(C), sign(D), abs(D))

    explain1 = problem1
    explain2 = 'x^{{ 2 }} `{0}` {1}x `{2}` {3} `{4}` {5}x^{{ 2 }} `{6}` {7}x `=` 0' \
        .format(sign(E), post_variable(E), sign(F), abs(F), sign(C), post_variable(C), sign(G), post_variable(G))
    explain3 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0' \
        .format(ppost_variable(H), sign(I), post_variable(I), sign(J), abs(J))
    explain4 = '( x `{0}` {1} ) ( {2}x `{3}` {4} ) `=` 0' \
        .format(sign(-K), abs(K), ppost_variable(H), sign(-L), abs(L))
    explain5 = 'x `=` {0}'.format(K)
    explain6 = 'x `=` {0}{1}'.format(answer_sign(L * H), frac(L, H))
    explain7 = 'ab `=` {0} `TIMES` {1} `=` {2}{3}' \
        .format(K,
                '{0}'.format(frac(L, H)) if L * H > 0 else '( {0}{1} )'.format(answer_sign(L * H),
                                                                                        frac(L, H)),
                answer_sign(K * L * H),
                frac(K * L, H))

    answer_num = '{0}{1}'.format(answer_sign(K * L * H), frac(K * L, H))

    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6, explain7=explain7)

    return stem, answer, comment


# 3-1-2-507
def factorization312_Stem_432():
    stem = "이차방정식 $$수식$${problem1}$$/수식$$의 두 근 사이에 있는 모든 정수의 합을 구하시오.\n"
    answer = "(답) : $$수식$${answer_num}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${explain1}$$/수식$$의 좌변을 인수분해하면\n" \
              "$$수식$${explain2}$$/수식$$\n" \
              "$$수식$${explain3}$$/수식$$ 또는 $$수식$${explain4}$$/수식$$\n" \
              "따라서 두 근 사이에 있는 정수는 $$수식$${explain5}$$/수식$$이고, " \
              "이들의 합은 $$수식$${explain6}$$/수식$$이다.\n\n"
    while 1:
        E, G = random.sample([i for i in range(-9, 10) if i != 0], 2)
        E, G = [abs(E), abs(G)] if E < 0 and G < 0 else [E, G]
        D, F = random.randint(1, 9) * random.choice([-1, 1]), random.randint(1, 9) * random.choice([-1, 1])

        if not is_gcd(F, G) or not is_gcd(D, E):
            continue
        A = D * F
        B = -(D * G + E * F)
        if B == 0:
            continue
        C = E * G
        if 2 < abs(int(E / D) - int(G / F)) < 6:
            break
    tmp1 = E / D
    tmp2 = G / F
    if tmp1 > tmp2:
        tmp1, tmp2 = tmp2, tmp1
    answer_lst = []
    answer_num = 0
    for i in range(int(tmp1) - 1, int(tmp2 + 1)):
        if tmp1 < i < tmp2:
            answer_lst.append('$$수식$${0}$$/수식$$'.format(i))
            answer_num += i

    problem1 = '{0}x^{{ 2 }} `{1}` {2}x `{3}` {4} `=` 0' \
        .format(ppost_variable(A), sign(B), post_variable(B), sign(C), abs(C))

    explain1 = problem1
    explain2 = '( {0}x `{1}` {2} ) ( {3}x `{4}` {5} ) `=` 0' \
        .format(ppost_variable(D), sign(-E), abs(E), ppost_variable(F), sign(-G), abs(G))
    explain3 = 'x `=` {0}{1}'.format(answer_sign(E * D), frac(E, D))
    explain4 = 'x `=` {0}{1}'.format(answer_sign(G * F), frac(G, F))

    explain5 = ', '.join(answer_lst)
    explain6 = answer_num
    stem = stem.format(problem1=problem1)
    answer = answer.format(answer_num=answer_num)
    comment = comment.format(explain1=explain1, explain2=explain2, explain3=explain3, explain4=explain4,
                             explain5=explain5, explain6=explain6)

    return stem, answer, comment


# 3-1-2-508
def factorization312_Stem_433():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 두 근 사이에 있는 정수의 개수는?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "이차방정식 $$수식$${c_exp1}$$/수식$$의 좌변을 인수분해 하면\n" \
              "$$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$ 또는 $$수식$${c_exp4}$$/수식$$\n" \
              "따라서 두 근 사이에 있는 정수는\n" \
              "$$수식$${c_exp5}$$/수식$$이므로 모두 $$수식$${c_exp6}$$/수식$$개이다.\n\n"

    while True:
        D, E, F, G = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=4, replace=False)
        A = D * F
        # B조건 변경
        B = (D * G) + (E * F)
        C = E * G
        x1 = -(E // D)
        x2 = -(G // F)

        if x1 > x2:
            K = [i for i in range(x2, x1)]
        else:
            K = [i for i in range(x1, x2)]

        L = len(K)

        if abs(D) > 1 and abs(F) > 1 and check_simFrac(abs(D), abs(E)) and check_simFrac(abs(F), abs(G)) \
            and B != 0 and L > 1 and x1 != x2 and D > 0 and F > 0:
            break

    s_exp1 = "%sx ^{2} %sx %s `=` 0" % (int_str_converter(A, first=True, exp_one_remove=True),
                                        int_str_converter(B, first=False, exp_one_remove=True),
                                        int_str_converter(C, first=False, exp_one_remove=False))

    c_exp1 = s_exp1
    c_exp2 = " (%sx %s  )  (%sx %s  ) `=` 0" \
             % (int_str_converter(D, first=True, exp_one_remove=True),
                int_str_converter(E),
                int_str_converter(F, first=True, exp_one_remove=True),
                int_str_converter(G))

    c_exp3 = "x `=` %s {%d} over {%d}" % (frac_sign(-(D * E)), abs(E), abs(D))
    c_exp4 = "x `=` %s {%d} over {%d}" % (frac_sign(-(F * G)), abs(G), abs(F))
    c_exp5 = "$$/수식$$, $$수식$$".join(["%d" % i for i in K])
    c_exp6 = "%d" % L


    # 보기 음수 방지
    while True:
        ans_index = np.random.randint(0, 5)
        if L > ans_index:
            break

    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(L)
        elif i < ans_index:
            answers.append(L - abs(ans_index - i))
        else:
            answers.append(L + abs(ans_index - i))

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-509
def factorization312_Stem_434():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 두 근의 합을 $$수식$${s_exp2}$$/수식$$, " \
           "두 근의 곱을 $$수식$${s_exp3}$$/수식$$라고 할 때, $$수식$${s_exp4}$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_frac}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${c_exp1}$$/수식$$,\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$ 또는 $$수식$${c_exp4}$$/수식$$\n" \
              "이때 두 근의 합 $$수식$${c_exp5}$$/수식$$,\n" \
              "두 근의 곱 $$수식$${c_exp6}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${c_exp7}$$/수식$$\n\n"

    while True:
        A, D, E = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        B = - (D * A + E)
        C = D * E
        F_d = A
        F_n = A * D + E
        G_d = A
        G_n = D * E
        H_d = A
        H_n = F_n + 5 * G_n
        if check_simFrac(abs(A), abs(E)) and check_simFrac(abs(F_n), abs(F_d)) and check_simFrac(abs(G_n), abs(G_d)) \
            and D != E and abs(H_d) > 1\
            and [True] * 11 == [abs(i) < 100 for i in [A, B, C, D, E, F_d, F_n, G_d, G_n, H_d, H_n]] and A > 0:
            break

    s_exp1 = "%sx ^{2} %sx %s `=` 0" % (int_str_converter(A, first=True, exp_one_remove=True),
                                        int_str_converter(B, first=False, exp_one_remove=True),
                                        int_str_converter(C, first=False, exp_one_remove=False))
    s_exp2 = 'a'
    s_exp3 = 'b'
    s_exp4 = 'a `+` 5b'
    c_exp1 = s_exp1
    c_exp2 = ' ( x %s  )  ( %sx %s  ) `=` 0' % (int_str_converter(- D),
                                                                  int_str_converter(A, first=True, exp_one_remove=True),
                                                                  int_str_converter(- E))
    c_exp3 = 'x `=` %d' % (D)
    c_exp4 = 'x `=` %s {%d} over {%d}' % (frac_sign(A * E), abs(E), abs(A))
    c_exp5 = 'a `=` %s `+` %s `=` %s' % (int_str_converter(D, first=True),
                                         round_brackets(E, A),
                                         shh_frac(F_n, F_d))
    c_exp6 = 'b `=` %s ` TIMES ` %s `=` %s {%d} over {%d}' % (int_str_converter(D, first=True),
                                                              round_brackets(E, A),
                                                              frac_sign(G_n * G_d),
                                                              abs(G_n),
                                                              abs(G_d))

    if check_simFrac(abs(H_n), abs(H_d)):
        c_exp7 = 'a `+` 5b `=` %s {%d} over {%d} `+` 5 ` TIMES ` %s `=` %s {%d} over {%d}' \
                 % (frac_sign(F_n * F_d),
                    abs(F_n),
                    abs(F_d),
                    round_brackets(G_n, G_d),
                    frac_sign(H_n * H_d),
                    abs(H_n),
                    abs(H_d))

        ans_frac = '%s {%d} over {%d}' % (frac_sign(H_n * H_d), abs(H_n), abs(H_d))
    else:
        H = shh_frac(H_n, H_d)
        c_exp7 = 'a `+` 5b `=` %s {%d} over {%d} `+` 5 ` TIMES ` %s `=` %s {%d} over {%d} `=` %s' \
                 % (frac_sign(F_n * F_d),
                    abs(F_n),
                    abs(F_d),
                    round_brackets(G_n, G_d),
                    frac_sign(H_n * H_d),
                    abs(H_n),
                    abs(H_d),
                    H)

        ans_frac = '%s' % H

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4)
    answer = answer.format(ans_frac=ans_frac)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4,
                             c_exp5=c_exp5, c_exp6=c_exp6, c_exp7=c_exp7)

    return stem, answer, comment


# 3-1-2-510
def factorization312_Stem_435():
    stem = "다음은 인수분해를 이용하여 이차방정식 $$수식$${s_exp1}$$/수식$${josa1} 푸는 과정이다. 처음으로 틀린 부분을 찾으면?\n" \
           "➀ 우변을 인수분해하면\n" \
           "$$수식$${s_exp2}$$/수식$$\n" \
           "➁ 양변을 $$수식$${s_exp3}$$/수식$${j1}로 나누면\n" \
           "$$수식$${s_exp4}$$/수식$$\n" \
           "➂ 괄호를 풀면\n" \
           "$$수식$${s_exp5}$$/수식$$\n" \
           "➃ 정리하면\n" \
           "$$수식$${s_exp6}$$/수식$$\n" \
           "➄ 따라서 해는 $$수식$${s_exp7}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "방정식 $$수식$${c_exp1}$$/수식$$에\n" \
              "$$수식$${c_exp2}$$/수식$${josa2} 대입하면 성립하므로\n" \
              "$$수식$${c_exp2}$$/수식$${josa3} 주어진 이차방정식의 근이다.\n" \
              "즉, {ans_num}에서 등식의 양변을 $$수식$$0$$/수식$$으로 나누었으므로\n" \
              "처음으로 틀린 부분은 {ans_num}이다.\n\n"

    ans_num = '➁'

    while True:
        A, B, C, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=4, replace=False)
        E = B ** 2
        F = A * C
        G = A * D
        H = F - 1
        I = B - G

        if check_simFrac(abs(C), abs(D)) and abs(A) * abs(C) != 1 and 0 < A and 0 < C:
            break

    s_exp1 = "%s  ( x %s  )  ( %sx %s  ) `=` x ^{2} %s" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(- B),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(- E))

    s_exp2 = "%s  ( x %s  )  ( %sx %s  ) `=`  ( x %s  )  ( x %s  )" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(- B),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(B),
                int_str_converter(- B))

    s_exp3 = " ( x %s  )" % (int_str_converter(- B))
    j1 = '으' if abs(B) % 10 in have_jongsung_num else ''
    s_exp4 = "%s  ( %sx %s  ) `=` x %s" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(B))
    s_exp5 = "%sx %s `=` x %s" \
             % (int_str_converter(F, first=True, exp_one_remove=True),
                int_str_converter(G),
                int_str_converter(B))

    if H < 0:
        s_exp6 = "%sx `=` %s" \
                 % (int_str_converter(-H, first=True, exp_one_remove=True),
                    -I)
    else:
        s_exp6 = "%sx `=` %s" \
                 % (int_str_converter(H, first=True, exp_one_remove=True),
                    I)

    s_exp7 = "x `=` %s" % (shh_frac(I, H))


    c_exp1 = s_exp1
    c_exp2 = "x `=` %s" % B

    josa1 = check_jongsung(E)[2]
    josa2 = check_jongsung(B)[2]
    josa3 = check_jongsung(B)[1]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4, s_exp5=s_exp5, s_exp6=s_exp6,
                       s_exp7=s_exp7, josa1=josa1, j1=j1)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, ans_num=ans_num, josa2=josa2, josa3=josa3)

    return stem, answer, comment


# 3-1-2-511
def factorization312_Stem_436():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$을 풀면\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"

    answer = "(답) : {ans_num}\n"

    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$에서\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$ 또는 $$수식$${c_exp6}$$/수식$$\n\n"


    while True:
        A, I, C = np.random.randint(2, 10, size=3)
        B, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9),
                                size=2,
                                replace=False)
        L = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=1, replace=False)[0]
        G = D + (B * C)
        M = -(A * G + L * I)
        if abs(M) > 10:
            continue
        K = L * M
        J = - (L * I + M)
        H = B * D
        F = (A * C) - I
        E = A * H - (L * M)

        if check_simFrac(abs(C), abs(D)) \
                and check_simFrac(abs(I), abs(M)) \
                and [True] * 7 == [0 < abs(i) < 100 for i in [G, M, K, J, H, F, E]] and E > 0:
            break

    N, O, P, Q = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=4, replace=False)

    s_exp1 = "%s  ( x %s  )  ( %sx %s  ) `=` %s %sx ^{2}" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(E, first=True),
                int_str_converter(F, exp_one_remove=True))

    P, Q = sorted([P, Q])
    t1 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (int_str_converter(L, first=True), shh_frac(M, I))
    t2 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(-M, I), shh_frac(O, N))
    t3 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(M, I), int_str_converter(- L, first=True))
    t4 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(O, N), int_str_converter(P, first=True))
    t5 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (int_str_converter(P, first=True), int_str_converter(Q, first=True))

    a_list = [[L, t1], [-M / I, t2], [M / I, t3], [O / N, t4], [P, t5]]
    a_list.sort(key=lambda x: x[0])
    a1, a2, a3, a4, a5 = [i[1] for i in a_list]
    ans_num = multiple_choice_nums[a_list.index([L, t1])]

    c_exp1 = s_exp1
    c_exp2 = "%s  ( %sx ^{2} %sx %s  ) `=` %s %sx ^{2}" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(G, exp_one_remove=True),
                int_str_converter(H),
                int_str_converter(E, first=True),
                int_str_converter(F, exp_one_remove=True))
    c_exp3 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(I, first=True, exp_one_remove=True),
                int_str_converter(J, exp_one_remove=True),
                int_str_converter(K))
    c_exp4 = " ( x %s  )  ( %sx %s  ) `=` 0" \
             % (int_str_converter(-L),
                int_str_converter(I, first=True, exp_one_remove=True),
                int_str_converter(-M))
    c_exp5 = "x `=` %s" % (int_str_converter(L, first=True))
    c_exp6 = "x `=` %s" % shh_frac(M, I)

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, s_exp1=s_exp1)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-512
def factorization312_Stem_437():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 해가 $$수식$${s_exp2}$$/수식$$ 또는 $$수식$${s_exp3}$$/수식$$일 때, " \
           "이차방정식 $$수식$${s_exp4}$$/수식$$의 해를 구하면? (단, $$수식$${s_exp5}$$/수식$$)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$에서\n" \
              "$$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "따라서 $$수식$${c_exp5}$$/수식$$ 또는 $$수식$${c_exp6}$$/수식$$\n" \
              "이때 $$수식$${c_exp7}$$/수식$$이므로 $$수식$${c_exp8}$$/수식$$, $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 이차방정식 $$수식$${c_exp10}$$/수식$$,\n" \
              "즉 $$수식$${c_exp11}$$/수식$$에서\n" \
              "$$수식$${c_exp12}$$/수식$$\n" \
              "따라서 $$수식$${c_exp13}$$/수식$$ 또는 $$수식$${c_exp14}$$/수식$$\n\n"

    while True:
        B, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=2, replace=False)
        H = np.random.randint(1, 3)
        O, P = np.random.choice(np.arange(2, 10) * np.random.choice([-1, 1], size=8), size=2, replace=False)

        M = -(O + P)
        N = O * P
        if abs(M) % 2 == 0:
            K = M // 2
            if (-H * (N - K)) % 2 != 0:
                continue
            L = int((-H * (N - K)) / 2)
            A = H + 1
            E = A * B
            I = - (K * H + L)
            F = E - I
            J = K * L
            D = int(F / 2)
            G = D ** 2
            C = J + G

            if abs(F) % 2 == 0 and H * K < L \
                    and [True] * 10 == [0 < abs(i) < 100 for i in [M, N, K, L, A, E, I, F, G, C]] \
                    and check_simFrac(abs(H), abs(L)):
                break

    while True:
        Q, R, S = np.random.choice(np.arange(2, 10) * np.random.choice([-1, 1], size=8), size=3, replace=False)
        if check_simFrac(abs(Q), abs(R)) and check_simFrac(abs(Q), abs(S)) and check_simFrac(abs(R), abs(S)):
            break

    s_exp1 = "%sx  (x %s  ) %s `=`  ( x %s  ) ^{2}" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B),
                int_str_converter(C),
                int_str_converter(D))
    s_exp2 = "x `=` a"
    s_exp3 = "x `=` b"
    s_exp4 = "x ^{2} `+` 2ax `+` a `-` 2b `=` 0"
    s_exp5 = "a `%s` b" % (right)

    c_exp1 = s_exp1
    c_exp2 = "%sx ^{2} %sx %s `=` x ^{2} %sx %s" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(C),
                int_str_converter(F, exp_one_remove=True),
                int_str_converter(G))
    c_exp3 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(H, first=True, exp_one_remove=True),
                int_str_converter(I, exp_one_remove=True),
                int_str_converter(J))
    c_exp4 = " ( x %s  )  ( %sx %s  ) `=` 0" \
             % (int_str_converter(-K),
                int_str_converter(H, first=True, exp_one_remove=True),
                int_str_converter(-L))
    c_exp5 = "x `=` %s" % (int_str_converter(K, first=True))
    c_exp6 = "x `=` %s" % (shh_frac(L, H))
    c_exp7 = s_exp5
    c_exp8 = "a `=` %s" % int_str_converter(K, first=True)
    c_exp9 = "b `=` %s" % (shh_frac(L, H))
    c_exp10 = s_exp4
    c_exp11 = "x ^{2} %sx %s `=` 0" \
              % (int_str_converter(M, exp_one_remove=True),
                 int_str_converter(N))
    c_exp12 = " ( x %s  )  ( x %s  ) `=` 0" % (int_str_converter(-O), int_str_converter(-P))
    c_exp13 = "x `=` %s" % int_str_converter(O, first=True)
    c_exp14 = "x `=` %s" % int_str_converter(P, first=True)

    t1 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (int_str_converter(S, first=True), int_str_converter(Q, first=True))
    t2 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(Q, R), int_str_converter(S, first=True))
    t3 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(S, Q), int_str_converter(R, first=True))
    t4 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (shh_frac(S, R), int_str_converter(Q, first=True))
    t5 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" % (int_str_converter(P, first=True), int_str_converter(O, first=True))

    a_list = [[S, t1], [Q / R, t2], [S / Q, t3], [S / R, t4], [P, t5]]
    a_list.sort(key=lambda x: x[0])
    a1, a2, a3, a4, a5 = [i[1] for i in a_list]
    ans_num = multiple_choice_nums[a_list.index([P, t5])]

    stem = stem.format(a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, s_exp4=s_exp4,
                       s_exp5=s_exp5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11,
                             c_exp12=c_exp12, c_exp13=c_exp13, c_exp14=c_exp14)
    return stem, answer, comment


# 3-1-2-513
def factorization312_Stem_438():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$일 때, 다른 한 근을 구하시오. (단, $$수식$$a$$/수식$$는 상수)\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp2}$$/수식$${josa0} 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$에서 $$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "따라서 $$수식$${c_exp7}$$/수식$$ 또는 $$수식$${c_exp8}$$/수식$$\n" \
              "그런데 $$수식$${c_exp7}$$/수식$$이면 이차항의 계수가 $$수식$$0$$/수식$$이 되므로 $$수식$${c_exp8}$$/수식$$\n" \
              "$$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp8}$$/수식$${josa1} 대입하면\n" \
              "$$수식$${c_exp9}$$/수식$$에서 $$수식$${c_exp10}$$/수식$$\n" \
              "$$수식$${c_exp11}$$/수식$$\n" \
              "따라서 다른 한 근은 $$수식$${c_exp12}$$/수식$$이다.\n\n"

    while True:
        C, L= np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9),
                               size=2,
                               replace=False)

        H = C ** 2
        I = H + 2
        J = (-C + -L) * I
        K = L * C * I
        A = J
        B = (H + 1)**2 + K
        D = H
        E = A * C
        G = 2 * H
        F = H - 2

        if H != -2 and C != L and [True] * 10 == [1 < abs(i) < 100 for i in [H, I, J, K, A, B, E, E, G, F]]:
            break

    s_exp1 = " ( a `+` 2  ) x ^{2} %sx %s `-`  ( a `+` 1  ) ^{2} `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = "x `=` %s" % (int_str_converter(C, first=True))

    ans_int = L

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s  ( a `+` 2  ) %s %s `-`  ( a `+` 1  ) ^{2} `=` 0" \
             % (int_str_converter(D, first=True, exp_one_remove=True),
                int_str_converter(E),
                int_str_converter(B))
    c_exp4 = "-a ^{2} %sa %s `=` 0" \
             % (int_str_converter(F, exp_one_remove=True),
                int_str_converter(G))
    c_exp5 = "a ^{2} %sa %s `=` 0" \
             % (int_str_converter(-F, exp_one_remove=True),
                int_str_converter(-G))
    c_exp6 = " ( a `+` 2  )  ( a %s  ) `=` 0" % (int_str_converter(-H))
    c_exp7 = "a `=` -2"
    c_exp8 = "a `=` %s" % (int_str_converter(H, first=True))
    c_exp9 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(I, first=True, exp_one_remove=True),
                int_str_converter(J, exp_one_remove=True),
                int_str_converter(K))
    c_exp10 = "x ^{2} %sx %s `=` 0" \
              % (int_str_converter(-(L + C), exp_one_remove=True),
                 int_str_converter(L*C))
    c_exp11 = " ( x %s  )  ( x %s  ) `=` 0" \
              % (int_str_converter(-L),
                 int_str_converter(-C))
    c_exp12 = "x `=` %s" % (int_str_converter(L, first=True))
    josa0 = check_jongsung(C)[2]
    josa1 = check_jongsung(H)[2]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11,
                             c_exp12=c_exp12, josa0=josa0, josa1=josa1)

    return stem, answer, comment


# 3-1-2-514
def factorization312_Stem_439():
    stem = "실수 $$수식$$x$$/수식$$에 대하여 $$수식$$x$$/수식$$의 정수 부분을 $$수식$$[`x`]$$/수식$$로 나타내기로 하자. " \
           "예를 들어 $$수식$$[`1.5`] `=` 1$$/수식$$ 이다. $$수식$${s_exp1}$$/수식$$일 때, 다음 이차방정식의 해를 구하시오.\n" \
           "$$수식$${s_exp2}$$/수식$$\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$이므로\n" \
              "주어진 이차방정식은 $$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$ 또는 $$수식$${c_exp5}$$/수식$$\n" \
              "그런데 $$수식$${c_exp6}$$/수식$$이므로 $$수식$${c_exp7}$$/수식$$\n\n"

    while True:
        A, G = np.random.choice(np.arange(1, 10),
                                size=2,
                                replace=False)
        B = A + 1
        F = A
        E = F * G
        D = E // A
        C = -(A * F + G)
        if (B < (G / A) or (G / A) < A) and E % A == 0 and check_simFrac(A, G):
            break

    s_exp1 = "%s `LEQ` x `%s` %s" % (A, right, B)
    s_exp2 = "[`x`]x ^{2} %sx %s[`x`] `=` 0" \
             % (int_str_converter(C, exp_one_remove=True),
                int_str_converter(D, exp_one_remove=True))

    c_exp1 = "[`x`] `=` %s" % (int_str_converter(A, first=True))
    c_exp2 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(C, exp_one_remove=True),
                int_str_converter(E))
    c_exp3 = " ( x %s  )  ( %sx %s  ) `=` 0" \
             % (int_str_converter(-F),
                int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(-G))
    c_exp4 = "x `=` %s" % (shh_frac(G, A))
    c_exp5 = "x `=` %d" % F
    c_exp6 = s_exp1
    c_exp7 = c_exp5

    ans_int = F

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7)

    return stem, answer, comment


# 3-1-2-515
def factorization312_Stem_440():
    stem = "직선 $$수식$${s_exp1}$$/수식$${josa1} 점 $$수식$$({s_exp2})$$/수식$${josa2} 지나고 제 $$수식$$3$$/수식$$사분면을 지나지 않을 때, " \
           "상수 $$수식$$m$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "직선 $$수식$${c_exp1}$$/수식$${josa1} 점 $$수식$$({c_exp2})$$/수식$${josa2} 지나므로\n" \
              "$$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$${josa2} 대입하면\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$\n" \
              "$$수식$${c_exp8}$$/수식$$\n" \
              "$$수식$${c_exp9}$$/수식$$ 또는 $$수식$${c_exp10}$$/수식$$\n" \
              "이때 직선 $$수식$${c_exp1}$$/수식$${josa1} 제$$수식$$3$$/수식$$사분면을 지나지 않으려면\n" \
              "$$수식$${c_exp11}$$/수식$$이어야 하므로 $$수식$${c_exp12}$$/수식$$\n" \
              "따라서 $$수식$${c_exp13}$$/수식$$\n\n"

    while True:
        A, I, D, F= np.random.choice(np.arange(1, 10) * np.random.choice([1, -1], size=9), size=4, replace=False)
        E = np.random.randint(1, 10)
        N = np.random.randint(2, 10)
        C = -(E - I)
        G = A * C + D
        L = -G - N * I
        K = L * N
        H = A * D
        B = H + F - K

        if abs(B) > 100:
            continue

        if L/I < A and 0 < -A < N and check_simFrac(abs(I), abs(L)) and check_simFrac(abs(C), abs(D)) and 1 < abs(C) < 10 \
                and K == H + F - B and E < I and B > 0 and abs(L) > 0 and C > 0:
            break

    s_exp1 = " ( m %s  )x `+` y `=` %s" % (int_str_converter(A),
                                                    int_str_converter(B, first=True))
    s_exp2 = "%sm %s, `` %sm ^{2} %s" \
             % (int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(E, first=True, exp_one_remove=True),
                int_str_converter(F))

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "x `=`%sm %s" % (int_str_converter(C, first=True, exp_one_remove=True),
                              int_str_converter(D))
    c_exp4 = "y `=` %sm ^{2} %s" % (int_str_converter(E, first=True, exp_one_remove=True),
                                    int_str_converter(F))
    c_exp5 = " ( m %s  )  ( %sm %s  ) %sm ^{2} %s `=` %s" \
             % (int_str_converter(A),
                int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(F),
                int_str_converter(B, first=True))

    c_exp6 = "%s m^{2} %sm %s %sm ^{2} %s `=` %s" \
             % (int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(G, exp_one_remove=True),
                int_str_converter(H),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(F),
                int_str_converter(B, first=True))

    c_exp7 = "%s m^{2} %sm %s `=` 0" \
             % (int_str_converter(I, first=True, exp_one_remove=True),
                int_str_converter(G, exp_one_remove=True),
                int_str_converter(K))
    c_exp8 = " ( %sm %s  )  ( m %s  ) `=` 0" \
             % (int_str_converter(I, first=True, exp_one_remove=True),
                int_str_converter(-L),
                int_str_converter(-N))
    c_exp9 = "m `=` %s {%d} over {%d}" % (frac_sign(I * L), abs(L), abs(I))
    c_exp10 = "m `=` %s" % (int_str_converter(N, first=True))
    c_exp11 = "%s `-` m `%s` 0" % (int_str_converter(-A, first=True), right)
    c_exp12 = "m `%s` %s" % (left, int_str_converter(-A, first=True))
    c_exp13 = "m `=` %s" % (int_str_converter(N, first=True))

    josa1 = check_jongsung(B)[3]
    josa2 = check_jongsung(F)[2]

    ans_int = N

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, josa1=josa1, josa2=josa2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11,
                             c_exp12=c_exp12, c_exp13=c_exp13, josa1=josa1, josa2=josa2)

    return stem, answer, comment


# 3-1-2-516
def factorization312_Stem_441():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오. " \
           "(단, $$수식$${s_exp2}$$/수식$$)\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$이므로\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$ 또는 $$수식$${c_exp6}$$/수식$$\n" \
              "그런데 $$수식$${c_exp7}$$/수식$$이므로 $$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        B, E, F = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)

        C = -(E * F)
        A = -E - F - B
        D = -(E + F)

        if E < 0 < F and 0 < abs(A) < 10 and 0 < abs(D) < 20:
            break

    s_exp1 = "x ^{2} %sx %sa `=` %s" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C, first=True))
    s_exp2 = "a `%s` 0" % right

    c_exp1 = s_exp1
    c_exp2 = "a ^{2} %sa %sa %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(-C))
    c_exp3 = "a ^{2} %sa %s `=` 0" \
             % (int_str_converter(D, exp_one_remove=True),
                int_str_converter(-C))
    c_exp4 = " (a %s  )  (a %s  ) `=` 0" \
             % (int_str_converter(-E),
                int_str_converter(-F))
    c_exp5 = "a `=` %s" % int_str_converter(E, first=True)
    c_exp6 = "a `=` %s" % int_str_converter(F, first=True)
    c_exp7 = s_exp2
    c_exp8 = c_exp5

    ans_int = E

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-517
def factorization312_Stem_442():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오. " \
           "(단, $$수식$${s_exp2}$$/수식$$)\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$$x `=` a$$/수식$$이므로\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$ 또는 $$수식$${c_exp6}$$/수식$$\n" \
              "그런데 $$수식$${c_exp7}$$/수식$$이므로 $$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        B, E, F = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)

        C = -(E * F)
        A = -E - F - B
        D = -(E + F)

        if E < 0 < F and [True] * 3 == [2 < abs(i) < 100 for i in [C, A, D]]:
            break

    s_exp1 = "x ^{2} %sx %sa `=` %s" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C, first=True))
    s_exp2 = "a `%s` 0" % left

    c_exp1 = s_exp1
    c_exp2 = "a ^{2} %sa %sa %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(-C))
    c_exp3 = "a ^{2} %sa %s `=` 0" \
             % (int_str_converter(D, exp_one_remove=True),
                int_str_converter(-C))
    c_exp4 = " (a %s  )  (a %s  ) `=` 0" \
             % (int_str_converter(-E),
                int_str_converter(-F))
    c_exp5 = "a `=` %s" % int_str_converter(E, first=True)
    c_exp6 = "a `=` %s" % int_str_converter(F, first=True)
    c_exp7 = s_exp2
    c_exp8 = c_exp6

    ans_int = F

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-518
def factorization312_Stem_443():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값과 " \
           "다른 한 근을 구하면?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$\n" \
              "따라서 이차방정식은 $$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$ 또는 $$수식$${c_exp8}$$/수식$$\n" \
              "따라서 상수 $$수식$$a$$/수식$$의 값과 다른 한 근은\n" \
              "$$수식$${c_exp9}$$/수식$$, $$수식$${c_exp10}$$/수식$$\n\n"


    while True:
        B, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=2, replace=False)
        C = - (D + B)
        A = D * B

        if abs(C) != abs(D) and abs(C) > 0:
            break

    s_exp1 = "x ^{2} `+` ax %s `=` 0" % int_str_converter(A)
    s_exp2 = "x `=` %s" % int_str_converter(B, first=True)

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s ^{2} %sa %s `=` 0" \
             % (round_brackets_int(B),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(A))
    c_exp4 = "a `=` %s" % int_str_converter(C, first=True)
    c_exp5 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(C, exp_one_remove=True),
                int_str_converter(A))
    c_exp6 = " (x %s  )  (x %s  ) `=` 0" \
             % (int_str_converter(-D),
                int_str_converter(-B))
    c_exp7 = "x `=` %s" % int_str_converter(D, first=True)
    c_exp8 = "x `=` %s" % int_str_converter(B, first=True)
    c_exp9 = "a `=` %s" % int_str_converter(C, first=True)
    c_exp10 = "x `=` %s" % int_str_converter(D, first=True)

    t1 = "a `=` %s$$/수식$$, $$수식$$x `=` %s" % (int_str_converter(-C, first=True),
                                                int_str_converter(-D, first=True))
    t2 = "a `=` %s$$/수식$$, $$수식$$x `=` %s" % (int_str_converter(C, first=True),
                                                int_str_converter(D, first=True))
    t3 = "a `=` %s$$/수식$$, $$수식$$x `=` %s" % (int_str_converter(C, first=True),
                                                int_str_converter(-D, first=True))
    t4 = "a `=` %s$$/수식$$, $$수식$$x `=` %s" % (int_str_converter(-C, first=True),
                                                int_str_converter(D, first=True))
    t5 = "a `=` %s$$/수식$$, $$수식$$x `=` %s" % (int_str_converter(-D, first=True),
                                                int_str_converter(-C, first=True))

    a_list = [t1, t2, t3, t4, t5]
    np.random.shuffle(a_list)
    a1, a2, a3, a4, a5 = a_list
    ans_num = multiple_choice_nums[a_list.index(t2)]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)

    return stem, answer, comment


# 3-1-2-519
def factorization312_Stem_444():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$일 때, " \
           "모든 상수 $$수식$$a$$/수식$$의 값의 합을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$ 또는 $$수식$${c_exp7}$$/수식$$\n" \
              "따라서 모든 상수 $$수식$$a$$/수식$$의 값의 합은\n" \
              "$$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        A, D, n, G = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=4, replace=False)
        F = D * n
        E = F * G
        B = E - (A * D) - (D ** 2)
        C = - (D * G + F)
        G2 = n
        H = n + G
        if 1 < D and [True] * 6 == [0 < abs(i) < 100 for i in [F, E, B, C, G2, H]]:
            break

    s_exp1 = "x ^{2} `+`  (a ^{2} %s  )x %s %sa `=` 0" \
             % (int_str_converter(A),
                int_str_converter(B),
                int_str_converter(C, exp_one_remove=True))

    s_exp2 = "x `=` %s" % int_str_converter(D, first=True)

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s ^{2} %s  (a ^{2} %s  ) %s %sa `=` 0" \
             % (round_brackets_int(D),
                int_str_converter(D, exp_one_remove=True),
                int_str_converter(A),
                int_str_converter(B),
                int_str_converter(C, exp_one_remove=True))
    c_exp4 = "%sa ^{2} %sa %s `=` 0" \
             % (int_str_converter(D, first=True, exp_one_remove=True),
                int_str_converter(C, exp_one_remove=True),
                int_str_converter(E))
    c_exp5 = " (a %s  )  (a %s  ) `=` 0" \
             % (int_str_converter(-G2),
                int_str_converter(-G))
    c_exp6 = "a `=` %s" % int_str_converter(G2, first=True)
    c_exp7 = "a `=` %s" % int_str_converter(G, first=True)
    c_exp8 = "%s `+` %s `=` %s" \
             % (int_str_converter(G2, first=True),
                round_brackets_int(G),
                int_str_converter(H, first=True))

    ans_int = H

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-520
def factorization312_Stem_445():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$일 때, 다른 한 근을 구하시오. " \
           "(단, $$수식$$a$$/수식$$는 상수)\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$\n" \
              "그러므로 이차방정식은 $$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$\n" \
              "$$수식$${c_exp8}$$/수식$$ 또는 $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 나머지 한 근은 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        A, B, K = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        H = np.random.randint(1, 10)

        D = -(A * H + K)
        C = D * K - (B * H)
        I = - (D + K)
        J = D * K
        E = A * D
        G = E + B
        F = - (G * H)

        if D != K and [True] * 7 == [0 < abs(i) < 50 for i in [D, C, I, J, E, F, G]]:
            break

    s_exp1 = "x ^{2} %sax %sa %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C))
    s_exp2 = "x `=` %s" % int_str_converter(D, first=True)

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s ^{2} %sa %sa %s `=` 0" \
             % (round_brackets_int(D),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C))
    c_exp4 = "%s %sa `=` 0" \
             % (int_str_converter(F, first=True),
                int_str_converter(G, exp_one_remove=True))
    c_exp5 = "a `=` %s" % int_str_converter(H, first=True)
    c_exp6 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(I, exp_one_remove=True),
                int_str_converter(J))
    c_exp7 = " (x %s  )  (x %s  ) `=` 0" \
             % (int_str_converter(-D),
                int_str_converter(-K))
    c_exp8 = "x `=` %s" % int_str_converter(D, first=True)
    c_exp9 = "x `=` %s" % int_str_converter(K, first=True)
    c_exp10 = c_exp9

    ans_int = K

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)

    return stem, answer, comment


# 3-1-2-521
def factorization312_Stem_446():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$이고 다른 한 근을 $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$$a `+` b$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$\n" \
              "그러므로 이차방정식 $$수식$${c_exp7}$$/수식$$에서\n" \
              "$$수식$${c_exp8}$$/수식$$\n" \
              "$$수식$${c_exp9}$$/수식$$ 또는 $$수식$${c_exp10}$$/수식$$\n" \
              "따라서 나머지 한 근 $$수식$${c_exp11}$$/수식$$이므로\n" \
              "$$수식$${c_exp12}$$/수식$$\n\n"

    while True:
        A, C, H = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        F = - (C + H)
        G = C * H
        B = G - (A * F)
        D = A + C
        E = - (D * F)
        I = F + H

        if A != -C and [True] * 6 == [0 < abs(i) < 100 for i in [B, D, E, F, G, I]] and abs(C) != 1:
            break

    s_exp1 = "x ^{2} `+` ax %sa %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = "x `=` %s" % int_str_converter(C, first=True)

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s ^{2} `+` %sa %sa %s `=` 0" \
             % (round_brackets_int(C),
                round_brackets_int(C),
                int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    c_exp4 = "%s %sa %sa %s `=` 0" \
             % (int_str_converter(C ** 2, first=True),
                int_str_converter(C, exp_one_remove=True),
                int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    c_exp5 = "%sa %s `=` 0" \
             % (int_str_converter(D, first=True, exp_one_remove=True),
                int_str_converter(E))
    c_exp6 = "a `=` %s" % int_str_converter(F, first=True)
    c_exp7 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(F, exp_one_remove=True),
                int_str_converter(G))
    c_exp8 = " (x %s  )  (x %s  ) `=` 0" \
             % (int_str_converter(-C),
                int_str_converter(-H))
    c_exp9 = "x `=` %s" % int_str_converter(C, first=True)
    c_exp10 = "x `=` %s" % int_str_converter(H, first=True)
    c_exp11 = "b `=` %s" % int_str_converter(H, first=True)
    c_exp12 = "a `+` b `=` %s `+` %s `=` %s" \
              % (int_str_converter(F, first=True),
                 round_brackets_int(H),
                 int_str_converter(I, first=True))

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(I)
        elif i < ans_index:
            answers.append(I - abs(ans_index - i))
        else:
            answers.append(I + abs(ans_index - i))

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11,
                             c_exp12=c_exp12)

    return stem, answer, comment


# 3-1-2-523
def factorization312_Stem_447():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$$k$$/수식$$일 때, 상수 $$수식$$k$$/수식$$의 값은 " \
           "(단, $$수식$${s_exp2}$$/수식$$)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${c_exp1}$$/수식$$의 한 근이 $$수식$$k$$/수식$$이므로\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$, $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$ 또는 $$수식$${c_exp6}$$/수식$$\n" \
              "그런데 $$수식$${c_exp7}$$/수식$$이므로 $$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        A, D, H, I, J = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=5, replace=False)
        F = - (H + I)
        E = H * I
        C = 1 - A
        B = -(H + I + D)


        if B + D == F and [True] * 4 == [0 < abs(i) < 100 for i in [F, E, C, B]] and H < J < I and A > 0:
            break

    s_exp1 = "%s x^{2} %sx %skx %sk %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C, exp_one_remove=True),
                int_str_converter(D, exp_one_remove=True),
                int_str_converter(E))

    s_exp2 = "k `%s` %s" % (left, int_str_converter(J, first=True))

    c_exp1 = s_exp1
    c_exp2 = "%s k^{2} %sk %sk ^{2} %sk %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C, exp_one_remove=True),
                int_str_converter(D, exp_one_remove=True),
                int_str_converter(E))
    c_exp3 = "k ^{2} %sk %s `=` 0" \
             % (int_str_converter(F, exp_one_remove=True),
                int_str_converter(E))
    c_exp4 = " ( k %s  )  ( k %s  ) `=` 0" \
             % (int_str_converter(-H),
                int_str_converter(-I))
    c_exp5 = "k `=` %s" % int_str_converter(H, first=True)
    c_exp6 = "k `=` %s" % int_str_converter(I, first=True)
    c_exp7 = s_exp2
    c_exp8 = c_exp6

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(I)
        elif i < ans_index:
            answers.append(I - abs(ans_index - i))
        else:
            answers.append(I + abs(ans_index - i))

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-523
def factorization312_Stem_448():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 해가 $$수식$${s_exp2}$$/수식$$ 또는 $$수식$$x `=` b$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$a `-` b$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$의 한 해가 $$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$,\n" \
              "$$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp1}$$/수식$$, $$수식$${c_exp6}$$/수식$${josa1} 대입하면\n" \
              "$$수식$${c_exp7}$$/수식$$\n" \
              "$$수식$${c_exp8}$$/수식$$\n" \
              "$$수식$${c_exp9}$$/수식$$ 또는 $$수식$${c_exp10}$$/수식$$이므로 $$수식$${c_exp11}$$/수식$$\n" \
              "따라서 $$수식$${c_exp12}$$/수식$$\n\n"

    while True:
        A = np.random.randint(2, 10)
        E, F = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=2, replace=False)

        if abs(F) == 1:
            continue

        C, G = np.random.choice(["`%s` {%d} over {%d}" % (frac_sign(A * E), abs(E), abs(A)), F], size=2, replace=False)
        B = E * F
        D = -(A * F + E)

        if "{" in G:
            t1 = (A * D) - E
            t2 = A
            gec = get_gcd(abs(t1), abs(t2))

            s = '-' if t1 * t2 < 0 else ''
            n = abs(t1) // gec
            d = abs(t2) // gec
            if n == d:
                H = '%s1' % (s)
            elif d == 1:
                H = '%s%s' % (s, n)
            else:
                H = '%s {%d} over {%d}' % (s, n, d)

        else:
            G = int(G)
            H = D - G


        if check_simFrac(abs(A), abs(E)) and 0 < abs(D) < 100 and 0 < abs(B) < 100 and 0 < abs((A * D) - E) < 100:
            break

    s_exp1 = "%sx ^{2} `+` ax %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B))

    s_exp2 = "x `=` %s" % C

    c_exp1 = s_exp1
    c_exp2 = C

    if "{" in C:
        G = int(G)
        c_exp3 = "%s ` TIMES `  ( %s {%d} over {%d}  ) ^{2} `%s` {%d} over {%d}a %s `=` 0" \
                 % (int_str_converter(A, first=True),
                    frac_sign(E * A),
                    abs(E),
                    abs(A),
                    sign(E * A),
                    abs(E),
                    abs(A),
                    int_str_converter(B))

        c_exp4 = "{%d} over {%d} `%s` {%d} over {%d}a %s `=` 0" \
                 % (E ** 2,
                    A,
                    sign(E * A),
                    abs(E),
                    abs(A),
                    int_str_converter(B))

        c_exp11 = "b `=` %s" % int_str_converter(G, first=True)
        c_exp12 = "a `-` b `=` %s `-` %s `=` %s" \
                  % (int_str_converter(D, first=True),
                     round_brackets_int(G),
                     int_str_converter(H, first=True))
    else:
        C = int(C)

        c_exp3 = "%s ` TIMES ` %s ^{2} %sa %s `=` 0" \
                 % (int_str_converter(A, first=True),
                    round_brackets_int(C),
                    int_str_converter(C, exp_one_remove=True),
                    int_str_converter(B))

        c_exp4 = "%s %sa %s `=` 0" \
                 % (int_str_converter(A * C ** 2, first=True),
                    int_str_converter(C, exp_one_remove=True),
                    int_str_converter(B))

        c_exp11 = "b `=` %s" % shh_frac(E, A)
        c_exp12 = "a `-` b `=` %s `-` %s `=` %s" \
                  % (int_str_converter(D, first=True),
                     round_brackets(E, A),
                     H)

    c_exp5 = "a `=` %s" % int_str_converter(D, first=True)
    c_exp6 = c_exp5
    c_exp7 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(D, exp_one_remove=True),
                int_str_converter(B))
    c_exp8 = " ( %sx %s  )  ( x %s  ) `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(-E),
                int_str_converter(-F))
    c_exp9 = "x `=` %s {%d} over {%d}" \
             % (frac_sign(E * A),
                abs(E),
                abs(A))

    c_exp10 = "x `=` %s" % int_str_converter(F, first=True)

    josa1 = check_jongsung(D)[2]

    ans_int = H


    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11,
                             c_exp12=c_exp12, josa1=josa1)

    return stem, answer, comment


# 3-1-2-524
def factorization312_Stem_449():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$, $$수식$${s_exp2}$$/수식$$이 같은 해를 가질 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}"
    comment = "(해설)\n" \
              "두 이차방정식이 같은 해를 가지므로\n" \
              "$$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp2}$$/수식$${josa1} 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp4}$$/수식$${josa2} 대입하면\n" \
              "$$수식$${c_exp5}$$/수식$$, $$수식$${c_exp6}$$/수식$$에서\n" \
              "$$수식$${c_exp7}$$/수식$$\n" \
              "따라서 $$수식$${c_exp8}$$/수식$$\n\n"


    while True:
        A, C, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        E = A * C
        G = - (A * D + C)
        B = G * C
        F = A * D
        H = D * G

        if G != C and [True] * 6 == [0 < abs(i) < 100 for i in [G, E, F, D, B, H]] and 0 < C:
            break

    s_exp1 = "x ^{2} %sax %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = " (x %s  ) (x `-` b  ) `=` 0" \
             % (int_str_converter(-C))

    c_exp1 = s_exp1
    c_exp2 = "x `=` %s" % int_str_converter(C, first=True)
    c_exp3 = "%s %sa %s `=` 0" \
             % (int_str_converter(C ** 2, first=True),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(B))
    c_exp4 = "a `=` %s" % int_str_converter(D, first=True)
    c_exp5 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(F, exp_one_remove=True),
                int_str_converter(B))
    c_exp6 = " (x %s  ) (x %s  ) `=` 0" \
             % (int_str_converter(-G),
                int_str_converter(-C))
    c_exp7 = "b `=` %s" % int_str_converter(G, first=True)
    c_exp8 = "ab `=` %s ` TIMES ` %s `=` %s" \
             % (round_brackets_int(D),
                round_brackets_int(G),
                int_str_converter(H, first=True))

    josa1 = check_jongsung(C)[2]
    josa2 = check_jongsung(D)[2]

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(H)
        elif i < ans_index:
            answers.append(H - abs(ans_index - i))
        else:
            answers.append(H + abs(ans_index - i))

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, josa1=josa1, josa2=josa2)

    return stem, answer, comment


# 3-1-2-525
def factorization312_Stem_450():
    stem = "두 이차방정식 $$수식$${s_exp1}$$/수식$$과 $$수식$${s_exp2}$$/수식$$의 음수인 근이 서로 같을 때, " \
           "상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$에서 $$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$ 또는 $$수식$${c_exp4}$$/수식$$\n" \
              "이때 음수인 근이 서로 같으므로\n" \
              "$$수식$${c_exp5}$$/수식$$에 $$수식$${c_exp4}$$/수식$${josa1} 대입하면\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "따라서 $$수식$${c_exp7}$$/수식$$\n\n"


    while True:
        D, E, F = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        C = - ((E ** 2) + (E * F))
        A = -(D + E)
        B = D * E

        if [True] * 2 == [0 < abs(i) < 100 for i in [A, B]] and 0 < abs(C) < 30 and E < 0 and D > 0:
            break

    s_exp1 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = "x ^{2} `+` ax %s `=` 0" \
             % (int_str_converter(C))

    c_exp1 = s_exp1
    c_exp2 = " ( x %s  )  ( x %s  ) `=` 0" \
             % (int_str_converter(-D),
                int_str_converter(-E))
    c_exp3 = "x `=` %s" % int_str_converter(D, first=True)
    c_exp4 = "x `=` %s" % int_str_converter(E, first=True)
    c_exp5 = s_exp2
    c_exp6 = "%s %sa %s `=` 0" \
             % (int_str_converter(E ** 2, first=True),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(C))
    c_exp7 = "a `=` %s" % int_str_converter(F, first=True)

    josa1 = check_jongsung(E)[2]

    ans_int = F

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, josa1=josa1)

    return stem, answer, comment


# 3-1-2-526
def factorization312_Stem_451():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 일차항의 계수와 상수항을 바꾸어 놓고 이차방정식을 풀었더니 " \
           "한 근이 $$수식$${s_exp2}$$/수식$${josa1} 처음 이차방정식의 해를 구한다면? (단, $$수식$$a$$/수식$$는 상수)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}"
    comment = "(해설)\n" \
              "주어진 이차방정식의 일차항의 계수와 상수항을 바꾸면 $$수식$${c_exp1}$$/수식$$\n" \
              "$$수식$${c_exp2}$$/수식$${josa2} $$수식$${c_exp3}$$/수식$$의 근이므로\n" \
              "$$수식$${c_exp4}$$/수식$$에서 $$수식$${c_exp5}$$/수식$$\n" \
              "처음 이차방정식 $$수식$${c_exp6}$$/수식$$에 대입하면\n" \
              "$$수식$${c_exp7}$$/수식$$, $$수식$${c_exp8}$$/수식$$\n" \
              "따라서 $$수식$${c_exp9}$$/수식$$ 또는 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        A, C, F, J = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=4, replace=False)
        D = np.random.randint(-20, 20)
        E = C * D
        B = - ((D ** 2) + (E * F) + (A * F))
        I = - B - (A*F + J)
        G = - (I + J)
        H = I * J
        E = C * D

        if [True] * 4 == [0 < abs(i) < 100 for i in [G, H, B, E]] and D + E != 0 and C * F == H \
            and I != J and A > 0 and abs(D) != 0:
            break

    while True:
        K, L = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=2, replace=False)

        if I != L and I != K and J != L and J != K:
            break

    s_exp1 = "x ^{2} `+`  (%sa %s  )x %sa `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B),
                int_str_converter(C, exp_one_remove=True))
    s_exp2 = D

    c_exp1 = "x ^{2} %sax %sa %s `=` 0" \
             % (int_str_converter(C, exp_one_remove=True),
                int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    c_exp2 = "x `=` %s" % int_str_converter(D, first=True)
    c_exp3 = c_exp1
    c_exp4 = "%s %sa %sa %s `=` 0" \
             % (int_str_converter(D ** 2, first=True),
                int_str_converter(E, exp_one_remove=True),
                int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    c_exp5 = "a `=` %s" % int_str_converter(F, first=True)
    c_exp6 = s_exp1
    c_exp7 = "x ^{2} %sx %s `= 0" \
             % (int_str_converter(G, exp_one_remove=True),
                int_str_converter(H))
    c_exp8 = " ( x %s  )  ( x %s  ) `=` 0" \
             % (int_str_converter(-I),
                int_str_converter(-J))
    c_exp9 = "x `=` %s" % int_str_converter(I, first=True)
    c_exp10 = "x `=` %s" % int_str_converter(J, first=True)

    t1 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" \
         % (int_str_converter(I, first=True),
            int_str_converter(J, first=True))
    t2 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" \
         % (int_str_converter(K, first=True),
            int_str_converter(L, first=True))
    t3 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" \
         % (int_str_converter(I, first=True),
            int_str_converter(K, first=True))
    t4 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" \
         % (int_str_converter(I, first=True),
            int_str_converter(L, first=True))
    t5 = "x `=` %s$$/수식$$ 또는 $$수식$$x `=` %s" \
         % (int_str_converter(J, first=True),
            int_str_converter(L, first=True))

    a_list = [t1, t2, t3, t4, t5]
    np.random.shuffle(a_list)
    a1, a2, a3, a4, a5 = a_list
    ans_num = multiple_choice_nums[a_list.index(t1)]

    josa1 = check_jongsung(D)[5]
    josa2 = check_jongsung(D)[3]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5, josa1=josa1)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, josa2=josa2)

    return stem, answer, comment


# 3-1-2-527
def factorization312_Stem_452():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근이 $$수식$${s_exp2}$$/수식$$일 때, 상수 $$수식$$a$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "이차방정식 $$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp2}$$/수식$${josa1} 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$, $$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$ 또는 $$수식$${c_exp8}$$/수식$$\n" \
              "주어진 방정식은 $$수식$$x$$/수식$$에 대한 이차방정식이므로 이차항의 계수는 $$수식$$0$$/수식$$이 아니어야 한다.\n" \
              "즉, $$수식$${c_exp9}$$/수식$$이므로 $$수식$${c_exp10}$$/수식$$\n" \
              "따라서 $$수식$${c_exp11}$$/수식$$\n\n"

    while True:
        A, B, C, E, F, L, M = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9),
                                               size=7,
                                               replace=False)

        J = A - L
        K = -(A * L)
        G = F + E
        if G < 0:
            continue

        H = J * G
        I = K * G
        D = I - (((F ** 2) * A) + (F * C))

        if [True] * 6 == [0 < abs(i) < 100 for i in [D, G, H, I, J, K]] and -A != L and -A != M \
                and H == (F ** 2) + (F * B):
            break

    s_exp1 = " ( a %s  )x ^{2} `+` (a ^{2} %sa %s  )x %s %sa ^{2} `=` 0" \
             % (int_str_converter(A),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C),
                int_str_converter(D),
                int_str_converter(E, exp_one_remove=True))

    s_exp2 = "x `=` %s" % int_str_converter(F, first=True)

    c_exp1 = s_exp1
    c_exp2 = s_exp2
    c_exp3 = "%s  (a %s  ) %s  (a ^{2} %sa %s  ) %s %sa ^{2} `=` 0" \
             % (int_str_converter(F ** 2, first=True, exp_one_remove=True),
                int_str_converter(A),
                int_str_converter(F, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C),
                int_str_converter(D),
                int_str_converter(E, exp_one_remove=True))
    c_exp4 = "%sa ^{2} %sa %s `=` 0" \
             % (int_str_converter(G, first=True, exp_one_remove=True),
                int_str_converter(H, exp_one_remove=True),
                int_str_converter(I))
    c_exp5 = "a ^{2} %sa %s `=` 0" \
             % (int_str_converter(J, exp_one_remove=True),
                int_str_converter(K))
    c_exp6 = " (a %s  )  (a %s  ) `=` 0" \
             % (int_str_converter(A),
                int_str_converter(- L))
    c_exp7 = "a `=` %s" % int_str_converter(-A, first=True)
    c_exp8 = "a `=` %s" % int_str_converter(L, first=True)
    c_exp9 = "a %s `!=` 0" % int_str_converter(A)
    c_exp10 = "a `!=` %s" % int_str_converter(-A, first=True)
    c_exp11 = c_exp8

    t1 = "%s" % int_str_converter(-A, first=True)
    t2 = "%s" % int_str_converter(A, first=True)
    t3 = "%s" % int_str_converter(L, first=True)
    t4 = "%s" % int_str_converter(M, first=True)
    t5 = "%s$$/수식$$ 또는 $$수식$$%s" % (int_str_converter(-A, first=True),
                       int_str_converter(L, first=True))

    a_list = [t1, t2, t3, t4, t5]
    np.random.shuffle(a_list)
    a1, a2, a3, a4, a5 = a_list
    ans_num = multiple_choice_nums[a_list.index(t3)]

    josa1 = check_jongsung(F)[2]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, c_exp11=c_exp11, josa1=josa1)

    return stem, answer, comment


# 3-1-2-529
def factorization312_Stem_453():
    stem = "$$수식$$x$$/수식$$에 대한 이차방정식 $$수식$${s_exp1}$$/수식$$의 한 근 $$수식$$k$$/수식$$에 대하여 " \
           "$$수식$${s_exp2}$$/수식$$가 성립한다. 이때 상수 $$수식$$a$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "이차방정식 $$수식$${c_exp1}$$/수식$$에 $$수식$${c_exp2}$$/수식$$를 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$이므로 양변을 $$수식$$k$$/수식$$로 나누면\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$\n" \
              "이때 $$수식$${c_exp7}$$/수식$$이므로\n" \
              "$$수식$${c_exp8}$$/수식$$, $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        A = np.random.randint(1, 10)
        B, C, D = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        if -B * (D + C) == A * D and A != -B and abs(A) != abs(D) and abs(B) != abs(D) \
                and check_simFrac(abs(A), abs(B)):
            break

    s_exp1 = "%sx ^{2} %s  (a %s  )x %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C),
                int_str_converter(A))
    s_exp2 = "k `+` {1} over {k} `=` a"

    c_exp1 = s_exp1
    c_exp2 = "x `=` k"
    c_exp3 = "%sk ^{2} %s  (a %s  )k %s `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C),
                int_str_converter(A))
    c_exp4 = "k `!=` 0"
    c_exp5 = "%sk %s  (a %s  ) `%s` {%d} over {k} `=` 0" \
             % (int_str_converter(A, first=True, exp_one_remove=True),
                int_str_converter(B, exp_one_remove=True),
                int_str_converter(C),
                sign(A),
                abs(A))

    if abs(B) == 1:
        c_exp6 = "k `+` {1} over {k} `=` %s { a %s } over {%d}" \
                 % (frac_sign(A * B * (-1)),
                    int_str_converter(C),
                    abs(A))
        c_exp7 = s_exp2
        c_exp8 = "%s { a %s } over {%d} `=` a" \
                 % (frac_sign(A * B * (-1)),
                    int_str_converter(C),
                    abs(A))

        if -B > 0:
            c_exp9 = "a %s `=` %sa" \
                     % (int_str_converter(C),
                        int_str_converter(A, first=True, exp_one_remove=True))
        else:
            c_exp9 = "%s  ( a %s ) `=` %sa" \
                     % (int_str_converter(-B, first=True, exp_one_remove=True),
                        int_str_converter(C),
                        int_str_converter(A, first=True, exp_one_remove=True))

    else:
        c_exp6 = "k `+` {1} over {k} `=` %s {%s  ( a %s )} over {%d}" \
                 % (frac_sign(A * B * (-1)),
                    int_str_converter(abs(B), first=True, exp_one_remove=True),
                    int_str_converter(C),
                    abs(A))
        c_exp7 = s_exp2
        c_exp8 = "%s {%s  ( a %s )} over {%d} `=` a" \
                 % (frac_sign(A * B * (-1)),
                    int_str_converter(abs(B), first=True, exp_one_remove=True),
                    int_str_converter(C),
                    abs(A))
        c_exp9 = "%s  ( a %s ) `=` %sa" \
                 % (int_str_converter(-B, first=True, exp_one_remove=True),
                    int_str_converter(C),
                    int_str_converter(A, first=True, exp_one_remove=True))
    c_exp10 = "a `=` %s" % int_str_converter(D, first=True)

    a_list = [D, -D, A, B, -A]
    np.random.shuffle(a_list)
    a_list = sorted(a_list)
    a1, a2, a3, a4, a5 = a_list
    ans_num = multiple_choice_nums[a_list.index(D)]


    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)

    return stem, answer, comment


# 3-1-2-531
def factorization312_Stem_454():
    stem = "두 이차방정식 $$수식$${s_exp1}$$/수식$$과 $$수식$${s_exp2}$$/수식$$의 공통이 아닌 두 근의 곱을 구하시오.\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "$$수식$${c_exp1}$$/수식$$에서 $$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$ 또는 $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$에서 $$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$ 또는 $$수식$${c_exp4}$$/수식$$\n" \
              "따라서 공통이 아닌 두 근의 곱은\n" \
              "$$수식$${c_exp8}$$/수식$$\n\n"

    while True:
        C = np.random.randint(1, 10)
        F, G, H = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        A = -(F + G)
        B = F * G
        D = -(C * G + H)
        E = H * G
        I = (F // C) * H

        if abs(F) == abs(C) and check_simFrac(abs(C), abs(H)) \
                and [True] * 5 == [0 < abs(i) < 100 for i in [A, B, D, E, I]]:
            break

    s_exp1 = "x ^{2} %sx %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = "%sx ^{2} %sx %s `=` 0" \
             % (int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(D, exp_one_remove=True),
                int_str_converter(E))

    c_exp1 = s_exp1
    c_exp2 = " ( x %s  )  ( x %s  ) `=` 0" \
             % (int_str_converter(-F),
                int_str_converter(-G))
    c_exp3 = "x `=` %s" % int_str_converter(F, first=True)
    c_exp4 = "x `=` %s" % int_str_converter(G, first=True)
    c_exp5 = s_exp2
    c_exp6 = " ( %sx %s  )  ( x %s  ) `=` 0" \
             % (int_str_converter(C, first=True, exp_one_remove=True),
                int_str_converter(-H),
                int_str_converter(-G))
    c_exp7 = "x `=` %s" \
             % (shh_frac(H, C))
    c_exp8 = "%s ` TIMES ` %s `=` %s" \
             % (round_brackets_int(F),
                round_brackets(H, C),
                int_str_converter(I, first=True))

    ans_int = I

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8)

    return stem, answer, comment


# 3-1-2-532
def factorization312_Stem_455():
    stem = "두 이차방정식 $$수식$${s_exp1}$$/수식$$, $$수식$${s_exp2}$$/수식$$의 공통인 근이 $$수식$${s_exp3}$$/수식$$일 때, " \
           "$$수식$$a$$/수식$$의 값을 구하시오. (단, $$수식$$a$$/수식$$, $$수식$$b$$/수식$$는 상수)\n"
    answer = "(답) : $$수식$${ans_int}$$/수식$$\n"
    comment = "(해설)\n" \
              "두 이차방정식의 공통인 근이 $$수식$${c_exp1}$$/수식$$이므로 $$수식$${c_exp2}$$/수식$${josa1} 각각 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$에서 $$수식$${c_exp6}$$/수식$$\n" \
              "$$수식$${c_exp7}$$/수식$$이므로 $$수식$${c_exp8}$$/수식$$\n\n"



    while True:
        A, B, C = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9), size=3, replace=False)
        D = A * C
        F = C * B
        E = -(C**2 + D)
        G = -(C**2 + F)
        H = E // G

        if E % G == 0 and [True] * 5 == [0 < abs(i) < 30 for i in [D, F, E, G, H]]:
            break

    s_exp1 = "x ^{2} %sx `+` ab `=` 0" % int_str_converter(A, exp_one_remove=True)
    s_exp2 = "x ^{2} %sx `+` b `=` 0" % int_str_converter(B, exp_one_remove=True)
    s_exp3 = C

    c_exp1 = C
    c_exp2 = "x `=` %s" % int_str_converter(C, first=True)
    c_exp3 = "%s %s `+` ab `=` 0" \
             % (int_str_converter(C ** 2, first=True),
                int_str_converter(D))
    c_exp4 = "ab `=` %s" % int_str_converter(E, first=True)
    c_exp5 = "%s %s `+` b `=` 0" \
             % (int_str_converter(C ** 2, first=True),
                int_str_converter(F))
    c_exp6 = "b `=` %s" % int_str_converter(G, first=True)
    c_exp7 = "ab `=` %sa `=` %s" \
             % (int_str_converter(G, first=True, exp_one_remove=True),
                int_str_converter(E, first=True))
    c_exp8 = "a `=` %s" % int_str_converter(H, first=True)

    ans_int = H
    josa1 = check_jongsung(C)[2]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3)
    answer = answer.format(ans_int=ans_int)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, josa1=josa1)

    return stem, answer, comment


# 3-1-2-533
def factorization312_Stem_456():
    stem = "두 이차방정식 $$수식$${s_exp1}$$/수식$$, $$수식$${s_exp2}$$/수식$$의 공통인 근이 $$수식$${s_exp3}$$/수식$$일 때, " \
           "상수 $$수식$$a$$/수식$$, $$수식$$b$$/수식$$의 차 $$수식$$a `-` b$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "두 이차방정식의 공통인 근이 $$수식$${c_exp1}$$/수식$$이므로 $$수식$${c_exp2}$$/수식$${josa1} 각각 대입하면\n" \
              "$$수식$${c_exp3}$$/수식$$에서 $$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$이므로 $$수식$${c_exp7}$$/수식$$\n" \
              "따라서 $$수식$${c_exp8}$$/수식$$"

    while True:
        A, C, D, E, F, H, K = np.random.choice(np.arange(1, 10) * np.random.choice([-1, 1], size=9),
                                               size=7,
                                               replace=False)

        G = A * F
        B = - ((F ** 2) + (G * H))
        I = C * F
        J = - ((F ** 2) + (I * K) + (E * K))
        L = H - K

        if E != -I and [True] * 5 == [0 < abs(i) < 100 for i in [G, B, I, J, L]] and J == I * D \
                and abs(L) != abs(H) and abs(L) != abs(K) and abs(K) != abs(H):
            break

    s_exp1 = "x ^{2} %sax %s `=` 0" \
             % (int_str_converter(A, exp_one_remove=True),
                int_str_converter(B))
    s_exp2 = "x ^{2} %s  (b %s  )x %sb `=` 0" \
             % (int_str_converter(C, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(E, exp_one_remove=True))

    s_exp3 = F

    c_exp1 = F
    c_exp2 = "x `=` %s" % int_str_converter(F, first=True)
    c_exp3 = "%s %sa %s `=` 0" \
             % (int_str_converter(F ** 2, first=True),
                int_str_converter(G, exp_one_remove=True),
                int_str_converter(B))
    c_exp4 = "a `=` %s" % int_str_converter(H, first=True)
    c_exp5 = "%s %s  ( b %s  ) %sb `=` 0" \
             % (int_str_converter(F ** 2, first=True),
                int_str_converter(I, exp_one_remove=True),
                int_str_converter(D),
                int_str_converter(E, exp_one_remove=True))
    c_exp6 = "%s %sb %s %sb" \
             % (int_str_converter(F ** 2, first=True),
                int_str_converter(I, exp_one_remove=True),
                int_str_converter(J),
                int_str_converter(E, exp_one_remove=True))
    c_exp7 = "b `=` %s" % int_str_converter(K, first=True)
    c_exp8 = "a `-` b `=` %s `-` %s `=` %s" \
             % (int_str_converter(H, first=True),
                round_brackets_int(K),
                int_str_converter(L, first=True))


    a_list = [L, -L, H, K, -H]
    np.random.shuffle(a_list)
    a_list = sorted(a_list)
    a1, a2, a3, a4, a5 = a_list
    ans_num = multiple_choice_nums[a_list.index(L)]

    josa1 = check_jongsung(F)[2]


    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, josa1=josa1)

    return stem, answer, comment

def factorization312_Stem_457():
    stem = "이차방정식$$수식$$x^2 ` {sa}{A}x `  {B} ` = ` 0 $$/수식$$     의 두 근 중 음수인 근이 이차방정식 "\
            "$$수식$$x^2 ` + ` {C}ax ` + ` a `  {D} ` = ` 0$$/수식$$      의 근 일때, 상수 a의 값을 구하시오.\n"

    answer = "(답): $$수식$${H}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 ` {sa}{A}x  `  ` {B} ` = ` 0$$/수식$$     에서\n"\
              "$$수식$$ ( x ` - ` {E}  )  ( x ` + `  {F} ) ` = ` 0$$/수식$$\n"\
              "$$수식$$x ` = ` {E}$$/수식$$  또는 $$수식$$x ` = ` {f}$$/수식$$\n"\
              "이때 $$수식$$x` = ` {f}$$/수식$$  가 이차방정식 $$수식$$x^2 ` + ` {C}ax ` + ` a `  {D} ` = `0$$/수식$$"\
              "      의 근이므로\n"\
              "$$수식$${FF}` - ` {G}a ` + ` a  `{D} ` = ` 0$$/수식$$      에서 $$수식$$a ` = ` {H}$$/수식$$\n\n"

    while True:
        C = np.random.randint(2, 10)
        E = np.random.randint(1, 10)
        F = np.random.randint(1, 10)
        I = np.random.randint(1, 10)
        a = int((F - I) / C)
        D = (F * I * -1) - a
        A = E * -1 + F
        if (C * F != 1 and F != I and (F - I) % C == 0 and D!=0 and A!=0):
            break

    if(A>=0):
        sa = "+"
    else:
        sa =""

    B = E*F*-1
    G = C*F
    H = a
    x="x"
    FF =F*F
    f = -1*F

    stem = stem.format(A=A,B=B,C=C,a=a,D=D,x=x,sa=sa)
    answer = answer.format(H=H)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,FF=FF,x=x,f=f,sa=sa)

    return stem, answer, comment

def factorization312_Stem_458():
    stem = "이차방정식 $$수식$$x  (x ` {sa} ` {A} ) ` = ` {B}$$/수식$$의 두 근 중 작은 근이 "\
           "이차방정식 $$수식$${C}x^2 ` + `  (k ` {sd} ` {D}  )x ` {se} ` {E}k ` {sf} ` {F} ` = ` 0$$/수식$$"\
           "       의 근일 때, 상수 k의 값을 구하시오.\n"

    answer = "(답): {M}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x  (x ` {sa} ` {A} ) ` = ` {B}$$/수식$$ 에서\n"\
              "$$수식$$x^2 ` {sa} ` {A}x ` {sbb} {BB}` = ` 0$$/수식$$      , "\
              "$$수식$$ ( x ` {sgg} ` {GG}  )  ( x ` {shh} `  {HH} ) ` = ` 0$$/수식$$이므로\n"\
              "$$수식$$x` = ` {G} $$/수식$$   또는 $$수식$$x` = ` {H}$$/수식$$\n"\
              "이때 $$수식$$x`=`{H}$$/수식$$   가 다른 이차방정식의 근이므로\n"\
              "$$수식$${I} `{sh} ` {H}  (k ` {sd} ` {D}  ) ` {se} ` {E}k ` {sf} ` {F}` = ` 0$$/수식$$\n"\
              "$$수식$${I} ` {sh} ` {H}k ` {sj} ` {J} ` {se} `{E}k ` {sf} ` {F} ` = ` 0$$/수식$$\n"\
              "$$수식$${K} ` {sl} ` {L}k ` = ` 0$$/수식$$\n"\
              "따라서 $$수식$$k ` = `$$/수식$$ {M}\n\n"

    while True:
        G = np.random.randint(-9, 10)
        H = np.random.randint(-9, 10)
        C = np.random.randint(-9, 10)
        D = np.random.randint(-9, 10)
        E = np.random.randint(-9, 10)
        F = np.random.randint(-9, 10)
        t = C * F * F + H * D + F
        A = -1 * (G + H)
        L = H + E
        if (G != 0 and H != 0 and abs(H)!=1 and abs(A)!=1 and C != 0 and abs(C)!=1 and D != 0 and E != 0 and abs(E)!=1 and F != 0
                and t != 0 and G > H and H+E!=0 and G+H!=0 and abs(L)!=1):
            break

    B = -1*G*H
    BB = -1*B
    I = C*H*H
    J = H*D
    K = I+J+F
    if (K%L==0):
        M = "$$수식$$%d$$/수식$$"%(int(K/L)*-1)
    else:
        g = gcd(L,K)
        l = int(L/g)
        kk = int(K/g)
        l = abs(l)
        kk = abs(kk)
        if(K/L<0):
            M = "$$수식$$%d OVER %d$$/수식$$" %(kk,l)
        else:
            M = "%s $$수식$$%d OVER %d$$/수식$$" %("-",kk,l)

    GG = -1*G
    HH = -1*H

    sa,sb,sgg,shh,sd,se,sf,sj,sl,sbb = mark(A),mark(B),mark(GG),mark(HH),mark(D),mark(E),mark(F),mark(J),mark(L),mark(BB)
    sg,sh = mark(G),mark(H)

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,sa=sa,sb=sb,sd=sd,se=se,sf=sf)
    answer = answer.format(M=M)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,GG=GG,HH=HH,G=G,H=H,K=K,L=L,M=M,I=I,J=J,BB=BB,sa=sa,sb=sb,sd=sd,se=se,
                             sj=sj,sf=sf,sgg=sgg,shh=shh,sl=sl,sbb=sbb,sg=sg,sh=sh)

    return stem, answer, comment

def factorization312_Stem_459():
    stem = "두 이차방정식$$수식$$x^2 ` {sa}{A}x `  {sb}{B} ` = ` 0 $$/수식$$      , "\
            "$$수식$${C}x^2 ` {sd} ` {D}x ` {se} `{E} = ` 0$$/수식$$    의 공통인 근이 이차방정식 $$수식$$x^2 ` {sf} {F}x "\
            "` + ` k ` = ` 0$$/수식$$    의 한 근일때, 상수 $$수식$$k$$/수식$$의 값을 구하시오.\n"

    answer = "(답): $$수식$${L}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 ` {sa}{A}x `  {sb}{B} ` = ` 0 $$/수식$$    에서 $$수식$$ ( x ` {sgg} ` {GG}  )"\
              " ( x ` {shh} `  {HH} ) ` = ` 0$$/수식$$\n"\
              "$$수식$$x` = ` {G} $$/수식$$   또는 $$수식$$x` = ` {H}$$/수식$$\n"\
              "$$수식$${C}x^2 ` {sd} ` {D}x ` {se} ` {E} ` = ` 0$$/수식$$     에서 $$수식$$ ( x ` {sgg} ` {GG}  )"\
              " ( {C}x ` {snn} `  {NN} ) ` = ` 0$$/수식$$ \n"\
              "$$수식$$x` = ` {G} $$/수식$$   또는 $$수식$$x` =$$/수식$$  {M}\n"\
              "따라서 두 이차방정식의 공통근은 $$수식$$x ` = ` {G}$$/수식$$   이므로\n"\
              "$$수식$$x^2 ` {sf} {F}x ` + ` k ` = ` 0$$/수식$$    에 $$수식$$x ` = ` {G}$$/수식$$  을 대입하면\n"\
              "$$수식$${J}{si}{I}` + ` k ` = ` 0$$/수식$$\n"\
              "따라서 $$수식$$k ` = ` {L}$$/수식$$\n\n"

    while True:
        C = np.random.randint(-9, 10)
        F = np.random.randint(-9,10)
        G = np.random.randint(-9,10)
        H = np.random.randint(-9, 10)
        N = np.random.randint(-9,10)
        A = -1 * (G + H)
        B = G * H
        D = -1 * ((G * C) + N)
        if(G!=H and G+H!=0 and abs(A)!=1 and abs(C)!=1 and abs(D)!=1 and abs(F)!=1 and C!=0 and F!=0 and G!=0 and N!=0 and H!=0 and gcd(C,N)==1):
            break

    E = G*N
    J = G*G
    I = F*G
    L = -1*(I+J)
    GG = -1*G
    HH = -1*H
    NN = -1*N
    if(N%C==0):
        M = "$$수식$$%d$$/수식$$" %(int(N/C))
    else:
        if(N/C>=0):
            M = "$$수식$$%d OVER %d$$/수식$$"%(abs(N),abs(C))
        else:
            M = "%s $$수식$$%d OVER %d$$/수식$$" %("-",abs(N),abs(C))
    sa,sb,sd,se,sf,si,sgg,shh,snn = mark(A),mark(B),mark(D),mark(E),mark(F),mark(I),mark(GG),mark(HH),mark(NN)

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,sa=sa,sb=sb,sd=sd,se=se,sf=sf)
    answer = answer.format(L=L)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,GG=GG,HH=HH,NN=NN,H=H,N=N,J=J,I=I,L=L,sa=sa,sb=sb,sgg=sgg,
                             shh=shh,snn=snn,sd=sd,se=se,sf=sf,si=si,M=M)

    return stem, answer, comment



def factorization312_Stem_460():
    stem = "이차방정식 $$수식$${A}x^2`{sb}{B}x`=`{C}$$/수식$$   의 두 근 중 작은 근은 이차방정식 " \
           "$$수식$${D}x^2`+`({E}{sf}{F}m`)x`{sg}{G}m`=`0$$/수식$$   의 근이고, " \
           "큰 근은 이차방정식 $$수식$${H}x^2`+`({I}n{sj}{J})x{sk}{K}n`=`0$$/수식$$   의" \
           " 근 일때, $$수식$$m`-`n$$/수식$$  의 값은?\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"


    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${A}x^2 {sb}{B}x`=`{C}$$/수식$$     에서 $$수식$${A}x^2`{sb}{B}x{scc}{CC}`=`0$$/수식$$\n"\
              "$$수식$$({A}x{sll}{LL}) (x{smm}{MM})`=`0$$/수식$$   이므로\n"\
              "$$수식$$x`=`{N}$$/수식$$   또는 $$수식$$x`=`{M}$$/수식$$\n"\
              "작은 근 $$수식$$x`=`{N}$$/수식$$  는\n"\
              "$$수식$${D}x^2`+`({E}{sf}{F}m`)x{sg}{G}m`=`0$$/수식$$   의 근이고\n"\
              "큰 근 $$수식$$x`=`{M}$$/수식$$  은 $$수식$${H}x^2`+`({I}n{sj}{J})x`{sk}{K}n`=`0$$/수식$$   의 근이다.\n"\
              "$$수식$${D}x^2`+`({E}{sf}{F}m`)x{sg}{G}m`=`0$$/수식$$   에 $$수식$$x`=`{N}$$/수식$$  를 대입하면\n"\
              "$$수식$${O}`{P}`{Q}`m{sg}{G}m`=`0,`~ m`=`{R}$$/수식$$\n"\
              "$$수식$${H}x^2`+`({I}n{sj}{J})x{sk}{K}n`=`0$$/수식$$   에 $$수식$$x`=`{M}$$/수식$$ 을 대입하면\n"\
              "$$수식$${S}{st}{T}n{su}{U}{sk}{K}n`=`0,`~ n`=`{V}$$/수식$$\n"\
              "따라서 $$수식$$m`-`n`=`{R}{svv}{VV}`=`{W}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, 2, 3, 4, 5, 6, 7, 8, 9]
        A = random.choice(num)
        D = random.choice(num)
        E = random.choice(num)
        F = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        I = random.choice(num)
        J = random.choice(num)
        K = random.choice(num)
        L = random.choice(num)
        M = random.choice(num)
        N = random.choice(num)
        r1 = -1 * ((D * L * L) + (A * E * L))
        r2 = A*((A*G)+(F*L))
        S = H*M*M
        U = J * M
        T = I * M
        h1 = S+U
        h2 = T+K
        B = -1 * (A * M + L)
        if (gcd(A, L) == 1 and (A / L) < M and (I*M)!=(K*-1) and ((F*L)/A)!=(-1*G) and h2!=0 and r2!=0 and
                (r1%r2)==0 and (h1%h2)==0 and abs(B)!=1):
            break
    D = A
    C = -1*L*M
    CC = L*M
    if ((L /A) > 0):
        N = "%d OVER %d" % (abs(L), abs(A))
    else:
        N = "%s %d OVER %d" % ("-", abs(L), abs(A))
    o1 = D*L*L
    o2 = A*A
    o3 = gcd(o1,o2)
    O1 = int(o1/o3)
    O2 = int(o2/o3)
    if(O1%O2==0):
        if((O1/O2)>0):
            O = "%d" %(int(O1/O2))
        else:
            O = "%d" % (int(O1 / O2))
    else:
        if((O1/O2)>0):
            O = "%d OVER %d" %(abs(O1),abs(O2))
        else:
            O = "%s %d OVER %d" %("-",abs(O1),abs(O2))

    p1 = E*L
    p2 = A
    p3 = gcd(p1,p2)
    P1 = int(p1/p3)
    P2 = int(p2/p3)
    if(P1%P2==0):
        if((P1/P2)>0):
            P = "%s %d" %("+", int(P1/P2))
        else:
            P = "%d" % (int(P1 / P2))
    else:
        if((P1/P2)>0):
            P = "%s %d OVER %d" %("+",abs(P1),abs(P2))
        else:
            P = "%s %d OVER %d" %("-",abs(P1),abs(P2))

    q1 = F*L
    q2 = A
    q3 = gcd(q1,q2)
    Q1 = int(q1/q3)
    Q2 = int(q2/q3)
    if(Q1%Q2==0):
        if((Q1/Q2)>0):
            Q = "%s %d" %("+", int(Q1/Q2))
        else:
            Q = "%d" % (int(Q1 / Q2))
    else:
        if((Q1/Q2)>0):
            Q = "%s %d OVER %d" %("+",abs(Q1),abs(Q2))
        else:
            Q = "%s %d OVER %d" %("-",abs(Q1),abs(Q2))

    r3 = gcd(r1,r2)
    R1 = int(r1/r3)
    R2 = int(r2/r3)
    R = int(R1 / R2)
    V = -1*int(h1/h2)
    LL = -1*L
    VV = -1*V
    MM = -1*M
    W = R-V


    sf,sb,scc,sll,smm,sf,sg,sj,sk,st,su,svv = mark(F),mark(B),mark(CC),mark(LL),mark(MM),mark(F),mark(G),mark(J),mark(K),mark(T),mark(U),mark(VV)
    q1 = "%d" %(W)
    q2 = "%d" % (W+1)
    q3 = "%d" % (W+2)
    q4 = "%d" % (W+3)
    q5 = "%d" % (W+4)
    a = [0,1,2,3,4]
    QQ = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = QQ[a[0]],QQ[a[1]],QQ[a[2]],QQ[a[3]],QQ[a[4]]

    if(a[0]==0):
        X=answer_dict[0]
    elif(a[1]==0):
        X = answer_dict[1]
    elif(a[2]==0):
        X = answer_dict[2]
    elif(a[3]==0):
        X = answer_dict[3]
    elif(a[4]==0):
        X = answer_dict[4]

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,K=K,sb=sb,sf=sf,sg=sg,sj=sj,sk=sk,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(A=A,B=B,C=C,CC=CC,LL=LL,MM=MM,N=N,M=M,D=D,E=E,F=F,G=G,O=O,P=P,Q=Q,R=R,
                             H=H,I=I,J=J,K=K,S=S,T=T,U=U,V=V,VV=VV,W=W,sb=sb,scc=scc,sll=sll,smm=smm,sg=sg,sk=sk,st=st,
                             su=su,svv=svv,sf=sf,sj=sj)

    return stem, answer, comment
def factorization312_Stem_461():
    stem = "이차방정식 $$수식$$x^2 ` {sa} ` {A}ax ` {sb} {B} ` = ` 0$$/수식$$    의 한 근은 $$수식$${C}$$/수식$$이고,\n"\
           "다른 한 근은 이차방정식 $$수식$$x^2 ` + `  ({D}b {se} {E}  )x ` {sf} {F}b `{sg} {G} ` = ` 0$$/수식$$"\
           "     의 근일때, 상수 a, b의 합 $$수식$$a ` + ` b$$/수식$$ 의 값을 구하시오.\n"

    answer = "(답): $$수식$${Q}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 `{sa}{A}ax ` {sb} {B} ` = ` 0$$/수식$$    의 한 근이 $$수식$${C}$$/수식$$ 이므로\n"\
              "$$수식$${H}` {si} `{I}a {sb}{B}` = `0$$/수식$$     에서 $$수식$$a ` = ` {J}$$/수식$$\n"\
              "$$수식$$a` = ` {J}$$/수식$$  을 $$수식$$x^2 ` {sa}{A}ax ` {sb} {B} ` = ` 0$$/수식$$    에 대입하면\n"\
              "$$수식$$x^2 ` {sk}{K}x ` {sb}{B}` = ` 0$$/수식$$    , $$수식$$ (x {scc}{CC}  )"\
              " (x {sll}{LL} )` = ` 0$$/수식$$\n"\
              "$$수식$$x` = ` {C}$$/수식$$   또는 $$수식$$x` = ` {L}$$/수식$$\n"\
              "따라서 $$수식$$x` = ` {L}$$/수식$$   는 $$수식$$x^2 ` + `  ({D}b `{se}{E}  )x `{sf}{F}b `{sg}{G}" \
              "`=0$$/수식$$      의 근이므로\n"\
              "$$수식$${M}{sl}{L}({D}b` {se}{E} ) `{sf}{F}b `{sg}{G} ` = `0$$/수식$$\n"\
              "$$수식$${M}`{sn}{N}b `{so}{O}`{sf}{F}b `{sg}{G}` =` 0$$/수식$$        , $$수식$$b`=`{P}$$/수식$$\n"\
              "따라서 $$수식$$a`+b`={J}`{sp}`{P}`=`{Q}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        C = random.choice(num)
        L = random.choice(num)
        A = random.choice(num)
        D = random.choice(num)
        F = random.choice(num)
        E = random.choice(num)
        G = random.choice(num)
        R = random.choice(num)
        K = (L + C) * -1
        N = L * D
        if (abs(C) != abs(L) and L * D != (-1 * F) and (L + C) % A == 0 and D * (L * R - G) == -1 * (L + R + E) * F
                and ((L * R - G) % F) == 0 and abs(A)!=1 and abs(D)!=1 and abs(F)!=1 and abs(K)!=1 and abs(N)!=1):
            break

    H = C * C
    I = A * C
    B = C * L
    M = L * L
    O = L * E
    J = int(K / A)
    P = int((-1 * (M + O + G)) / (N + F))
    Q = J + P
    CC = -1*C
    LL = -1*L

    sa,sb,se,sf,sg,si,sk,sl,sn = mark(A),mark(B),mark(E),mark(F),mark(G),mark(I),mark(K),mark(L),mark(N)
    so, sp,scc,sll = mark(O),mark(P),mark(CC),mark(LL)

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,sa=sa,sb=sb,se=se,sf=sf,sg=sg)
    answer = answer.format(Q=Q)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,L=L,P=P,Q=Q,M=M,N=N,O=O,K=K,CC=CC,LL=LL,
                             sa=sa,sb=sb,si=si,sk=sk,scc=scc,sll=sll,se=se,sf=sf,sg=sg,sl=sl,sn=sn,so=so,sp=sp)

    return stem, answer, comment

def factorization312_Stem_462():
    stem = "이차방정식 $$수식$$x^2 ` {sa}{A}x ` + ` a ` = ` 0$$/수식$$    의 한 근이 $$수식$$x` = ` {B} $$/수식$$  일때, "\
           "다음 두 이차방정식의 공통인 근을 구하시오. (단, a는 상수)\n"\
           "$$표$$$$수식$$x^2 ` + `  (a ` {sc}{C} )x ` {sd}{D}` = ` 0$$/수식$$\n"\
           "$$수식$$(a{se}{E} )x^2 ` + ` (a {sf}{F}  )x ` {sg}{G} ` = `0 $$/수식$$ $$/표$$\n"

    answer = "(답): $$수식$${R}$$/수식$$ \n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2` {sa}{A}x ` + `a ` = 0$$/수식$$    의 한 근이 $$수식$$x ` = ` {B}$$/수식$$  이므로\n"\
              "$$수식$${H}{si}{I}`+`a`=`0 $$/수식$$    에서 $$수식$$a`=`{J}$$/수식$$\n"\
              "$$수식$$x^2`+`(a`{sc}{C})x`{sd}{D}`=`0$$/수식$$에 $$수식$$a`=`{J} $$/수식$$  를 대입하면\n"\
              "$$수식$$x^2`{sk}{K}x`{sd}{D}=0$$/수식$$    , " \
              "$$수식$$(x{sll}{LL} ) (x{smm}{MM})=0 $$/수식$$에서\n"\
              "$$수식$$x`=`{L}$$/수식$$   또는 $$수식$$x`=`{M}$$/수식$$\n"\
              "$$수식$$(a{se}{E})x^2`+`(a{sf}{F})x`{sg}{G}=0$$/수식$$에 $$수식$$a`=`{J}$$/수식$$  를 "\
              "대입하면\n $$수식$${N}x^2`{so}{O}x`{sg}{G}=0$$/수식$$     , $$수식$$(x{spp}{PP}) " \
              "({N}x{sqq}{QQ})`=`0$$/수식$$\n"\
              "$$수식$$x`=`{P}$$/수식$$   또는 $$수식$$x`=`{QN}$$/수식$$\n"\
              "따라서 두 이차방정식의 공통인 근은\n"\
              "$$수식$$x`=`{R}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        A = random.choice(num)
        B = random.choice(num)
        C = random.choice(num)
        E = random.choice(num)
        F = random.choice(num)
        L = random.choice(num)
        M = random.choice(num)
        P = M
        N = random.choice(num)
        Q = random.choice(num)
        K = -1 * (L + M)
        if (abs(A)!=1 and L != M and gcd(N, Q) == 1 and P != Q and (B * B + A * B) == (L + M + C) and (L + M + C) == (-1 * N + E)
                and (-1 * N + E) == (Q + N * P + F) and abs(K)!=1):
            break

    H = B*B
    I = A*B
    J = -1*(H+I)
    D = L*M
    N = J+E
    O = J+F
    G = P*Q
    if(Q%N==0):
        QN = "%d" %(int(Q/N))
    else:
        if (Q / N >= 0):
            QN = "%d OVER %d" % (abs(Q), abs(N))
        else:
            QN = "%s %d OVER %d" % ("-", abs(Q), abs(N))

    PP = -1*P
    QQ = -1*Q
    LL = -1*L
    MM = -1*M
    R = P
    sa,sb,sc,sd,se,sf,sg,so = mark(A),mark(B),mark(C),mark(D),mark(E),mark(F),mark(G),mark(O)
    si,sk,sll,smm,spp,sqq = mark(I),mark(K),mark(LL),mark(MM),mark(PP),mark(QQ)
    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,sa=sa,sc=sc,sd=sd,se=se,sf=sf,sg=sg)
    answer = answer.format(R=R)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,K=K,L=L,M=M,P=P,N=N,Q=Q,O=O,QN=QN,MM=MM,LL=LL,
                             PP=PP,QQ=QQ,sa=sa,sc=sc,sd=sd,se=se,sf=sf,sg=sg,si=si,sk=sk,so=so,
                             spp=spp,sqq=sqq,sll=sll,smm=smm,R=R)

    return stem, answer, comment

def factorization312_Stem_463():
    stem = "이차방정식 $$수식$$x^2`+`({C}a{sd}{D})x`+`(a^2 {sb}{B}a`)=0$$/수식$$ 의 두 근 중 큰 근이 " \
           "이차방정식 $$수식$$x^2`{se}{E}x{sf}{F}=0$$/수식$$    의 두 근 중 작은 근과 같을 때, 상수 a의 값을 구하시오.\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식$$수식$$x^2`+`({C}a{sd}{D})x`+`(a^2 {sb}{B}a`)=0$$/수식$$에서 "\
              "$$수식$$x^2`+`({C}a{sd}{D} )x`+`a (a{sb}{B} )=0$$/수식$$\n"\
              "$$수식$$(x`+`a ) (x`+`a{sb}{B})=0$$/수식$$ 이므로\n"\
              "$$수식$$x`=`-a$$/수식$$    또는 $$수식$$x=`-a{sbb}{BB}$$/수식$$\n"\
              "이때 $$수식$$-a`=`(-a{sbb}{BB} ){sb}{B} $$/수식$$ 이므로\n"\
              "둘 중 큰 근은 $$수식$$x`=`-a$$/수식$$\n"\
              "$$수식$$x^2`{se}{E}x{sf}{F}=0$$/수식$$    에서 $$수식$$(x{sgg}{GG} )"\
              "(x{shh}{HH} )=0$$/수식$$이므로 $$수식$$x`=`{G}$$/수식$$   또는 $$수식$$x`=`{H}$$/수식$$\n"\
              "이때 작은 근은 $$수식$$x={I}$$/수식$$    이므로\n"\
              "$$수식$$-a`=`{I}$$/수식$$     , 즉 $$수식$$a`=`{J}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        B = np.random.randint(1,10)
        F = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        if(G!=H and abs(G+H)!=1 and (G+H)!=0 and abs(B)!=1):
            break

    E = -1*(G+H)
    F = G*H
    D = B
    C = 2
    I = min(G,H)
    J = -1*I
    GG = -1*G
    HH = -1*H
    BB = -1*B

    sd,sb,se,sf,sgg,shh,sbb = mark(D),mark(B),mark(E),mark(F),mark(GG),mark(HH),mark(BB)

    stem = stem.format(C=C,D=D,B=B,E=E,F=F,sd=sd,sb=sb,se=se,sf=sf)
    answer = answer.format(J=J)
    comment = comment.format(BB=BB,GG=GG,HH=HH,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,sd=sd,sb=sb,sbb=sbb,se=se,sf=sf,sgg=sgg,shh=shh)

    return stem, answer, comment

def factorization312_Stem_464():
    stem = "이차방정식 $$수식$$x^2`+`({C}a{sd}{D})x`+`(a^2 {sb}{B}a`)=0$$/수식$$ 의 두 근 중 작은 근이 " \
           "이차방정식 $$수식$$x^2`{se}{E}x{sf}{F}=0$$/수식$$    의 두 근 중 큰 근과 같을 때, 상수 a의 값을 구하시오.\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식$$수식$$x^2`+`({C}a{sd}{D})x`+`(a^2 {sb}{B}a`)=0$$/수식$$에서 "\
              "$$수식$$x^2`+`({C}a{sd}{D} )x`+`a (a{sb}{B} )=0$$/수식$$\n"\
              "$$수식$$(x`+`a ) (x`+`a{sb}{B})=0$$/수식$$ 이므로\n"\
              "$$수식$$x`=`-a$$/수식$$    또는 $$수식$$x=`-a{sbb}{BB}$$/수식$$\n"\
              "이때 $$수식$$-a`=`(-a{sbb}{BB} ){sb}{B} $$/수식$$ 이므로\n"\
              "둘 중 작은 근은 $$수식$$x`=`-a{sbb}{BB}$$/수식$$\n"\
              "$$수식$$x^2`{se}{E}x{sf}{F}=0$$/수식$$    에서 $$수식$$(x{sgg}{GG} )"\
              "(x{shh}{HH} )=0$$/수식$$이므로 $$수식$$x`=`{G}$$/수식$$   또는 $$수식$$x`=`{H}$$/수식$$\n"\
              "이때 큰 근은 $$수식$$x={I}$$/수식$$    이므로\n"\
              "$$수식$$-a{sbb}{BB}`=`{I}$$/수식$$     , 즉 $$수식$$a`=`{J}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        B = np.random.randint(1,10)
        F = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        if(G!=H and (G+H)!=0 and abs(G+H)!=1 and abs(B)!=1):
            break

    E = -1*(G+H)
    F = G*H
    D = B
    C = 2
    I = max(G,H)
    J = -1*(I+B)
    GG = -1*G
    HH = -1*H
    BB = -1*B

    sd,sb,se,sf,sgg,shh,sbb = mark(D),mark(B),mark(E),mark(F),mark(GG),mark(HH),mark(BB)

    stem = stem.format(C=C,D=D,B=B,E=E,F=F,sd=sd,sb=sb,se=se,sf=sf)
    answer = answer.format(J=J)
    comment = comment.format(BB=BB,GG=GG,HH=HH,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,sd=sd,sb=sb,sbb=sbb,se=se,sf=sf,sgg=sgg,shh=shh)

    return stem, answer, comment


def factorization312_Stem_465():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x`+`a^2 =0$$/수식$$  의 한 근이 $$수식$$x=a{sb}{B}$$/수식$$  일 때, 이차방정식 "\
           "$$수식$$x^2`+`({R}-a )x `+`a^2 {ss}{S}a {su}{U}=0$$/수식$$의 두 근의 곱을 구하시오." \
           "(단, $$수식$$a &lt; {X}$$/수식$$   이고 a는 정수)\n"

    answer = "(답): $$수식$${R}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 {sa}{A}x`+`a^2 `=0$$/수식$$    의 한 근이 $$수식$$x`=a{sb}{B}$$/수식$$  이므로\n"\
              "$$수식$$(a{sb}{B} )^2 {sa}{A}(a{sb}{B})`+`a^2 =0$$/수식$$\n"\
              "$$수식$$a^2 {sc}{C}a{sd}{D}{sa}{A}a{se}{E}`+`a^2 =0$$/수식$$\n"\
              "$$수식$$2a^2 {sf}{F}a{sg}{G}=0$$/수식$$     , $$수식$$a^2 {sh}{H}a{si}{I}=0$$/수식$$\n"\
              "$$수식$$(a{sjj}{JJ} ) (a{skk}{KK} ) =0$$/수식$$\n"\
              "$$수식$$a={J}$$/수식$$  또는 $$수식$$a={K}$$/수식$$\n"\
              "이때 $$수식$$a &lt;{X}$$/수식$$  이므로 $$수식$$a`=`{J}$$/수식$$\n"\
              "$$수식$$x^2`+`({R}`-`a )x `+`a^2 {ss}{S}a {su}{U}=0$$/수식$$에 $$수식$$a={J}$$/수식$$  을 대입하면\n"\
              "$$수식$$x^2`{st}{T}x{sl}{L}{sm}{M}{su}{U}=0$$/수식$$\n"\
              "$$수식$$x^2`{st}{T}x`{so}{O} =0$$/수식$$     , $$수식$$(x{spp}{PP} ) " \
              "(x{sqq}{QQ} )$$/수식$$=0\n"\
              "$$수식$$x`=`{P}$$/수식$$  또는 $$수식$$x`=`{Q}$$/수식$$\n"\
              "따라서 두 근의 곱은 $$수식$${P} TIMES {Q} ` = ` {R}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        J = random.choice(num)
        B = random.choice(num)
        K = random.choice(num)
        P = random.choice(num)
        Q = random.choice(num)
        R = random.choice(num)
        S = random.choice(num)
        U = random.choice(num)
        H = -1*(J+K)
        F = 2 * H
        C = 2*B
        A = F-C
        I = J * K
        G = 2 * I
        D = B * B
        E = A * B
        if(J!=K and G==(D+E) and (C+A)==F and P!=Q and (J*J+S*J+U)==(P*Q) and (R-J)==(P+Q)*-1 and K>J+1 and abs(A)<=50):
            break

    L = J*J
    M = S*J
    O = L+M+U
    T = -1*(P+Q)
    JJ = -1*J
    KK = -1*K
    PP = -1*P
    QQ = -1*Q
    R = P*Q
    X = np.random.randint(J+1,K)
    sa,sb,sd,se,ss,su = mark(A),mark(B),mark(D),mark(E),mark(S),mark(U)
    sc,sf,sg,sh,si,sjj,skk,sk,sl,sm,se,spp,sqq,st,so = mark(C),mark(F),mark(G),mark(H),mark(I),mark(JJ),mark(KK),\
                                                 mark(K),mark(L),mark(M),mark(E),mark(PP),mark(QQ),mark(T),mark(O)

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,X=X,R=R,S=S,U=U, sa=sa,sb=sb,sd=sd,se=se,ss=ss,su=su)
    answer = answer.format(R=R)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,J=J,K=K,L=L,M=M,I=I,P=P,Q=Q,R=R,T=T,O=O,S=S,U=U,JJ=JJ,KK=KK,X=X,
                             PP=PP,QQ=QQ,
                             sa=sa,sb=sb,sc=sc,sd=sd,se=se,sf=sf,sg=sg,sh=sh,si=si,sjj=sjj,skk=skk,st=st,sl=sl,so=so,
                             sm=sm,spp=spp,sqq=sqq,ss=ss,su=su)

    return stem, answer, comment

def factorization312_Stem_466():
    stem = "다음 이차방정식 중 중근을 갖는 것은?\n"\
           "①{Q1}\n" \
           "②{Q2}\n" \
           "③{Q3}\n" \
           "④{Q4}\n"\
           "⑤{Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "{X} $$수식$$(x{sgg}{GG}) (x{sg}{G})`=`{H}x{si}{I}$$/수식$$에서\n"\
              "$$수식$$x^2 {sjj}{JJ}`=`{H}x{si}{I}$$/수식$$       , $$수식$$x^2 {shh}{HH}x{sk}{K}`=`0$$/수식$$\n"\
              "$$수식$$(x{sll}{LL})^2 ` = 0$$/수식$$ , $$수식$$x`=`{L}$$/수식$$    (중근)\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        A = random.choice(num)
        C = random.choice(num)
        F = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        I = np.random.randint(-30,30)
        if((H*H)==((I+G*G)*-4) and abs(A)!=1 and abs(F)!=1 and abs(H)!=1 ):
            break

    B= np.random.randint(10,31)
    d = np.random.randint(1,8)
    e = np.random.randint(1,8)
    D = d*d
    E = e*e
    EE = -1*E
    J = G*G
    JJ = -1*J
    L = int(H/2)
    K = L*L
    GG = -1*G
    LL = -1*L
    HH = -1*H


    sa,sc,sf,sgg,sg,si,see,sjj,sk= mark(A),mark(C),mark(F),mark(GG),mark(G),mark(I),mark(EE),mark(JJ),mark(K)
    shh,sll = mark(HH),mark(LL)

    q1 =" $$수식$$x^2 %s%dx`=`%d$$/수식$$" %(sa,A,B)
    q2 =" $$수식$$(x%s%d) ^2`=`%d$$/수식$$" %(sc,C,D)
    q3 = " $$수식$$x^2 %s%d `=`0$$/수식$$" %(see,EE)
    q4 = " $$수식$$x^2 %s%dx `=`0$$/수식$$" %(sf,F)
    q5 = " $$수식$$(x %s%d ) (x %s%d )`=`%dx%s%d$$/수식$$" %(sgg,GG,sg,G,H,si,I)

    a = [0,1,2,3,4]
    Q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]

    if(a[0]==4):
        X=answer_dict[0]
    elif(a[1]==4):
        X = answer_dict[1]
    elif(a[2]==4):
        X = answer_dict[2]
    elif(a[3]==4):
        X = answer_dict[3]
    elif(a[4]==4):
        X = answer_dict[4]


    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(G=G,GG=GG,H=H,I=I,JJ=JJ,HH=HH,K=K,LL=LL,L=L,sgg=sgg,sg=sg,si=si,
                             sjj=sjj,shh=shh,sk=sk,sll=sll,X=X)

    return stem, answer, comment

def factorization312_Stem_467():
    stem = "다음 이차방정식 중 중근을 갖는 것을 모두 고르면?(정답 2개)\n"\
           "① {Q1}\n"\
           "② {Q2}\n" \
           "③ {Q3}\n"\
           "④ {Q4}\n"\
           "⑤ {Q5}\n"

    answer = "(답): {X1}, {X2}\n"
    comment = "(해설)\n"\
              "{X1} {A1}\n"\
              "{X2} {A2}\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        num2 = [-9, -8, -7, -6, -5, -4, -3, -2, 2, 3, 4, 5, 6, 7, 8, 9]
        A = random.choice(num)
        B = random.choice(num2)
        C = random.choice(num2)
        D = random.choice(num)
        E = random.choice(num2)
        F = random.choice(num)
        G = random.choice(num)
        O = random.choice(num)
        L = random.choice(num)
        M = random.choice(num2)
        N = random.choice(num)
        K = random.choice(num2)
        J = random.choice(num)
        if(C*C-(4*B*(A-B))!=0 and ((2*L-K)*(2*L-K)-4*(L-J))!=0 and E*G>0):
            break

    H = -2*O
    I= O*O
    II = -1*I
    OO = -1*O
    NN = -1*N


    sb,sd,sf,sh,si,sii,sk,sl,snn,soo= mark(B),mark(D),mark(F),mark(H),mark(I),mark(II),mark(K),mark(L),mark(NN),mark(OO)
    q1 = "$$수식$$%d%s%dx^2 `=`%d (x%s%d)$$/수식$$" %(A,sb,B,C,sd,D)
    q2 = "$$수식$$%dLEFT(x%s%d )^2 `=`%d$$/수식$$" %(E,sf,F,G)
    q3 = "$$수식$$x (x%s%d) `=`%s%d$$/수식$$" %(sh,H,sii,II)
    q4 = "$$수식$$%d%s%dx `=`(x%s%d)^2$$/수식$$" %(J,sk,K,sl,L)
    q5 = "$$수식$$%dLEFT(x%s%d)^2 `=`0$$/수식$$" %(M,snn,NN)

    a1 = "$$수식$$x (x%s%d) `=`%d$$/수식$$ 에서 $$수식$$x^2 %s%dx%s%d`=`0$$/수식$$\n"\
         "$$수식$$(x%s%d)^2 =0 `,`` x`=`%d $$/수식$$ (중근)"%(sh,H,II,sh,H,si,I,soo,OO,O)
    a2 = "$$수식$$%dLEFT(x%s%d)^2 =0$$/수식$$이므로 $$수식$$x=%d$$/수식$$ (중근)" %(M,snn,NN,N)

    a = [0,1,2,3,4]
    Q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]

    if(a[0]==2):
        x1=0
    elif(a[1]==2):
        x1 = 1
    elif(a[2]==2):
        x1 = 2
    elif(a[3]==2):
        x1 = 3
    elif(a[4]==2):
        x1 = 4


    if(a[0]==4):
        x2=0
    elif(a[1]==4):
        x2 = 1
    elif(a[2]==4):
        x2 = 2
    elif(a[3]==4):
        x2 = 3
    elif(a[4]==4):
        x2 = 4

    if(x1>x2):
        X1 = answer_dict[x2]
        A1 = a2
        X2 = answer_dict[x1]
        A2 = a1
    else:
        X1 = answer_dict[x1]
        A1 = a1
        X2 = answer_dict[x2]
        A2 = a2

    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X1=X1,X2=X2)
    comment = comment.format(X1=X1,X2=X2,A1=A1,A2=A2)

    return stem, answer, comment

def factorization312_Stem_468():
    stem = "다음 이차방정식 중 중근을 갖지 않는 것을 모두 고르면?(정답 2개)\n" \
           "① {Q1}\n" \
           "② {Q2}\n" \
           "③ {Q3}\n" \
           "④ {Q4}\n" \
           "⑤ {Q5}\n"

    answer = "(답): {X1}, {X2}\n"
    comment = "(해설)\n"\
              "{X1} {A1}\n"\
              "{X2} {A2}\n\n"


    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        num2 = [-8,-6,-4,-2,2,4,6,8]
        D = random.choice(num)
        E = random.choice(num)
        F = random.choice(num)
        H = random.choice(num2)
        M = random.choice(num)
        N = random.choice(num)
        R = random.choice(num)
        S = random.choice(num)
        P = random.choice(num)
        Q = random.choice(num)
        if(P!=Q and R!=S and (-2*F)==(R+S) and (P+Q)!=0 and (R+S)!=0 and abs(E)!=1 and abs(M)!=1):
            break

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        J = random.choice(num)
        K = random.choice(num)
        L = random.choice(num)
        lk = (2*L-K)*(2*L-K)
        lj = L-J
        if(lk-4*lj ==0):
            break

    C = P+Q
    O = P*Q
    B= C*D
    A = O+B
    U = F*F*E
    T = -1*((R+S)*E)
    G = U - (E*R*S)
    i = int(H/2)
    I = i*i
    II = -1*I
    NN = -1*N
    PP = -1*P
    QQ = -1*Q
    RR = -1*R
    SS = -1*S
    CC = -1*C

    sd,sf,sh,sii,sk,sl,snn,sb,scc,so,spp,sqq,sf,st,srr,sss,su = mark(D),mark(F),mark(H),mark(II),\
                                                             mark(K),mark(L),mark(NN),mark(B),mark(CC),mark(O),\
                                                             mark(PP),mark(QQ),mark(F),mark(T),mark(RR),mark(SS),mark(U)




    q1 = "$$수식$$%d`+`x^2 `=` %dLEFT(x %s%d )$$/수식$$" %(A,C,sd,D)
    q2 = "$$수식$$%dLEFT(x%s%d )^2`=`%d$$/수식$$" %(E,sf,F,G)
    q3 = "$$수식$$x (x%s%d)`=`%d$$/수식$$" %(sh,H,II)
    q4 = "$$수식$$%d`%s %dx`=` (x%s%d)^2$$/수식$$" %(J,sk,K,sl,L)
    q5 = "$$수식$$%dLEFT(x%s%d)^2 `=`0$$/수식$$" %(M,snn,NN)

    a1 = "$$수식$$%d`+`x^2`=`%dLEFT(x%s%d )$$/수식$$에서\n$$수식$$%d`+x^2 `=`%dx%s%d$$/수식$$\n" \
         "$$수식$$x^2 %s%dx %s%d`=`0$$/수식$$      , $$수식$$(x%s%d) (x%s%d) `=`0$$/수식$$\n"\
         "$$수식$$x`=`%d$$/수식$$   또는 $$수식$$x`=`%d$$/수식$$\n따라서 중근을 갖지 않는다.\n"\
         %(A,C,sd,D,A,C,sb,B,scc,CC,so,O,spp,PP,sqq,QQ,P,Q)

    a2 = "$$수식$$%dLEFT(x%s%d)^2 `=%d$$/수식$$에서 $$수식$$%dx^2 %s%dx %s%d`=`%d$$/수식$$\n"\
         "$$수식$$%dLEFT(x%s%d) (x%s%d) `=`0$$/수식$$\n"\
         "$$수식$$x=%d$$/수식$$    또는 $$수식$$x`=`%d$$/수식$$\n따라서 중근을 갖지 않는다.\n"\
         %(E,sf,F,G,E,st,T,su,U,G,E,srr,RR,sss,SS,R,S)

    a = [0,1,2,3,4]
    Q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]

    if(a[0]==0):
        x1=0
    elif(a[1]==0):
        x1 = 1
    elif(a[2]==0):
        x1 = 2
    elif(a[3]==0):
        x1 = 3
    elif(a[4]==0):
        x1 = 4


    if(a[0]==1):
        x2=0
    elif(a[1]==1):
        x2 = 1
    elif(a[2]==1):
        x2 = 2
    elif(a[3]==1):
        x2 = 3
    elif(a[4]==1):
        x2 = 4

    if(x1>x2):
        X1 = answer_dict[x2]
        A1 = a2
        X2 = answer_dict[x1]
        A2 = a1
    else:
        X1 = answer_dict[x1]
        A1 = a1
        X2 = answer_dict[x2]
        A2 = a2

    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X1=X1,X2=X2)
    comment = comment.format(X1=X1,X2=X2,A1=A1,A2=A2)

    return stem, answer, comment

def factorization312_Stem_469():
    stem = " 중근을 갖는 이차방정식만을 보기에서 있는 대로 고른 것은?\n"\
           "$$표$$ (ㄱ) $$수식$$x^2 {saa}{AA}`=`0$$/수식$$\n(ㄴ) $$수식$$x^2`=`{B}x{scc}{CC}$$/수식$$\n"\
           "(ㄷ) $$수식$${D}x-x^2 `=`(x{se}{E}) ({F}-x )$$/수식$$\n"\
           "(ㄹ) $$수식$${G}x^2 {sh}{H}x{si}{I}`=`{J}x{sk}{K}$$/수식$$           $$/표$$\n"\
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "(ㄱ) $$수식$$x^2 {saa}{AA}`=0$$/수식$$  에서 $$수식$$(x{sl}{L}) (x{sll}{LL})`=`0$$/수식$$\n"\
               "$$수식$$x={LL}$$/수식$$   또는 $$수식$$x={L}$$/수식$$\n따라서 중근을 갖지 않는다.\n"\
              "(ㄴ) $$수식$$x^2`=`{B}x{scc}{CC}$$/수식$$    에서 $$수식$$x^2 {sbb}{BB}x{sc}{C}`=`0$$/수식$$\n"\
              "$$수식$$(x{smm}{MM})^2 `=`0 ,  x`=`{M}$$/수식$$\n따라서 중근을 갖는다.\n"\
              "(ㄷ) $$수식$${D}x-x^2 `=`(x{se}{E}) ({F}-x )$$/수식$$   에서\n"\
              "$$수식$${D}x-x^2`=`-x^2 {sn}{N}x{so}{O},``{P}x{so}{O}=0$$/수식$$\n"\
               "이차항의 계수가 0이므로 이차방정식이 아니다.\n"\
              "(ㄹ) $$수식$${G}x^2 {sh}{H}x{si}{I}`=`{J}x{sk}{K}$$/수식$$        에서\n"\
              "$$수식$${G}x^2 {sr}{R}x{ss}{S}`=`0, x^2 {st}{T}x{su}{U}`=`0$$/수식$$\n"\
               "$$수식$$(x{svv}{VV})^2 =0$$/수식$$\n"\
               "$$수식$$x={V}$$/수식$$\n따라서 중근을 갖는다.\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        num2 = [-9, -8, -7, -6, -5, -4, -3, -2, 2, 3, 4, 5, 6, 7, 8, 9]
        L = random.choice(num)
        M = random.choice(num)
        E = random.choice(num)
        F = random.choice(num)
        D = random.choice(num2)
        V = random.choice(num)
        G = random.choice(num2)
        H = random.choice(num2)
        I = random.choice(num)
        N = F - E
        P = N - D
        if(E!=F and abs(D)!=1 and abs(N)!=1 and abs(P)!=1):
            break

    A = L*L
    B = 2*M
    C = M*M
    O = E*F
    T = -2*V
    U = V*V
    R= G*T
    S = G*U
    K = I-S
    J = H-R
    AA = -1*A
    CC = -1*C
    LL = -1*L
    MM = -1*M
    VV = -1*V
    BB = -1*B

    q1 = "(ㄱ),(ㄴ)"
    q2 = "(ㄱ),(ㄷ)"
    q3 = "(ㄴ),(ㄹ)"
    q4 = "(ㄱ),(ㄴ),(ㄹ)"
    q5 = "(ㄴ),(ㄷ),(ㄹ)"

    Q = [q1,q2,q3,q4,q5]
    a = [0,1,2,3,4]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]

    if(a[0]==2):
        x1=0
    elif(a[1]==2):
        x1 = 1
    elif(a[2]==2):
        x1 = 2
    elif(a[3]==2):
        x1 = 3
    elif(a[4]==2):
        x1 = 4

    X = answer_dict[x1]
    saa,scc,se,sh,si,sk,sl,sll,sbb,sc,scc,smm,sn,so,sh,sr,ss,st,su,svv,sv = mark(AA),mark(CC),mark(E),mark(H),\
    mark(I),mark(K),mark(L),mark(LL),mark(BB),mark(C),mark(CC),mark(MM),mark(N),mark(O),mark(H),mark(R),mark(S), \
                                                                            mark(T),mark(U),mark(VV),mark(V)




    stem = stem.format(AA=AA,B=B,CC=CC,D=D,E=E,F=F,G=G,H=H,I=I,J=J,K=K,saa=saa,scc=scc,se=se,sh=sh,si=si,sk=sk,
                       Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(AA=AA,L=L,LL=LL,B=B,CC=CC,C=C,BB=BB,M=M,MM=MM,D=D,E=E,F=F,N=N,O=O,P=P,G=G,H=H,I=I,J=J,K=K,R=R,S=S,
                             T=T,U=U,VV=VV,V=V,saa=saa,sl=sl,sll=sll,scc=scc,sbb=sbb,sc=sc,smm=smm,se=se,sn=sn,
                             so=so,sh=sh,si=si,sk=sk,sr=sr,ss=ss,st=st,su=su,svv=svv)

    return stem, answer, comment

def factorization312_Stem_470():
    stem = "다음 보기 중 중근을 갖는 이차방정식의 개수를 구하시오.\n"\
           "$$표$$ (ㄱ) $$수식$$x^2 `=`{A}$$/수식$$\n(ㄴ) $$수식$$x^2`=`{B}x{scc}{CC}$$/수식$$\n"\
           "(ㄷ) $$수식$$(x{sp}{P}) (x{sd}{D})`=`{E}x{sf}{F}$$/수식$$\n(ㄹ) $$수식$${G}x^2 `=`{H}$$/수식$$\n"\
           "(ㅁ) $$수식$${I}x^2 `=`{I}x$$/수식$$\n (ㅂ) $$수식$${J}(x{skk}{KK})^2 =0$$/수식$$   $$/표$$\n   "

    answer = "(답): $$수식$$3$$/수식$$\n"
    comment = "(해설)\n"\
              "(ㄴ) $$수식$$x^2 `=`{B}x{scc}{CC}$$/수식$$     에서 $$수식$$x^2 {sbb}{BB}x{sc}{C}=0$$/수식$$\n"\
              "$$수식$$(x{sll}{LL})^2 =0,```x={L}$$/수식$$(중근)\n"\
              "(ㄷ) $$수식$$(x{sp}{P}) (x{sd}{D})={E}x{sf}{F}$$/수식$$에서\n"\
              "$$수식$$x^2 {sm}{M}x{sn}{N}=0$$/수식$$\n"\
              "$$수식$$(x{soo}{OO})^2 =0$$/수식$$, $$수식$$x={O}$$/수식$$     (중근)\n"\
              "(ㅂ) $$수식$${J}(x{skk}{KK})^2 =0$$/수식$$에서 $$수식$$x={K}$$/수식$$     (중근)\n"\
              "(ㄴ),(ㄷ),(ㅂ)이 중근을 가지므로 모두 $$수식$$3$$/수식$$개이다.\n\n"\

    a = np.random.randint(4,8)
    A = a*a
    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        L = random.choice(num)
        O = random.choice(num)
        P = random.choice(num)
        D = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        I = random.choice(num)
        J = random.choice(num)
        K = random.choice(num)
        N = O * O
        M = -2 * O
        E = (P + D) - M
        F = (P * D) - N
        B = 2 * L
        C = L * L
        if(abs(E)!=1 and abs(J)!=1 and abs(I)!=1):
            break

    CC = -1*C
    BB = -1*B
    LL = -1*L
    OO = -1*O
    KK = -1*K

    scc,sbb,sc,sll,sc,sd,sf,sm,sn,soo,skk,sp,sd = mark(CC),mark(BB),mark(C),mark(LL),mark(C),mark(D),mark(F),mark(M),\
                                                  mark(N),mark(OO),mark(KK),mark(P),mark(D)

    stem = stem.format(A=A,B=B,CC=CC,P=P,D=D,E=E,F=F,G=G,H=H,I=I,J=J,KK=KK,scc=scc,sp=sp,sd=sd,sf=sf,skk=skk)
    answer = answer.format()
    comment = comment.format(B=B,CC=CC,BB=BB,C=C,LL=LL,L=L,P=P,D=D,E=E,F=F,M=M,N=N,OO=OO,O=O,KK=KK,K=K,J=J,scc=scc,sbb=sbb,
                             sll=sll,sc=sc,sd=sd,sf=sf,sm=sm,sn=sn,soo=soo,skk=skk,sp=sp)

    return stem, answer, comment

def factorization312_Stem_471():
    stem = "다음 이차방정식 중 중근을 갖지 않는 것을 모두 고르면? (정답 2개)\n"\
           "① {Q1}\n② {Q2}\n③ {Q3}\n④ {Q4}\n⑤ {Q5}\n"

    answer = "(답): {X1}, {X2}\n"
    comment = "(해설)\n"\
              "① {A1}\n② {A2}\n③ {A3}\n④ {A4}\n⑤ {A5}\n\n"



    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        M = random.choice(num)
        N = random.choice(num)
        O = random.choice(num)
        P = random.choice(num)
        G = random.choice(num)
        Q = random.choice(num)
        R = random.choice(num)
        U = random.choice(num)
        J = random.choice(num)
        K = random.choice(num)
        if((J+K)==(2*U) and gcd(N,O)==1 and gcd(G,Q)==1 and abs(N)!=1 and abs(G)!=1):
            break
    A = 2*M
    B = M*M
    C = N*N
    D = -1*O*O
    F = 2*P
    E = P*P
    H = -1*Q-(G*R)
    I = Q*R
    S = 2*U
    T = U*U
    L = J*K -T
    MM = -1*M
    PP = -1*P
    QQ = -1*Q
    RR = -1*R
    UU = -1*U
    OO = -1*O
    FF = -1*F
    sa,sb,sm,sd,so,soo,se,sff,spp,sh,si,sqq,srr,sj,sk,ss,st,su = mark(A),mark(B),mark(M),mark(D),mark(O),mark(OO),\
    mark(E),mark(FF),mark(PP),mark(H),mark(I),mark(QQ),mark(RR),mark(J),mark(K),mark(S),mark(T),mark(U)

    if (O % N == 0):
        ON = "%d" % (abs(int(O / N)))
    else:
        if (O / N >= 0):
            ON = "%d OVER %d" % (abs(O), abs(N))
        else:
            ON = "%d OVER %d" % (abs(O), abs(N))

    if (Q % G == 0):
        QG = "%d" % (int(Q / G))
    else:
        if (Q / G >= 0):
            QG = "%d OVER %d" % (abs(Q), abs(G))
        else:
            QG = "%s %d OVER %d" % ("-", abs(Q), abs(G))

    a1 = "$$수식$$x^2 %s%dx%s%d =0$$/수식$$    에서 $$수식$$(x%s%d)^2 =0$$/수식$$\n$$수식$$x=%d$$/수식$$    (중근)"\
          %(sa,A,sb,B,sm,M,MM)
    a2 = "$$수식$$%dx^2 %s%d=0$$/수식$$    에서 $$수식$$(%dx%s%d)(%dx%s%d)=0$$/수식$$\n"\
         "$$수식$$x`=`± %s$$/수식$$" %(C,sd,D,N,so,O,N,soo,OO,ON)
    a3 = "$$수식$$x^2 %s%d = %dx$$/수식$$   에서\n$$수식$$x^2 %s%dx%s%d=0$$/수식$$      , $$수식$$(x%s%d)^2 =0$$/수식$$\n"\
         "$$수식$$x=%d$$/수식$$    (중근)" %(se,E,F,sff,FF,se,E,spp,PP,P)
    a4 = "$$수식$$%dx^2 %s%dx %s%d =0$$/수식$$     에서\n$$수식$$(%dx%s%d) (x%s%d) =0$$/수식$$\n"\
         "$$수식$$x`=`%s$$/수식$$  또는 $$수식$$x=%d$$/수식$$" %(G,sh,H,si,I,G,sqq,QQ,srr,RR,QG,R)
    a5 = "$$수식$$(x%s%d) (x%s%d)=%d$$/수식$$에서\n"\
         "$$수식$$x^2 %s%dx %s%d =0$$/수식$$        , $$수식$$(x%s%d)^2 =0$$/수식$$\n"\
         "$$수식$$x`=`%d$$/수식$$    (중근)" %(sj,J,sk,K,L,ss,S,st,T,su,U,UU)




    q1 = "$$수식$$x^2 %s%dx %s%d=0$$/수식$$" %(sa,A,sb,B)
    q2 = "$$수식$$%dx^2 %s%d=0$$/수식$$" %(C,sd,D)
    q3 = "$$수식$$x^2 %s%d`=`%dx$$/수식$$" %(se,E,F)
    q4 = "$$수식$$%dx^2 %s%dx %s%d=0$$/수식$$" %(G,sh,H,si,I)
    q5 = "$$수식$$(x%s%d) (x%s%d)=%d$$/수식$$" %(sj,J,sk,K,L)

    a = [0,1,2,3,4]
    Q = [q1,q2,q3,q4,q5]
    A = [a1,a2,a3,a4,a5]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]
    A1,A2,A3,A4,A5 = A[a[0]],A[a[1]],A[a[2]],A[a[3]],A[a[4]]

    if(a[0]==1):
        x1=0
    elif(a[1]==1):
        x1 = 1
    elif(a[2]==1):
        x1 = 2
    elif(a[3]==1):
        x1 = 3
    elif(a[4]==1):
        x1 = 4


    if(a[0]==3):
        x2=0
    elif(a[1]==3):
        x2 = 1
    elif(a[2]==3):
        x2 = 2
    elif(a[3]==3):
        x2 = 3
    elif(a[4]==3):
        x2 = 4

    if(x1>x2):
        X1 = answer_dict[x2]
        X2 = answer_dict[x1]
    else:
        X1 = answer_dict[x1]
        X2 = answer_dict[x2]

    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X1=X1,X2=X2)
    comment = comment.format(A1=A1,A2=A2,A3=A3,A4=A4,A5=A5)

    return stem, answer, comment

def factorization312_Stem_472():
    stem = "이차방정식 $$수식$$x^2 `-` {A} x`+`{B} =0$$/수식$$          이 중근 x=a를 갖고, 이차방정식 "\
            "$$수식$${C}x^2 {sd}{D}x {se}{E}=0$$/수식$$   이 중근 x=b를 가질 때, a-b의 값을 "\
            "구하시오.\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 `-` {A} x`+`{B} = 0$$/수식$$        에서\n"\
              "$$수식$$(x - {F}) ^2 =0 ,``x`=`{F}$$/수식$$         (중근)\n"\
              "즉, $$수식$$a `= `{F}$$/수식$$\n"\
              "이차방정식 $$수식$${C}x^2 {sd}{D}x{se}{E}=0$$/수식$$     에서\n"\
              "$$수식$$({G}x{shh}{HH})^2 =0$$/수식$$이므로 $$수식$$x`= `{HG}$$/수식$$  (중근)\n"\
              "즉, $$수식$$b= {HG}$$/수식$$\n"\
              "따라서 $$수식$$a-b= {F} {sii} {II} = {J}$$/수식$$\n\n"

    while True:
        num = [-5, -4, -2, -1, 1, 2, 4, 5]
        num2 = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        G = random.choice(num)
        H = random.choice(num2)
        if (gcd(G,H)==1 and abs(G)!=1):
            break

    N = random.choice([2, 5])
    if (N == 2):
        M = 1
        A = ""
        B = "%d OVER %d" %(1,4)
    else:
        M = random.choice([1, 2, 3, 4])
        A = "%d OVER %d" %(2*M,N)
        B = "%d OVER %d" %(M*M,25)

    F = "%d OVER %d" % (M, N)

    f = M / N

    if (H / G >= 0):
        HG = "%d OVER %d" % (abs(H), abs(G))
        II = "%s %d OVER %d" % ("-", abs(H), abs(G))
    else:
        HG = "%s %d OVER %d" % ("-", abs(H), abs(G))
        II = "%d OVER %d" % (abs(H), abs(G))


    C = G * G
    D = -2 * (G * H)
    E = H * H
    I = H / G
    ii = -1*I
    if((f-I)%1==0):
        J = int(f-I)
    else:
        J = round(f-I,2)
    HH =-1*H

    sd,se,shh,sii = mark(D),mark(E),mark(HH),mark(ii)

    stem = stem.format(A=A,B=B,C=C,D=D,E=E,sd=sd,se=se)
    answer = answer.format(J=J)
    comment = comment.format(A=A,B=B,F=F,C=C,D=D,E=E,G=G,HH=HH,I=I,II=II,sd=sd,se=se,shh=shh,HG=HG,J=J,sii=sii)

    return stem, answer, comment

def factorization312_Stem_473():
    stem = "이차방정식 $$수식$$x^2 `+` ax `+`b =0$$/수식$$     이 중근 $$수식$$x={A}$$/수식$$    를 가질 때, 상수 a, b에 대하여 "\
            "a+b의 값을 구하시오.\n"

    answer = "(답): $$수식$${D}$$/수식$$\n"
    comment = "(해설)\n"\
              "중근 $$수식$$x={A}$$/수식$$   를 가지고 $$수식$$x^2$$/수식$$의 계수가 1인 이차방정식은 "\
              "$$수식$$(x{saa}{AA})^2 =0$$/수식$$"\
              "이므로\n $$수식$$x^2 {sbb}{BB}x{sc}{C} =0$$/수식$$\n따라서 $$수식$$a={BB}, ``b ={C}$$/수식$$     이므로\n"\
              "$$수식$$a`+`b`=`{aa}{sc}{C}`=`{D}$$/수식$$\n\n"


    num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    A = random.choice(num)
    B = 2*A
    C = A*A
    D = C-B
    BB = -1*B
    AA = -1*A
    saa,sbb,sc = mark(AA),mark(BB),mark(C)
    if(B>0):
        aa = "(%d)" %(BB)
    else:
        aa = "%d" %(BB)
    stem = stem.format(A=A)
    answer = answer.format(D=D)
    comment = comment.format(A=A,AA=AA,BB=BB,C=C,D=D,saa=saa,sbb=sbb,sc=sc,aa=aa)

    return stem, answer, comment

def factorization312_Stem_474():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x`+a =0$$/수식$$    이 중근 $$수식$$x = b$$/수식$$   를 가질 때, a-b의 값을 구하시오.\n"\
           "(단, a, b는 상수)\n"

    answer = "(답): $$수식$${D}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 {sa}{A}x`+`a =0$$/수식$$    이 중근을 가지므로\n"\
              "$$수식$$a`=`({A} OVER {t} )^2 = {B}$$/수식$$\n"\
              "즉, 주어진 이차방정식은 $$수식$$x^2 {sa}{A}x {sb}{B}`=`0$$/수식$$     이므로\n"\
              "$$수식$$(x{scc}{CC})^2 =0$$/수식$$ , $$수식$$x={C}$$/수식$$    (중근)\n"\
              "따라서 $$수식$$b`=`{C}$$/수식$$    이므로\n"\
              "$$수식$$a`-`b`=`{B}{scc}{CC}`=`{D}$$/수식$$\n\n"

    num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    C = random.choice(num)
    A = -2*C
    B = C*C
    D = B-C
    CC = -1*C
    t = 2
    sa,sb,scc = mark(A),mark(B),mark(CC)

    stem = stem.format(A=A,sa=sa)
    answer = answer.format(D=D)
    comment = comment.format(A=A,B=B,CC=CC,C=C,D=D,sa=sa,sb=sb,scc=scc,t=t)

    return stem, answer, comment

def factorization312_Stem_475():
    stem = "이차방정식 $$수식$$x^2`+`ax`+ {ba} =0$$/수식$$      이 중근을 갖도록 하는 상수 a의 값들의 합은?\n"\
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 `+` ax + {ba} =0$$/수식$$      이 중근을 가지므로 "\
              "$$수식$$({a} OVER {t} )^2 = {ba}$$/수식$$\n"\
              "$$수식$${aa} OVER {f} `=`{ba}$$/수식$$     이므로 $$수식$$a^2 `-` {ca} =0$$/수식$$\n"\
              "$$수식$$ (a`+` {ed} ) (a`-` {ed} ) =0$$/수식$$       에서\n"\
              "$$수식$$a`=`-`{ed}$$/수식$$    또는 $$수식$$a`=`{ed}$$/수식$$\n"\
              "따라서 $$수식$$- {ed} `+` {ed} =0$$/수식$$\n\n"

    while True:
        num = [4,9,16,25,36,49]
        num2 = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        L = random.choice(num)
        A = random.choice(num)
        B = random.choice(num)
        F = random.choice(num2)
        G = random.choice(num2)
        if(A!=B and F!=G):
            break
    C = 4*B
    D = int(math.sqrt(A))
    E  = int(math.sqrt(C))

    if(B%A==0):
        ba = "%d" %(int(B/A))
    else:
        ab  = gcd(B,A)
        ba = "%d OVER %d"%(int(B/ab),int(A/ab))

    if(C%A==0):
        ca = "%d" %(int(C/A))
    else:
        ac= gcd(C,A)
        ca = "%d OVER %d"%(int(C/ac),int(A/ac))

    if(E%D==0):
        ed = "%d" %(int(E/D))
    else:
        de  = gcd(E,D)
        ed = "%d OVER %d"%(int(E/de),int(D/de))

    a = "a"
    aa = "%s^2" %("a")
    t = 2
    f = 4
    q = [-1*G, F, 0, G, -1*F]
    q.sort()
    q1,q2,q3,q4,q5 = q[0],q[1],q[2],q[3],q[4]
    Q1 = "$$수식$$%d$$/수식$$" %(q1)
    Q2 = "$$수식$$%d$$/수식$$" % (q2)
    Q3 = "$$수식$$%d$$/수식$$" % (q3)
    Q4 = "$$수식$$%d$$/수식$$" % (q4)
    Q5 = "$$수식$$%d$$/수식$$" % (q5)

    if(q[0]==0):
        k = 0
    elif(q[1]==0):
        k = 1
    elif(q[2]==0):
        k = 2
    elif(q[3]==0):
        k = 3
    else:
        k = 4
    K = answer_dict[k]
    stem = stem.format(ba=ba,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(a=a,t=t,f=f,aa=aa,ba=ba,ca=ca,ed=ed)

    return stem, answer, comment

def factorization312_Stem_476():
    stem = "다음 중 이차방정식 $$수식$$x^2 {sa}{A}ax `=`{B}a{sc}{C}$$/수식$$     가 중근을 갖도록 하는 상수 a의 값을 "\
           "모두 고르면? (정답 2개)\n"\
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {X1}, {X2}\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 {sa}{A}ax`=`{B}a{sc}{C}$$/수식$$     에서 $$수식$$x^2 {sa}{A}ax{sbb}{BB}a{scc}{CC} =0$$/수식$$     이고 "\
              "이 이차방정식이 중근을 가지므로\n$$수식$$({A2} a )^2 `=` {BB}a{scc}{CC}$$/수식$$\n"\
              "$$수식$$a^2 {sd}{D}a {se}{E} =0,``(a{sff}{FF}) (a{sgg}{GG}) =0$$/수식$$\n"\
              "따라서 $$수식$$a = {F}$$/수식$$   또는 $$수식$$a = {G}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        F = random.choice(num)
        G = random.choice(num)
        H = random.choice(num)
        A = random.choice(num)
        a = A * A * 4
        fg = F + G
        FG = F * G
        if (fg % a == 0 and FG % a == 0 and abs(F)!=abs(G) and abs(H)!=abs(F) and abs(H)!=abs(G) and (F+G)!=0):
            break

    D = -1*(F+G)
    E = F*G
    B = int(D * (1 / (4 * A * A)))

    C = int(E*(1/(4*A*A)))
    FF =-1*F
    GG = -1*G
    BB = -1*B
    CC = -1*C

    AA = -1*A

    if (AA/ 2 >= 0):
        A2 = "%d OVER %d" % (abs(AA), abs(2))
    else:
        A2 = "%s %d OVER %d" % ("-", abs(AA), abs(2))

    a = [0,1,2,3,4]
    Q = [F,GG,G,FF,H]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = Q[a[0]],Q[a[1]],Q[a[2]],Q[a[3]],Q[a[4]]

    if(a[0]==0):
        x1=0
    elif(a[1]==0):
        x1 = 1
    elif(a[2]==0):
        x1 = 2
    elif(a[3]==0):
        x1 = 3
    elif(a[4]==0):
        x1 = 4


    if(a[0]==2):
        x2=0
    elif(a[1]==2):
        x2 = 1
    elif(a[2]==2):
        x2 = 2
    elif(a[3]==2):
        x2 = 3
    elif(a[4]==2):
        x2 = 4

    if(x1>x2):
        X1 = answer_dict[x2]
        X2 = answer_dict[x1]
    else:
        X1 = answer_dict[x1]
        X2 = answer_dict[x2]

    if(A==1):
        sa = "+"
        A=""
    elif(A==-1):
        sa= "-"
        A=""
    else:
        sa = mark(A)
        A = A

    if(BB==1):
        sbb = "+"
        BB=""
    elif(BB==-1):
        sbb= "-"
        BB=""
    else:
        sbb = mark(BB)
        BB = BB

    if(B==1):
        B = ""
    elif(B==-1):
        B = "-"
    else:
        B = B

    scc,sc,sd,se,sff,sgg = mark(CC),mark(C),mark(D),mark(E),mark(FF),mark(GG)

    stem = stem.format(sa=sa,sc=sc,A=A,B=B,C=C,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X1=X1,X2=X2)
    comment = comment.format(A=A,B=B,C=C,BB=BB,CC=CC,A2=A2,D=D,E=E,FF=FF,GG=GG,F=F,G=G,sa=sa,sbb=sbb,\
                             scc=scc,sd=sd,se=se,sff=sff,sgg=sgg,sc=sc)

    return stem, answer, comment

def factorization312_Stem_477():
    stem = "이차방정식 $$수식$$x^2 `-`(k{sa}{A})x {sb}{B} =0$$/수식$$이 중근 $$수식$$x`=`k$$/수식$$ 를 가질 때,"\
            " 양수 k의 값은?\n① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 `-`(k{sa}{A})x{sb}{B} =0$$/수식$$은 중근을 가지므로\n"\
              "$$수식$$(`-`{ka} OVER {t} )^2 ={B}$$/수식$$     에서 $$수식$${kcd} OVER {f} ={B}$$/수식$$\n"\
              "$$수식$$k^2 {sc}{C}k {sd}{D}{see}{EE} =0$$/수식$$\n"\
              "$$수식$$(k {sf}{F} ) (k {sgg}{GG} ) =0$$/수식$$\n"\
              "$$수식$$k={G}$$/수식$$    또는 $$수식$$k = {FF}$$/수식$$\n"\
              "그런데 k의 값이 양수 이므로 $$수식$$k={G}$$/수식$$\n\n"

    while True:
        F = np.random.randint(1,10)
        G = np.random.randint(1,10)
        B = random.choice([4, 9, 16, 25, 36])
        C = F-G
        A = int(C / 2)
        D = A * A
        E = (G * F) + D
        if(F!=G  and abs(F-G)%2==0 and (4*B)==(G*F)+D and abs(C)!=1):
            break

    EE = -1*E
    GG = -1*G
    FF = -1*F
    t = 2
    f = 4

    q = [G+4,G+3,G+2,G+1,G]
    a = [0,1,2,3,4]
    random.shuffle(a)
    Q1,Q2,Q3,Q4,Q5 = q[a[0]],q[a[1]],q[a[2]],q[a[3]],q[a[4]]

    if(a[0]==4):
        x1=0
    elif(a[1]==4):
        x1 = 1
    elif(a[2]==4):
        x1 = 2
    elif(a[3]==4):
        x1 = 3
    elif(a[4]==4):
        x1 = 4

    K = answer_dict[x1]

    sa,sb,sc,sd,see,sf,sgg = mark(A),mark(B),mark(C),mark(D),mark(EE),mark(F),mark(GG)
    ka = "{k %s %d} " %(sa,A)
    kcd = "{k^2 %s %d k %s %d } " %(sc,C,sd,D)

    stem = stem.format(A=A,B=B,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sb=sb,sa=sa)
    answer = answer.format(K=K)
    comment = comment.format(A=A,B=B,C=C,D=D,EE=EE,F=F,GG=GG,G=G,FF=FF,ka=ka,kcd=kcd,sa=sa,sb=sb,sc=sc,sd=sd,\
                             see=see,sf=sf,sgg=sgg,t=t,f=f)

    return stem, answer, comment

def factorization312_Stem_478():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}kx {sb}{B}k =0$$/수식$$     이 중근을 가질 때, 이 방정식의 해를 구하시오.\n"\
           "(단, k는 상수, $$수식$$k &gt; 0$$/수식$$   )\n"

    answer = "(답): $$수식$${H}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 {sa}{A}kx{sb}{B}k =0$$/수식$$      이 중근을 가지므로\n"\
              "$$수식$$({ak} OVER {t} )^2 ={B}k, ``{C}k^2 = {D}k,`` {C}k^2 {sdd}{DD}k =0$$/수식$$\n"\
              "$$수식$$k (k{see}{EE}) =0$$/수식$$\n"\
              "$$수식$$k =0$$/수식$$    또는 $$수식$$k = {E}$$/수식$$\n"\
              "그런데 $$수식$$k &gt; 0$$/수식$$   이므로 $$수식$$k={E}$$/수식$$\n"\
              "따라서 주어진 이차방정식은 $$수식$$x^2 {sf}{F}x {sg}{G} =0$$/수식$$     , 즉\n"\
              "$$수식$$(x{shh}{HH})^2 =0$$/수식$$  이므로 $$수식$$x={H}$$/수식$$     (중근)\n\n"

    while True:
        H = np.random.randint(-9,0)
        A = np.random.randint(2,10)
        B = np.random.randint(2,10)
        E = np.random.randint(1,10)
        C = int((1 / 4) * (A * A))
        if(A%2==0 and (A*E)==(-2*H) and (B*E)==(H*H) and (C*E)==B):
            break

    F = -2*H
    G = H*H
    D = C*E
    DD = -1*D
    EE = -1*E
    HH = -1*H

    sa,sb,sdd,see,sf,sg,shh = mark(A),mark(B),mark(DD),mark(EE),mark(F),mark(G),mark(HH)
    ak = "{%d%s}" %(A,"k")
    t = 2



    stem = stem.format(A=A,B=B,sa=sa,sb=sb)
    answer = answer.format(H=H)
    comment = comment.format(A=A,B=B,C=C,D=D,DD=DD,EE=EE,E=E,F=F,G=G,H=H,HH=HH,\
                             sa=sa,sb=sb,sdd=sdd,see=see,sf=sf,sg=sg,shh=shh,ak=ak,t=t)

    return stem, answer, comment

def factorization312_Stem_479():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x `=`{B}x`-`m$$/수식$$     이 중근을 가질 때, 이차방정식 "\
            "$$수식$$(m{sc}{C})x^2 {sd}{D}x {se}{E}=0$$/수식$$의 두 근의 곱을 구하시오. (단, m은 상수)\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 {sa}{A}x = {B}x `-`m$$/수식$$     , 즉 $$수식$$x^2 {sf}{F}x`+`m =0$$/수식$$    이 중근을 가지므로\n"\
              "$$수식$$({F} OVER {t} )^2 =m$$/수식$$    에서 $$수식$$m={G}$$/수식$$\n"\
              "이 때 $$수식$$(m{sc}{C})x^2 {sd}{D}x {se}{E} =0$$/수식$$에 $$수식$$m ={G}$$/수식$$   를 대입하면\n"\
              "$$수식$$x^2 {sd}{D}x {se}{E} =0$$/수식$$    , $$수식$$(x{shh}{HH}) (x{sii}{II})`=0$$/수식$$\n"\
              "$$수식$$x={H}$$/수식$$  또는 $$수식$$x={I}$$/수식$$\n"\
              "따라서 두 근의 곱은 $$수식$${H} TIMES {I} `=`{J}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        H = random.choice(num)
        I = random.choice(num)
        A = np.random.randint(-9,10)
        B = np.random.randint(-9,10)
        F = A - B
        D = -1 * (H + I)
        G = int(1 / 4 * (F * F))
        if(H!=I and A!=B and F%2==0 and abs(A)!=1 and abs(B)!=1 and abs(D)!=1 and D!=0 and abs(F)!=1 and G!=1):
            break

    E = H*I
    C = 1-G
    J =H*I
    HH = -1*H
    II = -1*I
    t=2

    sa,sc,sd,se,sf,shh,sii = mark(A),mark(C),mark(D),mark(E),mark(F),mark(HH),mark(II)



    stem = stem.format(A=A,B=B,C=C,D=D,E=E,sa=sa,sc=sc,sd=sd,se=se)
    answer = answer.format(J=J)
    comment = comment.format(A=A,B=B,F=F,G=G,C=C,D=D,E=E,H=H,HH=HH,II=II,I=I,J=J,t=t,\
                             sa=sa,sf=sf,sc=sc,sd=sd,se=se,shh=shh,sii=sii)

    return stem, answer, comment

def factorization312_Stem_480():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x `=`{B}x`-`m$$/수식$$     이 중근을 가질 때, 이차방정식 "\
            "$$수식$$(m{sc}{C})x^2 {sd}{D}x {se}{E}=0$$/수식$$의 두 근의 합을 구하시오. (단, m은 상수)\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$$x^2 {sa}{A}x = {B}x `-`m$$/수식$$     , 즉 $$수식$$x^2 {sf}{F}x`+`m =0$$/수식$$    이 중근을 가지므로\n"\
              "$$수식$$({F} OVER {t} )^2 =m$$/수식$$    에서 $$수식$$m={G}$$/수식$$\n"\
              "이 때 $$수식$$(m{sc}{C})x^2 {sd}{D}x {se}{E} =0$$/수식$$에 $$수식$$m ={G}$$/수식$$   를 대입하면\n"\
              "$$수식$$x^2 {sd}{D}x {se}{E} =0$$/수식$$    , $$수식$$(x{shh}{HH}) (x{sii}{II})`=0$$/수식$$\n"\
              "$$수식$$x={H}$$/수식$$  또는 $$수식$$x={I}$$/수식$$\n"\
              "따라서 두 근의 합은 $$수식$${H} {si} {I} `=`{J}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        H = random.choice(num)
        I = random.choice(num)
        A = random.choice(num)
        B = random.choice(num)
        F = A - B
        D = -1 * (H + I)
        G = int(1 / 4 * (F * F))
        if(H!=I and A!=B and F%2==0 and abs(A)!=1 and abs(B)!=1 and abs(D)!=1 and abs(D)!=0 and abs(F)!=1 and G!=1):
            break

    E = H*I
    C = 1-G
    J =H+I
    HH = -1*H
    II = -1*I
    t=2

    sa,sc,sd,se,sf,shh,sii,si = mark(A),mark(C),mark(D),mark(E),mark(F),mark(HH),mark(II),mark(I)



    stem = stem.format(A=A,B=B,C=C,D=D,E=E,sa=sa,sc=sc,sd=sd,se=se)
    answer = answer.format(J=J)
    comment = comment.format(A=A,B=B,F=F,G=G,C=C,D=D,E=E,H=H,HH=HH,II=II,I=I,J=J,t=t,\
                             sa=sa,sf=sf,sc=sc,sd=sd,se=se,shh=shh,sii=sii,si=si)

    return stem, answer, comment

def factorization312_Stem_481():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x `+`m =0$$/수식$$    이 중근을 가질 때, 다음 두 이차방정식의 공통인 근이 아닌 근의 합은?\n"\
           "$$표$$ $$수식$$x^2 `+` (m {sb}{B})x {sc}{C} =0$$/수식$$\n"\
            "$$수식$${D}x^2 {se}{E}x {sf}{F} {sg}{G}m =0$$/수식$$       $$/표$$\n"\
            "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 {sa}{A}x `+` m=0$$/수식$$    이 중근을 가지므로\n"\
              "$$수식$$({A} OVER {t})^2 =m$$/수식$$  에서 $$수식$$m={H}$$/수식$$\n"\
              "$$수식$$x^2 `+` (m{sb}{B})x {sc}{C}=0$$/수식$$    , $$수식$$x^2 {si}{I}x {sc}{C} =0$$/수식$$\n"\
              "$$수식$$(x{sjj}{JJ}) (x{skk}{KK}) =0$$/수식$$에서\n"\
              "$$수식$$x={J}$$/수식$$  또는 $$수식$$x={K}$$/수식$$\n"\
              "$$수식$${D}x^2 {se}{E}x {sf}{F}{sg}{G}m =0$$/수식$$       에 $$수식$$m={H}$$/수식$$   를 대입하면\n"\
              "$$수식$${D}x^2 {se}{E}x {sf}{F}{sl}{L} =0$$/수식$$       , $$수식$${D}x^2 {se}{E}x {sm}{M} =0$$/수식$$\n"\
              "$$수식$$({D}x{snn}{NN}) (x{skk}{KK}) =0$$/수식$$\n"\
              "$$수식$$x`=`{P}$$/수식$$  또는 $$수식$$x`=`{K}$$/수식$$\n"\
              "따라서 두 이차방정식의 공통인 근이 아닌 근의 합은 $$수식$${J} {sp} {P}`=`{Q}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        A = random.choice(num)
        J = random.choice(num)
        K = random.choice(num)
        D = random.choice(num)
        N = random.choice(num)
        G = random.choice(num)
        H = int(1 / 4 * (A * A))
        C = J * K
        I = -1 * (J + K)
        B = I - H
        M = N * K
        E = -1 * ((D * K) + N)
        L = G * H
        F = M - L
        if(A%2==0 and J!=K and gcd(D,N)==1 and abs(A)!=1 and abs(D)!=1 and B!=0 and abs(I)!=1 and I!=0 and
                abs(E)!=1 and E!=0 and abs(G)!=1):
            break


    p = N/D
    if(p>0):
        P = "%d OVER %d" % (abs(N), abs(D))
    else:
        P = "%s %d OVER %d" % ("-",abs(N), abs(D))

    q = N +(D*J)
    if(q%D==0):
        Q = int(q/D)
        q1 ="$$수식$$%s`=`%d$$/수식$$" %("x",Q)
    else:
        if(q/D >0):
            Q = "%d OVER %d" %(abs(q),abs(D))
            q1 = "$$수식$$%s`=`%s$$/수식$$" % ("x", Q)
        else:
            Q = "%s %d OVER %d" %("-",abs(q),abs(D))
            q1 = "$$수식$$%s`=`%s$$/수식$$" % ("x", Q)


    while True:
        t1 = np.random.randint(1,50)
        u1 = np.random.randint(1,50)
        t2 = np.random.randint(2,6)
        u2 = np.random.randint(2,6)
        if(gcd(t1,t2)==1 and gcd(u1,u2)==1 and t1!=q and u1!=q and t2!=D and u2!=D):
            break


    q2 = "$$수식$$%s`=`%s %d OVER %d$$/수식$$" % ("x", "-",t1,t2)
    q3 = "$$수식$$%s`=`%d OVER %d$$/수식$$" % ("x", u1,u2)
    q4 = "$$수식$$%s`=`%d OVER %d$$/수식$$" % ("x", t1,t2)
    q5 = "$$수식$$%s`=`%s %d OVER %d$$/수식$$" % ("x", "-",u1,u2)

    a = [0, 1, 2, 3, 4]
    q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 0):
        x1 = 0
    elif (a[1] == 0):
        x1 = 1
    elif (a[2] == 0):
        x1 = 2
    elif (a[3] == 0):
        x1 = 3
    elif (a[4] == 0):
        x1 = 4

    X = answer_dict[x1]
    JJ = -1*J
    KK = -1*K
    NN = -1*N
    t=2


    sa,sb,sc,se,sf,sg,si,sjj,skk,sl,sm,snn,sp = mark(A),mark(B),mark(C),mark(E),mark(F),mark(G),mark(I),mark(JJ),\
                                             mark(KK),mark(L),mark(M),mark(NN),mark(p)


    stem = stem.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,sb=sb,sa=sa,sc=sc,se=se,sf=sf,sg=sg,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(A=A,B=B,C=C,H=H,I=I,JJ=JJ,J=J,KK=KK,D=D,E=E,F=F,G=G,L=L,M=M,NN=NN,P=P,Q=Q,K=K,t=t,\
                             sa=sa,sb=sb,sc=sc,si=si,sjj=sjj,skk=skk,se=se,sf=sf,sg=sg,sl=sl,sm=sm,snn=snn,sp=sp)

    return stem, answer, comment

def factorization312_Stem_482():
    stem = "이차방정식 $$수식$${A}x^2 {sb}{B}x{sc}{C}a{sd}{D} =0$$/수식$$       이 중근 $$수식$$x=b$$/수식$$    를 가질 때, "\
           "a-b의 값은? (단, a는 상수)\n"\
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "$$수식$${A}x^2 {sb}{B}x{sc}{C}a{sd}{D} =0$$/수식$$       의 양변을 $$수식$${A}$$/수식$$로 나누면\n"\
              "$$수식$$x^2 {se}{E}x `+`{cd} OVER {A} `=0$$/수식$$        이고\n"\
              "이 이차방정식이 중근을 가지므로\n"\
              "$$수식$$({E} OVER {t} )^2 = {cd} OVER {A}$$/수식$$     에서 $$수식$${F} = {C}a{sd}{D}$$/수식$$\n"\
              "$$수식$$a ={G}$$/수식$$\n"\
              "즉, 이차방정식은 $$수식$${A}x^2 {sb}{B}x{sc}{C}a{sd}{D} =0$$/수식$$       에서\n"\
              "$$수식$${A}x^2 {sb}{B}x{sh}{H}{sd}{D} =0`,`{A}x^2 {sb}{B}x{si}{I}=0$$/수식$$\n"\
              "$$수식$$x^2 {sj}{J}x{sk}{K}=0$$/수식$$\n"\
              "$$수식$$(x{sll}{LL})^2 =0$$/수식$$  , $$수식$$x={L}$$/수식$$    (중근)\n"\
              "따라서 $$수식$$b={L}$$/수식$$  이므로\n"\
              "$$수식$$a-b`=`{G}{sll}{LL}`=`{M}$$/수식$$\n\n"

    while True:
        L = np.random.randint(-9, 10)
        A = np.random.randint(2, 10)
        C = np.random.randint(2, 10)
        G = np.random.randint(1, 10)
        K = L * L
        F = A * K
        D = F - (C * G)
        if (L != 0 and D<100):
            break

    J = -2 * L
    B = A * J
    I = A * K
    II = -1*I
    LL = -1*L
    H = C * G
    E = J
    M = G - L

    q1,q2,q3,q4,q5 = M,M+1,M+2,M+3,M+4
    a = [0, 1, 2, 3, 4]
    q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 0):
        x1 = 0
    elif (a[1] == 0):
        x1 = 1
    elif (a[2] == 0):
        x1 = 2
    elif (a[3] == 0):
        x1 = 3
    elif (a[4] == 0):
        x1 = 4

    X = answer_dict[x1]

    t = 2
    sb,sc,sd,se,sa,sh,si,sj,sk,sll = mark(B),mark(C),mark(D),mark(E),mark(A),mark(H),mark(I),mark(J),mark(K),mark(LL)
    cd = "{%d%s %s%d}" % (C, "a", sd, D)

    stem = stem.format(A=A,B=B,C=C,D=D,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sb=sb,sc=sc,sd=sd)
    answer = answer.format(X=X)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,J=J,K=K,LL=LL,L=L,
                             sb=sb,sc=sc,sd=sd,se=se,sa=sa,sh=sh,si=si,sj=sj,sk=sk,sll=sll,cd=cd,t=t,M=M)

    return stem, answer, comment

def factorization312_Stem_483():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x`+`k{sb}{B} =0$$/수식$$     이 중근을 가질 때, "\
           "이차방정식 $$수식$${C}x^2 `+`kx{sd}{D} =0$$/수식$$    의 음수인 해를 구하시오. (단, k는 상수)\n"

    answer = "(답): $$수식$${GG}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2 {sa}{A}x `+`k{sb}{B} =0$$/수식$$     이 중근을 가지므로 " \
              "$$수식$$({A} OVER {t} )^2 `=`k{sb}{B}$$/수식$$\n"\
              "$$수식$${E}`=`k{sb}{B}$$/수식$$    에서 $$수식$$k`=`{F}$$/수식$$\n"\
              "즉, $$수식$${C}x^2`+`kx{sd}{D} =0$$/수식$$     에서 $$수식$${C}x^2 {sf}{F}x{sd}{D} =0$$/수식$$\n"\
              "$$수식$$(x{sg}{G}) ({C}x{shh}{HH}) =0$$/수식$$\n"\
              "$$수식$$x`=`{GG}$$/수식$$   또는 $$수식$$x = {hc}$$/수식$$\n"\
              "이때 음수인 해는 $$수식$$x`=`{GG}$$/수식$$\n\n"

    while True:
        A = random.choice([-8,-6,-4,-2,2,4,6,8])
        C = np.random.randint(2,10)
        G = np.random.randint(1,10)
        H = np.random.randint(1,10)
        F = (G * C) - H
        D = -1 * (G * H)
        E = int((A * A) / 4)
        B = E - F
        if(G!=(-1*H) and gcd(C,H)==1 and abs(F)!=1 and F!=0 and B!=0):
            break

    GG = -1*G
    HH = -1*H
    t =2
    if(H%C==0):
        hc = "%d" %(int(H/C))
    else:
        hc = "%d OVER %d"%(H,C)

    sa,sb,sd,sf,shh,sg = mark(A),mark(B),mark(D),mark(F),mark(HH),mark(G)

    stem = stem.format(A=A,B=B,C=C,D=D,sa=sa,sb=sb,sd=sd)
    answer = answer.format(GG=GG)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,GG=GG,HH=HH,hc=hc,sa=sa,sb=sb,sd=sd,sf=sf,sg=sg,shh=shh,t=t)

    return stem, answer, comment

def factorization312_Stem_484():
    stem = "이차방정식 $$수식$$x^2 {sa}{A}x`+`k{sb}{B} =0$$/수식$$     이 중근을 가질 때, " \
           "이차방정식 $$수식$${C}x^2 `+`kx{sd}{D} =0$$/수식$$    의 두 근의 곱을 구하시오. (단, k는 상수)\n"

    answer = "(답): $$수식$${I}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 {sa}{A}x `+`k{sb}{B} =0$$/수식$$     이 중근을 가지므로 " \
              "$$수식$$({A} OVER {t} )^2 `=`k{sb}{B}$$/수식$$\n" \
              "$$수식$${E}`=`k{sb}{B}$$/수식$$    에서 $$수식$$k`=`{F}$$/수식$$\n" \
              "즉, $$수식$${C}x^2`+`kx{sd}{D} =0$$/수식$$     에서 $$수식$${C}x^2 {sf}{F}x{sd}{D} =0$$/수식$$\n" \
              "$$수식$$(x{sgg}{GG}) ({C}x{shh}{HH}) =0$$/수식$$\n" \
              "$$수식$$x`=`{G}$$/수식$$   또는 $$수식$$x = {hc}$$/수식$$\n" \
              "이때 두 근의 곱은 $$수식$$x`=`{G}`TIMES`{hc}`=`{I}$$/수식$$\n\n"

    while True:
        A = random.choice([-8, -6, -4, -2, 2, 4, 6, 8])
        C = np.random.randint(-9,10)
        G = np.random.randint(-9,10)
        H = np.random.randint(-9, 10)
        F = -1 * ((G * C) + H)
        D = (G * H)
        E = int((A * A) / 4)
        B = E - F
        if (G != H and gcd(C, H) == 1 and C!=0 and abs(C)!=1 and G!=0 and H!=0 and G%C==0 and B!=0 and abs(F)!=1
        and F!=0):
            break


    GG = -1 * G
    HH = -1 * H
    I = int(G*(H/C))
    t = 2
    sa, sb, sd, sf, shh,sgg = mark(A), mark(B), mark(D), mark(F), mark(HH), mark(GG)
    if (H / C > 0):
        hc = "%d OVER %d" % (abs(H), abs(C))
    else:
        hc = "%s %d OVER %d" % ("-", abs(H), abs(C))

    stem = stem.format(A=A, B=B, C=C, D=D, sa=sa, sb=sb, sd=sd)
    answer = answer.format(I=I)
    comment = comment.format(A=A, B=B, C=C, D=D, E=E, F=F, G=G, GG=GG, HH=HH, sa=sa, sb=sb, sd=sd, sf=sf, sgg=sgg,
                             shh=shh, t=t,I=I,hc=hc)

    return stem, answer, comment

def factorization312_Stem_485():
    stem = "이차방정식 $$수식$$x^2 `+`kx{sa}{A} =0$$/수식$$    이 양수인 중근을 갖도록 하는 상수 k의 값과 이때의 중근을" \
           " 차례로 구하시오.\n"

    answer = "(답): $$수식$${CC}$$/수식$$  , $$수식$${D}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$$({k} OVER {t} )^2 ={A}$$/수식$$    에서 $$수식$$k^2 ={B}$$/수식$$  이므로 " \
              "k = ±{C}\n양수인 중근을 갖기 위해서는 $$수식$$k = {CC}$$/수식$$\n" \
              "즉, $$수식$$x^2 {scc}{CC}x{sa}{A}`=`(x{sdd}{DD})^2 `=0$$/수식$$이므로\n"\
              "$$수식$$x`=`{D}$$/수식$$    (중근)\n\n"


    D =np.random.randint(1,10)
    C = 2*D
    A = D*D
    B = 4*A
    CC = -1*C
    DD = -1*D
    k = "k"
    t =2
    sa,scc,sdd = mark(A),mark(CC),mark(DD)

    stem = stem.format(A=A,sa=sa)
    answer = answer.format(CC=CC,D=D)
    comment = comment.format(A=A,B=B,C=C,CC=CC,DD=DD,scc=scc,sdd=sdd,D=D,k=k,t=t,sa=sa)

    return stem, answer, comment

def factorization312_Stem_486():
    stem = "이차방정식 $$수식$$x^2`+`ax`+b=0$$/수식$$    이 중근을 갖고 이차방정식 $$수식$$x^2`-`cx{sa}{A}=0$$/수식$$    과" \
           " 공통인 근 $$수식$$x={B}$$/수식$$  를 가질 때, 상수 a, b, c에 대하여 $$수식$$a+b+c$$/수식$$   의 값을 구하시오.\n"

    answer = "(답): $$수식$${G}$$/수식$$\n"
    comment = "(해설)\n"\
              "중근 $$수식$$x={B}$$/수식$$  를 갖고 $$수식$$x^2$$/수식$$의 계수가 1인 이차방정식은 " \
              "$$수식$$(x{sbb}{BB})^2`=0$$/수식$$이므로\n$$수식$$x^2`{sc}{C}x{sd}{D}=0$$/수식$$\n"\
              "따라서 $$수식$$a={C}$$/수식$$   , $$수식$$b={D}$$/수식$$\n"\
              "$$수식$$x^2`-`cx{sa}{A}=0$$/수식$$    에 $$수식$$x`=`{B}$$/수식$$  를 대입하면\n"\
              "$$수식$${E}{sbb}{BB}c{sa}{A}=0$$/수식$$\n$$수식$$c`=`{F}$$/수식$$\n"\
              "따라서 $$수식$$a`+`b`+`c`=`{C}{sd}{D}{sf}{F}`=`{G}$$/수식$$\n\n"

    while True:
        A = np.random.randint(-30,30)
        B = np.random.randint(-9,10)
        E = B * B
        if(A!=0 and B!=0 and (A+E)%B==0 and abs(B)!=1):
            break

    C = -2*B
    D = B*B
    E=B*B
    F = int((A+E)/B)
    G = C+D+F
    BB = -1*B
    sa,sbb,sd,sf,sc = mark(A),mark(BB),mark(D),mark(F),mark(C)

    stem = stem.format(A=A,B=B,sa=sa)
    answer = answer.format(G=G)
    comment = comment.format(A=A,B=B,BB=BB,C=C,D=D,E=E,F=F,G=G,sbb=sbb,sc=sc,sd=sd,sa=sa,sf=sf)

    return stem, answer, comment

def factorization312_Stem_487():
    stem = "한 자리 자연수 b에 대하여 이차방정식 $$수식$$x^2`+`ax{sa}{A}b`=0$$/수식$$    이 중근을 가질 때, 자연수 a의 최대값은?\n"\
           "①{Q1}    ② {Q2}   ③ {Q3}\n" \
           "④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "$$수식$$x^2`+`ax{sa}{A}b`=0$$/수식$$    이 중근을 가지므로\n"\
              "$$수식$${A}b`=`(a OVER {t} )^2$$/수식$$  에서 $$수식$$a^2`=`4`TIMES`{A}b`=`{D}^2`b$$/수식$$\n"\
              "따라서 b는 제곱수이어야하고, b가 최대일 때 a가 최대가 된다.\n"\
              "한 자리 자연수 중 가장 큰 제곱수는 $$수식$$9$$/수식$$이므로\n"\
              "$$수식$$b`=`9$$/수식$$\n"\
              "따라서 $$수식$$a^2`=`{D}^2` TIMES 9`=`({D}`TIMES`3`)^2`=`{E}^2$$/수식$$  에서\n"\
              "$$수식$$a`=`{E}$$/수식$$\n\n"

    A = random.choice([4,9,16,25,36])
    C = 4*A
    D = int(math.sqrt(C))
    E = 3*D
    while True:
        F = np.random.randint(10,51)
        G = np.random.randint(10,51)
        H = np.random.randint(10,51)
        I = np.random.randint(10,51)
        if(E!=F and E!=G and E!=H and E!=I and F!=G and F!=H and F!=I and G!=H and G!=I and H!=I):
            break

    sa = mark(A)
    t = 2
    a = "a"
    q1 = "%d" %(F)
    q2 = "%d" %(E)
    q3 = "%d" %(G)
    q4 = "%d" %(H)
    q5 = "%d" %(I)

    a = [0, 1, 2, 3, 4]
    q = [q1,q2,q3,q4,q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 1):
        x1 = 0
    elif (a[1] == 1):
        x1 = 1
    elif (a[2] == 1):
        x1 = 2
    elif (a[3] == 1):
        x1 = 3
    elif (a[4] == 1):
        x1 = 4

    K = answer_dict[x1]
    stem = stem.format(A=A,sa=sa,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(A=A,D=D,E=E,sa=sa,t=t)

    return stem, answer, comment

def factorization312_Stem_488():
    stem = "두 자리 자연수 a, b에 대하여 이차방정식 $$수식$$x^2`+`ax{sa}{A}b`=0$$/수식$$    이 중근을 갖는다. " \
           "a의 값이 최소가 되도록 b의 값을 정할 때, $$수식$$a`+`b$$/수식$$ 의 값은?\n" \
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "$$수식$$x^2`+`ax{sa}{A}b`=0$$/수식$$     이 중근을 가지므로\n"\
              "$$수식$${A}b`=`(a OVER 2 )^2$$/수식$$에서 $$수식$$a^2`=`4`TIMES`{A}b`=`{c}^2`b$$/수식$$\n"\
              "이때 $$수식$$a^2`=`{C}b$$/수식$$ 를 만족시키는 a, b의 순서쌍 (a, b)는 {ab}\n"\
              "그런데 a, b는 a의 값이 최소가 되게 하는 두 자리의 자연수이므로 $$수식$$a`=`{D},` b`=`{E}$$/수식$$\n"\
              "따라서 $$수식$$a`+`b`=`{F}$$/수식$$\n\n"

    A = random.choice([4,9,16,25,36])
    a = int(math.sqrt(A))
    C = 4 * A
    c = int(math.sqrt(C))
    E = 16
    D = 8*a
    F = D+E
    ab = "$$수식$$(%d`,`%d),`(%d`,`%d),`(%d`,`%d),`(%d`,`%d),`" \
         "(%d`,`%d),...$$/수식$$" %(2*a,1,2*2*a,4,2*3*a,9,2*4*a,16,2*5*a,25)

    while True:
        J = np.random.randint(10,51)
        G = np.random.randint(10,51)
        H = np.random.randint(10,51)
        I = np.random.randint(10,51)
        if(F!=G and F!=H and F!=I and F!=J and G!=H and G!=I and G!=J and H!=I and H!=J and I!=J):
            break

    q1 = "%d" % (G)
    q2 = "%d" % (H)
    q3 = "%d" % (I)
    q4 = "%d" % (F)
    q5 = "%d" % (J)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    K = answer_dict[x1]
    sa = mark(A)
    stem = stem.format(A=A,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sa=sa)
    answer = answer.format(K=K)
    comment = comment.format(A=A,C=C,D=D,E=E,F=F,sa=sa,ab=ab,c=c)

    return stem, answer, comment

def factorization312_Stem_489():
    stem = "다음 이차방정식 중 해가 유리수인 것은?\n" \
           "① {Q1}\n② {Q2}\n③ {Q3}\n④ {Q4}\n⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "① {A1}\n② {A2}\n③ {A3}\n④ {A4}\n⑤ {A5}\n\n"

    while True:
        A = random.choice([2,3,5,6,7,8])
        B = np.random.randint(10,31)
        C = np.random.randint(1, 10)
        D = random.choice([2,3,5,6,7,8])
        E = np.random.randint(1, 10)
        G = np.random.randint(2, 10)
        H = np.random.randint(1, 10)
        I = random.choice([2,3,5,6,7,8])
        if(gcd(G,I)==1 and B!=16 and B!=25):
            break

    F = random.choice([1,4,9])
    J = int(math.sqrt(F))
    kl = [J-E,-1*J-E]
    random.shuffle(kl)
    K,L = kl[0] ,kl[1]
    BB = -1*B
    II = -1*I
    HH = -1*H
    CC = -1*C
    sbb,sc,se,sh,sii = mark(BB),mark(C),mark(E),mark(H),mark(II)

    q1 = "$$수식$$x^2 `=`%d$$/수식$$" %(A)
    q2 = "$$수식$$x^2`%s%d`=%d$$/수식$$" %(sbb,BB,0)
    q3 = "$$수식$$(x%s%d)^2`=`%d$$/수식$$" %(sc,C,D)
    q4 = "$$수식$$(x%s%d)^2`=`%d$$/수식$$" %(se,E,F)
    q5 = "$$수식$$%dLEFT(x%s%d)^2`%s%d`=%d$$/수식$$"%(G,sh,H,sii,II,0)

    a1 = "$$수식$$x^2`=`%d$$/수식$$  에서 $$수식$$x`=`± sqrt %d$$/수식$$" %(A,A)
    a2 = "$$수식$$x^2`%s%d`=%d$$/수식$$   에서 $$수식$$x^2`=%d$$/수식$$    이므로\n $$수식$$x`=`± sqrt %d$$/수식$$"%(sbb,BB,0,B,B)
    a3 = "$$수식$$(x%s%d)^2`=`%d$$/수식$$에서 $$수식$$x%s%d`=`± sqrt %d$$/수식$$        이므로\n"\
         "$$수식$$x`=`%d`± sqrt %d$$/수식$$" %(sc,C,D,sc,C,D,CC,D)
    a4 = "$$수식$$(x%s%d)^2`=`%d$$/수식$$에서 $$수식$$x%s%d`=`± %d$$/수식$$      이므로\n"\
         "$$수식$$x`=`%d$$/수식$$    또는 $$수식$$x`=`%d$$/수식$$" %(se,E,F,se,E,J,K,L)
    a5 = "$$수식$$%dLEFT(x%s%d)^2`%s%d`=`%d$$/수식$$    에서 $$수식$$%dLEFT(x%s%d)^2`=`%d$$/수식$$   이므로 "\
        "$$수식$$(x%s%d)^2`=`%d OVER  %d`,``x%s%d`=`± sqrt {%d OVER %d}$$/수식$$\n"\
        "$$수식$$x`=`%d ± sqrt {%d OVER %d}$$/수식$$" %(G,sh,H,sii,II,0,G,sh,H,I,sh,H,I,G,sh,H,I,G,HH,I,G)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    A = [a1,a2,a3,a4,a5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]
    A1, A2, A3, A4, A5 = A[a[0]], A[a[1]], A[a[2]], A[a[3]], A[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    X = answer_dict[x1]


    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(A1=A1,A2=A2,A3=A3,A4=A4,A5=A5)

    return stem, answer, comment

def factorization312_Stem_490():
    stem = "이차방정식 $$수식$${A}(x`+`{B})^2`={C}$$/수식$$의 해가 $$수식$$x`=`a`±`b sqrt{F}$$/수식$$    일 때, " \
           "$$수식$$a`+`b$$/수식$$  의 값은? (단, a, b는 유리수)\n"\
           "① {Q1}   ② {Q2}   ③ {Q3}\n④ {Q4}   ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${A}(x`+`{B})^2`=`{C}$$/수식$$   에서 $$수식$$(x`+`{B})^2`={D}$$/수식$$\n"\
              "$$수식$$x`+`{B}`=`±`{E} sqrt{F}`,`x`=`-`{B}`±`{E} sqrt{F}$$/수식$$\n"\
              "따라서 $$수식$$a`=`-`{B},`b`=`{E}$$/수식$$     이므로 $$수식$$a`+`b`=`{G}$$/수식$$\n\n"


    A = np.random.randint(2,10)
    B = np.random.randint(1,10)
    E = np.random.randint(2,10)
    F = random.choice([2,3,5,7,11,13,15])
    D = E*E*F
    G = E-B
    C =A*D

    q1 = "%d" %(G+4)
    q2 = "%d" % (G-4)
    q3 = "%d" % (G-2)
    q4 = "%d" % (G)
    q5 = "%d" % (G+2)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    K = answer_dict[x1]


    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,A=A,B=B,C=C,F=F)
    answer = answer.format(K=K)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G)

    return stem, answer, comment

def factorization312_Stem_491():
    stem = "이차방정식 $$수식$$(x`+`A`)^2`=`B$$/수식$$의 해가 $$수식$$x`=`{Z}`±`sqrt{Y}$$/수식$$     일 때, " \
           "$$수식$$A`+`B$$/수식$$  의 값을 구하시오. (단, A, B는 유리수)\n"

    answer = "(답): $$수식$${X}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x`+`A`)^2`=`B$$/수식$$   에서\n"\
              "$$수식$$x`+`A`=`±`sqrt {B}`,~`x`=`-`A`±`sqrt{B}$$/수식$$\n"\
              "이 때 $$수식$$x`=`{Z}`±`sqrt{Y}$$/수식$$     이므로 $$수식$$A`=`{ZZ},~`B`=`{Y}$$/수식$$\n"\
              "따라서 $$수식$$A`+`B`=`{z1}`+`{Y}`=`{X}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-9,10)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13,15])
    X = Y-Z
    ZZ = -1*Z
    B = "B"
    if(ZZ>0):
        z1 = "%d"%(ZZ)
    else:
        z1 = "(%d )"%(ZZ)

    stem = stem.format(B=B,Z=Z,Y=Y)
    answer = answer.format(X=X)
    comment = comment.format(B=B,Z=Z,Y=Y,ZZ=ZZ,X=X,z1=z1)

    return stem, answer, comment

def factorization312_Stem_492():
    stem = "이차방정식 $$수식$$(x`+`A`)^2`=`B$$/수식$$의 해가 $$수식$$x`=`{Z}`±`sqrt{Y}$$/수식$$     일 때, " \
           "$$수식$$A`+`2B$$/수식$$  의 값을 구하시오. (단, A, B는 유리수)\n"

    answer = "(답): $$수식$${W}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x`+`A`)^2`=`B$$/수식$$에서\n"\
              "$$수식$$x`+`A`=`±`sqrt {B}`,~`x`=`-`A`±`sqrt{B}$$/수식$$\n"\
              "이 때 $$수식$$x`=`{Z}`±`sqrt{Y}$$/수식$$     이므로 $$수식$$A`=`{ZZ},~`B`=`{Y}$$/수식$$\n"\
              "따라서 $$수식$$A`+`2B`=`{z1}`+`{X}`=`{W}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-9,10)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13,15])
    X = 2*Y
    ZZ = -1*Z
    B = "B"
    if(ZZ>0):
        z1 = "%d"%(ZZ)
    else:
        z1 = "(%d )"%(ZZ)
    W = X-Z

    stem = stem.format(B=B,Z=Z,Y=Y)
    answer = answer.format(W=W)
    comment = comment.format(B=B,Z=Z,Y=Y,ZZ=ZZ,X=X,z1=z1,W=W)

    return stem, answer, comment

def factorization312_Stem_493():
    stem = "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$가 해를 가질 조건은? (단, a, b는 상수)\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$ 에서 {bz}     이어야 한다.\n\n"

    while True:
        Z = np.random.randint(-5,6)
        if(Z!=0 and abs(Z)!=1):
            break

    q1 = "$$수식$$%s GEQ %d$$/수식$$" %("a",0)
    q2 = "$$수식$$%s LEQ %d$$/수식$$" % ("a", 0)


    if(Z>1):
        q3 = "$$수식$$%s OVER %d`GEQ %d$$/수식$$" % ("b",Z, 0)
        q4 = "$$수식$$%s OVER %d`&gt; %d$$/수식$$" % ("b",Z, 0)
        q5 = "$$수식$$%s OVER %d`LEQ %d$$/수식$$" % ("b",Z, 0)
        bz = "$$수식$$%s OVER %d`GEQ %d$$/수식$$" % ("b",Z, 0)
    else:
        q3 = "$$수식$$%s`%s OVER %d`GEQ %d$$/수식$$" % ("-","b",abs(Z), 0)
        q4 = "$$수식$$%s`%s OVER %d`&gt; %d$$/수식$$" % ("-","b",abs(Z), 0)
        q5 = "$$수식$$%s`%s OVER %d`LEQ %d$$/수식$$" % ("-","b",abs(Z), 0)
        bz = "$$수식$$%s`%s OVER %d`GEQ %d$$/수식$$" % ("-", "b", abs(Z), 0)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 2):
        x1 = 0
    elif (a[1] == 2):
        x1 = 1
    elif (a[2] == 2):
        x1 = 2
    elif (a[3] == 2):
        x1 = 3
    elif (a[4] == 2):
        x1 = 4

    K = answer_dict[x1]

    stem = stem.format(Z=Z,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,bz=bz)

    return stem, answer, comment

def factorization312_Stem_494():
    stem = "다음 중 이차방정식 $$수식$${Z}(x`{ba} )^2`-`k{sc}{c}=0$$/수식$$          이 해를 가질 때, " \
           "상수 k의 값이 될 수 있는 것은?\n"\
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"


    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}(x{ba} )^2`-`k`{sc}{c}=0$$/수식$$\n"\
              "즉, $$수식$$(x{ba} )^2`=`{Y}$$/수식$$         가 해를 가지므로\n"\
              "$$수식$${Y} GEQ 0$$/수식$$     이어야 한다. 즉, $$수식$$k GEQ {c}$$/수식$$\n"\
              "따라서 상수 k의 값이 될 수 있는 것은 $$수식$${c}$$/수식$$ 이다.\n\n"

    while True:
        a = np.random.randint(-5,6)
        b = np.random.randint(-5,6)
        c = np.random.randint(-10,11)
        if(a!=-1 and a!=1 and a!=0 and b!=0 and c!=0 and gcd(a,b)==1):
            break
    Z = np.random.randint(2,11)
    cc = -1*c
    if (b / a > 0):
        ba = " %s`%d OVER %d" % ("-",abs(b), abs(a))
    else:
        ba = "%s %d OVER %d" % ("+", abs(b), abs(a))

    sc,scc = mark(c),mark(cc)

    Y = "{k`%s`%d} OVER %d" %(scc,cc,Z)
    q1 = "%d" %(c-4)
    q2 = "%d" %(c-3)
    q3 = "%d" %(c-2)
    q4 = "%d" %(c-1)
    q5 = "%d" %(c)
    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 4):
        x1 = 0
    elif (a[1] == 4):
        x1 = 1
    elif (a[2] == 4):
        x1 = 2
    elif (a[3] == 4):
        x1 = 3
    elif (a[4] == 4):
        x1 = 4

    X = answer_dict[x1]
    stem = stem.format(ba=ba,c=c,sc=sc,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,Z=Z)
    answer = answer.format(X=X)
    comment = comment.format(Z=Z,ba=ba,c=c,sc=sc,Y=Y)

    return stem, answer, comment

def factorization312_Stem_495():
    stem = "다음 중 이차방정식 $$수식$$(x`{ba} )^2`-`k{sc}{c}=0$$/수식$$          이 해를 가질 때, " \
           "상수 k의 값이 될 수 있는 것은?(정답 2개)\n"\
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"


    answer = "(답): {X1}, {X2}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x{ba} )^2`-`k`{sc}{c}=0$$/수식$$\n"\
              "즉, $$수식$$(x{ba} )^2`=`k`{scc}{cc}$$/수식$$         가 해를 가지므로\n"\
              "$$수식$$k{scc}{cc} GEQ 0$$/수식$$     이어야 한다. 즉, $$수식$$k GEQ {c}$$/수식$$\n"\
              "따라서 상수 k의 값이 될 수 있는 것은 $$수식$${c},{c1}$$/수식$$  이다.\n\n"

    while True:
        a = np.random.randint(-5,6)
        b = np.random.randint(-5,6)
        c = np.random.randint(-10,11)
        if(a!=-1 and a!=1 and a!=0 and b!=0 and c!=0 and gcd(a,b)==1):
            break

    cc = -1*c
    c1 = c+1
    sc,scc = mark(c),mark(cc)
    if (b / a > 0):
        ba = " %s`%d OVER %d" % ("-",abs(b), abs(a))
    else:
        ba = "%s %d OVER %d" % ("+", abs(b), abs(a))

    q1 = "%d" %(c-3)
    q2 = "%d" %(c-2)
    q3 = "%d" %(c-1)
    q4 = "%d" %(c)
    q5 = "%d" %(c+1)
    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    if (a[0] == 4):
        x2 = 0
    elif (a[1] == 4):
        x2 = 1
    elif (a[2] == 4):
        x2 = 2
    elif (a[3] == 4):
        x2 = 3
    elif (a[4] == 4):
        x2 = 4

    if(x1>x2):
        X1 = answer_dict[x2]
        X2 = answer_dict[x1]
    else:
        X1 = answer_dict[x1]
        X2 = answer_dict[x2]

    stem = stem.format(c=c,sc=sc,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,ba=ba)
    answer = answer.format(X1=X1,X2=X2)
    comment = comment.format(ba=ba,c=c,cc=cc,scc=scc,c1=c1,sc=sc)

    return stem, answer, comment

def factorization312_Stem_496():
    stem = "이차방정식 $$수식$${Z}(x`+`a`)^2 {scc}{cc}`=0$$/수식$$ 의 해가\n"\
           "$$수식$$x`=`{YY}`±`sqrt b$$/수식$$     일 때, $$수식$$a`+`b$$/수식$$  의 값은? (단, a, b는 유리수)\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {R}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}(x`+`a )^2`{scc}{cc}`=0$$/수식$$   에서\n"\
              "$$수식$${Z}(x`+`a )^2 `=`{c},`~ (x`+`a )^2 `=`{X}$$/수식$$\n"\
              "$$수식$$x`+`a`=`±` sqrt{X},`~ x`=`-`a`±`sqrt{X}$$/수식$$\n"\
              "이 때, $$수식$$x`=`{YY}`±` sqrt b$$/수식$$       이므로 $$수식$$a`=`{Y},`~ b`=`{X}$$/수식$$\n"\
              "따라서 $$수식$$a+b`=`{K}$$/수식$$\n\n"
    while True:
        a = np.random.randint(1,6)
        Z = np.random.randint(2,6)
        Y = np.random.randint(-10,11)
        if(Y!=0):
            break

    X = random.choice([2,3,5])
    c = Z*X
    cc = -1*c
    YY = -1*Y
    K = X+Y

    q1 = "%d" % (K - 4)
    q2 = "%d" % (K - 3)
    q3 = "%d" % (K - 2)
    q4 = "%d" % (K-1)
    q5 = "%d" % (K)
    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 4):
        x1 = 0
    elif (a[1] == 4):
        x1 = 1
    elif (a[2] == 4):
        x1 = 2
    elif (a[3] == 4):
        x1 = 3
    elif (a[4] == 4):
        x1 = 4

    R = answer_dict[x1]
    sc,scc = mark(c),mark(cc)

    stem = stem.format(Z=Z,cc=cc,YY=YY,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,scc=scc)
    answer = answer.format(R=R)
    comment = comment.format(Z=Z,X=X,Y=Y,YY=YY,c=c,cc=cc,scc=scc,K=K)

    return stem, answer, comment

def factorization312_Stem_497():
    stem = "이차방정식 $$수식$${Z}(x{saa}{aa}`)^2`=`m$$/수식$$ 의 두 근의 합은? (단, m은 양의 유리수)\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}(x{saa}{aa})^2`=m$$/수식$$   에서\n"\
              "$$수식$$(x{saa}{aa})^2`=`{mz}$$/수식$$\n"\
              "$$수식$$x{saa}{aa}`=`± sqrt {mz} ,`~ x`=`{a}`±` sqrt {mz}$$/수식$$\n"\
              "따라서 두 근의 합은\n"\
              "$$수식$${a}`+`sqrt {mz}`+`{a}`-`sqrt {mz}`=`{a2}$$/수식$$\n\n"

    Z = np.random.randint(2,6)
    while True:
        a = np.random.randint(-10,11)
        if(a!=0):
            break


    mz = "{%s OVER %d}" %("m",Z)

    q1 = "$$수식$$%d`sqrt %s$$/수식$$" %(-2,mz)
    q2 = "$$수식$$%d`sqrt %s$$/수식$$" % (2, mz)
    q3 = "$$수식$$%d$$/수식$$"%(-2*a)
    q4 = "$$수식$$%d$$/수식$$" %(2*a)
    q5 = "$$수식$$%d$$/수식$$" %(0)
    aa = -1*a
    saa = mark(aa)
    a2 = 2*a
    a1 = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a1)
    Q1, Q2, Q3, Q4, Q5 = q[a1[0]], q[a1[1]], q[a1[2]], q[a1[3]], q[a1[4]]

    if (a1[0] == 3):
        x1 = 0
    elif (a1[1] == 3):
        x1 = 1
    elif (a1[2] == 3):
        x1 = 2
    elif (a1[3] == 3):
        x1 = 3
    elif (a1[4] == 3):
        x1 = 4
    K = answer_dict[x1]

    stem = stem.format(Z=Z,aa=aa,saa=saa,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,aa=aa,saa=saa,a=a,mz=mz,a2=a2)

    return stem, answer, comment

def factorization312_Stem_498():
    stem = "이차방정식 $$수식$${Z}(x{syy}{YY}`)^2`=`m$$/수식$$ 의 두 근을 a, b라 할 때, " \
           "$$수식$$a`-`b$$/수식$$ 의 값은? (단, m은 양의 유리수, $$수식$$a &gt; b$$/수식$$  )\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}(x{syy}{YY})^2`=m$$/수식$$   에서\n"\
              "$$수식$$x{syy}{YY}`=`±`sqrt {mz},`~ x`=`{Y}`±`sqrt {mz}$$/수식$$                      이므로\n"\
              "$$수식$$a`=`{Y}`+`sqrt{mz},`~ b`=`{Y}`-`sqrt{mz}$$/수식$$\n"\
              "따라서\n"\
              "$$수식$$a`-`b`=`{Y}`+`sqrt {mz}`-`({Y}`-`sqrt {mz} )`=`2`sqrt{mz}$$/수식$$\n\n"

    Z = np.random.randint(2,6)
    while True:
        Y = np.random.randint(-10,11)
        if(Y!=0):
            break


    mz = "{%s OVER %d}" %("m",Z)

    q1 = "$$수식$$%d`sqrt %s$$/수식$$" %(-2,mz)
    q2 = "$$수식$$%d`sqrt %s$$/수식$$" % (2, mz)
    q3 = "$$수식$$%d$$/수식$$"%(-2*Y)
    q4 = "$$수식$$%d$$/수식$$" %(2*Y)
    q5 = "$$수식$$%d$$/수식$$" %(0)
    YY = -1*Y
    syy = mark(YY)
    a2 = 2*Y
    a1 = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a1)
    Q1, Q2, Q3, Q4, Q5 = q[a1[0]], q[a1[1]], q[a1[2]], q[a1[3]], q[a1[4]]

    if (a1[0] == 1):
        x1 = 0
    elif (a1[1] == 1):
        x1 = 1
    elif (a1[2] == 1):
        x1 = 2
    elif (a1[3] == 1):
        x1 = 3
    elif (a1[4] == 1):
        x1 = 4
    K = answer_dict[x1]

    stem = stem.format(Z=Z,YY=YY,syy=syy,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,YY=YY,syy=syy,Y=Y,mz=mz)

    return stem, answer, comment

def factorization312_Stem_499():
    stem = "이차방정식 $$수식$$`-`(x{sz}{Z} )^2`+`{Y}`=0$$/수식$$  의 두 근을 a, b라 할 때, ab의 값을 구하시오.\n"

    answer = "(답): $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$`-`(x{sz}{Z})^2`+`{Y}`=0$$/수식$$  에서\n"\
              "$$수식$$(x{sz}{Z})^2`=`{Y},`~ x{sz}{Z}`=`±`sqrt{Y}$$/수식$$\n"\
              "$$수식$$x`=`{ZZ}`±`sqrt {Y}$$/수식$$\n"\
              "따라서\n$$수식$$ab`=`({ZZ}`+`sqrt{Y} )({ZZ}`-`sqrt{Y}`)`=`{z}`-`{Y}`={K}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-5,6)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13,15])
    z = Z*Z
    K = z-Y
    ZZ = -1*Z
    sz = mark(Z)
    stem = stem.format(Z=Z,Y=Y,sz=sz)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,Y=Y,z=z,ZZ=ZZ,K=K,sz=sz)

    return stem, answer, comment

def factorization312_Stem_500():
    stem = "이차방정식 $$수식$$`-`(x{sz}{Z} )^2`+`{Y}`=0$$/수식$$  의 두 근을 a, b라 할 때, " \
           "$$수식$$a`+`b$$/수식$$ 의 값을 구하시오.\n"

    answer = "(답): $$수식$${X}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$`-`(x{sz}{Z})^2`+`{Y}`=0$$/수식$$  에서\n"\
              "$$수식$$(x{sz}{Z})^2`=`{Y},`~ x{sz}{Z}`=`±`sqrt{Y}$$/수식$$\n"\
              "$$수식$$x`=`{ZZ}`±`sqrt {Y}$$/수식$$\n"\
              "따라서\n$$수식$$a`+`b`=`({ZZ}`+`sqrt{Y} )`+`({ZZ}`-`sqrt{Y}`)`={X}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-5,6)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13,15])
    X = -2*Z
    ZZ = -1*Z
    sz = mark(Z)
    stem = stem.format(Z=Z,Y=Y,sz=sz)
    answer = answer.format(X=X)
    comment = comment.format(Z=Z,Y=Y,ZZ=ZZ,X=X,sz=sz)

    return stem, answer, comment

def factorization312_Stem_501():
    stem = "이차방정식 $$수식$${Z}x^2`-`k`=0$$/수식$$  에 대한 설명으로 옳은 것은?\n" \
           "① {Q1}\n② {Q2}\n③ {Q3}\n④ {Q4}\n⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${Z}x^2`-`k`=0$$/수식$$  에서 $$수식$$x^2`=`k OVER {Z}$$/수식$$ 이므로\n"\
              "① {A1}\n② {A2}\n③ {A3}\n④ {A4}\n⑤ {A5}\n\n"\

    while True:
        Z = np.random.randint(2,6)
        a = np.random.randint(1,6)
        if(Z!=a and gcd(a,Z)==1):
            break

    q1 = "$$수식$$%s`=`%d$$/수식$$    일 때, 서로 다른 두 근을 갖는다." %("k",0)
    q2 = "$$수식$$%s`!=`%d$$/수식$$    일 때, 중근을 갖는다." %("k",0)
    q3= "$$수식$$%s`=`%d$$/수식$$    일 때, 중근을 갖는다." %("k",a)
    q4 = "$$수식$$%s &lt; %d$$/수식$$    일 때, 서로 다른 두 근을 갖는다." %("k",0)
    q5 = "$$수식$$%s &gt; %d$$/수식$$    일 때, 두 근의 절댓값은 같다" %("k",0)

    a1 = "$$수식$$k`=`0$$/수식$$    일 때, $$수식$$x^2`=0$$/수식$$ 이므로 $$수식$$x`=`0$$/수식$$"
    a2 = "$$수식$$k &lt; 0$$/수식$$    이면 근이 존재하지 않고 $$수식$$k &gt; 0$$/수식$$    이면 서로 다른 두 근을 갖는다."
    a3 = "$$수식$$k`=`%d$$/수식$$    일 때, $$수식$$x^2`=`%d OVER %d$$/수식$$     이므로 $$수식$$x`=`± sqrt {%d OVER %d}$$/수식$$" \
    %(a,a,Z,a,Z)
    a4 = "$$수식$$k &lt; 0$$/수식$$    일 때, 근이 존재하지 않는다."
    a5 = "$$수식$$k &gt; 0$$/수식$$    일 때, $$수식$$x`=`±`sqrt {%d OVER %d}$$/수식$$     이므로 두 근의 절댓값은 같다." %(a,Z)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    A = [a1, a2, a3, a4, a5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]
    A1, A2, A3, A4, A5 = A[a[0]], A[a[1]], A[a[2]], A[a[3]], A[a[4]]

    if (a[0] == 4):
        x1 = 0
    elif (a[1] == 4):
        x1 = 1
    elif (a[2] == 4):
        x1 = 2
    elif (a[3] == 4):
        x1 = 3
    elif (a[4] == 4):
        x1 = 4

    K = answer_dict[x1]

    stem = stem.format(Z=Z,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,A1=A1,A2=A2,A3=A3,A4=A4,A5=A5)

    return stem, answer, comment

def factorization312_Stem_502():
    stem = "이차방정식 $$수식$$(x{yzz})^2`={xw}$$/수식$$       이 서로 다른 두 근을 갖도록 하는 실수 a의 값의 범위는?\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"


    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x{yzz})^2`={xw}$$/수식$$       에서\n"\
              "$$수식$${xw} &gt; 0$$/수식$$     이어야 하므로 $$수식$$a &gt; {W}$$/수식$$\n\n"

    while True:
        X = np.random.randint(-5,6)
        Y = np.random.randint(1,6)
        Z = np.random.randint(-5, 6)
        W = np.random.randint(1,6)
        if(X!=0 and Z!=0 and gcd(Z,Y)==1):
            break

    if(Z==1):
        yzz = "%s %d" %("-",int(Y/Z))
        yz = "%d" % (int(Y / Z))

    elif(Z==-1):
        yzz = "%s %d" %("+", abs(int(Y/Z)))
        yz = "%s %d" % ("-", abs(int(Y / Z)))
    elif(Z>0):
        yzz = "%s %d OVER %d" %("-",Y,Z)
        yz = "%d OVER %d" % (Y, Z)
    else:
        yzz = "%s %d OVER %d" %("+",Y,abs(Z))
        yz = "%s %d OVER %d" % ("-", Y, abs(Z))

    if(X==1):
        xw = "a%s%d" %("-",W)
        wx = "%d" %(W)
    elif(X==-1):
        xw = "%s%s%s%d" %("-","a","+",W)
        wx = "%s%d" %("-",W)
    elif(X>0):
        xw = "{a`-`%d} OVER %d" %(W,X)
        if(W%X==0):
            wx = "%d" %(int(W/X))
        else:
             wx = "%d OVER %d" %(W,X)
    else:
        xw = "%s`{a`-`%d} OVER %d" %("-",W,abs(X))
        if(W%X==0):
            wx = "%d" %(int(W/X))
        else:
            wx = "%s %d OVER %d" %("-",W,abs(X))


    q1 = "$$수식$$a &lt; %s$$/수식$$" %(yz)
    q2 = "$$수식$$a &gt; 0$$/수식$$"
    q3 = "$$수식$$a`=`%s$$/수식$$" %(wx)
    q4 = "$$수식$$a &gt; %d$$/수식$$" %(W)
    q5 = "서로 다른 두 근을 가질 수 없다."

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    K = answer_dict[x1]
    stem = stem.format(yzz=yzz,xw=xw,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(yz=yz,yzz=yzz,xw=xw,W=W)

    return stem, answer, comment

def factorization312_Stem_503():
    stem = "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$의 해가 $$수식$$x`=`{Y}`±`sqrt {X}$$/수식$$    일 때, " \
           "유리수 a, b에 대하여 ab의 값을 구하시오.\n"

    answer = "(답): $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$에서 $$수식$$(x`+`a`)^2`=`b OVER {Z}$$/수식$$\n"\
              "$$수식$$x`+`a`=`±`sqrt{bz},`~ x`=`-`a`±`sqrt{bz}$$/수식$$\n"\
              "이 때 $$수식$$x`=`{Y}`±`sqrt{X}$$/수식$$     이므로 $$수식$$a`=`{YY},`~ b OVER {Z} `=`{X}$$/수식$$\n"\
              "즉, $$수식$$a`=`{YY},`~ b`=`{zx}$$/수식$$\n"\
              "따라서 $$수식$$ab`=`{K}$$/수식$$\n\n"\

    while True:
        Y = np.random.randint(-10,11)
        if(Y!=0):
            break
    Z = np.random.randint(2,6)
    X = random.choice([2,3,5,7])
    YY = -1*Y
    zx = Z*X
    K = -1*X*Y*Z
    bz = "{%s OVER %d}" %("b",Z)

    stem = stem.format(Z=Z,Y=Y,X=X)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,Y=Y,YY=YY,X=X,zx=zx,K=K,bz=bz)

    return stem, answer, comment

def factorization312_Stem_504():
    stem = "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$의 해가 $$수식$$x`=`{Y}`±`sqrt {X}$$/수식$$    일 때, " \
           "유리수 a, b에 대하여 $$수식$$a`+`b$$/수식$$  의 값을 구하시오.\n"

    answer = "(답): $$수식$${K}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${Z}(x`+`a`)^2`=`b$$/수식$$에서 $$수식$$(x`+`a`)^2`=`b OVER {Z}$$/수식$$\n"\
              "$$수식$$x`+`a`=`±`sqrt{bz},`~ x`=`-`a`±`sqrt{bz}$$/수식$$\n"\
              "이 때 $$수식$$x`=`{Y}`±`sqrt{X}$$/수식$$     이므로 $$수식$$a`=`{YY},`~ b OVER {Z} `=`{X}$$/수식$$\n"\
              "즉, $$수식$$a`=`{YY},`~ b`=`{zx}$$/수식$$\n"\
              "따라서 $$수식$$a`+`b`=`{K}$$/수식$$\n\n"\

    while True:
        Y = np.random.randint(-10,11)
        if(Y!=0):
            break
    Z = np.random.randint(2,6)
    X = random.choice([2,3,5,7])
    YY = -1*Y
    zx = Z*X
    K = YY+zx
    bz = "{%s OVER %d}" %("b",Z)

    stem = stem.format(Z=Z,Y=Y,X=X)
    answer = answer.format(K=K)
    comment = comment.format(Z=Z,Y=Y,YY=YY,X=X,zx=zx,K=K,bz=bz)

    return stem, answer, comment

def factorization312_Stem_505():
    stem = "이차방정식 $$수식$$(x{szz}{ZZ})^2`=k`(k &gt; 0 )$$/수식$$의 한 근이 " \
           "$$수식$$x`=`sqrt{Y}`{sz}{Z}$$/수식$$  일 때, 다른 한 근은? (단, k는 유리수)\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x{szz}{ZZ})^2`=`k$$/수식$$에서\n"\
              "$$수식$$x{szz}{ZZ}`=`±`sqrt k,`~ x`=`{Z}`±`sqrt k$$/수식$$\n"\
              "이 때 주어진 한 근이 $$수식$$x`=`sqrt {Y}`{sz}{Z}$$/수식$$   이므로 $$수식$$k`=`{Y}$$/수식$$\n"\
              "따라서 나머지 한 근은 $$수식$$x`=`{Z}`-`sqrt {Y}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-10,11)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13])
    ZZ = -1*Z
    sz,szz = mark(Z),mark(ZZ)
    q1 = "$$수식$$%d`%s`sqrt %d$$/수식$$" %(ZZ,"-",Y)
    q2 = "$$수식$$%d`%s`sqrt %d$$/수식$$" % (ZZ, "+", Y)
    q3 = "$$수식$$%d`%s`sqrt %d$$/수식$$" % (Z, "-", Y)
    q4 = "$$수식$$%d`%s`%d`sqrt %d$$/수식$$" % (Z, "-", 2,Y)
    q5 = "$$수식$$%d`%s`%d`sqrt %d$$/수식$$" % (ZZ, "+",2, Y)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 2):
        x1 = 0
    elif (a[1] == 2):
        x1 = 1
    elif (a[2] == 2):
        x1 = 2
    elif (a[3] == 2):
        x1 = 3
    elif (a[4] == 2):
        x1 = 4

    K = answer_dict[x1]

    stem = stem.format(Z=Z,Y=Y,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sz=sz,szz=szz,ZZ=ZZ)
    answer = answer.format(K=K)
    comment = comment.format(Y=Y,Z=Z,ZZ=ZZ,sz=sz,szz=szz)

    return stem, answer, comment

def factorization312_Stem_506():
    stem = "이차방정식 $$수식$$(x{szz}{ZZ})^2`=k`(k &gt; 0 )$$/수식$$의 한 근이 " \
           "$$수식$$x`=`sqrt{Y}`{sz}{Z}$$/수식$$  일 때, 다른 한 근은? (단, k는 유리수)\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$(x{szz}{ZZ})^2`=`k$$/수식$$에서\n"\
              "$$수식$$x{szz}{ZZ}`=`±`sqrt k,`~ x`=`{Z}`±`sqrt k$$/수식$$\n"\
              "이 때 주어진 한 근이 $$수식$$x`=`sqrt {Y}`{sz}{Z}$$/수식$$   이므로 $$수식$$k`=`{Y}$$/수식$$\n"\
              "따라서 나머지 한 근은 $$수식$$x`=`{Z}`-`sqrt {Y}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(-10,11)
        if(Z!=0):
            break
    Y = random.choice([2,3,5,7,11,13])
    ZZ = -1*Z
    sz,szz = mark(Z),mark(ZZ)
    q1 = "$$수식$$%d`%s`sqrt %d$$/수식$$" %(ZZ,"-",Y)
    q2 = "$$수식$$%d`%s`sqrt %d$$/수식$$" % (ZZ, "+", Y)
    q3 = "$$수식$$%d`%s`sqrt %d$$/수식$$" % (Z, "-", Y)
    q4 = "$$수식$$%d`%s`%d`sqrt %d$$/수식$$" % (Z, "-", 2,Y)
    q5 = "$$수식$$%d`%s`%d`sqrt %d$$/수식$$" % (ZZ, "+",2, Y)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 2):
        x1 = 0
    elif (a[1] == 2):
        x1 = 1
    elif (a[2] == 2):
        x1 = 2
    elif (a[3] == 2):
        x1 = 3
    elif (a[4] == 2):
        x1 = 4

    K = answer_dict[x1]

    stem = stem.format(Z=Z,Y=Y,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sz=sz,szz=szz,ZZ=ZZ)
    answer = answer.format(K=K)
    comment = comment.format(Y=Y,Z=Z,ZZ=ZZ,sz=sz,szz=szz)

    return stem, answer, comment

def factorization312_Stem_507():
    stem = "두 이차방정식 $$수식$$x^2`{sa}{A}x{sb}{B}`=0,`~ {C}(x{sdd}{DD})^2`=`{E}$$/수식$$의 공통인 근을 구하면?\n" \
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2`{sa}{A}x{sb}{B}`=0$$/수식$$     에서\n"\
              "$$수식$$(x{sff}{FF})`(x{sgg}{GG})`=`0$$/수식$$\n"\
              "$$수식$$x`=`{F}$$/수식$$   또는 $$수식$$x`=`{G}$$/수식$$\n"\
              "이차방정식 $$수식$${C}(x{sdd}{DD})^2`=`{E}$$/수식$$에서\n"\
              "$$수식$$(x{sdd}{DD})^2`=`{H},`~ x{sdd}{DD}`=`±`sqrt {H} `=`±`{I}$$/수식$$\n"\
              "$$수식$$x`=`{di}$$/수식$$   또는 $$수식$$x`=`{dii}$$/수식$$\n"\
              "따라서 두 이차방정식 $$수식$$x^2 {sa}{A}x{sb}{B}`=`0, `~{C}(x{sdd}{DD})^2`=`{E}$$/수식$$ 의 " \
              "공통인 근은 $$수식$$x`=`{J}$$/수식$$\n\n"\

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        F = random.choice(num)
        G = random.choice(num)
        D = random.choice(num)
        H = random.choice([1,4,9,16,25,36])
        I = int(math.sqrt(H))
        L = random.choice(num)
        K = random.choice(num)
        C = np.random.randint(2,6)
        A = -1 * (F + G)
        if(abs(A)!=1 and A!=0 and F!=0 and G!=0 and D!=0 and F!=G and L!=K and L!=G and L!=F and K!=G and K!=F and G==D+I):
            break

    B = F*G
    E = C*H
    J = D+I
    di = D+I
    dii = D-I
    FF = -1*F
    GG =-1*G
    DD = -1*D
    sa,sb,sdd,sff,sgg = mark(A),mark(B),mark(DD),mark(FF),mark(GG)

    q1 = "없다."
    q2 = "$$수식$$x`=`%d$$/수식$$" %(L)
    q3 = "$$수식$$x`=`%d$$/수식$$" % (K)
    q4 = "$$수식$$x`=`%d$$/수식$$" % (J)
    q5 = "$$수식$$x`=`%d$$/수식$$   또는 $$수식$$x`=`%d$$/수식$$" % (K,J)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    X = answer_dict[x1]
    stem = stem.format(A=A,B=B,C=C,DD=DD,E=E,sa=sa,sb=sb,sdd=sdd,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(A=A,B=B,F=F,G=G,C=C,DD=DD,E=E,H=H,di=di,dii=dii,J=J,FF=FF,GG=GG,sa=sa,sb=sb,sff=sff,sgg=sgg,
                             sdd=sdd,I=I)

    return stem, answer, comment

def factorization312_Stem_508():
    stem = "이차방정식 $$수식$$(x{sa}{A})^2 `={B}`-`k$$/수식$$의 근에 대한 다음 설명 중 옳지 않은 것은?\n" \
           "① {Q1}\n② {Q2}\n③ {Q3}\n④ {Q4}\n⑤ {Q5}\n"
    answer = "(답): {K}\n"
    comment = "(해설)\n"\
              "① {A1}\n② {A2}\n③ {A3}\n④ {A4}\n⑤ {A5}\n\n"

    while True:
        A = np.random.randint(-9, 10)
        B = np.random.randint(-9, 9)
        C = np.random.randint(B + 1, 10)
        F = np.random.randint(-9, 0)
        D = np.random.randint(-9, 10)
        E = np.random.randint(-9, 10)
        sq = [1, 4, 9, 16]
        be = B - E
        bd = B - D
        bf = B - F
        if (A != 0 and B != 0 and be > 0 and bd > 0 and bf > 0 and (be not in sq) and (bd in sq)):
            break

    bdd = int(math.sqrt(bd))
    CC = -1*C
    AA = -1*A
    EE = -1*E
    scc,sa,saa = mark(CC),mark(A),mark(AA)
    BD1 = AA+bdd
    BD2 = AA-bdd


    q1=  "$$수식$$k`=`%d$$/수식$$   이면 근이 존재하지 않는다." %(C)
    q2 = "$$수식$$k`=`%d$$/수식$$   이면 중근을 갖는다." %(B)
    q3 = "$$수식$$k`=`%d$$/수식$$   이면 정수인 근을 갖는다." %(D)
    q4 = "$$수식$$k`=`%d$$/수식$$   이면 유리수인 근을 갖는다." %(E)
    q5 = "$$수식$$k`=`%d$$/수식$$   이면 서로 다른 두 근을 갖는다." %(F)

    a1 = "$$수식$$k`=`%d$$/수식$$   이면 $$수식$$%d`-`k`=%d%s%d`&lt; 0$$/수식$$      이므로\n근이 존재하지 않는다." %(C,B,B,scc,CC)
    a2 = "$$수식$$k`=`%d$$/수식$$   이면 $$수식$$(x%s%d`)^2`=`0$$/수식$$이므로 $$수식$$x`=`%d$$/수식$$   (중근)" \
        %(B,sa,A,AA)
    a3 = "$$수식$$k`=`%d$$/수식$$   이면 $$수식$$(x%s%d )^2`=`%d,`~ x%s%d`=`±` %d$$/수식$$\n"\
          "$$수식$$x`=`%d`$$/수식$$   또는 $$수식$$x`=`%d$$/수식$$\n따라서 정수인 근을 갖는다."\
         %(D,sa,A,bd,sa,A,bdd,BD1,BD2)
    a4 = "$$수식$$k`=`%d$$/수식$$   이면 $$수식$$(x%s%d)^2`=`%d,`~ x%s%d`=`±`sqrt %d$$/수식$$\n"\
         "$$수식$$x`=`%d`±`sqrt %d$$/수식$$\n따라서 무리수인 근을 갖는다." %(E,sa,A,be,sa,A,be,AA,be)
    a5 = "$$수식$$k`=`%d$$/수식$$   이면\n$$수식$$(x%s%d )^2`=`%d,`~ x%s%d`=`±`sqrt %d$$/수식$$\n"\
          "$$수식$$x`=`%d`±`sqrt %d$$/수식$$\n따라서 서로 다른 두 근을 갖는다." %(F,sa,A,bf,sa,A,bf,AA,bf)

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    aa = [a1,a2,a3,a4,a5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]
    A1,A2,A3,A4,A5 = aa[a[0]], aa[a[1]], aa[a[2]], aa[a[3]], aa[a[4]]

    if (a[0] == 3):
        x1 = 0
    elif (a[1] == 3):
        x1 = 1
    elif (a[2] == 3):
        x1 = 2
    elif (a[3] == 3):
        x1 = 3
    elif (a[4] == 3):
        x1 = 4

    K = answer_dict[x1]

    stem = stem.format(A=A,B=B,sa=sa,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(K=K)
    comment = comment.format(A1=A1,A2=A2,A3=A3,A4=A4,A5=A5)

    return stem, answer, comment

def factorization312_Stem_509():
    stem = "이차방정식 $$수식$${A}x^2`{sb}{B}x{sc}{C}`=0$$/수식$$     을 $$수식$$(x{sd}{D})^2 `=` m OVER n$$/수식$$  "\
            "꼴로 나타낼 때, 상수 m, n에 대하여 $$수식$$m`-`n$$/수식$$  의 값을 구하시오.\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$      에서 $$수식$$x^2`{se}{E}x{F}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{se}{E}x`=`{FF1},`~ x^2`{se}{E}x{sg}{G}`=`{G}{FF}$$/수식$$\n\n"\
              "$$수식$$(x{sd}{D})^2`=`{ih}$$/수식$$\n"\
              "따라서 $$수식$$m`=`{I},`~ n`=`{H}$$/수식$$          이므로\n$$수식$$m`-`n`=`{J}$$/수식$$"

    while True:
        A = np.random.randint(-9,10)
        D = np.random.randint(-9, 10)
        C = np.random.randint(-9, 10)
        if(A!=0 and abs(A)!=1 and D!=0 and C!=0 and gcd(A,C)==1):
            break

    E = 2*D
    B = A*E
    G = D*D
    i = A*G -C
    h = A
    if(i<0 and h<0):
        I = abs(int(i/gcd(i,h)))
        H  = abs(int(h/gcd(i,h)))
    else:
        I = int(i/gcd(i,h))
        H  = int(h/gcd(i,h))

    J = I-H
    sd,se,sg,sb,sc = mark(D),mark(E),mark(G),mark(B),mark(C)

    if (C / A >= 0):
        F = "%s %d OVER %d" % ("+",abs(C), abs(A))
        FF = "%s %d OVER %d" % ("-", abs(C), abs(A))
        FF1 = "%s %d OVER %d" % ("-", abs(C), abs(A))
    else:
        F= "%s %d OVER %d" % ("-", abs(C), abs(A))
        FF= "%s %d OVER %d" % ("+",abs(C), abs(A))
        FF1 = "%d OVER %d" % (abs(C), abs(A))

    if (i / h >= 0):
        ih = "%d OVER %d" % (abs(I), abs(H))
    else:
        ih= "%s %d OVER %d" % ("-", abs(I), abs(H))

    stem = stem.format(A=A,B=B,C=C,D=D,sd=sd,sb=sb,sc=sc)
    answer = answer.format(J=J)
    comment = comment.format(A=A,B=B,C=C,E=E,F=F,FF=FF,FF1=FF1,G=G,D=D,I=I,H=H,J=J,sb=sb,sc=sc,se=se,sg=sg,sd=sd,ih=ih)

    return stem, answer, comment

def factorization312_Stem_510():
    stem = "이차방정식 $$수식$${A}x^2`{sb}{B}x{sc}{C}`=0$$/수식$$     을 $$수식$$(x{sd}{D})^2 `=` k$$/수식$$  "\
            "꼴로 나타낼 때, 상수 k에 대하여 $$수식$${a}k$$/수식$$  의 값을 구하시오.\n"

    answer = "(답): $$수식$${J}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$      에서 $$수식$$x^2`{se}{E}x{F}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{se}{E}x`=`{FF1},`~ x^2`{se}{E}x{sg}{G}`=`{G}{FF}$$/수식$$\n\n"\
              "$$수식$$(x{sd}{D})^2`=`{ih}$$/수식$$\n"\
              "따라서 $$수식$$k`=`{ih}$$/수식$$          이므로\n$$수식$${a}k`=`{J}$$/수식$$"

    while True:
        A = np.random.randint(-9,10)
        D = np.random.randint(-9, 10)
        C = np.random.randint(-9, 10)
        a = np.random.randint(-9,10)
        if(A!=0 and abs(A)!=1 and D!=0 and C!=0 and a!=0 and gcd(A,C)==1 and a%A==0):
            break
    E = 2*D
    B = A*E
    G = D*D
    i = A*G -C
    h = A
    if(i<0 and h<0):
        I = abs(int(i/gcd(i,h)))
        H  = abs(int(h/gcd(i,h)))
    else:
        I = int(i/gcd(i,h))
        H  = int(h/gcd(i,h))

    sd,se,sg,sb,sc = mark(D),mark(E),mark(G),mark(B),mark(C)

    if (C / A >= 0):
        F = "%s %d OVER %d" % ("+",abs(C), abs(A))
        FF = "%s %d OVER %d" % ("-", abs(C), abs(A))
        FF1 = "%s %d OVER %d" % ("-", abs(C), abs(A))
    else:
        F= "%s %d OVER %d" % ("-", abs(C), abs(A))
        FF= "%s %d OVER %d" % ("+",abs(C), abs(A))
        FF1 = "%d OVER %d" % (abs(C), abs(A))

    if (i / h >= 0):
        ih = "%d OVER %d" % (abs(I), abs(H))
        J = int((a*I)/H)
    else:
        ih= "%s %d OVER %d" % ("-", abs(I), abs(H))
        J = -1* int((a * I) / H)

    stem = stem.format(A=A,B=B,C=C,D=D,sd=sd,sb=sb,sc=sc,a=a)
    answer = answer.format(J=J)
    comment = comment.format(A=A,B=B,C=C,E=E,F=F,FF=FF,FF1=FF1,G=G,D=D,I=I,H=H,J=J,sb=sb,sc=sc,se=se,sg=sg,sd=sd,ih=ih,a=a)

    return stem, answer, comment

def factorization312_Stem_511():
    stem = "$$수식$$x^2`{sa}{A}x{sb}{B}`=`0$$/수식$$     의 해를 구하려고 한다. 다음의 각 식을 풀이 과정의 순서에 맞도록 배열할 때, " \
           "□ 안에 들어갈 수식을 순서대로 쓰시오.\n"\
           "$$표$$\n[풀이과정]\n$$수식$$x^2`{sa}{A}x{sb}{B}`=`0$$/수식$$\n□ → □ → □ → □ → □ \n$$/표$$\n"\
           "$$표$$\n㉠ $$수식$$x`=`{DD}`±`sqrt {E}$$/수식$$\n㉡ $$수식$$x^2`{sa}{A}x{sc}{C}`=`{BB}{sc}{C}$$/수식$$\n"\
           "㉢ $$수식$$x{sd}{D}`=`±`sqrt{E}$$/수식$$\n㉣ $$수식$$x^2`{sa}{A}x`=`{BB}$$/수식$$\n"\
           "㉤ $$수식$$(x{sd}{D})^2`=`{E}$$/수식$$\n$$/표$$\n"\
           "① {Q1}      ② {Q2}      ③ {Q3}\n④ {Q4}      ⑤ {Q5}\n"

    answer = "(답): {F}\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$$x^2`{sa}{A}x{sb}{B}`=`0$$/수식$$     에서 $$수식$$x^2`{sa}{A}x`=`{BB}$$/수식$$\n"\
              "$$수식$$x^2`{sa}{A}x{sc}{C}`=`{BB}{sc}{C},`~ (x{sd}{D})^2`=`{E}$$/수식$$\n"\
              "$$수식$$x`{sd}{D}`=`±`sqrt {E}$$/수식$$       이므로 따라서 $$수식$$x`=`{DD}`±`sqrt {E}$$/수식$$\n"\
              "답은 {F} ㉣,㉡,㉤,㉢,㉠\n\n"

    q1 = "㉡,㉣,㉤,㉢,㉠"
    q2 = "㉢,㉣,㉡,㉤,㉠"
    q3 = "㉣,㉡,㉤,㉢,㉠"
    q4 = "㉣,㉤,㉡,㉢,㉠"
    q5 = "㉤,㉡,㉣,㉢,㉠"

    a = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    random.shuffle(a)
    Q1, Q2, Q3, Q4, Q5 = q[a[0]], q[a[1]], q[a[2]], q[a[3]], q[a[4]]

    if (a[0] == 2):
        x1 = 0
    elif (a[1] == 2):
        x1 = 1
    elif (a[2] == 2):
        x1 = 2
    elif (a[3] == 2):
        x1 = 3
    elif (a[4] == 2):
        x1 = 4

    F = answer_dict[x1]

    while True:
        D = np.random.randint(-9,10)
        E = random.choice([2,3,5,7,11,13,15])
        if(D!=0):
            break

    C = D*D
    A = 2*D
    B = C-E
    BB = -1*B
    DD = -1*D
    sa,sb,sc,sd = mark(A),mark(B),mark(C),mark(D)

    stem = stem.format(A=A,B=B,Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5,sa=sa,sb=sb,DD=DD,E=E,BB=BB,C=C,sc=sc,sd=sd,D=D)
    answer = answer.format(F=F)
    comment = comment.format(A=A,B=B,BB=BB,C=C,D=D,E=E,DD=DD,sa=sa,sb=sb,sc=sc,sd=sd,F=F)

    return stem, answer, comment

def factorization312_Stem_512():
    stem = "다음은 완전제곱식을 이용하여 이차방정식\n$$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$       의 해를 구하는 과정이다.\n"\
           "□ 안에 들어갈 수로 옳지 않은 것은?\n"\
           "$$표$$\n$$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$    에서\n$$수식$$x^2`+`{boxone}x`=`{boxtwo}$$/수식$$\n"\
           "$$수식$$(x`+`{boxthree}`)^2 `=`{boxfour}$$/수식$$\n따라서 $$수식$$x`=`{boxfive}$$/수식$$\n$$/표$$\n"\
           "① $$수식$${D}$$/수식$$   ② $$수식$${E}$$/수식$$   ③ $$수식$${H}$$/수식$$\n"\
           "④ $$수식$${G}$$/수식$$   ⑤ $$수식$${H}`±`sqrt {G}$$/수식$$\n"

    answer = "(답): {I}\n"
    comment = "(해설)\n"\
              "$$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$       에서 $$수식$$x^2`{sd}{D}x`=`{E}$$/수식$$\n"\
              "$$수식$$x^2`{sd}{D}x{sf}{F}`=`{E}`{sf}{F}`=`{G}$$/수식$$\n"\
              "$$수식$$(x{sh}{H} )^2`=`{G},`~ x{sh}{H}`=`±`sqrt {G}$$/수식$$\n"\
              "따라서 $$수식$$x`=`{HH}`±`sqrt {G}$$/수식$$\n\n"

    while True:
        A = np.random.randint(-9,10)
        H = np.random.randint(-9,10)
        e1 = random.choice([-2,-3,-4,-5,2,3,4,5])
        e2 = np.random.randint(-15,16)
        F = H * H
        g2 = e2 + (e1 * F)
        g1 = e1
        if(A!=0 and abs(A)!=1 and  H!=0 and A%e1==0 and (e2/e1)<=3 and gcd(e1,e2)==1 and (g2/g1)>0):
            break


    if((e2/e1)>0):
        E = "%d OVER %d" %(abs(e2),abs(e1))
    else:
        E = "%s`%d OVER %d" %("-",abs(e2),abs(e1))
    D = 2*H
    B = A*D
    C = -1*int((A*e2)/e1)
    if(g1<0 and g2<0):
        G2 = abs(int(g2/gcd(g1,g2)))
        G1  = abs(int(g1/gcd(g1,g2)))
        G = "{%d OVER %d}" %(G2,G1)
    else:
        G2 = int(g2/gcd(g1,g2))
        G1  = int(g1/gcd(g1,g2))
        G = "{%d OVER %d}" %(G2,G1)

    I = "⑤"
    HH = -1*H
    sb,sc,sd,sf,sh = mark(B),mark(C),mark(D),mark(F),mark(H)
    boxone = "BOX{````①````}"
    boxtwo = "BOX{````②````}"
    boxthree = "BOX{````③````}"
    boxfour= "BOX{````④````}"
    boxfive = "BOX{````⑤````}"
    stem = stem.format(A=A,B=B,C=C,D=D,E=E,H=H,G=G,sb=sb,sc=sc,boxone=boxone,boxtwo=boxtwo,boxthree=boxthree,
                       boxfour=boxfour, boxfive=boxfive)
    answer = answer.format(I=I)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,HH=HH,sb=sb,sc=sc,sd=sd,sf=sf,sh=sh)

    return stem, answer, comment

def factorization312_Stem_513():
    stem = "이차방정식 $$수식$${A}`x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$               을 $$수식$$(x`+`a`)^2`=b$$/수식$$  의 꼴로" \
           " 나타낼 때, 상수 a, b에 대하여 $$수식$$b`-`a$$/수식$$  의 값을 구하시오.\n"

    answer = "(답): $$수식$${I}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${A}`x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$                에서\n"\
              "$$수식$$x^2`{sd}{D}x{se}{E}`=`0,`~ x^2`{sd}{D}x`=`{EE}$$/수식$$\n"\
              "$$수식$$x^2`{sd}{D}x{sf}{F}`=`{EE}{sf}{F},`~ (x{sg}{G}`)^2`=`{H}$$/수식$$\n"\
              "따라서 $$수식$$a`=`{G},`~ b`=`{H}$$/수식$$          이므로\n"\
              "$$수식$$b`-`a`=`{H}{sgg}{GG}`=`{I}$$/수식$$\n\n"

    while True:
        a1 = random.choice([-2,-3,-4,-5,2,3,4,5])
        a2 = random.choice([-2,-3,-4,-5,2,3,4,5])
        G = np.random.randint(-9,10)
        E = np.random.randint(-29,0)
        D = 2*G
        if(gcd(a1,a2)==1 and abs((a2/a1))<1 and G!=0 and D%a1==0 and E%a1==0 and abs(E)>=10):
            break

    F = G*G
    B = int((D*a2)/a1)
    C = int((E*a2)/a1)
    EE = -1*E
    H = EE+F
    GG = G*-1
    I = H+GG

    if(a2/a1>0):
        A = "%d OVER %d" %(abs(a2),abs(a1))
    else:
        A = "%s %d OVER %d" %("-",abs(a2),abs(a1))

    sb,sc,sd,se,sf,sg,sgg = mark(B),mark(C),mark(D),mark(E),mark(F),mark(G),mark(GG)


    stem = stem.format(A=A,B=B,C=C,sb=sb,sc=sc)
    answer = answer.format(I=I)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,EE=EE,F=F,G=G,H=H,GG=GG,I=I,sb=sb,sc=sc,sd=sd,se=se,sf=sf,sg=sg,sgg=sgg)

    return stem, answer, comment

def factorization312_Stem_514():
    stem = "이차방정식 $$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$      을 $$수식$$(x`+`a`)^2`=`b$$/수식$$" \
           "의 꼴로 나타낼 때, 상수 a, b에 대하여 $$수식$${M}a`{sn}`{N}b$$/수식$$    의 값을 구하시오.\n"

    answer = "(답): $$수식$${I}$$/수식$$\n"
    comment = "(해설)\n"\
              "이차방정식 $$수식$${A}x^2`{sb}{B}x{sc}{C}`=`0$$/수식$$       의 양변을 $$수식$${A}$$/수식$$로 나누면\n"\
              "$$수식$$x^2`{D}`x{E}`=`0,`~ x^2`{D}x`=`{EE}$$/수식$$\n"\
              "$$수식$$x^2`{D}`x{F}`=`{EE}`{F}$$/수식$$\n"\
              "$$수식$$(x{G1})^2`=`{H}$$/수식$$\n"\
              "따라서 $$수식$$a`=`{G2},`~ b`=`{H}$$/수식$$          이므로\n"\
              "$$수식$${M}a`{sn}`{N}b`=`{g3}{sh3}{h3}`=`{I}$$/수식$$\n\n"

    while True:
        num = [-9, -8, -7, -6, -5, -4, -3, -2, 2, 3, 4, 5, 6, 7, 8, 9]
        A =  random.choice(num)
        B =  random.choice(num)
        C =  random.choice(num)
        h1 = B * B - (4 * A * C)
        h2 = 4 * A * A
        H1 = int(h1 / gcd(h1, h2))
        H2 = int(h2 / gcd(h1, h2))
        M =  np.random.randint(-9,10)
        N = np.random.randint(-99,100)
        if(A!=B and (h1)!=0 and M!=0 and N!=0 and M%(2*A)==0 and N%H2==0 and (h1/h2)>0):
            break
    if(B%A==0):
        if((B/A)>0):
            D = "%s %d" % ("+",int(B / A))
        else:
            D = "%d" %(int(B/A))
    else:
        if((B/A)>0):
            D = "%s %d OVER %d" %("+",abs(B),abs(A))
        else:
            D = "%s %d OVER %d" %("-",abs(B),abs(A))
    A2 = A*2
    if(B%A2==0):
        if((B/A2)>0):
            G1 = "%s %d" %("+", int(B/A2))
            G2 = "%d" %( int(B/A2))
        else:
            G1 = "%d" %(int(B/A2))
            G2 = "%d" % (int(B / A2))
    else:
        ba = gcd(B,A2)
        if((B/A2)>0):
            G1 = "%s %d OVER %d" %("+",abs(int(B/ba)),abs(int(A2/ba)))
            G2 = "%d OVER %d" %(abs(int(B/ba)),abs(int(A2/ba)))
        else:
            G1 = "%s %d OVER %d" %("-",abs(int(B/ba)),abs(int(A2/ba)))
            G2 = "%s %d OVER %d" % ("-",abs(int(B / ba)), abs(int(A2 / ba)))

    if(C%A==0):
        if((C/A)>0):
            E = "%s %d" %("+",int(C/A))
            EE = "%d" % (-1 * int(C / A))
        else:
            E = "%d" %(int(C/A))
            EE = "%d" %(-1*int(C/A))
    else:
        if((C/A)>0):
            E = "%s %d OVER %d" %("+",abs(C),abs(A))
            EE = "%s %d OVER %d" % ("-", abs(C), abs(A))

        else:
            E = "%s %d OVER %d" %("-",abs(C),abs(A))
            EE = "%d OVER %d" % (abs(C), abs(A))

    F = "%d OVER %d" %(B*B, 4*A*A)
    f1 = B*B
    f2 = 4*A*A
    F1 = int(f1/gcd(f1,f2))
    F2 = int(f2/gcd(f1,f2))

    if(F1%F2==0):
        F = "%s %d" % ("+",int(F1 / F2))
    else:
        F = "%s %d OVER %d" %("+",abs(F1),abs(F2))
    if(H1%H2==0):
        H = "%d" %(int(H1/H2))
    else:
        if((H1/H2)>0):
            H = "%d OVER %d" %(abs(H1),abs(H2))
        else:
            H = "%s %d OVER %d" %("-",abs(H1),abs(H2))

    g3 = int((M*B)/(2*A))
    h3 = int((N*H1)/H2)
    I = g3+h3
    sb,sc,sh3,sn = mark(B),mark(C),mark(h3),mark(N)


    stem = stem.format(A=A,B=B,C=C,sb=sb,sc=sc,M=M,N=N,sn=sn)
    answer = answer.format(I=I)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,EE=EE,F=F,G1=G1,G2=G2,H=H,g3=g3,h3=h3,I=I,sb=sb,sc=sc,M=M,N=N,sh3=sh3
                             ,sn=sn)

    return stem, answer, comment

def factorization312_Stem_515():
    stem = "이차방정식 $$수식$${A}(x{sb}{B})^2`=`(x{sc}{C})^2`$$/수식$$을 " \
           "$$수식$$(x`+`a`)^2`=`b$$/수식$$의 꼴로 나타낼 때, 상수 a, b에 대하여 $$수식$$a`+`b$$/수식$$  의 값을 " \
           "구하시오.\n"

    answer = "(답): $$수식$${M}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$${A}(x{sb}{B})^2`=`(x{sc}{C})^2$$/수식$$   에서\n"\
              "$$수식$${A}x^2`{sd}{D}x{se}{E}`=`x^2`{sf}{F}x{sg}{G}$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x{si}{I}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x`=`{II}$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x{sj}{J}`=`{II}{sj}{J}$$/수식$$\n"\
              "$$수식$$(x{sk}{K})^2`=`{L}$$/수식$$\n"\
              "따라서 $$수식$$a`=`{K},`~ b`=`{L}$$/수식$$       이므로\n"\
              "$$수식$$a`+`b`=`{M}$$/수식$$\n\n"

    while True:
        A = np.random.randint(2,6)
        B = np.random.randint(-9,10)
        C = np.random.randint(-9,10)
        ab = (2*A*B) - (2*C)
        eg = (A*B*B) - (C*C)
        D = 2 * A * B
        E = A * B * B
        F = 2 * C
        G = C * C
        H = int((D - F) / (A - 1))
        if(B!=0 and C!=0 and (ab%(A-1))==0 and (ab%2)==0 and (eg%(A-1))==0 and H%2==0):
            break


    I = int((E-G)/(A-1))
    K = int(H/2)
    J = K*K
    L = J-I
    II = -1*I
    M = K+L
    sb,sc,sd,se,sf,sg,sh,si,sj,sk = mark(B),mark(C),mark(D),mark(E),mark(F),mark(G),mark(H),mark(I),mark(J),mark(K)

    stem = stem.format(A=A,B=B,C=C,sb=sb,sc=sc)
    answer = answer.format(M=M)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,II=II,J=J,K=K,L=L,M=M,sb=sb,sc=sc,sd=sd,se=se,
                             sf=sf,sg=sg,sh=sh,si=si,sj=sj,sk=sk)

    return stem, answer, comment

def factorization312_Stem_516():
    stem = "이차방정식 $$수식$${A}(x{sb}{B})^2`=`(x{sc}{C})^2`$$/수식$$을 " \
           "$$수식$$(x`+`a`)^2`=`b$$/수식$$의 꼴로 나타낼 때, 상수 a, b에 대하여 $$수식$$10a`-`b$$/수식$$  의 값을 " \
           "구하시오.\n"

    answer = "(답): $$수식$${M}$$/수식$$\n"
    comment = "(해설)\n"\
              "$$수식$${A}(x{sb}{B})^2`=`(x{sc}{C})^2$$/수식$$   에서\n"\
              "$$수식$${A}x^2`{sd}{D}x{se}{E}`=`x^2`{sf}{F}x{sg}{G}$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x{si}{I}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x`=`{II}$$/수식$$\n"\
              "$$수식$$x^2`{sh}{H}x{sj}{J}`=`{II}{sj}{J}$$/수식$$\n"\
              "$$수식$$(x{sk}{K})^2`=`{L}$$/수식$$\n"\
              "따라서 $$수식$$a`=`{K},`~ b`=`{L}$$/수식$$       이므로\n"\
              "$$수식$$10a`-`b`=`{tk}`{sll}{LL}`=`{M}$$/수식$$\n\n"

    while True:
        A = np.random.randint(2,6)
        B = np.random.randint(-9,10)
        C = np.random.randint(-9,10)
        ab = (2*A*B) - (2*C)
        eg = (A*B*B) - (C*C)
        D = 2 * A * B
        E = A * B * B
        F = 2 * C
        G = C * C
        H = int((D - F) / (A - 1))
        if(B!=0 and C!=0 and ab%(A-1)==0 and ab%2==0 and eg%(A-1)==0 and H%2==0):
            break


    I = int((E-G)/(A-1))
    K = int(H/2)
    J = K*K
    L = J-I
    II = -1*I
    M = 10*K -L
    tk = 10*K
    LL = -1*L
    sb,sc,sd,se,sf,sg,sh,si,sj,sk,sll = mark(B),mark(C),mark(D),mark(E),mark(F),mark(G),mark(H),mark(I),mark(J),mark(K),\
                                        mark(LL)

    stem = stem.format(A=A,B=B,C=C,sb=sb,sc=sc)
    answer = answer.format(M=M)
    comment = comment.format(A=A,B=B,C=C,D=D,E=E,F=F,G=G,H=H,I=I,II=II,J=J,K=K,L=L,M=M,sb=sb,sc=sc,sd=sd,se=se,
                             sf=sf,sg=sg,sh=sh,si=si,sj=sj,sk=sk,sll=sll,LL=LL,tk=tk)

    return stem, answer, comment

def factorization312_Stem_517():
    stem = "다음 이차방정식 중 해가 유리수가 아닌 것은?\n" \
           "① {Q1}\n② {Q2}\n③ {Q3}\n④ {Q4}\n⑤ {Q5}\n"

    answer = "(답): {X}\n"
    comment = "(해설)\n"\
              "① {A1}\n② {A2}\n③ {A3}\n④ {A4}\n⑤ {A5}\n\n"

    while True:
        a = [1, 4, 9, 16, 25, 36]
        A = random.choice(a)
        num = [-9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        num2 = [-9, -8, -7, -6, -5, -4, -3, -2, 2, 3, 4, 5, 6, 7, 8, 9]
        C = random.choice(num)
        B = random.choice(num2)
        D = random.choice(a) * B
        N = random.choice(num)
        O = random.choice(num)
        G = random.choice(num2)
        H = random.choice(num2)
        I = random.choice(num)
        J = np.random.randint(2, 10)
        K = random.choice(num)
        L = J * J - 1
        M = random.choice(num)
        hi = H * H - (4 * G * I)
        if ((D / B) > 0 and (H*H-I)>0 and
                hi not in a and  J * K  == -1*N and K * K + M == N * N and H % G == 0\
                 and gcd(G, I) == 1):
            break

    db = int(math.sqrt(int(D/B)))

    if((H/G)>0):
        hg = "%s %d" % ("+",int(H / G))
    else:
        hg = "%d" %(int(H/G))

    if(I%G==0):
        if((I/G)>0):
            ig = "%s %d" % ("-",int(I/ G))
        else:
            ig = "%d" %(-1*int(I/G))
    else:
        if((I/G)>0):
            ig = "%s %d OVER %d" %("-",abs(I),abs(G))
        else:
            ig = "%d OVER %d" %(abs(I),abs(G))
    G2 =G*2
    y = gcd(H,G2)
    if(H%G2==0):
        if((H/G2)>0):
            hg2 = "%s %d" % ("+",int(int(H/y) / int(G2/y)))
        else:
            hg2 = "%d" %(int(int(H/y)/int(G2/y)))
    else:
        if((H/G2)>0):
            hg2 = "%s %d OVER %d" %("+",abs(int(H/y)),abs(int(G2/y)))
        else:
            hg2 = "%s %d OVER %d" %("-",abs(int(H/y)),abs(int(G2/y)))

    g4 = 4*G*G
    z = gcd(hi,g4)
    if(hi%g4==0):
        ghi = "%d" %(int(int(hi/z)/int(g4/z)))
    else:
        ghi = "{%d OVER %d}" %(abs(int(hi/z)),abs(int(g4/z)))

    AA = -1*A
    CC = -1*C
    MM = -1*M
    E = -1*(N+O)
    F = N*O
    saa,sc,se,sf,sh,si,sk,smm = mark(AA),mark(C),mark(E),mark(F),mark(H),mark(I),mark(K),mark(MM)

    q1 = "$$수식$$x^2`%s`%d`=`0$$/수식$$" %(saa,AA)
    q2 = "$$수식$$%d`(x%s`%d)^2`=`%d$$/수식$$" %(B,sc,C,D)
    q3 = "$$수식$$ x^2`%s`%dx`%s`%d`=`0$$/수식$$" %(se,E,sf,F)
    q4 = "$$수식$$%dx^2`%s%dx`%s%d`=`0$$/수식$$" %(G,sh,H,si,I)
    q5 = "$$수식$$(%dx%s%d)^2`=`%dx^2`%s%d$$/수식$$" %(J,sk,K,L,smm,MM)

    a1 = "$$수식$$x^2`%s`%d`=`0$$/수식$$  에서 $$수식$$x`=`±` %d$$/수식$$ " %(saa,AA,int(math.sqrt(A)))
    a2 = "$$수식$$%d`(x%s`%d)^2`=`%d$$/수식$$  에서 $$수식$$x`=`%d$$/수식$$     " \
         "또는 $$수식$$x`=`%d$$/수식$$" %(B,sc,C,D,CC+db,CC-db)
    a3 = "$$수식$$x^2`%s%d`x`%s%d`=`0$$/수식$$     에서 $$수식$$x`=`%d $$/수식$$    또는 $$수식$$x`=`%d$$/수식$$" \
         %(se,E,sf,F,N,O)
    a4 = "$$수식$$%dx^2`%s%dx`%s%d`=`0$$/수식$$    에서 $$수식$$x^2`%sx`=`%s$$/수식$$\n" \
         "$$수식$$(x`%s`)^2`=`%s, `~ x`%s`=`± sqrt %s $$/수식$$\n따라서 해가 유리수가 아니다." %(G,sh,H,si,I,hg,ig,hg2,ghi,hg2,ghi)
    a5 = "$$수식$$(%dx`%s%d)^2`=`%dx^2`%s%d$$/수식$$    에서 $$수식$$x`=`%d$$/수식$$   (중근)"\
         %(J,sk,K,L,smm,MM,N)
    an = [0, 1, 2, 3, 4]
    q = [q1, q2, q3, q4, q5]
    An = [a1, a2, a3, a4, a5]
    random.shuffle(an)
    Q1, Q2, Q3, Q4, Q5 = q[an[0]], q[an[1]], q[an[2]], q[an[3]], q[an[4]]
    A1, A2, A3, A4, A5 = An[an[0]], An[an[1]], An[an[2]], An[an[3]], An[an[4]]

    if (an[0] == 3):
        x1 = 0
    elif (an[1] == 3):
        x1 = 1
    elif (an[2] == 3):
        x1 = 2
    elif (an[3] == 3):
        x1 = 3
    elif (an[4] == 3):
        x1 = 4

    X = answer_dict[x1]

    stem = stem.format(Q1=Q1,Q2=Q2,Q3=Q3,Q4=Q4,Q5=Q5)
    answer = answer.format(X=X)
    comment = comment.format(A1=A1,A2=A2,A3=A3,A4=A4,A5=A5)
    return stem, answer, comment

# 3-1-2-600
def factorization312_Stem_518():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z_1} x ` + ` a ` = ` 0$$/수식$$을 완전제곱식을 이용하여 풀었더니 해가 $$수식$${c1}$$/수식$$가 되었다. 이때 상수 a의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): {ans}\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 ` {sgn_z_1} x ` + ` a ` = ` 0$$/수식$$에서 $$수식$$x^2 ` {sgn_z_1} x ` = ` -a$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_z_1} x ` + ` {p} over 4 ` = ` -a ` + ` {p} over 4$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_z_0} over 2  )^2 ` = ` -a ` + ` {p} over 4$$/수식$$\n" \
              "$$수식$${c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "따라서 $$수식$$-4a ` + ` {p} ` = ` {x}$$/수식$$에서 $$수식$$a ` = ` {v}$$/수식$$\n\n"

    z = [-5, -3, -1, 1, 3, 5][np.random.randint(0, 6)]
    y = -z
    x = [2, 3, 5, 7][np.random.randint(0, 4)]
    p = z ** 2
    v = frac_e(p - x , 4)

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(v, 1)

    c1 = "x ` = ` {{%d} ` +- ` sqrt {%d}} over 2" % (y, x)
    c2 = "x ` %s over 2 ` = ` +- sqrt {{-4a ` + ` %d} over 4}" % (sgn(z), p)
    c3 = "x ` = ` {{%d} ` +- ` sqrt {-4a ` + ` %d}} over 2" % (-z, p)
    stem = stem.format(sgn_z_1=sgn(z,1), c1=c1, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_z_0=sgn(z), sgn_z_1=sgn(z,1), p=p, c2=c2, c3=c3, v=v, x=x)

    return stem, answer, comment


# 3-1-2-601
def factorization312_Stem_519():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z}x ` = ` m$$/수식$$을 완전제곱식을 이용하여 풀었더니 해가 $$수식$$x ` = ` n ` +- ` sqrt {y}$$/수식$$이었다. 이때 유리수 $$수식$$m,````n$$/수식$$에 대하여 $$수식$$mn$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_z} x ` = ` m$$/수식$$에서 $$수식$$x^2 ` {sgn_z} x ` + ` {w} ` = ` m ` + ` {w}$$/수식$$\n" \
              "$$수식$$ ( x ` {sgn_v} `  )^2 ` = ` m ` + ` {w}$$/수식$$, $$수식$$x ` {sgn_v} ` = ` +- ` sqrt {s}$$/수식$$\n" \
              "이때 $$수식$$x ` = ` {u} ` +- ` sqrt {s}$$/수식$$\n" \
              "$$수식$$x ` = ` n ` +- ` sqrt {y}$$/수식$$이므로 $$수식$$n ` = ` {u} , ```` m ` + ` {w} ` = ` {y}$$/수식$$\n" \
              "따라서 $$수식$$m ` = ` {t} , ```` n ` = ` {u}$$/수식$$이므로\n" \
              "$$수식$$mn ` = ` {x}$$/수식$$"

    while True:
        z = np.random.randint(-5, 6)
        if z != 0:
            break

    y = [2, 3, 5, 6, 7, 10, 11, 13, 14, 15][np.random.randint(0, 10)]
    frac_w = frac(z ** 2, 4)
    frac_v = frac(z, 2)
    frac_u = frac(-z, 2)
    frac_t = frac(4 * y - z ** 2, 4)
    frac_x = frac(((4 * y - z ** 2)) * (-z), 8)
    s = "{m ` + ` %s}" % frac_w

    stem = stem.format(sgn_z=sgn(z, 1), y=y)
    answer = answer.format(ans=frac_x)
    comment = comment.format(sgn_z=sgn(z, 1), w=frac_w, sgn_v=sgn(frac_v), u=frac_u, y=y, t=frac_t, x=frac_x, s=s)

    return stem, answer, comment


# 3-1-2-602
def factorization312_Stem_520():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z}x ` = ` m$$/수식$$을 완전제곱식을 이용하여 풀었더니 해가 $$수식$$x ` = ` -n ` +- ` sqrt {y}$$/수식$$이었다. 이때 유리수 $$수식$$m,````n$$/수식$$에 대하여 $$수식$$m ` + ` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${c1}$$/수식$$에서 $$수식$${c2}$$/수식$$\n" \
              "$$수식$${c3}$$/수식$$\n" \
              "이때 $$수식$${c4}$$/수식$$\n" \
              "$$수식$${c5}$$/수식$$이므로 $$수식$${c6}$$/수식$$\n" \
              "따라서 $$수식$${c7}$$/수식$$이므로\n" \
              "$$수식$${c8}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        if z != 0:
            break

    y = [2, 3, 5, 6, 7, 10, 11, 13, 14, 15][np.random.randint(0, 10)]

    frac_w = frac(z ** 2, 4)
    frac_v = frac(z, 2)
    frac_s = frac(-z, 2)
    frac_t = frac(4 * y - z ** 2, 4)
    frac_x = frac(4 * y - z ** 2 + 2 * z, 4)

    c1 = "x^2 ` %s x ` = ` m" % sgn(z, 1)
    c2 = "x^2 ` %s x ` %s ` = ` m ` %s" % (sgn(z, 1), sgn(frac_w), sgn(frac_w))
    c3 = " (x ` %s  )^2 ` = ` m ` %s ,```` x ` %s ` = ` +- ` sqrt {m ` %s}" % (sgn(frac_v), sgn(frac_w), sgn(frac_v), sgn(frac_w))
    c4 = "x ` = ` %s ` +- ` sqrt {m ` %s}" % (frac_s, sgn(frac_w))
    c5 = "x ` = ` -n ` +- ` sqrt %d" % y
    c6 = "n ` = ` %s ,```` m ` %s ` = ` %d" % (frac_v, sgn(frac_w), y)
    c7 = "m ` = ` %s ,```` n ` = ` %s" % (frac_t, frac_v)
    c8 = "m ` + ` n ` = ` %s" % frac_x

    stem = stem.format(sgn_z=sgn(z, 1), y=y)
    answer = answer.format(ans=frac_x)
    comment = comment.format(c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, c6=c6, c7=c7, c8=c8)

    return stem, answer, comment


# 3-1-2-603
def factorization312_Stem_521():
    stem = "$$수식$${co_z}  (x ` {sgn_y}  ) ` &gt; ` {x}$$/수식$$을 만족시키는 이차방정식 $$수식$$x^2 ` {sgn_w} x ` {sgn_v} `=` 0$$/수식$$의 해 $$수식$$x `=` a$$/수식$$를 구하면?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_w}x ` {sgn_v} `=` 0$$/수식$$에서 $$수식$$x^2 ` {sgn_w} x `+` {r} `=` {minus_v} `+` {r}$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_q}  )^2 `=` {p} ,```` x ` {sgn_q} `=` +- {co_o} sqrt {n}$$/수식$$\n" \
              "$$수식$$x `=` {minus_q} `+-` {co_o} sqrt {n}$$/수식$$\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  ) ` &gt; ` {x}$$/수식$$에서 $$수식$$x `{ineq}` 0$$/수식$$\n" \
              "따라서 $$수식$$x `=` {k}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-9, 10)
        y = np.random.randint(-9, 10)
        w = np.random.randint(-4, 5) * 2
        x = z * y
        u = np.random.randint(-9, 10)
        r = int(w ** 2 / 4)
        q = int(w / 2)
        t = -q
        v = np.random.randint(-9, 0)
        p = r - v
        if z * y * w != 0 and z != 1 and not issquare(p):
            break

    o, n = sqrt_out(p, 1)

    if z > 0:
        k = irrational_cofactor_to_num(t, o, n)
        ineq = "&gt;"
    else:
        k = irrational_cofactor_to_num(t, -o, n)
        ineq = "&lt;"

    ex = [u]
    for i in [-1, 1]:
        ex.append(irrational_cofactor_to_num(0, i * o, n))
        for j in [-1, 1]:
            ex.append(irrational_cofactor_to_num(j * t, i * o, n))

    ex1, ex2, ex3, ex4, ex5, ans = irrational_candidates_sort(ex, k, n)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), x=x, sgn_w=sgn(w, 1), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_w=sgn(w, 1), sgn_v=sgn(v), r=r, minus_v=-v, sgn_q=sgn(q), p=p, co_o=coefficient(o), n=n, minus_q=-q, co_z=coefficient(z), sgn_y=sgn(y), x=x, ineq=ineq, k=k)

    return stem, answer, comment


# 3-1-2-604
def factorization312_Stem_522():
    stem = "$$수식$${co_z}  (x ` {sgn_y}  ) ` &lt; ` {x}$$/수식$$을 만족시키는 이차방정식 $$수식$$x^2 ` {sgn_w} x ` {sgn_v} `=` 0$$/수식$$의 해 $$수식$$x `=` a$$/수식$$를 구하면?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_w}x ` {sgn_v} `=` 0$$/수식$$에서 $$수식$$x^2 ` {sgn_w} x `+` {r} `=` {minus_v} `+` {r}$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_q}  )^2 `=` {p} ,```` x ` {sgn_q} `=` +- {co_o} sqrt {n}$$/수식$$\n" \
              "$$수식$$x `=` {minus_q} `+-` {co_o} sqrt {n}$$/수식$$\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  ) ` &lt; ` {x}$$/수식$$에서 $$수식$$x `{ineq}` 0$$/수식$$\n" \
              "따라서 $$수식$$x `=` {k}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-9, 10)
        y = np.random.randint(-9, 10)
        w = np.random.randint(-4, 5) * 2
        x = z * y
        u = np.random.randint(-9, 10)
        r = int(w ** 2 / 4)
        q = int(w / 2)
        t = -q
        v = np.random.randint(-9, 0)
        p = r - v
        if z * y * w != 0 and z != 1 and not issquare(p):
            break

    o, n = sqrt_out(p, 1)

    if z > 0:
        k = irrational_cofactor_to_num(t, -o, n)
        ineq = "&lt;"
    else:
        k = irrational_cofactor_to_num(t, o, n)
        ineq = "&gt;"

    ex = [u]
    for i in [-1, 1]:
        ex.append(irrational_cofactor_to_num(0, i * o, n))
        for j in [-1, 1]:
            ex.append(irrational_cofactor_to_num(j * t, i * o, n))

    ex1, ex2, ex3, ex4, ex5, ans = irrational_candidates_sort(ex, k, n)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), x=x, sgn_w=sgn(w, 1), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_w=sgn(w, 1), sgn_v=sgn(v), r=r, minus_v=-v, sgn_q=sgn(q), p=p, co_o=coefficient(o), n=n, minus_q=-q, co_z=coefficient(z), sgn_y=sgn(y), x=x, ineq=ineq, k=k)

    return stem, answer, comment


# 3-1-2-605
def factorization312_Stem_523():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$을 $$수식$$ (x `+` a  )^2 `=` b$$/수식$$의 꼴로 나타내어 풀었더니 해가 $$수식$$x `=` {s1} {over_w}$$/수식$$이었다. 유리수 $$수식$$a ,```` b ,```` c ,```` d$$/수식$$에 대하여 $$수식$$ad over bc$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$에서 $$수식$$x^2 ` {sgn_v} x ` {sgn_u} `=` 0$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_v} x `=` {minus_u} ,```` x^2 ` {sgn_v} x `+` {t} `=` {minus_u} `+` {t}$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_s}  )^2 `=` {r}$$/수식$$,\n" \
              "$$수식$$x ` {sgn_s} `=` +- {sqrt_r}$$/수식$$에서\n" \
              "$$수식$$x `=` {minus_s} `+-` {sqrt_r} {c1}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {s} ,```` b `=` {r} ,```` c `=` {minus_q} ,```` d `=` {m}$$/수식$$이므로\n" \
              "$$수식$$ad over bc `=` {c2} over {c3} `=` {k}$$/수식$$\n\n"

    z = np.random.randint(1, 6)
    while True:
        x = np.random.randint(-30, 31)
        v = np.random.randint(-5, 6)
        y = z * v
        u = frac_e(x, z)
        s = frac_e(v, 2)
        t = frac_e(v ** 2, 4)
        r = frac_e((v ** 2) * z - 4 * x, 4 * z)
        r_num = frac_num_check(r)
        r_den = frac_den_check(r)
        if x * v != 0 and (v ** 2) * z > 4 * x and not issquare(r_num * r_den):
            break

    # 분수 R의 분모를 제곱수가 되게 통분 후 분자에서 제곱수를 빼내어 N을 구하는 작업
    sq, nonsq = sqrt_out(r_den, 1)
    n_num, m = sqrt_out(r_num * nonsq, 1)
    n = frac_e(n_num, sq * nonsq)

    if n == 1:
        sqrt_r = "sqrt %s"%m
    elif frac_num_check(n) == 1:
        sqrt_r = "{sqrt %s} over %s"%(m, frac_den_check(n))
    else:
        sqrt_r = "%s sqrt {%s}"%(n, m)

    # S의 분모와 N의 분모의 최소공배수 W를 찾은 뒤, O와 Q값을 구하는 작업
    w = lcm(frac_den_check(n), frac_den_check(s))
    o = int(w * (frac_num_check(n) / frac_den_check(n)))
    q = int((frac_num_check(s) / frac_den_check(s)) * w * (v / abs(v)))

    k = frac_e(-2 * m * v * z, q * ((v ** 2) * z - 4 * x))
    minus_u = frac_e(-x, z)
    minus_s = frac_e(-v, 2)

    s1 = "{c `+-` {%s} sqrt d}" % coefficient(o)
    if w == 1:
        c1 = ""
    else:
        c1 = "`=` {%s `+-` {%s} sqrt {%s}} over %s" % (-q, coefficient(o), m, w)
    c2 = "{{%s} times {%s}}" % (parentheses(s), parentheses(m))
    c3 = "{{%s} times {%s}}" % (parentheses(r), parentheses(-q))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), s1=s1, over_w=over_den(w))
    answer = answer.format(ans=k)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), w=w, over_w=over_den(w), sgn_v=sgn(v, 1), sgn_u=sgn(u), minus_u=minus_u, t=t, sgn_s=sgn(s), s=s, r=r, sqrt_r=sqrt_r, m=m, minus_s=minus_s, minus_q=-q, c1=c1, c2=c2, c3=c3, k=k)

    return stem, answer, comment


# 3-1-2-606
def factorization312_Stem_524():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z} ax ` {sgn_y} b `=` 0$$/수식$$의 근이\n$$수식$$x `=` {x} `+-` {w} sqrt {v}$$/수식$$일 때, 유리수 $$수식$$a ,```` b$$/수식$$에 대하여 $$수식$$a `+` b$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 ` {sgn_z} ax ` {sgn_y} b `=` 0$$/수식$$에서\n" \
              "$$수식$$x^2 ` {sgn_z} ax `=` {minus_y} b$$/수식$$, $$수식$$x^2 ` {sgn_z} ax `+` {p} a^2 `=` {p} a^2 ` {sgn_minus_y} b$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_o} a  )^2 `=` {p} a^2 ` {sgn_minus_y} b ,```` x ` {sgn_o} a `=` +- sqrt {c1}$$/수식$$\n" \
              "이때 $$수식$$x `=` {minus_o} a `+-` sqrt {c1}$$/수식$$\n" \
              "$$수식$$x `=` {x} `+-` {c2}$$/수식$$이므로" \
              "$$수식$$a `=` {m} ,```` {p} a^2 ` {sgn_minus_y} b `=` {n}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {m} ,```` b `=` {l}$$/수식$$이므로\n" \
              "$$수식$$a `+` b `=` {k}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6) * 2
        y = np.random.randint(-20, 21)
        p = frac_e(z ** 2, 4)
        o = frac_e(z, 2)
        m = np.random.randint(-5, 6)
        x = frac_e(-z * m, 2)
        l = np.random.randint(-5, 6)
        n = frac_e((z ** 2) * (m ** 2) - 4 * y * l, 4)
        if z * y != 0 and n > 0 and not issquare(n):
            break

    w, v = sqrt_out(n)
    k = m + l

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(k, np.random.randint(1, 3))

    c1 = "{%s a^2 ` %s b}" % (p, sgn(-y, 1))
    if v != n:
        c2 = "%d sqrt %d `=` %d `+-` sqrt %d" % (w, v, x, n)
    else:
        c2 = "sqrt %d" % n

    stem = stem.format(sgn_z=sgn(z, 1), sgn_y=sgn(y, 1), x=x, w=w, v=v, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_z=sgn(z, 1), sgn_y=sgn(y, 1), minus_y=-y, p=p, sgn_minus_y=sgn(-y, 1), sgn_o=sgn(o, 1), c1=c1, x=x, w=w, v=v, c2=c2, m=m, n=n, l=l, k=k, minus_o=-o)

    return stem, answer, comment


#3-1-2-607
def factorization312_Stem_525():
    stem = "다음 중 이차방정식과 그 근이 잘못 짝지어진 것은?\n① $$수식$${ex1}$$/수식$$\n② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$\n④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "{c1}\n\n"

    while True:
        y, s, g, l = [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)], [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)], [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)], [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)]
        z, t, k, f = np.random.randint(-9,10), np.random.randint(-9,10), np.random.randint(-9,10), np.random.randint(-9,10)
        v, w = 2*t, t**2
        u = w-s
        q = np.random.randint(1,6)
        r, m = 2*k, k**2
        n = l-m
        p, o = q*r, q*n
        j, h = 2*f, f**2
        i = g-h
        d = gcd(abs(i),abs(j))
        e = np.random.randint(1,10)
        c, b = int(j*e/d), int(i*e/d)
        wrat = np.random.randint(-9,10)
        wirr = [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)]
        if z*t*k*f*wrat != 0 and wrat not in [-z, -t, k, -f] and wirr not in [y,s,g,l]:
            break

    candidates = []
    ex_form1 = " (x ` {sgn_z}  )^2 `=` {y} ```` rarrow ```` x `=` {minus_z} `+-` sqrt {a_y}"
    ex_form2 = "x^2 ` {sgn_v} x ` {sgn_u} `=` 0 ```` rarrow ```` x `=` {minus_t} `+-` sqrt {s}"
    ex_form3 = "{co_q}x^2 `=` {co_p}x ` {sgn_o} ```` rarrow ```` x `=` {k} `+-` sqrt {l}"
    ex_form4 = "{co_frac_ed} x^2 ` {sgn_c} x `=` {b} ```` rarrow ```` x `=` {minus_f} `+-` sqrt {g}"

    wrong_ans = np.random.randint(1,5)
    if wrong_ans == 1:
        c1 = "$$수식$$ (x ` {sgn_z}  )^2 `=` {y}$$/수식$$에서 $$수식$$x ` {sgn_z} `=` +- sqrt {y}$$/수식$$\n" \
             "$$수식$$x `=` {minus_z} `+-` sqrt {y}$$/수식$$"
        c1 = c1.format(sgn_z=sgn(z), y=y, minus_z=-z)

        another_z, another_y = z, y
        while another_z in [-wrat, z, 0] or another_y in [wirr, y]:
            another_z = np.random.randint(-9, 10)
            another_y = [2,3,5,7,10,11,13,14,15,17,19][np.random.randint(0,11)]

        candidates.append(ex_form1.format(sgn_z=sgn(another_z), y=another_y, minus_z=-another_z, a_y=another_y))
        candidates.append(ex_form2.format(sgn_v=sgn(v,1), sgn_u=sgn(u), minus_t=-t, s=s))
        candidates.append(ex_form3.format(co_q=coefficient(q), co_p=coefficient(p), sgn_o=sgn(o), k=k, l=l))
        candidates.append(ex_form4.format(co_frac_ed=coefficient(frac_e(e, d)), sgn_c=sgn(c, 1), b=b, minus_f=-f, g=g))
        ans = ex_form1.format(sgn_z=sgn(z), y=y, minus_z=-wrat, a_y=wirr)

    if wrong_ans == 2:
        c1 = "$$수식$$x^2 ` {sgn_v} x ` {sgn_u} `=` 0$$/수식$$에서 $$수식$$x^2 ` {sgn_v} x `=` {minus_u}$$/수식$$\n" \
             "$$수식$$x^2 ` {sgn_v} x `+` {w} `=` {minus_u} `+` {w}$$/수식$$\n" \
             "$$수식$$ (x ` {sgn_t}  )^2 `=` {s} ,```` x ` {sgn_t} `=` +- sqrt {s}$$/수식$$\n" \
             "$$수식$$x `=` {minus_t} `+-` sqrt {s}$$/수식$$"
        c1 = c1.format(sgn_v=sgn(v,1), sgn_u=sgn(u), minus_u=-u, w=w, sgn_t=sgn(t), s=s, minus_t=-t)

        another_t, another_s = t, s
        while another_t in [-wrat, t, 0] or another_s in [wirr, s]:
            another_t = np.random.randint(-9, 10)
            another_s = [2, 3, 5, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 11)]
            another_v, another_u = 2*another_t, another_t**2-another_s

        candidates.append(ex_form1.format(sgn_z=sgn(z), y=y, minus_z=-z, a_y=y))
        candidates.append(ex_form2.format(sgn_v=sgn(another_v, 1), sgn_u=sgn(another_u), minus_t=-another_t, s=another_s))
        candidates.append(ex_form3.format(co_q=coefficient(q), co_p=coefficient(p), sgn_o=sgn(o), k=k, l=l))
        candidates.append(ex_form4.format(co_frac_ed=coefficient(frac_e(e,d)), sgn_c=sgn(c,1), b=b, minus_f=-f, g=g))
        ans = ex_form2.format(sgn_v=sgn(v,1), sgn_u=sgn(u), minus_t=-wrat, s=wirr)

    if wrong_ans == 3:
        c1 = "$$수식$${co_q}x^2 `=` {co_p}x ` {sgn_o}$$/수식$$에서 $$수식$$x^2 ` {sgn_minus_r} x `=` {n}$$/수식$$\n" \
             "$$수식$$x^2 ` {sgn_minus_r} x `+` {m} `=` {n} `+` {m} `=` {l}$$/수식$$\n" \
             "$$수식$$ (x ` {sgn_minus_k}  )^2 `=` {l} ,```` x ` {sgn_minus_k} `=` +- sqrt {l}$$/수식$$\n" \
             "$$수식$$x `=` {k} `+-` sqrt {l}$$/수식$$"
        c1 = c1.format(co_q=coefficient(q), co_p=coefficient(p), sgn_o=sgn(o), sgn_minus_r=sgn(-r,1), m=m, n=n, l=l, sgn_minus_k=sgn(-k), k=k)

        another_k, another_l = k, l
        while another_k in [wrat, k, 0] or another_l in [wirr, l]:
            another_k = np.random.randint(-9, 10)
            another_l = [2, 3, 5, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 11)]
        another_q = np.random.randint(1,6)
        another_p, another_o = 2*another_k*another_q, another_q*(another_l-another_k**2)

        candidates.append(ex_form1.format(sgn_z=sgn(z), y=y, minus_z=-z, a_y=y))
        candidates.append(ex_form2.format(sgn_v=sgn(v, 1), sgn_u=sgn(u), minus_t=-t, s=s))
        candidates.append(ex_form3.format(co_q=coefficient(another_q), co_p=coefficient(another_p), sgn_o=sgn(another_o), k=another_k, l=another_l))
        candidates.append(ex_form4.format(co_frac_ed=coefficient(frac_e(e, d)), sgn_c=sgn(c, 1), b=b, minus_f=-f, g=g))
        ans = ex_form3.format(co_q=coefficient(q), co_p=coefficient(p), sgn_o=sgn(o), k=wrat, l=wirr)

    if wrong_ans == 4:
        c1 = "$$수식$${frac_ed} x^2 ` {sgn_c} x `=` {b}$$/수식$$에서 $$수식$$x^2 ` {sgn_j} x `=` {i}$$/수식$$\n" \
             "$$수식$$x^2 ` {sgn_minus_j} x `+` {h} `=` {i} `+` {h} `=` {g}$$/수식$$\n" \
             "$$수식$$ (x ` {sgn_f}  )^2 `=` {g} ,```` x ` {sgn_f} `=` +- sqrt {g}$$/수식$$\n" \
             "$$수식$$x `=` {minus_f} `+-` sqrt {g}$$/수식$$"
        c1 = c1.format(frac_ed=frac_e(e,d), sgn_c=sgn(c,1), b=b, sgn_j=sgn(j,1), i=i, sgn_minus_j=sgn(-j,1), h=h, g=g, sgn_f=sgn(f), minus_f=-f)

        another_f, another_g = f, g
        while another_f in [-wrat, k, 0] or another_g in [wirr, l]:
            another_f = np.random.randint(-9, 10)
            another_g = [2, 3, 5, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 11)]
        an_e, an_d = np.random.randint(1,10), gcd(abs(2*another_f), abs(another_g-(another_f**2)))
        another_frac_ed, another_c, another_b = frac_e(an_e, an_d), int(2*another_f*an_e/an_d), int((another_g-(another_f**2))*an_e/an_d)

        candidates.append(ex_form1.format(sgn_z=sgn(z), y=y, minus_z=-z, a_y=y))
        candidates.append(ex_form2.format(sgn_v=sgn(v, 1), sgn_u=sgn(u), minus_t=-t, s=s))
        candidates.append(ex_form3.format(co_q=coefficient(q), co_p=coefficient(p), sgn_o=sgn(o), k=k, l=l))
        candidates.append(ex_form4.format(co_frac_ed=coefficient(another_frac_ed), sgn_c=sgn(another_c, 1), b=another_b, minus_f=-another_f, g=another_g))
        ans = ex_form4.format(co_frac_ed=coefficient(frac_e(e,d)), sgn_c=sgn(c,1), b=b, minus_f=-wrat, g=wirr)

    candidates.append(ans)
    np.random.shuffle(candidates)
    ex1, ex2, ex3, ex4, ex5, ans_num = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4], answer_dict[candidates.index(ans)]

    stem = stem.format(ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(c1=c1)

    return stem, answer, comment


# 3-1-2-608
def factorization312_Stem_526():
    stem = "이차방정식 $$수식$$x^2 `-` ax `+` b `=` 0$$/수식$$을 $$수식$$ (x `+` k  )^2 `=` 0$$/수식$$의 꼴로 나타내었다. $$수식$${co_z} a `+` b `=` {y}$$/수식$$일 때, 상수 $$수식$$k$$/수식$$의 값을 구하시오. (단, $$수식$$k ` &gt; ` 0,```` a,```` b$$/수식$$는 상수)\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 `-` ax `+` b `=`  (x `+` k  )^2$$/수식$$에서\n" \
              "$$수식$$x^2 `-` ax `+` b `=` x^2 `+` 2kx `+` k^2$$/수식$$\n" \
              "$$수식$$a `=` -2k,```` b `=` k^2$$/수식$$\n" \
              "이때 $$수식$${co_z} a `+` b `=` {y}$$/수식$$이므로\n" \
              "$$수식$${co_x} k `+` k^2 `=` {y},```` k^2 ` {sgn_x} k ` {sgn_minus_y} `=` 0$$/수식$$\n" \
              "$$수식$$ (k ` {sgn_minus_w}  )  (k ` {sgn_minus_v}  ) `=` 0$$/수식$$,\n" \
              "$$수식$$k `=` {w}$$/수식$$ 또는 $$수식$$k `=` {v}$$/수식$$\n" \
              "그런데 $$수식$$k ` &gt; ` 0$$/수식$$ 이므로 $$수식$$k `=` {w}$$/수식$$\n\n"

    while True:
        w = np.random.randint(1, 10)
        v = np.random.randint(-9, 0)
        if w + v != 0:
            break
    x = -(w + v)
    y = -w * v
    z = frac_e(-x, 2)

    stem = stem.format(co_z=coefficient(z), y=y)
    answer = answer.format(ans=w)
    comment = comment.format(co_z=coefficient(z), y=y, co_x=coefficient(x), sgn_x = sgn(x, 1), sgn_minus_y=sgn(-y), sgn_minus_w=sgn(-w), sgn_minus_v=sgn(-v), w=w, v=v)

    return stem, answer, comment


# 3-1-2-609
def factorization312_Stem_527():
    stem = "이차방정식 $$수식$$ (x ` {sgn_z}  )^2 `=` {y} k$$/수식$$의 해가 정수가 되도록 하는 가장 작은 두 자리 자연수 $$수식$$k$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$ (x ` {sgn_z}  )^2 `=` {y} k$$/수식$$에서 $$수식$$x ` {sgn_z} `=` +- sqrt {y}k$$/수식$$\n" \
              "$$수식$$x `=` {minus_z} `+-` sqrt {y}k$$/수식$$\n" \
              "해가 정수가 되려면 자연수 $$수식$$k$$/수식$$에 대하여 근호 안의 수 $$수식$${y}k$$/수식$$가 제곱수가 되어야 한다.\n" \
              "이를 만족시키려면 $$수식$$k `=` {y} ` times `  ($$/수식$$자연수$$수식$$ )$$/수식$$의 꼴이어야 하므로 $$수식$$k$$/수식$$의 값은 $$수식$${x} ,```` {w} ,```` {v} ,```` {u} ,```` CDOTS$$/수식$$등이 올 수 있고, 이 중 가장 작은 두 자리 자연수는 $$수식$${w}$$/수식$$이다.\n\n"

    while True:
        z = np.random.randint(-10, 11)
        if z != 0:
            break
    y = np.random.randint(1, 4) * 2 + 1
    x = y
    w = y * 4
    v = y * 9
    u = y * 16

    stem = stem.format(sgn_z=sgn(z), y=y)
    answer = answer.format(ans=w)
    comment = comment.format(sgn_z=sgn(z), y=y, minus_z=-z, x=x, w=w, v=v, u=u)

    return stem, answer, comment


# 3-1-2-610
def factorization312_Stem_528():
    stem = "실수 $$수식$$x ,````y$$/수식$$에 대하여 $$수식$$x `DIAMOND` y `=` xy `+` 2x `-` y^2$$/수식$$이라 하자. 이때 방정식 $$수식$$ ({co_z} a ` {sgn_y}  ) ` DIAMOND `  ({co_x} a ` {sgn_w}  ) `=` {v}$$/수식$$을 만족시키는 실수 $$수식$$a$$/수식$$의 값들의 곱을 완전제곱식을 이용하여 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x `DIAMOND` y `=` xy `+` 2x `-` y^2$$/수식$$이므로\n" \
              "$$수식$$ ({co_z} a ` {sgn_y}  ) ` DIAMOND `  ({co_x} a ` {sgn_w}  ) `=` {v}$$/수식$$\n" \
              "$$수식$$ ({co_z} a ` {sgn_y}  )  ({co_x} a ` {sgn_w}  ) `+` 2  ({co_z} a ` {sgn_y}  ) `-`  ({co_x} a ` {sgn_w}  )^2$$/수식$$\n" \
              "$$수식$$=` {v}$$/수식$$\n" \
              "$$수식$${co_u} a^2 ` {sgn_t} a ` {sgn_s} ` {sgn_r} a ` {sgn_q} ` {sgn_p} a^2 ` {sgn_o} a ` {sgn_n} `=` {v}$$/수식$$\n" \
              "$$수식$${co_m} a^2 ` {sgn_l} a ` {sgn_k} `=` {v} ,```` a^2 ` {sgn_j} a `=` {i}$$/수식$$\n" \
              "$$수식$$a^2 ` {sgn_j} a ` {sgn_h} `=` {i} ` {sgn_h}$$/수식$$\n" \
              "$$수식$$ (a ` {sgn_g}  )^2 `=` {f} ,```` a ` {sgn_g} `=` +- {sqrt_f}$$/수식$$이므로\n" \
              "$$수식$$a `=` {minus_g} `+-` {sqrt_f}$$/수식$$\n" \
              "$$수식$$ ({minus_g} `+` {sqrt_f}  ) ` times `  ({minus_g} `-` {sqrt_f}  ) `=` {c} `-` {f}$$/수식$$\n" \
              "$$수식$$=` {b}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        y = np.random.randint(-5, 6)
        x = np.random.randint(-5, 6)
        w = np.random.randint(-5, 6)
        v = np.random.randint(-20, 21)
        u = z * x
        t = z * w + y * x
        s = y * w
        r = 2 * z
        q = 2 * y
        p = -(x ** 2)
        o = -2 * x * w
        n = -(w ** 2)
        m = u + p
        l = t + r + o
        k = s + q + n
        j = frac_e(l, m)
        i = frac_e(v - k, m)
        h = frac_e(l ** 2, 4 * (m ** 2))
        g = frac_e(l, 2 * m)
        f = frac_e(4 * m * v - 4 * m * k + l ** 2, 4 * (m ** 2))
        if z * y * x * w != 0 and z != x and 4 * m * v - 4 * m * k + l ** 2 >= 0 and frac_den_check(h) < 1000 and not issquare(frac_num_check(f) * frac_den_check(f)):
            break

    f_num = frac_num_check(f)
    f_den = frac_den_check(f)
    f_den_sq, f_den_rt = sqrt_out(f_den, 1)
    e_num, d = sqrt_out(f_den_rt * f_num, 1)
    e = frac_e(e_num, f_den_sq * f_den_rt)

    c = frac_e(l ** 2, 4 * (m ** 2))
    b = frac_e(k - v, m)

    minus_g = frac_e(-l, 2 * m)

    if e == 1:
        sqrt_f = "sqrt %s" % d
    elif frac_num_check(e) == 1:
        sqrt_f = "{sqrt %s} over %s" % (d, frac_den_check(e))
    else:
        sqrt_f = "%s sqrt {%s}" % (e, d)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), v=v)
    answer = answer.format(ans=b)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), v=v, co_u=coefficient(u), sgn_t=sgn(t, 1), sgn_s=sgn(s),
                             sgn_r=sgn(r, 1), sgn_q=sgn(q), sgn_p=sgn(p, 1), sgn_o=sgn(o, 1), sgn_n=sgn(n), co_m=coefficient(m),
                             sgn_l=sgn(l), sgn_k=sgn(k), sgn_j=sgn(j, 1), i=i, sgn_h=sgn(h),
                             sgn_g=sgn(g), minus_g=minus_g, f=f, sqrt_f=sqrt_f, c=c, b=b)

    return stem, answer, comment


# 3-1-2-611
def factorization312_Stem_529():
    stem = "두 이차방정식 $$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0,````  (x ` {sgn_x}  )^2 `=` {w}$$/수식$$의 공통인 근이 이차방정식 $$수식$${co_v} x^2 ` {sgn_u} ax ` {sgn_t} a `=` 0$$/수식$$의 근일 때, 상수 $$수식$$a$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$에서 $$수식$$ (x ` {sgn_s}  )  (x ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {minus_s}$$/수식$$ 또는 $$수식$$x `=` {minus_r}$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_x}  )^2 `=` {w}$$/수식$$에서 $$수식$$x ` {sgn_x} `=` +- {q}$$/수식$$\n" \
              "$$수식$$x = {p}$$/수식$$ 또는 $$수식$$x `=` {o}$$/수식$$\n" \
              "두 이차방정식의 공통인 근은 $$수식$$x `=` {n}$$/수식$$이므로\n" \
              "$$수식$${co_v} x^2 ` {sgn_u} ax ` {sgn_t} a `=` 0$$/수식$$에 $$수식$$x `=` {n}$$/수식$$을 대입하면\n" \
              "$$수식$${p_v} ` times ` {m} ` {sgn_n} ` TIMES ` {co_u_a} ` {sgn_t} a `=` 0$$/수식$$\n" \
              "$$수식$$a `=` {l}$$/수식$$\n\n"

    while True:
        x = np.random.randint(-5, 6)
        q = np.random.randint(1, 6)
        v = np.random.randint(-5, 6)
        u = np.random.randint(-5, 6)
        t = np.random.randint(-5, 6)
        r = np.random.randint(-9, 10)
        w = q ** 2
        p = -x - q
        o = -x + q
        n = o
        s = -o
        z = s + r
        y = s * r
        m = n ** 2
        if x * v * u * t * r != 0 and r != -p and n * u + t != 0:
            break
    l = frac_e(-v * m, n * u + t)

    if u == 1:
        co_u_a = "a"
    elif u == -1:
        co_u_a = " (-a  )"
    elif u > 0:
        co_u_a = "%da" % u
    else:
        co_u_a = " ( %d a  )" % u

    stem = stem.format(sgn_z=sgn(z, 1), sgn_y=sgn(y), sgn_x=sgn(x), w=w, v=v, sgn_u=sgn(u, 1), sgn_t=sgn(t, 1), co_v=coefficient(v))
    answer = answer.format(ans=l)
    comment = comment.format(sgn_z=sgn(z, 1), sgn_y=sgn(y), sgn_s=sgn(s), sgn_r=sgn(r), minus_s=-s, minus_r=-r,
                             sgn_x=sgn(x), w=w, q=q, p=p, o=o, n=n, co_v=coefficient(v), p_v=parentheses(v), m=m, sgn_n=sgn(n), co_u_a=co_u_a,
                             l=l, sgn_u=sgn(u, 1), sgn_t=sgn(t, 1))

    return stem, answer, comment


# 3-1-2-612
def factorization312_Stem_530():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z} x `+` q `=` 0$$/수식$$의 해에 대하여 유리수인 해를 갖도록 하는 자연수 $$수식$$q$$/수식$$의 값은 모두 몇 개인지 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_z} x `+` q `=` 0$$/수식$$에서\n" \
              "$$수식$$x^2 ` {sgn_z} x `+` {y} {den_x} `=` -q `+` {y} {den_x},````  (x ` {sgn_half_z} `  )^2 `=` -q `+` {y} {den_x}$$/수식$$\n" \
              "$$수식$$x ` {sgn_half_z} `=` +- sqrt {c1} `=` +- sqrt {c2} {den_w}$$/수식$$\n" \
              "$$수식$$x `=` {c3} {den_w}$$/수식$$\n" \
              "이차방정식이 해를 가지려면\n" \
              "$$수식$${y} ` {sgn_minus_x} q geq 0,```` {y} {den_x} geq q$$/수식$$\n" \
              "또한 유리수인 해를 가지려면 $$수식$${y} ` {sgn_minus_x}q$$/수식$$가 $$수식$$0$$/수식$$ 또는 제곱수가 되어야 하므로\n" \
              "$$수식$${y} ` {sgn_minus_x}q `=` {square}$$/수식$$\n" \
              "따라서 $$수식$${possible_q}$$/수식$$\n" \
              "이 중 자연수인 $$수식$$q$$/수식$$는 $$수식$${natural_q}$$/수식$$의 $$수식$${k}$$/수식$$개이다\n\n"

    while True:
        z = np.random.randint(-10, 11)
        if z != 0 and z**2 != 1:
            break

    if abs(z) % 2 == 0:
        y = int(z ** 2 / 4)
        x = 1
        w = 1
        den_x = ""
        den_w = ""
    else:
        y = z ** 2
        x = 4
        w = 2
        den_x = "over 4"
        den_w = "over 2"

    square = ""
    for i in range(11):
        if i ** 2 <= y:
            if (i + 1) ** 2 > y:
                square = square + str(i ** 2)
            else:
                square = square + str(i ** 2) + " ,```` "

    possible_q = "q `=` "
    for i in range(11):
        if y - i ** 2 >= 0:
            if y - (i + 1) ** 2 < 0:
                possible_q = possible_q + str(frac_e(y - i ** 2, x))
            else:
                possible_q = possible_q + str(frac_e((y - i ** 2), x)) + " ,```` "

    k = 0
    natural_q = "{"
    for i in range(11):
        if (y - i ** 2) / x == int((y - i ** 2) / x) and y - i ** 2 > 0:
            natural_q = natural_q + str(frac_e(y - i ** 2, x)) + " ,```` "
            k += 1
    natural_q = natural_q[:-7] + "}"

    c1 = "{-q `+` %d %s}" % (y, den_x)
    c2 = "{%d ` %sq}" % (y, sgn(-x, 1))
    c3 = "{%d `+-` sqrt{%d ` %sq}}" % (-z * w / 2, y, sgn(-x, 1))

    stem = stem.format(sgn_z=sgn(z, 1))
    answer = answer.format(ans=k)
    comment = comment.format(sgn_z=sgn(z, 1), y=y, x=x, sgn_minus_x=sgn(-x, 1), sgn_half_z=sgn(frac_e(z, 2)), c1=c1, c2=c2, c3=c3,
                             den_x=den_x, den_w=den_w, square=square, possible_q=possible_q, natural_q=natural_q, k=k)

    return stem, answer, comment


# 3-1-2-613
def factorization312_Stem_531():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$의 두 근 중 큰 근을 $$수식$$a$$/수식$$라 할 때, $$수식$$a ` {sgn_t}$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$에서 일차항의 계수가 짝수이므로\n" \
              "$$수식$$x `=` - {p_x} `+-` sqrt {c1} `=` {minus_x} `+-` {co_s} sqrt {v}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {minus_x} `+` {co_s} sqrt {v}$$/수식$$이므로 $$수식$$a ` {sgn_t} `=` {u} `+` {co_s} sqrt {v}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6) * 2
        t = np.random.randint(-5, 6)
        x = int(z / 2)
        w = x ** 2
        u = -x + t
        if z * t * u != 0:
            break

    while True:
        y = np.random.randint(-w, w - 1)
        s, v = sqrt_out(w - y, 1)
        if not issquare(w - y):
            break

    c1 = "{%d `-` 1 times %s}" % (w, parentheses(y))

    ex = [irrational_cofactor_to_num(0, s, v), irrational_cofactor_to_num(0, -s, v)]
    for i in [u, -u, z, -z, x, -x]:
        for j in [-1, 1]:
            ex.append(irrational_cofactor_to_num(i, j * s, v))

    dap = irrational_cofactor_to_num(u, s, v)
    ex1, ex2, ex3, ex4, ex5, ans = irrational_candidates_sort(list(set(ex)), dap, v)

    stem = stem.format(sgn_z=sgn(z, 1), sgn_y=sgn(y), sgn_t=sgn(t), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_z=sgn(z,1), sgn_y=sgn(y), p_x=parentheses(x), c1=c1, minus_x=-x, co_s=coefficient(s), v=v, sgn_t=sgn(t), u=u)

    return stem, answer, comment


# 3-1-2-615
def factorization312_Stem_532():
    stem = "이차방정식 $$수식$${co_z} x `  ({co_y} x ` {sgn_x}  ) `=` {w}$$/수식$$의 근이 $$수식$$x `=` {s1} {over_t} `$$/수식$$일 때, $$수식$$B `-` A$$/수식$$의 값은? (단, $$수식$$A,````B$$/수식$$는 유리수)\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x `  ({co_y}x ` {sgn_x}  ) `=` {w}$$/수식$$에서 $$수식$${co_t} x^2 ` {sgn_s} x `-` {w} `=` 0$$/수식$$이고 일차항의 계수가 짝수이므로 근의 공식을 이용하여 근을 구하면\n" \
              "$$수식$$x `=` {c1} {over_t} `=` {c2} {over_t}$$/수식$$\n" \
              "따라서 $$수식$$A `=` {r},```` B `=` {p}$$/수식$$이므로\n" \
              "$$수식$$B `-` A `=` {p} `-` {p_r} `=` {n}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 4)
        y = np.random.randint(1, 4)
        x = np.random.randint(-10, 11)
        t = z * y
        s = z * x
        r = int(-s / 2)
        q = r ** 2
        w = np.random.randint(1, 21)
        p, o = sqrt_out(q + t * w, 1)
        n = p - r
        v = o
        u = t
        if x * n != 0 and s % 2 == 0 and gcd(gcd(y, abs(x)), w) * gcd(z, w) == 1 and not issquare(q + t * w):
            break

    ex = [n - 1, n, n + 1, 2 * n - 1, 2 * n, 2 * n + 1, 3 * n - 1, 3 * n, 3 * n + 1, 4 * n - 1, 4 * n, 4 * n + 1, 5 * n - 1, 5 * n, 5 * n + 1]
    ex = list(set(ex))
    while True:
        np.random.shuffle(ex)
        if n in ex[0:5]:
            candidates = sorted(ex[0:5])
            ex1, ex2, ex3, ex4, ex5 = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4]
            ans = answer_dict[candidates.index(n)]
            break

    s1 = "{A `+-` B sqrt %d}" % v
    c1 = "{%s `+-` sqrt {%s `-` %s ` TIMES `%s}}" % (r, q, t, parentheses(-w))
    c2 = "{%s `+-` %s sqrt %s}" % (r, coefficient(p), o)

    stem = stem.format(co_z=coefficient(z), co_y=coefficient(y), sgn_x=sgn(x), w=w, s1=s1, over_t=over_den(t), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), co_y=coefficient(y), sgn_x=sgn(x), w=w, co_t=coefficient(t), over_t=over_den(t), sgn_s=sgn(s, 1), c1=c1, c2=c2, p_r=parentheses(r), r=r, p=p, n=n)

    return stem, answer, comment


# 3-1-2-616
def factorization312_Stem_533():
    stem = "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 근이 $$수식$$x `=` {s1} over {w}$$/수식$$일 때,\n$$수식$$A `-` B$$/수식$$의 값은? (단, $$수식$$A ,```` B $$/수식$$는 유리수)\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$에서 근의 공식을 이용하여 근을 구하면\n" \
              "$$수식$$x `=` {c1} over {c2} `=` {c3} over {w}$$/수식$$\n" \
              "따라서 $$수식$$A `=` {minus_y} ,```` B `=` {u}$$/수식$$이므로\n" \
              "$$수식$$A `-` B `=` {t}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 4)
        y = np.random.randint(-5, 5) * 2 + 1
        x = np.random.randint(-20, 21)
        v = y ** 2
        w = 2 * z
        r = v - 4 * z * x
        if x != 0 and gcd(gcd(z, abs(y)), abs(x)) == 1 and r > 0:
            s, u = sqrt_out(r)
            t = -y - u
            if t != 0 and not issquare(r):
                break

    s1 = "{A `+-` %s sqrt B}" % s
    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` %s ` TIMES ` %s}}" % (-y, v, z, parentheses(x))
    c2 = "{2 ` TIMES ` %s}" % z
    c3 = "{%d `+-` %s sqrt %s}" % (-y, s, u)

    ex = [t - 1, t, t + 1, 2 * t - 1, 2 * t, 2 * t + 1, 3 * t - 1, 3 * t, 3 * t + 1, 4 * t - 1, 4 * t, 4 * t + 1, 5 * t - 1, 5 * t, 5 * t + 1]
    ex = list(set(ex))
    while True:
        np.random.shuffle(ex)
        if t in ex[0:5]:
            candidates = sorted(ex[0:5])
            ex1, ex2, ex3, ex4, ex5 = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4]
            ans = answer_dict[candidates.index(t)]
            break

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), s1=s1, w=w, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), c1=c1, c2=c2, c3=c3, w=w, minus_y=-y, u=u, t=t)

    return stem, answer, comment


# 3-1-2-617
def factorization312_Stem_534():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 두 근을 $$수식$$m ,```` n$$/수식$$이라 할 때, $$수식$$mn$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z}x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 근을 구하면\n" \
              "$$수식$$x `=` {c1} over {c2} `=` {c3} {over_u}$$/수식$$\n" \
              "이므로 두 근의 곱은\n" \
              "$$수식$$x `=` {c4} ` times ` {c5} `=` {c6} {over_t} `=` {s}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 4)
        y = np.random.randint(-5, 5) * 2 + 1
        x = np.random.randint(int(-20 / z), int(20 / z) + 1) * z
        s = int(x / z)
        w = y ** 2
        u = 2 * z
        t = u ** 2
        q = w - 4 * z * x
        if y * x != 0 and gcd(gcd(z, abs(y)), abs(x)) == 1 and q > 0 and not issquare(q):
            r, v = sqrt_out(q)
            break

    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` %s ` TIMES ` %s}}" % (-y, w, z, parentheses(x))
    c2 = "{2 ` TIMES ` %s}" % z
    c3 = "{%d `+-` %s sqrt %s}" % (-y, r, v)
    c4 = "{%d `+` %s sqrt %s} %s" % (-y, r, v, over_den(u))
    c5 = "{%d `-` %s sqrt %s} %s" % (-y, r, v, over_den(u))
    c6 = "{%s `-` %s}" % (w, q)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x))
    answer = answer.format(ans=s)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), c1=c1, c2=c2, c3=c3, over_u=over_den(u), c4=c4, c5=c5, c6=c6, over_t=over_den(t), s=s)

    return stem, answer, comment


# 3-1-2-618
def factorization312_Stem_535():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 두 근을 $$수식$$m,```` n$$/수식$$이라 할 때, $$수식$$m `+` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 근을 구하면\n" \
              "$$수식$$x `=` {c1} over {c2} `=` {c3} {over_u}$$/수식$$\n" \
              "이므로 두 근의 합은\n" \
              "$$수식$$x `=` {c4} `+` {c5} `=` {t} {over_u} `=` {s}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 4)
        y = np.random.randint(-5, 5) * 2 + 1
        x = np.random.randint(int(-20 / z), int(20 / z) + 1) * z
        s = frac_e(-y, z)
        w = y ** 2
        u = 2 * z
        t = -2 * y
        q = w - 4 * z * x
        if y * x != 0 and gcd(gcd(z, abs(y)), abs(x)) == 1 and q > 0 and not issquare(q):
            r, v = sqrt_out(q)
            break

    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` %s ` TIMES ` %s}}" % (-y, w, z, parentheses(x))
    c2 = "{2 ` TIMES ` %s}" % z
    c3 = "{%d `+-` %s sqrt %s}" % (-y, r, v)
    c4 = "{%d `+` %s sqrt %s} %s" % (-y, r, v, over_den(u))
    c5 = "{%d `-` %s sqrt %s} %s" % (-y, r, v, over_den(u))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x))
    answer = answer.format(ans=s)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), c1=c1, c2=c2, c3=c3, over_u=over_den(u), c4=c4, c5=c5,
                             t=t, s=s)

    return stem, answer, comment


# 3-1-2-619
def factorization312_Stem_536():
    stem = "$$수식$$x^2 ` {sgn_z} x ` {sgn_y} k ` {sgn_x} `=` 0$$/수식$$의 해가 $$수식$$x `=` {w} `+-` {co_r} sqrt {v}$$/수식$$일 때, 상수 $$수식$$k$$/수식$$의 값을 구하시오. \n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_z} x ` {sgn_y} k ` {sgn_x} `=` 0$$/수식$$의 해는\n" \
              "$$수식$$x `=` {c1} over 1 `=` {w} `+-` {co_r} sqrt {v}$$/수식$$\n" \
              "이므로\n" \
              "$$수식$${t} `-`  ({co_y} k ` {sgn_x}  ) `=` {r}^2 ` times ` {v}$$/수식$$에서 $$수식$$k `=` {s}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6) * 2
        y = np.random.randint(-5, 6)
        x = np.random.randint(-10, 11)
        u = int(-z / 2)
        t = u ** 2
        w = -u
        v = [2, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 12)]
        r = np.random.randint(1, 4)
        s = frac_e(t - (r ** 2) * v - x, y)
        if z * y != 0:
            break

    c1 = "{%d `+-` sqrt {%s `-` 1 ` TIMES `  (%s k ` %s  )}}" % (-u, t, coefficient(y), sgn(x))

    stem = stem.format(sgn_z=sgn(z, 1), sgn_y=sgn(y, 1), sgn_x=sgn(x), w=w, co_r=coefficient(r), v=v)
    answer = answer.format(ans=s)
    comment = comment.format(sgn_z=sgn(z, 1), sgn_y=sgn(y, 1), sgn_x=sgn(x), c1=c1, w=w, co_r=coefficient(r), r=r, v=v, t=t, co_y=coefficient(y), s=s)

    return stem, answer, comment


# 3-1-2-620
def factorization312_Stem_537():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x `+` A `=` 0$$/수식$$의 근이 $$수식$$x `=` {c3} {over_w}$$/수식$$일 때, $$수식$$A `-` B$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$$A ,```` B$$/수식$$는 유리수$$수식$$ )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x `+` A `=` 0$$/수식$$의 근은\n" \
              "$$수식$$x `=` {c1} over {c2} `=` {c3} {over_w}$$/수식$$이므로\n" \
              "$$수식$$A `=` {u} ,```` B `=` {t}$$/수식$$\n" \
              "따라서 $$수식$$A `-` B `=` {u} `-` {p_t} `=` {s}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 4)
        y = np.random.randint(-5, 5) * 2 + 1
        x = np.random.randint(1, 11)
        w = 2 * z
        v = y ** 2
        u = frac_e(v - x ** 2, 4 * z)
        t = -y
        s = frac_e(v - x ** 2 + 4 * z * y, 4 * z)
        if y != 0:
            if type(u) == str:
                break
            elif u != 0 and gcd(gcd(z, abs(y)), abs(u)) == 1:
                break

    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` %s ` TIMES ` A}}" % (-y, v, z)
    c2 = "{2 ` TIMES ` %s}" % z
    c3 = "{B `+-` %s}" % x

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(s, np.random.randint(1, 3))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), c3=c3, over_w=over_den(w), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), c1=c1, c2=c2, c3=c3, over_w=over_den(w), u=u, t=t, p_t=parentheses(t), s=s)

    return stem, answer, comment


# 3-1-2-621
def factorization312_Stem_538():
    stem = "이차방정식 $$수식$$ax^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$의 근이 $$수식$${s1} over {w}$$/수식$$일 때, $$수식$$b `-` a$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ,```` b$$/수식$$는 유리수$$수식$$ )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$ax^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$의 근은\n" \
              "$$수식$$x `=` {c1} over 2a$$/수식$$\n" \
              "$$수식$$=` {c2} over 2a$$/수식$$\n" \
              "$$수식$$=` {s1} over {w}$$/수식$$\n" \
              "이므로 $$수식$$a `=` {t},```` b `=` {s}$$/수식$$\n" \
              "따라서 $$수식$$b `-` a `=` {r}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 5) * 2 + 1
        y = np.random.randint(-20, 21)
        w = np.random.randint(1, 5) * 2
        u, v, t, x = 4 * y, z ** 2, int(w / 2), -z
        if v > u * t and y != 0:
            if gcd(gcd(abs(z), abs(y)), abs(t)) == 1 and not issquare(v - u * t):
                q, s = sqrt_out(v - u * t)
                r = s - t
                break

    s1 = "{%d `+-` %s sqrt b}" % (x, q)
    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` a ` TIMES ` %s}}" % (-z, v, parentheses(y))
    c2 = "{%d `+-` sqrt {%s ` %s a}}" % (-z, v, sgn(-u, 1))

    stem = stem.format(sgn_z=sgn(z, 1), sgn_y=sgn(y), s1=s1, w=w)
    answer = answer.format(ans=r)
    comment = comment.format(sgn_z=sgn(z, 1), sgn_y=sgn(y), c1=c1, c2=c2, s1=s1, w=w, t=t, s=s, r=r)

    return stem, answer, comment


# 3-1-2-622
def factorization312_Stem_539():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 두 근 중 작은 근을 $$수식$$k$$/수식$$라 할 때, $$수식$${co_w} k ` {sgn_v} sqrt {u}$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$이고 일차항의 계수가 짝수이므로 근의 공식을 이용하여 근을 구하면\n" \
              "$$수식$$x `=` {c1} {over_z} `=` {c2} {over_z}$$/수식$$\n" \
              "이 중 작은 근은 $$수식$${c3} {over_z}$$/수식$$이므로\n" \
              "$$수식$$k `=` {c3} {over_z}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${co_w} k ` {sgn_v} sqrt {u} `=` {w} ` times ` {c3} {over_z} ` {sgn_v} sqrt {u} `=` {q}$$/수식$$\n\n"

    while True:
        z = np.random.randint(2, 6)
        y = np.random.randint(-10, 11) * 2
        w = np.random.randint(1, 4) * z
        t = int(-y / 2)
        s = t ** 2
        x = np.random.randint(-20, 21)
        v = np.random.randint(-5, 6)
        if y * v != 0 and s > z * x:
            if gcd(gcd(abs(z), abs(y)), abs(x)) == 1 and not issquare(s - z * x):
                p, r = sqrt_out(s - z * x, 1)
                u = r
                break

    q_rational_num = int(w * t / z)
    q_irrational_num = int((v * z - w * p) / z)
    q = irrational_cofactor_to_num(q_rational_num, q_irrational_num, u)

    ex = [q]
    for i in [-2, -1, 1, 2]:
        ex.append(irrational_cofactor_to_num(q_rational_num+i, q_irrational_num, u))
        ex.append(irrational_cofactor_to_num(q_rational_num, q_irrational_num+i, u))

    ex1, ex2, ex3, ex4, ex5, ans = irrational_candidates_sort(ex, q, u)

    c1 = "{%d `+-` sqrt {%s `-` %s ` TIMES ` %s}}" % (t, s, z, parentheses(x))
    c2 = "{%d `+-` %s sqrt %s}" % (t, coefficient(p), r)
    c3 = "{%d `-` %s sqrt %s}" % (t, coefficient(p), r)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v, 1), u=u, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x), c1=c1, over_z=over_den(z), c2=c2, c3=c3, co_w=coefficient(w), sgn_v=sgn(v, 1), u=u, w=w, q=q)

    return stem, answer, comment

# 3-1-2-623
def factorization312_Stem_540():
    stem = "$$수식$${co_z} x ` {sgn_y} &gt; {x}$$/수식$$의 범위를 만족시키는 이차방정식 $$수식$$x^2 ` {sgn_w} x ` {sgn_v} `=` 0$$/수식$$의 근을 $$수식$$x `=` p$$/수식$$라고 할 때, 상수 $$수식$$p$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_w} x ` {sgn_v} `=` 0$$/수식$$의 근은\n" \
              "$$수식$$x `=` {c1} `=` {u} `+-` {co_s} sqrt {r}$$/수식$$\n" \
              "이때 $$수식$${co_z} x ` {sgn_y} &gt; {x}$$/수식$$에서 $$수식$$x {ineq} {q}$$/수식$$\n" \
              "따라서 $$수식$$p `=` {p}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        y = np.random.randint(-10, 11)
        x = np.random.randint(-10, 11)
        q = frac_e(x - y, z)
        if z != 0:
            tv_q = x - y / z
            w = [-10, -8, -6, -4, -2, 2, 4, 6, 8, 10][np.random.randint(0, 10)]
            u = frac_e(-w, 2)
            t = u ** 2
            v = np.random.randint(-20, t)
            if u - (t - v) ** 0.5 < tv_q < u + (t - v) ** 0.5 and not issquare(t - v):
                break
    s, r = sqrt_out(t - v, 1)

    if z > 0:
        p = irrational_cofactor_to_num(u, s, r)
        ineq = "&gt;"
    else:
        p = irrational_cofactor_to_num(u, -s, r)
        ineq = "&lt;"

    ex = [u, 2 * u, irrational_cofactor_to_num(u, s, r), irrational_cofactor_to_num(u, -s, r)]
    for i in [-2, -1, 1, 2]:
        ex.append(irrational_cofactor_to_num(0, i * s, r))
    ex1, ex2, ex3, ex4, ex5, ans = irrational_candidates_sort(ex, p, r)

    c1 = "{%d `+-` sqrt {%s `-` %s}}" % (u, t, parentheses(v))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), x=x, sgn_w=sgn(w, 1), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(sgn_w=sgn(w,1), sgn_v=sgn(v), c1=c1, u=u, co_s=coefficient(s), r=r, co_z=coefficient(z), sgn_y=sgn(y), x=x, ineq=ineq, q=q, p=p)

    return stem, answer, comment


# 3-1-2-624
def factorization312_Stem_541():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} k `=` 0$$/수식$$의 한 근이 $$수식$$x `=` k$$/수식$$일 때, 이차방정식 $$수식$${co_w} x^2 ` {sgn_v} x ` {sgn_u_1} k `=` 0$$/수식$$의 해의 합을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$k `!=` 0$$/수식$$인 유리수$$수식$$ )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} k `=` 0$$/수식$$의 한 근이 $$수식$$x `=` k$$/수식$$이므로\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} k `=` 0 ,```` {co_z} k  ( k ` {sgn_t}  ) `=` 0$$/수식$$\n" \
              "$$수식$$k `=` 0$$/수식$$ 또는 $$수식$$k `=` {minus_t}$$/수식$$\n" \
              "그런데 $$수식$$k `!=` 0$$/수식$$이므로 $$수식$$k `=` {minus_t}$$/수식$$\n" \
              "이차방정식 $$수식$${co_w} x^2 ` {sgn_v} x ` {sgn_u_1} k `=` 0$$/수식$$은\n" \
              "$$수식$${co_w} x^2 ` {sgn_v} x ` {sgn_u_0} ` times ` {p_minus_t} `=` 0$$/수식$$이므로\n" \
              "$$수식$$x `=` {c1} over {c2} `=` {c3} {over_p}$$/수식$$\n" \
              "따라서 두 근의 합은\n" \
              "$$수식$${c4} `+` {c5} `=` {o}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        y = np.random.randint(-20, 21)
        x = np.random.randint(-20, 21)
        w = np.random.randint(1, 4)
        v = np.random.randint(-5, 5) * 2 + 1
        u = np.random.randint(-20, 21)
        if z * y * v * u != 0:
            t = int((y + x) / z)
            s = v ** 2
            p = 2 * w
            if (y + x) % z == 0 and gcd(gcd(abs(z), abs(y)), abs(x)) == 1 and s + 4 * w * u * t > 0 and not issquare(s + 4 * w * u * t):
                break
    n = -u * t
    r, q = sqrt_out(s + 4 * w * u * t)
    o = frac_e(-2 * v, p)

    c1 = "{%d `+-` sqrt {%s `-` 4 ` TIMES ` %s ` TIMES ` %s}}" % (-v, s, w, parentheses(n))
    c2 = "{2 ` TIMES ` %s}" % w
    c3 = "{%d `+-` %s sqrt %s}" % (-v, r, q)
    c4 = "{%d `+` %s sqrt %s} %s" % (-v, r, q, over_den(p))
    c5 = "{%d `-` %s sqrt %s} %s" % (-v, r, q, over_den(p))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x, 1), co_w=coefficient(w), sgn_v=sgn(v, 1), sgn_u_1=sgn(u, 1))
    answer = answer.format(ans=o)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_x=sgn(x, 1), sgn_t=sgn(t), minus_t=-t, co_w=coefficient(w), sgn_v=sgn(v, 1), sgn_u_0=sgn(u), sgn_u_1=sgn(u, 1), p_minus_t=parentheses(-t), c1=c1, c2=c2, c3=c3, c4=c4, c5=c5, o=o, over_p=over_den(p))

    return stem, answer, comment


# 3-1-2-625
def factorization312_Stem_542():
    stem = "세 상수 $$수식$$A ,```` B ,```` C$$/수식$$에 대하여 이차방정식 $$수식$${z} x^2 ` {sgn_y} x `+` A `=` 0$$/수식$$의 근이 $$수식$$x `=` {s1} over {z}$$/수식$$이고, $$수식$${co_x} A `+` C `=` {w}$$/수식$$이 성립할 때, $$수식$$A `-` B `+` C$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$$A ,```` B ,```` C$$/수식$$는 유리수$$수식$$ )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${z} x^2 ` {sgn_y} x `+` A `=` 0$$/수식$$의 근은\n" \
              "$$수식$$x `=` {c1} over {z} `=` {s1} over {z}$$/수식$$이므로\n" \
              "$$수식$$B `=` {v}$$/수식$$\n" \
              "$$수식$${u} `-` {z} ` times ` A `=` C$$/수식$$에서 $$수식$${z} ` times ` A `+` C `=` {u}$$/수식$$\n" \
              "이때 $$수식$${x} ` times ` A `+` C `=` {w}$$/수식$$이므로\n" \
              "$$수식$$A `=` {t} ,```` C `=` {s}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$A `-` B `+` C `=` {t} `-` {p_v} `+` {s} `=` {r}$$/수식$$\n\n"

    while True:
        s = [2, 3, 5, 7, 10, 11, 13, 14, 15][np.random.randint(0, 9)]
        v = np.random.randint(-10, 11)
        y = -2 * v
        u = v ** 2
        z = np.random.randint(2, 16)
        t = frac_e(u - s, z)
        x = np.random.randint(-15, 16)
        w = frac_e(x * u - s * x + s * z, z)
        r = frac_e(u - s - v * z + s * z, z)
        if v * x != 0:
            break

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(r, np.random.randint(1, 3))

    s1 = "{B `+-` sqrt C}"
    c1 = "{%d `+-` sqrt {%s `-` %s ` TIMES ` A}}" % (v, u, z)

    stem = stem.format(z=z, sgn_y=sgn(y, 1), co_x=coefficient(x), w=w, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5, s1=s1)
    answer = answer.format(ans=ans)
    comment = comment.format(z=z, sgn_y=sgn(y, 1), c1=c1, v=v, u=u, x=x, w=w, t=t, s=s, r=r, s1=s1, p_v=parentheses(v))

    return stem, answer, comment


# 3-1-2-628
def factorization312_Stem_543():
    stem = "$$수식$${z} over {s1}$$/수식$$의 정수 부분을 $$수식$$m$$/수식$$, 소수 부분을 $$수식$$n$$/수식$$이라 할 때, 이차방정식 $$수식$$x^2 `-` mx `+`  (sqrt {x} + {w}  ) n `=` 0$$/수식$$의 해는 $$수식$$x `=` {s2} over c$$/수식$$이다. $$수식$$a `+` b `+` c$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$0 ` LEQ ` n ` &lt; 1 ,```` a ,```` b ,```` c$$/수식$$는 유리수$$수식$$ )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${z} over {s1} `=` {c1} over {c2} `=` {y} `+` sqrt {x}$$/수식$$\n" \
              "이때 $$수식$${u} ` &lt; ` sqrt{x} ` &lt; ` {t}$$/수식$$이므로 정수 부분 $$수식$$m `=` {s}$$/수식$$,\n" \
              "소수 부분 $$수식$$n `=` {y} `+` sqrt {x} `-` {p_s} `=` sqrt {x} ` {sgn_r}$$/수식$$\n" \
              "$$수식$$x^2 `-` mx `+`  (sqrt {x} + {w}  ) n `=` 0$$/수식$$에서\n" \
              "$$수식$$x^2 ` {sgn_minus_s} x `+`  (sqrt {x} `+` {w}  )  (sqrt {x} ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_minus_s} x ` {sgn_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c3} `=` {c4}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {a} ,```` b `=` {b} ,```` c `=` {c}$$/수식$$이므로\n" \
              "$$수식$$a `+` b `+` c `=` {n}$$/수식$$\n\n"

    while True:
        x = [2, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 12)]
        y = np.random.randint(-10, 11)
        z = y ** 2 - x
        u = int(x ** 0.5)
        t = u + 1
        s = u + y
        r = -u
        w = u
        q = x - u ** 2
        p = s ** 2
        if p > 4 * q and not issquare(p - 4 * q):
            break
    l, o = sqrt_out(p - 4 * q)

    if s%2 == 0:
        m = int(l/2)
        c3 = "%s `+-` sqrt{%s `-` 1 ` times ` %s}" % (int(s/2), int(p/4), parentheses(q))
        c4 = "%s `+-` %s sqrt {%s}" % (int(s/2), coefficient(m), o)
        a, b, c = int(s/2), o, 1
    else:
        m = l
        c3 = "{%s `+-` sqrt{%s `-` 4 ` times ` 1 ` times ` %s}} over 2" % (s, p, parentheses(q))
        c4 = "{%s `+-` %s sqrt {%s}} over 2" % (s, coefficient(m), o)
        a, b, c = s, o, 2
    n = a + b + c

    s1 = "{%s - sqrt %s}" % (y, x)
    s2 = "{a `+-` %s sqrt b}" % coefficient(m)
    c1 = "{%s  (%s `+` sqrt %s  )}" % (z, y, x)
    c2 = "{ (%s `-` sqrt %s  )  ( %s `+` sqrt %s  )}" % (y, x, y, x)

    stem = stem.format(z=z, s1=s1, x=x, w=w, s2=s2)
    answer = answer.format(ans=n)
    comment = comment.format(z=z, s1=s1, c1=c1, c2=c2, y=y, x=x, u=u, t=t, s=s, sgn_r=sgn(r), w=w, p_s=parentheses(s), sgn_minus_s=sgn(-s, 1), sgn_q=sgn(q), c3=c3, c4=c4, o=o, n=n, a=a, b=b, c=c)

    return stem, answer, comment


# 3-1-2-629
def factorization312_Stem_544():
    stem = "$$수식$${z} over {s1}$$/수식$$의 정수 부분을 $$수식$$m$$/수식$$, 소수 부분을 $$수식$$n$$/수식$$이라 할 때, 이차방정식 $$수식$$x^2 `-` mx `+`  (sqrt {x} + {w}  ) n `=` 0$$/수식$$의 해는 $$수식$$x `=` {s2} over c$$/수식$$이다. $$수식$$b `-` ac$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$0 ` LEQ ` n ` &lt; 1,```` a,```` b,````c$$/수식$$는 유리수$$수식$$ )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${z} over {s1} `=` {c1} over {c2} `=` {y} `+` sqrt {x}$$/수식$$\n" \
              "이때 $$수식$${u} ` &lt; ` sqrt{x} ` &lt; {t}$$/수식$$이므로 정수 부분 $$수식$$m `=` {s}$$/수식$$,\n" \
              "소수 부분 $$수식$$n `=` {y} `+` sqrt {x} `-` {p_s} `=` sqrt {x} ` {sgn_r}$$/수식$$\n" \
              "$$수식$$x^2 `-` mx `+`  (sqrt {x} + {w}  ) n `=` 0$$/수식$$에서\n" \
              "$$수식$$x^2 ` {sgn_minus_s} x `+`  (sqrt {x} `+` {w}  )  ( sqrt {x} ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_minus_s} x ` {sgn_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c3} `=` {c4}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {a},```` b `=` {b},```` c `=` {c}$$/수식$$이므로\n" \
              "$$수식$$b `-` ac `=` {n}$$/수식$$\n\n"

    while True:
        x = [2, 3, 5, 6, 7, 10, 11, 13, 14, 15, 17, 19][np.random.randint(0, 12)]
        y = np.random.randint(-10, 11)
        z = y ** 2 - x
        u = int(x ** 0.5)
        t = u + 1
        s = u + y
        r = -u
        w = u
        q = x - u ** 2
        p = s ** 2
        if p > 4 * q and not issquare(p - 4 * q):
            break
    l, o = sqrt_out(p - 4 * q)

    if s % 2 == 0:
        m = int(l / 2)
        c3 = "%s `+-` sqrt{%s `-` 1 ` times ` %s}" % (int(s / 2), int(p / 4), parentheses(q))
        c4 = "%s `+-` %s sqrt {%s}" % (int(s / 2), coefficient(m), o)
        a, b, c = int(s / 2), o, 1
    else:
        m = l
        c3 = "{%s `+-` sqrt{%s `-` 4 ` times ` 1 ` times ` %s}} over 2" % (s, p, parentheses(q))
        c4 = "{%s `+-` %s sqrt {%s}} over 2" % (s, coefficient(m), o)
        a, b, c = s, o, 2
    n = b - a * c

    s1 = "{%s - sqrt %s}" % (y, x)
    s2 = "{a `+-` %s sqrt b}" % coefficient(m)
    c1 = "{%s  (%s `+` sqrt %s  )}" % (z, y, x)
    c2 = "{ (%s `-` sqrt %s  )  ( %s `+` sqrt %s  )}" % (y, x, y, x)


    stem = stem.format(z=z, s1=s1, x=x, w=w, s2=s2)
    answer = answer.format(ans=n)
    comment = comment.format(z=z, s1=s1, c1=c1, c2=c2, y=y, x=x, u=u, t=t, s=s, sgn_r=sgn(r), w=w, p_s=parentheses(s), sgn_minus_s=sgn(-s, 1), sgn_q=sgn(q), c3=c3, c4=c4, o=o, n=n, a=a, b=b, c=c)

    return stem, answer, comment


# 3-1-2-630
def factorization312_Stem_545():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_frac_zy} x `=` {frac_xy}$$/수식$$의 두 근을 $$수식$$a,````b$$/수식$$라 할 때, $$수식$${w}a ` {sgn_v_1}b$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_frac_zy} x `=` {frac_xy}$$/수식$$의 양변에 $$수식$${y}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_y}x^2 ` {sgn_z} x ` {sgn_minus_x} `=` 0,```` ({co_u}x ` {sgn_t}  )  ({co_s}x ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {frac_minus_tu}$$/수식$$ 또는 $$수식$$x `=` {frac_minus_rs}$$/수식$$\n" \
              "$$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {frac_minus_tu} ,```` b `=` {frac_minus_rs}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${w}a ` {sgn_v_1}b `=` {w} ` times ` {p_frac_minus_tu} ` {sgn_v_0} ` times ` {p_frac_minus_rs} `=` {q}$$/수식$$\n\n"

    while True:
        u, s = np.random.randint(2, 6), np.random.randint(2, 6)
        t, r = np.random.randint(-5, 6), np.random.randint(-5, 6)
        y = u * s
        z = u * r + t * s
        x = -t * r
        w = np.random.randint(int(-10 / u), int(10 / u) + 1) * u
        v = np.random.randint(int(-10 / s), int(10 / s) + 1) * s
        q = int(w * (-t / u)) + int(v * (-r / s))
        if z * w * v * t * r != 0:
            if gcd(u, abs(t)) == 1 and gcd(s, abs(r)) == 1 and (-t / u) > (-r / s):
                break

    j1 = proc_jo(y, 1)

    stem = stem.format(sgn_frac_zy=sgn(frac_e(z, y), 1), frac_xy=frac_e(x, y), w=w, v=v, sgn_v_1=sgn(v, 1))
    answer = answer.format(ans=q)
    comment = comment.format(j1=j1, sgn_frac_zy=sgn(frac_e(z, y), 1), y=y, frac_xy=frac_e(x, y), w=w, sgn_v_1=sgn(v, 1), v=v,
                             co_y=coefficient(y), sgn_z=sgn(z, 1), sgn_minus_x=sgn(-x), co_u=coefficient(u),
                             sgn_t=sgn(t), co_s=coefficient(s), sgn_r=sgn(r), frac_minus_tu=frac_e(-t, u),
                             frac_minus_rs=frac_e(-r, s), p_frac_minus_tu=parentheses(frac_e(-t, u)),
                             p_frac_minus_rs=parentheses(frac_e(-r, s)), q=q, sgn_v_0=sgn(v))

    return stem, answer, comment


# 3-1-2-631
def factorization312_Stem_546():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x `=` {x}$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때, $$수식$${w} a ` {sgn_v_1}b$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_minus_x} `=` 0$$/수식$$\n" \
              "$$수식$$({co_u} x ` {sgn_t}  )  ({co_s} x ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {frac_minus_tu}$$/수식$$ 또는 $$수식$$x `=` {frac_minus_rs}$$/수식$$\n" \
              "$$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {frac_minus_tu} ,```` b `=` {frac_minus_rs}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${w} a ` {sgn_v_1} b `=` {w} ` times ` {p_frac_minus_tu} ` {sgn_v_0} ` times ` {p_frac_minus_rs} `=` {q}$$/수식$$\n\n"

    while True:
        u, s = np.random.randint(2, 6), np.random.randint(2, 6)
        t, r = np.random.randint(-5, 6), np.random.randint(-5, 6)
        z = u * s
        y = u * r + t * s
        x = -t * r
        w = np.random.randint(int(-10 / u), int(10 / u) + 1) * u
        v = np.random.randint(int(-10 / s), int(10 / s) + 1) * s
        q = int(w * (-t / u)) + int(v * (-r / s))
        if y * w * v * t * r != 0 and gcd(u, abs(t)) == 1 and gcd(s, abs(r)) == 1 and (-t / u) > (-r / s):
                break

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y, 1), x=x, w=w, sgn_v_1=sgn(v, 1))
    answer = answer.format(ans=q)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y, 1), sgn_minus_x=sgn(-x), co_u=coefficient(u), sgn_t=sgn(t),
                             co_s=coefficient(s), sgn_r=sgn(r), frac_minus_tu=frac_e(-t, u), frac_minus_rs=frac_e(-r, s),
                             w=w, sgn_v_1=sgn(v, 1), sgn_v_0=sgn(v), p_frac_minus_tu=parentheses(frac_e(-t, u)),
                             p_frac_minus_rs=parentheses(frac_e(-r, s)), q=q)

    return stem, answer, comment


# 3-1-2-632
def factorization312_Stem_547():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_frac_zy} x `=` {frac_xy}$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때, $$수식$${w} a ` {sgn_v_1} b$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x^2 ` {sgn_frac_zy} x `=` {frac_xy}$$/수식$$의 양변에 $$수식$${y}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_y} x^2 ` {sgn_z} x ` {sgn_minus_x} `=` 0,```` ({co_u} x ` {sgn_t}  )  ({co_s} x ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {frac_minus_tu}$$/수식$$ 또는 $$수식$$x `=` {frac_minus_rs}$$/수식$$\n" \
              "$$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {frac_minus_tu} ,```` b `=` {frac_minus_rs}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${w} a ` {sgn_v_1} b `=` {w} ` times ` {p_frac_minus_tu} ` {sgn_v_0} ` times ` {p_frac_minus_rs} `=` {q}$$/수식$$\n\n"

    while True:
        u, s = np.random.randint(2, 6), np.random.randint(2, 6)
        t, r = np.random.randint(-5, 6), np.random.randint(-5, 6)
        y = u * s
        z = u * r + t * s
        x = -t * r
        w = np.random.randint(int(-10 / u), int(10 / u) + 1) * u
        v = np.random.randint(int(-10 / s), int(10 / s) + 1) * s
        q = int(w * (-t / u)) + int(v * (-r / s))
        if z * w * v * t * r * z != 0 and gcd(u, abs(t)) == 1 and gcd(s, abs(r)) == 1 and (-t / u) > (-r / s):
                break

    j1 = proc_jo(y, 1)

    stem = stem.format(sgn_frac_zy=sgn(frac_e(z, y), 1), frac_xy=frac_e(x, y), w=w, v=v, sgn_v_1=sgn(v, 1))
    answer = answer.format(ans=q)
    comment = comment.format(j1=j1, sgn_frac_zy=sgn(frac_e(z, y), 1), y=y, frac_xy=frac_e(x, y), w=w, sgn_v_1=sgn(v, 1), v=v,
                             co_y=coefficient(y), sgn_z=sgn(z, 1), sgn_minus_x=sgn(-x), co_u=coefficient(u),
                             sgn_t=sgn(t), co_s=coefficient(s), sgn_r=sgn(r), frac_minus_tu=frac_e(-t, u),
                             frac_minus_rs=frac_e(-r, s), p_frac_minus_tu=parentheses(frac_e(-t, u)),
                             p_frac_minus_rs=parentheses(frac_e(-r, s)), q=q, sgn_v_0=sgn(v))

    return stem, answer, comment


# 3-1-2-633
def factorization312_Stem_548():
    stem = "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x} x  ({co_w} x ` {sgn_v}  )$$/수식$$의 해가 $$수식$$x `=` a `+-` {l} sqrt b$$/수식$$일 때, 유리수 $$수식$$a,````b$$/수식$$에 대하여 $$수식$a `+` b$$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x} x  ({co_w} x ` {sgn_v}  )$$/수식$$에서\n" \
              "$$수식$${co_z}x^2 ` {sgn_u} x ` {sgn_t} `=` {co_s}x^2 ` {sgn_r} x,```` x^2 ` {sgn_q} x ` {sgn_t} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {p} `+-` sqrt {c1} `=` {p} `+-` {l} sqrt {n}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {p} ,```` b `=` {n}$$/수식$$이므로\n" \
              "$$수식$$a `+` b `=` {m}$$/수식$$\n\n"

    while True:
        x, w = np.random.randint(1, 4), np.random.randint(1, 4)
        z = x * w - 1
        v, y = np.random.randint(-5, 6), np.random.randint(-5, 6)
        u = 2 * y * z
        t = z * (y ** 2)
        s = x * w
        r = x * v
        q = u - r
        p = int(-q / 2)
        o = p ** 2
        if x * w != 1 and v * y != 0 and gcd(abs(w), abs(v)) == 1 and r % 2 == 0 and o > t and not issquare(o - t):
            break
    l, n = sqrt_out(o - t)
    m = p + n

    c1 = "{%s ` %s}" % (o, sgn(-t))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), co_w=coefficient(w), sgn_v=sgn(v), l=l)
    answer = answer.format(ans=m)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), co_w=coefficient(w), sgn_v=sgn(v), sgn_u=sgn(u, 1), sgn_t=sgn(t),
                             co_s=coefficient(s), sgn_r=sgn(r, 1), sgn_q=sgn(q, 1), p=p, c1=c1, l=l, n=n, m=m)

    return stem, answer, comment


# 3-1-2-634
def factorization312_Stem_549():
    stem = "이차방정식 $$수식$${sign_z} 1 over {abs_z} x `=` {sign_y} 1 over {abs_y} x^2 `{sign_x}` 1 over {abs_x}$$/수식$$의 근이 $$수식$${s1} over 2$$/수식$$일 때, $$수식$$p `-` q$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$p ,```` q$$/수식$$는 유리수$$수식$$ )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${sign_z} 1 over {abs_z} x `=` {sign_y} 1 over {abs_y} x^2 `{sign_x}` 1 over {abs_x}$$/수식$$의 양변에 $$수식$${y}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_w} x `=` x^2 ` {sgn_v} ,```` x^2 ` {sgn_minus_w} x ` {sgn_v} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} over 2 `=` {c2} over 2 `=` {s1} over 2$$/수식$$\n" \
              "따라서 $$수식$$p `=` {w} ,```` q `=` {t}$$/수식$$이므로\n" \
              "$$수식$$p `-` q `=` {s}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-9, 10)
        x = np.random.randint(-5, -1) * 2 + 1
        if z not in [0, 1, -1] and gcd(abs(z), abs(x)) == 1:
            y = lcm(abs(z), abs(x))
            w = frac_e(y, z)
            v = frac_e(y, x)
            u = frac_e(y ** 2, z ** 2)
            tv_v = y / x
            tv_u = (y / z) ** 2
            if tv_u > 4 * tv_v and not issquare(frac_e(x * (y ** 2) - 4 * y * (z ** 2), x * (z ** 2))):
                r, t = sqrt_out(frac_e(x*(y**2)-4*y*(z**2), x*(z**2)))
                s = w - t
                break

    j1 = proc_jo(y, 1)
    if z < 0:
        sign_z = "-"
    else:
        sign_z = ""
    if y < 0:
        sign_y = "-"
    else:
        sign_y = ""
    if x < 0:
        sign_x = "-"
    else:
        sign_x = "+"

    s1 = "{p `+-` %s sqrt q}" % r
    c1 = "{%d `+-` sqrt {%s `-` 4 `%s}}" % (w, u, parentheses(v))
    c2 = "{%s `+-` %s sqrt %s}" % (w, r, t)

    stem = stem.format(sign_z=sign_z, abs_z=abs(z), sign_y=sign_y, abs_y=abs(y), sign_x=sign_x, abs_x=abs(x), s1=s1)
    answer = answer.format(ans=s)
    comment = comment.format(sign_z=sign_z, abs_z=abs(z), sign_y=sign_y, abs_y=abs(y), sign_x=sign_x, abs_x=abs(x), y=y, j1=j1, co_w=coefficient(w), sgn_v=sgn(v), sgn_minus_w=sgn(-w, 1), w=w, t=t, s=s, c1=c1, c2=c2, s1=s1)

    return stem, answer, comment


#3-1-2-635
def factorization312_Stem_550():
    stem = "이차방정식 $$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$을 풀면?\n① $$수식$${ex1}$$/수식$$\n② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$\n④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 ` {sgn_z} x ` {sgn_y} `=` 0$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$$10x^2 ` {sgn_w} x ` {sgn_v} `=` 0,```` ({co_u} x ` {sgn_t}  )  ({co_s} x ` {sgn_r}  ) `=` 0$$/수식$$\n" \
              "따라서 $$수식$$x `=` {frac_minus_tu} ```` 또는 ```` x `=` {frac_minus_rs}$$/수식$$\n\n"

    while True:
        [u,s] = [[1,10], [2,5]][np.random.randint(0,2)]
        t, r = np.random.randint(-5, 6), np.random.randint(-5, 6)
        w = u*r+t*s
        v = t*r
        z = w/10
        y = v/10
        if t * r != 0 and frac_num_check(frac_e(-t,u)) != frac_num_check(frac_e(-r,s)):
            if gcd(u,abs(t)) == 1 and gcd(s, abs(r)) == 1:
                break
    if y == int(y):
        y = int(y)

    ans="x `=` %s ```` 또는 ```` x `=` %s"%(frac_e(-t,u), frac_e(-r,s))
    ex = []
    for i in [-1,1]:
        for j in [-1,1]:
            ex.append("x `=` %s ```` 또는 ```` x `=` %s" % (frac_e(i*t, u), frac_e(j*r, s)))
            ex.append("x `=` %s ```` 또는 ```` x `=` %s" % (frac_e(i*r, u), frac_e(j*t, s)))

    ex = list(set(ex))
    while True:
        np.random.shuffle(ex)
        if ans in ex[0:5]:
            candidates = ex[0:5]
            ex1, ex2, ex3, ex4, ex5, ans_num = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4], answer_dict[candidates.index(ans)]
            break

    stem = stem.format(sgn_z=sgn(z,1), sgn_y=sgn(y), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(sgn_z=sgn(z,1), sgn_y=sgn(y), sgn_w=sgn(w,1), sgn_v=sgn(v), co_u=coefficient(u), sgn_t=sgn(t), co_s=coefficient(s), sgn_r=sgn(r), frac_minus_tu=frac_e(-t,u), frac_minus_rs=frac_e(-r,s))

    return stem, answer, comment


#3-1-2-636
def factorization312_Stem_551():
    stem = "이차방정식 $$수식$${z} x^2 ` {sgn_y} x `=` {x}$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때 $$수식$$a `-` b$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${z} x^2 ` {sgn_y} x `=` {x}$$/수식$$의 양변에 $$수식$$100$$/수식$$을 곱하면\n" \
              "$$수식$${co_w} x^2 ` {sgn_v} x ` {sgn_u} `=` 0$$/수식$$이므로 $$수식$$x `=` {t} `+-` {co_s} sqrt {r}$$/수식$$\n" \
              "이떄 $$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {t} `+` {co_s} sqrt {r} ,```` b `=` {t} `-` {co_s} sqrt {r}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$a `-` b `=` {t} `+` {co_s} sqrt {r} `-`  ({t} `-` {co_s} sqrt {r}  ) `=` {q} sqrt {r}$$/수식$$\n\n"

    while True:
        t = np.random.randint(-5, 6)
        s = np.random.randint(1,6)
        r = [2,3,5,6,7,10][np.random.randint(0,6)]
        w = np.random.randint(1,4)
        v = -2*t*w
        u = w*(t**2-(s**2)*r)
        z = w/100
        y = v/100
        x = -u/100
        q = s*2
        if t != 0 and gcd(gcd(abs(w), abs(v)), abs(u)) == 1:
            break

    ans = irrational_cofactor_to_num(0, q, r)
    ex = [t, -t, 2*t, -2*t, ans, irrational_cofactor_to_num(0, -q, r)]
    for i in [1,2]:
        for j in [-1, 1]:
            ex.append(irrational_cofactor_to_num(i * t, i * j * s, r))

    ex1, ex2, ex3, ex4, ex5, ans_num = irrational_candidates_sort(ex, ans, r)

    stem = stem.format(z=z, sgn_y=sgn(y,1), x=x, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(z=z, sgn_y=sgn(y,1), x=x, co_w=coefficient(w), sgn_v=sgn(v,1), sgn_u=sgn(u), t=t, co_s=coefficient(s), r=r, q=q)

    return stem, answer, comment


#3-1-2-637
def factorization312_Stem_552():
    stem = "이차방정식 $$수식$${frac_zy} x^2 ` {sgn_frac_xy} x ` {sgn_frac_wy} `=` 0$$/수식$$의 해를 구하면?\n① $$수식$${ex1}$$/수식$$\n② $$수식$${ex2}$$/수식$$\n③ $$수식$${ex3}$$/수식$$\n④ $$수식$${ex4}$$/수식$$\n⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 이차방정식의 양변에 $$수식$${y}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_z} x^2 ` {sgn_x} x ` {sgn_w} `=` 0$$/수식$$이므로\n" \
              "$$수식$$x `=` {c1} over {v} `=` {c2} over {v}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,4)
        x = np.random.randint(-5, 5)*2 + 1
        w = np.random.randint(-20, 21)
        u = -x
        t = x**2
        s = -4*z*w
        v = 2*z
        if w != 0 and gcd(gcd(abs(z), abs(x)), abs(w)) == 1 and t+s>0 and not issquare(t+s):
            r, q = sqrt_out(t+s)
            break

    while True:
        y = np.random.randint(2,21)
        if gcd(z,y) == 1 and gcd(abs(x),y) == 1 and gcd(abs(w),y) == 1:
            break

    j1 = proc_jo(y,1)
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (u, t, sgn(s))
    c2 = "{%d `+-` %s sqrt %s}" % (u, r, q)

    ans = "{%s `+-` %s sqrt %s} over %s"%(u,r,q,v)
    ex = ["%d `+-` %s sqrt %s" % (-u, r, q), "+- %s"%abs(u), "+- {%s sqrt %s} over %s"%(r,q,v)]
    for i in [z,x,w]:
        ex.append("+- %s over %s" % (abs(i), y))
    ex = list(set(ex))
    np.random.shuffle(ex)
    candidates = [ans] + ex[0:4]
    np.random.shuffle(candidates)
    ex1, ex2, ex3, ex4, ex5, ans_num = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4], answer_dict[candidates.index(ans)]

    stem = stem.format(frac_zy=frac_e(z, y), sgn_frac_xy=sgn(frac_e(x, y),1), sgn_frac_wy=sgn(frac_e(w, y)), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(y=y, j1=j1, co_z=coefficient(z), sgn_x=sgn(x, 1), sgn_w=sgn(w), c1=c1, v=v, c2=c2)

    return stem, answer, comment


#3-1-2-639
def factorization312_Stem_553():
    stem = "이차방정식 $$수식$$1 over {z} x^2 `{sign_y}` {one_over_abs_y} x `=` {x}$$/수식$$의 근이\n$$수식$$x `=` {s1} {over_u}$$/수식$$일 때, 유리수 $$수식$$p ,```` q$$/수식$$에 대하여 $$수식$$q `-` p$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "주어진 이차방정식의 양변에 $$수식$${t}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_s} x^2 ` {sgn_r} x `=` {q} ,```` {co_s} x^2 ` {sgn_r} x ` {sgn_minus_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_s} `=` {c2} {over_s}$$/수식$$\n" \
              "$$수식$$=` {s1} {over_u}$$/수식$$\n" \
              "따라서 $$수식$$p `=` {k} ,```` q `=` {j}$$/수식$$이므로\n" \
              "$$수식$$q `-` p `=` {j} `-` {p_k} `=` {i}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 5) * 4
        y = np.random.randint(-10, 11)
        x = [-0.9, -0.7, -0.3, -0.1, 0.1, 0.3, 0.7, 0.9][np.random.randint(0, 8)]
        if y != 0:
            t = lcm(10, lcm(z, abs(y)))
            if int(t / (2 * y)) == t / (2 * y):
                s = int(t / z)
                r = int(t / y)
                q = int(x * t)
                p = int(-r / 2)
                o = p ** 2
                n = s * q
                if o + n > 0 and gcd(gcd(abs(s), abs(r)), abs(q)) == 1 and not issquare(o + n):
                    m, l = sqrt_out(o + n)
                    break
    u, w, k = s, m, p

    factor = []
    for a in range(1, l + 1):
        if l % a == 0:
            factor.append(int(a))
    v = factor[np.random.randint(0, len(factor))]
    j = int(l / v)
    i = j - k

    if y > 0:
        sign_y = "+"
    else:
        sign_y = "-"
    if y == 1 or y == -1:
        one_over_abs_y = ""
    else:
        one_over_abs_y = "1 " + over_den(abs(y))

    factor_k = []
    for a in range(1, abs(k) + 1):
        if abs(k) % a == 0:
            factor_k.append(int(a * k / abs(k)))
    ex = list(set(factor_k + [k - 10, k - 5, k + 5, k + 10, i]))
    while True:
        np.random.shuffle(ex)
        if i in ex[0:5]:
            candidates = sorted(ex[0:5])
            ex1, ex2, ex3, ex4, ex5, ans_num = candidates[0], candidates[1], candidates[2], candidates[3], candidates[4], answer_dict[candidates.index(i)]
            break

    j1 = proc_jo(t, 1)
    s1 = "{p `+-` %s sqrt {%sq}}" % (w, coefficient(v))
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (p, o, sgn(n))
    c2 = "{%d `+-` %s sqrt %s}" % (p, m, l)

    stem = stem.format(z=z, sign_y=sign_y, one_over_abs_y=one_over_abs_y, x=x, s1=s1, over_u=over_den(u), ex1=ex1,
                       ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(t=t, j1=j1, sgn_r=sgn(r, 1), q=q, co_s=coefficient(s), sgn_minus_q=sgn(-q), c1=c1, c2=c2,
                             over_s=over_den(s), s1=s1, over_u=over_den(u), p_k=parentheses(k), k=k, j=j, i=i)

    return stem, answer, comment



#3-1-2-641
def factorization312_Stem_554():
    stem = "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2 ` {sgn_v}  (x ` {sgn_u}  )$$/수식$$의 두 근의 차는? $$수식$$ ($$/수식$$단, 두 근의 차는 양수이다.$$수식$$ )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2 ` {sgn_v}  (x ` {sgn_u}  )$$/수식$$에서\n" \
              "$$수식$${co_t} x^2 ` {sgn_s} x ` {sgn_r} `=` {co_q} x^2 ` {sgn_p} x ` {sgn_o} ` {sgn_n} x ` {sgn_m}$$/수식$$\n" \
              "$$수식$${co_l} x^2 ` {sgn_k} x ` {sgn_j} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_f} `=` {c2} {over_f}$$/수식$$\n" \
              "따라서 두 근의 차는\n" \
              "$$수식$${c3} `-` {c4} `=` {ans}$$/수식$$\n\n"

    while True:
        z = np.random.randint(2,6)
        x = np.random.randint(1,z)
        v, y, w, u = np.random.randint(-5, 6), np.random.randint(-5, 6), np.random.randint(-5, 6), np.random.randint(-5, 6)
        t = z
        s = 2*y*z
        r = (y**2)*z
        q = x
        p = 2*w*x
        o = (w**2)*x
        n = v
        m = u * v
        l = t-q
        k = s-q-n
        j = r-o-m
        if v * y * w * u * k != 0 and y != w and w != u and u != y and k**2 > 4*l*j and gcd(l, gcd(abs(k), abs(j))) == 1 and not issquare(k**2 - 4*l*j):
            break

    if k%2 == 1:
        i = -k
        h = i**2
        g = -4*l*j
        f = 2*l
    else:
        i = int(-k/2)
        h = i**2
        g = -l*j
        f=l
    e, d = sqrt_out(h+g,1)

    ans = frac_e(irrational_cofactor_to_num(0, 2 * e, d), f)
    ex = [ans, frac_e(irrational_cofactor_to_num(0, -2 * e, d), f), frac_e(i, f), frac_e(-i, f), frac_e(2*i, f), frac_e(-2*i, f)]
    ex.extend([frac_e(irrational_cofactor_to_num(0, e, d), f), frac_e(irrational_cofactor_to_num(0, -e, d), f), frac_e(irrational_cofactor_to_num(i, e, d), f), frac_e(irrational_cofactor_to_num(i, -e, d), f)])
    np.random.shuffle(ex)
    ex1, ex2, ex3, ex4, ex5, ans_num = irrational_candidates_sort(ex, ans, d)

    c1 = "{%d `+-` sqrt {%s ` %s}}" % (i, h, sgn(g))
    c2 = "{%d `+-` %s sqrt %s}" % (i, coefficient(e), d)
    c3 = "{%d `+` %s sqrt %s} %s" % (i, coefficient(e), d, over_den(f))
    c4 = "{%d `-` %s sqrt %s} %s" % (i, coefficient(e), d, over_den(f))
    if f == 1:
        c4 = parentheses(c4,1)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v,1), sgn_u=sgn(u), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v,1), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1), sgn_r=sgn(r), co_q=coefficient(q), sgn_p=sgn(p,1),sgn_o=sgn(o), sgn_n=sgn(n,1), sgn_m=sgn(m), co_l=coefficient(l), sgn_k=sgn(k,1), sgn_j=sgn(j), c1=c1, c2=c2, over_f=over_den(f), c3=c3, c4=c4, ans=ans)

    return stem, answer, comment


#3-1-2-642
def factorization312_Stem_555():
    stem = "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2 ` {sgn_v}  (x ` {sgn_u}  )$$/수식$$의 두 근의 합은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2 ` {sgn_v}  (x ` {sgn_u}  )$$/수식$$에서\n" \
              "$$수식$${co_t} x^2 ` {sgn_s} x ` {sgn_r} `=` {co_q} x^2 ` {sgn_p} x ` {sgn_o} ` {sgn_n} x ` {sgn_m}$$/수식$$\n" \
              "$$수식$${co_l} x^2 ` {sgn_k} x ` {sgn_j} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_f} `=` {c2} {over_f}$$/수식$$\n" \
              "따라서 두 근의 합은\n" \
              "$$수식$${c3} `+` {c4} `=` {ans}$$/수식$$\n\n"

    while True:
        z = np.random.randint(2, 6)
        x = np.random.randint(1, z)
        v, y, w, u = np.random.randint(-5, 6), np.random.randint(-5, 6), np.random.randint(-5, 6), np.random.randint(-5,6)
        t = z
        s = 2 * y * z
        r = (y ** 2) * z
        q = x
        p = 2 * w * x
        o = (w ** 2) * x
        n = v
        m = u * v
        l = t - q
        k = s - q - n
        j = r - o - m
        if v * y * w * u * k != 0 and y != w and w != u and u != y and k ** 2 > 4 * l * j and gcd(l, gcd(abs(k), abs(j))) == 1 and not issquare(k ** 2 - 4 * l * j):
            break

    if k%2 == 1:
        i = -k
        h = i**2
        g = -4*l*j
        f = 2*l
    else:
        i = int(-k/2)
        h = i**2
        g = -l*j
        f=l
    e, d = sqrt_out(h+g,1)

    ans = frac_e(2*i,f)
    ex = [ans, frac_e(-i,f), frac_e(i,f), frac_e(-2*i,f)]
    ex.extend([frac_e(irrational_cofactor_to_num(0, 2 * e, d), f), frac_e(irrational_cofactor_to_num(0, -2 * e, d), f), frac_e(irrational_cofactor_to_num(0, e, d), f), frac_e(irrational_cofactor_to_num(0, -e, d), f), frac_e(irrational_cofactor_to_num(i, e, d), f), frac_e(irrational_cofactor_to_num(i, -e, d), f)])
    np.random.shuffle(ex)
    ex1, ex2, ex3, ex4, ex5, ans_num = irrational_candidates_sort(ex, ans, d)

    c1 = "{%d `+-` sqrt {%s ` %s}}" % (i, h, sgn(g))
    c2 = "{%d `+-` %s sqrt %s}" % (i, coefficient(e), d)
    c3 = "{%d `+` %s sqrt %s} %s" % (i, coefficient(e), d, over_den(f))
    c4 = "{%d `-` %s sqrt %s} %s" % (i, coefficient(e), d, over_den(f))
    if f == 1:
        c4 = parentheses(c4,1)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v,1), sgn_u=sgn(u), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v,1), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1), sgn_r=sgn(r), co_q=coefficient(q), sgn_p=sgn(p,1),sgn_o=sgn(o), sgn_n=sgn(n,1), sgn_m=sgn(m), co_l=coefficient(l), sgn_k=sgn(k,1), sgn_j=sgn(j), c1=c1, c2=c2, over_f=over_den(f), c3=c3, c4=c4, ans=ans)

    return stem, answer, comment


#3-1-2-643
def factorization312_Stem_556():
    stem = "이차방정식 $$수식$${co_z} x  (x ` {sgn_y}  ) ` {sgn_x} `=` {co_w}  (x ` {sgn_v}  )  (x ` {sgn_u}  )$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때, $$수식$${co_t} a ` {sgn_s} b$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &lt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x  (x ` {sgn_y}  ) ` {sgn_x} `=` {co_w}  (x ` {sgn_v}  )  (x ` {sgn_u}  )$$/수식$$에서\n" \
              "$$수식$${co_z} x^2 ` {sgn_r} x ` {sgn_x} `=` {co_w} x^2 ` {sgn_q} x ` {sgn_p}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_o} x ` {sgn_n} `=` 0$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_minus_m}  )  (x ` {sgn_minus_l}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {m}$$/수식$$ 또는 $$수식$$x `=` {l}$$/수식$$\n" \
              "$$수식$$a ` &lt; ` b$$/수식$$이므로 $$수식$$a `=` {m} ,```` b `=` {l}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${co_t} a ` {sgn_s} b `=` {k} ` {sgn_j} `=` {i}$$/수식$$\n\n"

    while True:
        m = np.random.randint(-9,9)
        l = np.random.randint(m+1,10)
        o = -(m+l)
        n = m * l
        v,u = np.random.randint(-5, 6), np.random.randint(-5, 6)
        z = np.random.randint(3, 6)
        w = z-1
        q = w*(v+u)
        p = w*v*u
        r = q+o
        x = n+p
        y = frac_e(r, z)
        t, s = np.random.randint(-5, 6), np.random.randint(-5, 6)
        k = t*m
        j = s*l
        i = k+j
        if m * l * t * s * v * u * o != 0 and v != u:
            break

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1))
    answer = answer.format(ans=i)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1), sgn_r=sgn(r,1), sgn_q=sgn(q,1), sgn_p=sgn(p), sgn_o=sgn(o,1), sgn_n=sgn(n), sgn_minus_m=sgn(-m), sgn_minus_l=sgn(-l), m=m, l=l, k=k, sgn_j=sgn(j), i=i)


    return stem, answer, comment





#3-1-2-644
def factorization312_Stem_557():
    stem = "이차방정식 $$수식$${co_z} x  (x ` {sgn_y}  ) ` {sgn_x} `=` {co_w} (x ` {sgn_v}  )  (x ` {sgn_u}  )$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때, $$수식$${co_t} a ` {sgn_s} b$$/수식$$의 값을 구하시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &lt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x  (x ` {sgn_y}  ) ` {sgn_x} `=` {co_w}  (x ` {sgn_v}  )  (x ` {sgn_u}  )$$/수식$$에서\n" \
              "$$수식$${co_z} x^2 ` {sgn_r} x ` {sgn_x} `=` {co_w} x^2 ` {sgn_q} x ` {sgn_p}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_o} x ` {sgn_n} `=` 0$$/수식$$\n" \
              "$$수식$$ (x ` {sgn_minus_m}  )  (x ` {sgn_minus_l}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {m}$$/수식$$ 또는 $$수식$$x `=` {l}$$/수식$$\n" \
              "$$수식$$a ` &lt; ` b$$/수식$$이므로 $$수식$$a `=` {m} ,```` b `=` {l}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${co_t} a ` {sgn_s} b `=` {k} ` {sgn_j} `=` {i}$$/수식$$\n\n"

    while True:
        m = np.random.randint(-9,9)
        l = np.random.randint(m+1,10)
        o = -(m+l)
        n = m * l
        v,u = np.random.randint(-5, 6), np.random.randint(-5, 6)
        z = np.random.randint(3, 6)
        w = z-1
        q = w*(v+u)
        p = w*v*u
        r = q+o
        x = n+p
        y = frac_e(r, z)
        t, s = np.random.randint(-5, 6), np.random.randint(-5, 6)
        k = t*m
        j = s*l
        i = k+j
        if m * l * t * s * v * u * o != 0 and v != u:
            break

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1))
    answer = answer.format(ans=i)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s,1), sgn_r=sgn(r,1), sgn_q=sgn(q,1), sgn_p=sgn(p), sgn_o=sgn(o,1), sgn_n=sgn(n), sgn_minus_m=sgn(-m), sgn_minus_l=sgn(-l), m=m, l=l, k=k, sgn_j=sgn(j), i=i)

    return stem, answer, comment


#3-1-2-645
def factorization312_Stem_558():
    stem = "이차방정식 $$수식$${s1} {over_z} ` {sgn_x} x `=` {co_w} x ` {sgn_v}$$/수식$$의 두 근을 $$수식$$m ,```` n$$/수식$$이라 할 때, $$수식$$m `-` n$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$$m ` &gt; ` n  )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s1} {over_z} ` {sgn_x} x `=` {co_w} x ` {sgn_v}$$/수식$$의 양변에 $$수식$${z}$$/수식$${j1} 곱하면\n" \
              "$$수식$$x^2 ` {sgn_y} ` {sgn_u} x `=` {co_t} x ` {sgn_s}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_r} x ` {sgn_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_m} `=` {c2} {over_m}$$/수식$$\n" \
              "$$수식$$m ` &gt; ` n$$/수식$$이므로 $$수식$$m `=` {c3},```` n `=` {c4}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$m `-` n `=` {c3} `-` {p_c4} `=` {ans}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,6)
        t, v = np.random.randint(-10, 11), np.random.randint(-10, 11)
        x, w = np.random.randint(-5, 6), np.random.randint(-5, 6)
        y = np.random.randint(-9, 10)
        u, t, s = z*x, w*z, v*z
        r = u-t
        q = y-s
        if t * v * x * w * y * r != 0 and r**2 > 4*q and not issquare(r**2 - 4*q):
            if r % 2 == 1:
                p = -r
                o = p ** 2
                n = -4 * q
                m = 2
            else:
                p = int(-r / 2)
                o = p ** 2
                n = -q
                m = 1
            l, k = sqrt_out(o + n, 1)
            j = 2 * l
            if gcd(j,m) == 1:
                break

    ans = frac_e(irrational_cofactor_to_num(0, j, k), m)
    ex = [ans, frac_e(irrational_cofactor_to_num(0, -j, k), m), frac_e(p, m), frac_e(2*p, m)]
    for i in [-1, 1]:
        ex.append(frac_e(irrational_cofactor_to_num(0, i * l, k), m))
        for j in [-1, 1]:
            ex.append(frac_e(irrational_cofactor_to_num(j * p, i * l, k), m))
    np.random.shuffle(ex)
    ex1, ex2, ex3, ex4, ex5, ans_num = irrational_candidates_sort(ex, ans, k)
    j1 = proc_jo(z, 1)

    s1 = "{x^2 ` %s}"%sgn(y)
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (p, o, sgn(n))
    c2 = "{%d `+-` %s sqrt %s}" % (p, coefficient(l), k)
    c3 = "{%d `+` %s sqrt %s} %s" % (p, coefficient(l), k, over_den(m))
    c4 = "{%d `-` %s sqrt %s} %s" % (p, coefficient(l), k, over_den(m))
    if m == 1:
        p_c4 = parentheses(c4,1)
    else:
        p_c4 = c4

    stem = stem.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), z=z, sgn_y=sgn(y), sgn_u=sgn(u,1), co_t=coefficient(t), sgn_s=sgn(s), sgn_r=sgn(r,1), sgn_q=sgn(q), c1=c1, c2=c2, over_m=over_den(m), c3=c3, c4=c4, p_c4=p_c4, ans=ans, j1=j1)

    return stem, answer, comment


#3-1-2-646
def factorization312_Stem_559():
    stem = "이차방정식 $$수식$${s1} {over_z} ` {sgn_x}x `=` {co_w}x ` {sgn_v}$$/수식$$의 두 근의 곱은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s1} {over_z} ` {sgn_x} x `=` {co_w} x ` {sgn_v}$$/수식$$의 양변에 $$수식$${z}$$/수식$${j1} 곱하면\n" \
              "$$수식$$x^2 ` {sgn_y} ` {sgn_u} x `=` {co_t} x ` {sgn_s}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_r} x ` {sgn_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_m} `=` {c2} {over_m}$$/수식$$\n" \
              "따라서 두 근의 곱은\n" \
              "$$수식$${c3} ` times ` {p_c4} `=` {c5} `=` {h}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,6)
        t, v = np.random.randint(-10, 11), np.random.randint(-10, 11)
        x, w = np.random.randint(-5, 6), np.random.randint(-5, 6)
        y = np.random.randint(-9, 10)
        u, t, s = z*x, w*z, v*z
        r = u-t
        q = y-s
        if t * v * x * w * y * r != 0 and r**2 > 4*q and not issquare(r**2 - 4*q):
            if r % 2 == 1:
                p = -r
                o = p ** 2
                n = -4 * q
                m = 2
            else:
                p = int(-r / 2)
                o = p ** 2
                n = -q
                m = 1
            l, k = sqrt_out(o + n)
            j = p**2
            i = o+n
            break
    h = q
    ex1, ex2, ex3, ex4, ex5, ans = mulcho(h, np.random.randint(1,3))
    j1 = proc_jo(z, 1)

    s1 = "{x^2 ` %s}"%sgn(y)
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (p, o, sgn(n))
    c2 = "{%d `+-` %s sqrt %s}" % (p, l, k)
    c3 = "{%d `+` %s sqrt %s} %s" % (p, l, k, over_den(m))
    c4 = "{%d `-` %s sqrt %s} %s" % (p, l, k, over_den(m))
    c5 = "{%s `-` %s} %s" % (j, i, over_den(m**2))
    if m == 1:
        p_c4 = parentheses(c4,1)
    else:
        p_c4 = c4

    stem = stem.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), z=z, sgn_y=sgn(y), sgn_u=sgn(u,1), co_t=coefficient(t), sgn_s=sgn(s), sgn_r=sgn(r,1), sgn_q=sgn(q), c1=c1, c2=c2, over_m=over_den(m), c3=c3, c4=c4, p_c4=p_c4, c5=c5, h=h, j1=j1)

    return stem, answer, comment


#3-1-2-647
def factorization312_Stem_560():
    stem = "이차방정식 $$수식$${s1} {over_z} ` {sgn_x} x `=` {co_w} x ` {sgn_v}$$/수식$$의 두 근의 합은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s1} {over_z} ` {sgn_x} x `=` {co_w} x ` {sgn_v}$$/수식$$의 양변에 $$수식$${z}$$/수식$${j1} 곱하면\n" \
              "$$수식$$x^2 ` {sgn_y} ` {sgn_u} x `=` {co_t} x ` {sgn_s}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_r} x ` {sgn_q} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_m} `=` {c2} {over_m}$$/수식$$\n" \
              "따라서 두 근의 합은\n" \
              "$$수식$${c3} `+` {p_c4} `=` {ans}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,6)
        t, v = np.random.randint(-10, 11), np.random.randint(-10, 11)
        x, w = np.random.randint(-5, 6), np.random.randint(-5, 6)
        y = np.random.randint(-9, 10)
        u, t, s = z*x, w*z, v*z
        r = u-t
        q = y-s
        if t * v * x * w * y * r != 0 and r**2 > 4*q and not issquare(r**2 - 4*q):
            if r % 2 == 1:
                p = -r
                o = p ** 2
                n = -4 * q
                m = 2
            else:
                p = int(-r / 2)
                o = p ** 2
                n = -q
                m = 1
            l, k = sqrt_out(o + n, 1)
            break

    j1 = proc_jo(z, 1)
    s1 = "{x^2 ` %s}"%sgn(y)
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (p, o, sgn(n))
    c2 = "{%d `+-` %s sqrt %s}" % (p, coefficient(l), k)
    c3 = "{%d `+` %s sqrt %s} %s" % (p, coefficient(l), k, over_den(m))
    c4 = "{%d `-` %s sqrt %s} %s" % (p, coefficient(l), k, over_den(m))
    if m == 1:
        p_c4 = parentheses(c4,1)
    else:
        p_c4 = c4

    ans = frac_e(2*p,m)
    ex = [ans, frac_e(p, m)]
    for i in [-1,1]:
        ex.append(frac_e(irrational_cofactor_to_num(0, i*l, k), m))
        ex.append(frac_e(irrational_cofactor_to_num(0, 2*i*l, k), m))
        for j in [-1,1]:
            ex.append(frac_e(irrational_cofactor_to_num(i*p, j*l, k), m))
    ex = list(set(ex))
    ex1, ex2, ex3, ex4, ex5, ans_num = irrational_candidates_sort(ex, ans, k)

    stem = stem.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans_num)
    comment = comment.format(s1=s1, over_z=over_den(z), sgn_x=sgn(x,1), co_w=coefficient(w), sgn_v=sgn(v), z=z, sgn_y=sgn(y), sgn_u=sgn(u,1), co_t=coefficient(t), sgn_s=sgn(s), sgn_r=sgn(r,1), sgn_q=sgn(q), c1=c1, c2=c2, over_m=over_den(m), c3=c3, c4=c4, p_c4=p_c4, j1=j1, ans=ans)

    return stem, answer, comment


#3-1-2-648
def factorization312_Stem_561():
    stem = "이차방정식 $$수식$${one_over_z} x^2 `{sign_y}` {one_over_abs_y} x `+` a `=` 0$$/수식$$의 해가 $$수식$$x `=` {s1}$$/수식$$일 때, 유리수 $$수식$$a,````b$$/수식$$에 대하여 $$수식$$ab$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${one_over_z} x^2 `{sign_y}` {one_over_abs_y} x `+` a `=` 0$$/수식$$의 양변에 $$수식$${u}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_t}x^2 ` {sgn_s} x ` {sgn_u} a `=` 0,```` x `=` {c1}$$/수식$$\n" \
              "이떄 $$수식$${s1}$$/수식$$이므로 $$수식$$b `=` {r} ,```` a `=` {n}$$/수식$$\n" \
              "따라서 $$수식$$ab `=` {m}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,11)
        y = np.random.randint(-10, 11)
        if y != 0:
            u = lcm(z, abs(y))
            t = int(u/z)
            s = int(u/y)
            if s%2 == 1:
                r = -s
                q, o, p = r ** 2, 2 * t, -4 * u * t
                n = np.random.randint(-10, 11)
                if q > 4*u*t*n and not issquare(q-4*u*t*n):
                    a, b = sqrt_out(q-4*u*t*n)
                    w = "%s sqrt %s"%(a,b)
                    break
            else:
                r = int(-s/2)
                q, o, p = r ** 2, t, -u * t
                n = np.random.randint(-10, 11)
                if q > u * t * n and not issquare(q - u * t * n):
                    a, b = sqrt_out(q - u * t * n)
                    w = "%s sqrt %s" % (a, b)
                    break
    v = o
    m = r*n

    if y > 0:
        sign_y = "+"
    else:
        sign_y = "-"
    if z == 1:
        one_over_z = ""
    else:
        one_over_z = "1 " + over_den(abs(z))
    if y == 1 or y == -1:
        one_over_abs_y = ""
    else:
        one_over_abs_y = "1 " + over_den(abs(y))

    j1 = proc_jo(u,1)
    s1 = "{b `+-` %s} %s" % (w, over_den(v))
    c1 = "{%s `+-` sqrt {%s ` %s a}} %s" % (r, q, sgn(p,1), over_den(o))

    stem = stem.format(one_over_z=one_over_z, sign_y=sign_y, one_over_abs_y=one_over_abs_y, s1=s1)
    answer = answer.format(ans=m)
    comment = comment.format(one_over_z=one_over_z, sign_y=sign_y, one_over_abs_y=one_over_abs_y, u=u, j1=j1, co_t=coefficient(t), sgn_s=sgn(s,1), sgn_u=sgn(u,1), c1=c1, s1=s1, r=r, n=n, m=m)

    return stem, answer, comment


#3-1-2-649
def factorization312_Stem_562():
    stem = "이차방정식 $$수식$${one_over_z} x^2 `{sign_y}` {one_over_abs_y} x `+` a `=` 0$$/수식$$의 해가 $$수식$$x `=` {s1}$$/수식$$일 때, 유리수 $$수식$$a,````b$$/수식$$에 대하여 $$수식$${co_l}a ` {sgn_k} b$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${one_over_z} x^2 `{sign_y}` {one_over_abs_y} x `+` a `=` 0$$/수식$$의 양변에 $$수식$${u}$$/수식$${j1} 곱하면\n" \
              "$$수식$${co_t}x^2 ` {sgn_s} x ` {sgn_u} a `=` 0,```` x `=` {c1}$$/수식$$\n" \
              "이떄 $$수식$${s1}$$/수식$$이므로 $$수식$$b `=` {r} ,```` a `=` {n}$$/수식$$\n" \
              "따라서 $$수식$${co_l}a ` {sgn_k} b `=` {j} ` {sgn_i} `=` {h}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1,11)
        y = np.random.randint(-10, 11)
        l, k = np.random.randint(-5, 6), np.random.randint(-5, 6)
        if y*l*k != 0:
            u = lcm(z, abs(y))
            t = int(u/z)
            s = int(u/y)
            if s%2 == 1:
                r = -s
                q, o, p = r ** 2, 2 * t, -4 * u * t
                n = np.random.randint(-10, 11)
                if q > 4*u*t*n and not issquare(q-4*u*t*n):
                    a, b = sqrt_out(q-4*u*t*n)
                    w = "%s sqrt %s"%(a,b)
                    break
            else:
                r = int(-s/2)
                q, o, p = r ** 2, t, -u * t
                n = np.random.randint(-10, 11)
                if q > u * t * n and not issquare(q - u * t * n):
                    a, b = sqrt_out(q - u * t * n)
                    w = "%s sqrt %s" % (a, b)
                    break
    v = o
    j = l*n
    i = r*k
    h = j+i

    if y > 0:
        sign_y = "+"
    else:
        sign_y = "-"
    if z == 1:
        one_over_z = ""
    else:
        one_over_z = "1 " + over_den(abs(z))
    if y == 1 or y == -1:
        one_over_abs_y = ""
    else:
        one_over_abs_y = "1 " + over_den(abs(y))

    j1 = proc_jo(u,1)
    s1 = "{b `+-` %s} %s" % (w, over_den(v))
    c1 = "{%s `+-` sqrt {%s ` %s a}} %s" % (r, q, sgn(p,1), over_den(o))

    stem = stem.format(one_over_z=one_over_z, sign_y=sign_y, one_over_abs_y=one_over_abs_y, s1=s1, co_l=coefficient(l), sgn_k=sgn(k,1))
    answer = answer.format(ans=h)
    comment = comment.format(one_over_z=one_over_z, sign_y=sign_y, one_over_abs_y=one_over_abs_y, u=u, j1=j1, co_t=coefficient(t), sgn_s=sgn(s,1), sgn_u=sgn(u,1), c1=c1, s1=s1, r=r, n=n, co_l=coefficient(l), sgn_k=sgn(k,1), j=j, sgn_i=sgn(i), h=h)


    return stem, answer, comment


#3-1-2-650
def factorization312_Stem_563():
    stem = "이차방정식 $$수식$${co_z}x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 두 근을 $$수식$$a,````b$$/수식$$라 할 때, 일차방정식 $$수식$$ax `-` b `=` 0$$/수식$$의 해를 소수로 나타내시오. $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${co_z}x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 양변에 $$수식$$100$$/수식$$을 곱하면\n" \
              "$$수식$${co_w}x^2 ` {sgn_v} x ` {sgn_u} `=` 0$$/수식$$\n" \
              "$$수식$$ ({co_t} x ` {sgn_s}  )  ({co_r} x ` {sgn_q}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {frac_minus_st}$$/수식$$ 또는 $$수식$${frac_minus_qr}$$/수식$$\n" \
              "$$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {frac_minus_st} ,```` b `=` {frac_minus_qr}$$/수식$$\n" \
              "따라서 일차방정식 $$수식$$ax `-` b `=` 0$$/수식$$에서 $$수식$${co_frac_minus_st} x `-` {p_frac_minus_qr} `=` 0$$/수식$$\n" \
              "$$수식$${co_frac_minus_st} x `=` {frac_minus_qr} ,```` x `=` {frac_po} {n}$$/수식$$\n\n"

    while True:
        t = np.random.randint(1,6)
        r = [1,2,5][np.random.randint(0,3)]
        q = np.random.randint(-10, 11)
        s = [-10, -8, -5, -4, -2, -1, 1, 2, 4, 5, 8, 10][np.random.randint(0, 12)]
        if q != 0:
            if gcd(t,abs(s)) * gcd(r,abs(q)) == 1 and s/t < q/r:
                w = t*r
                v = t*q + s*r
                u = s*q
                z = w/100
                y = v/100
                x = u/100
                p = t*q
                o = s*r
                break

    if -q*r > 0:
        p_frac_minus_qr = frac_e(-q, r)
    else:
        p_frac_minus_qr = parentheses(frac_e(-q,r),1)

    ans = p/o
    if ans == int(ans):
        n = ""
        ans = int(ans)
    else:
        n = "`=` %s"%(ans)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x))
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v,1), sgn_u=sgn(u), co_t=coefficient(t), sgn_s=sgn(s), co_r=coefficient(r), sgn_q=sgn(q), frac_minus_st=frac_e(-s,t), frac_minus_qr=frac_e(-q,r), frac_po = frac_e(p,o), n=n, p_frac_minus_qr=p_frac_minus_qr, co_frac_minus_st=coefficient(frac_e(-s,t)))

    return stem, answer, comment


#3-1-2-651
def factorization312_Stem_564():
    stem = "이차방정식 $$수식$${co_z} (x ` {sgn_y}  )^2 ` {sgn_x} `=` 1 over {w}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$의 근이 $$수식$$x `=` {s1} {over_f}$$/수식$$일 때, 유리수 $$수식$$m,````n$$/수식$$에 대하여 $$수식$$m `+` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} (x ` {sgn_y}  )^2 ` {sgn_x} `=` 1 over {w}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$${co_s} (x ` {sgn_y}  )^2 ` {sgn_r} `=` {co_q}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$\n" \
              "$$수식$${co_s}x^2 ` {sgn_p} x ` {sgn_o} ` {sgn_r} `=` {co_n}x^2 ` {sgn_m} x ` {sgn_l}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_k} x ` {sgn_j} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_f} `=` {c2} {over_f}$$/수식$$\n" \
              "따라서 $$수식$$m `=` {i} ,```` n `=` {d}$$/수식$$이므로\n" \
              "$$수식$$m `+` n `=` {c}$$/수식$$\n\n"

    while True:
        w = [2,5,10][np.random.randint(0,3)]
        q = int(10/w)
        u = np.random.randint(1,6)
        y = np.random.randint(-9, 10)
        s = q*u +1
        r, v, t = np.random.randint(-9,10), np.random.randint(-9,10), np.random.randint(-9,10)
        if r * v * t * y != 0:
            if gcd(u, abs(t)) == 1:
                z = s/10
                x = r/10
                p = 2*y*s
                o = s*(y**2)
                n = q*u
                m = q*(t+u*v)
                l = q*t*v
                k = p-m
                j = o+r-l
                if k**2 > 4*j and j != 0 and k < 15 and not issquare(k**2-4*j):
                    if k%2 == 1:
                        i = -k
                        h, g, f = i**2, -4*j, 2
                    else:
                        i = int(-k/2)
                        h, g, f = i ** 2, -j, 1
                    e, d = sqrt_out(h+g)
                    c = i+d
                    break

    s1 = "{m `+-` %s sqrt n}" %e
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (i, h, sgn(g))
    c2 = "{%d `+-` %s sqrt %s}" % (i, e, d)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), w=w, sgn_v=sgn(v), co_u=coefficient(u), sgn_t=sgn(t), s1=s1, over_f=over_den(f))
    answer = answer.format(ans=c)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), w=w, sgn_v=sgn(v), co_u=coefficient(u), sgn_t=sgn(t), co_s=coefficient(s), sgn_r=sgn(r), co_q=coefficient(q), sgn_p=sgn(p,1), sgn_o=sgn(o), co_n=coefficient(n), sgn_m=sgn(m,1), sgn_l=sgn(l), sgn_k=sgn(k,1), sgn_j=sgn(j), c1=c1, over_f=over_den(f), i=i, d=d, c=c, c2=c2)

    return stem, answer, comment


#3-1-2-652
def factorization312_Stem_565():
    stem = "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 ` {sgn_x} `=` 1 over {w}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$의 근이 $$수식$$x `=` {s1} {over_f}$$/수식$$일 때, 유리수 $$수식$$m,````n$$/수식$$에 대하여 $$수식$$m `+` n$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z}  (x ` {sgn_y}  )^2 ` {sgn_x} `=` 1 over {w}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$${co_s}  (x ` {sgn_y}  )^2 ` {sgn_r} `=` {co_q}  (x ` {sgn_v}  )  ({co_u} x ` {sgn_t}  )$$/수식$$\n" \
              "$$수식$${co_s}x^2 ` {sgn_p} x ` {sgn_o} ` {sgn_r} `=` {co_n}x^2 ` {sgn_m} x ` {sgn_l}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_k} x ` {sgn_j} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} {over_f} `=` {c2} {over_f}$$/수식$$\n" \
              "따라서 $$수식$$m `=` {i} ,```` n `=` {d}$$/수식$$이므로\n" \
              "$$수식$$m `+` n `=` {c}$$/수식$$\n\n"

    while True:
        w = [2,5,10][np.random.randint(0,3)]
        q = int(10/w)
        u = np.random.randint(1,6)
        y = np.random.randint(-9, 10)
        s = q*u +1
        r, v, t = np.random.randint(-9,10), np.random.randint(-9,10), np.random.randint(-9,10)
        if r * v * t * y != 0:
            if gcd(u, abs(t)) == 1:
                z = s/10
                x = r/10
                p = 2*y*s
                o = s*(y**2)
                n = q*u
                m = q*(t+u*v)
                l = q*t*v
                k = p-m
                j = o+r-l
                if k**2 > 4*j and j != 0 and k < 15 and not issquare(k**2-4*j):
                    if k%2 == 1:
                        i = -k
                        h, g, f = i**2, -4*j, 2
                    else:
                        i = int(-k/2)
                        h, g, f = i ** 2, -j, 1
                    e, d = sqrt_out(h+g)
                    c = i+d
                    break

    s1 = "{m `+-` %s sqrt n}" %e
    c1 = "{%d `+-` sqrt {%s ` %s}}" % (i, h, sgn(g))
    c2 = "{%d `+-` %s sqrt %s}" % (i, e, d)

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), w=w, sgn_v=sgn(v), co_u=coefficient(u), sgn_t=sgn(t), s1=s1, over_f=over_den(f))
    answer = answer.format(ans=c)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), sgn_x=sgn(x), w=w, sgn_v=sgn(v), co_u=coefficient(u), sgn_t=sgn(t), co_s=coefficient(s), sgn_r=sgn(r), co_q=coefficient(q), sgn_p=sgn(p,1), sgn_o=sgn(o), co_n=coefficient(n), sgn_m=sgn(m,1), sgn_l=sgn(l), sgn_k=sgn(k,1), sgn_j=sgn(j), c1=c1, over_f=over_den(f), i=i, d=d, c=c, c2=c2)

    return stem, answer, comment


#3-1-2-653
def factorization312_Stem_566():
    stem = "$$수식$${co_z} x  (x ` {sgn_y}  ) `=` {s1} over {v} ` {sgn_u}$$/수식$$의 두 근 중 큰 근을 $$수식$$a$$/수식$$라 할 때, $$수식$$a ` {sgn_t}$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x  (x ` {sgn_y}  ) `=` {s1} over {v} ` {sgn_u}$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$${co_s} x  (x ` {sgn_y}  ) `=` {co_r} {s1} ` {sgn_q}$$/수식$$\n" \
              "$$수식$${co_s} x^2 ` {sgn_p} x `=` {co_r} x^2 ` {sgn_o} x ` {sgn_n} ` {sgn_q}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_m} x ` {sgn_l} `=` 0,````  (x ` {sgn_minus_k}  )  (x ` {sgn_minus_j}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {k}$$/수식$$ 또는 $$수식$$x `=` {j}$$/수식$$\n" \
              "이때 큰 근이 $$수식$$a$$/수식$$이므로 $$수식$$a `=` {k}$$/수식$$\n" \
              "따라서 $$수식$$a ` {sgn_t} `=` {i}$$/수식$$\n\n"

    while True:
        k, j = np.random.randint(-10, 11), np.random.randint(-10, 11)
        m = -(k+j)
        l = k*j
        r = [1,2,5][np.random.randint(0,3)]
        s = r+1
        x, w = np.random.randint(-5, 6), np.random.randint(-5, 6)
        o = r*(w+x)
        n = r*x*w
        p = m+o
        q = -(n+l)
        y = frac_e(p,s)
        z = s/10
        v = int(10/r)
        u = q/10
        t = np.random.randint(-9, 10)
        i = k+t
        if k * j * x * w * t != 0 and k > j and k**2 != j**2 and x**2 != w**2:
            break

    s1 = "{ (x ` %s  )  (x ` %s  )}"%(sgn(x), sgn(w))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), s1=s1, v=v, sgn_u=sgn(u), sgn_t=sgn(t))
    answer = answer.format(ans=i)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), s1=s1, v=v, sgn_u=sgn(u), co_s=coefficient(s), co_r=coefficient(r), sgn_q=sgn(q), sgn_p=sgn(p,1), sgn_o=sgn(o,1), sgn_n=sgn(n), sgn_m=sgn(m,1), sgn_l=sgn(l), sgn_minus_k=sgn(-k), sgn_minus_j=sgn(-j), k=k, j=j, sgn_t=sgn(t), i=i)

    return stem, answer, comment


#3-1-2-654
def factorization312_Stem_567():
    stem = "$$수식$${co_z} x  (x ` {sgn_y}  ) `=` {s1} over {v} ` {sgn_u}$$/수식$$의 두 근 중 작은 근을 $$수식$$a$$/수식$$라 할 때, $$수식$${t} `-` a$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x  (x ` {sgn_y}  ) `=` {s1} over {v} ` {sgn_u}$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$${co_s} x  (x ` {sgn_y}  ) `=` {co_r} {s1} ` {sgn_q}$$/수식$$\n" \
              "$$수식$${co_s} x^2 ` {sgn_p} x `=` {co_r} x^2 ` {sgn_o} x ` {sgn_n} ` {sgn_q}$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_m} x ` {sgn_l} `=` 0 ,````  (x ` {sgn_minus_k}  )  (x ` {sgn_minus_j}  ) `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {k}$$/수식$$ 또는 $$수식$$x `=` {j}$$/수식$$\n" \
              "이때 작은 근이 $$수식$$a$$/수식$$이므로 $$수식$$a `=` {j}$$/수식$$\n" \
              "따라서 $$수식$${t} `-` a `=` {i}$$/수식$$\n\n"

    while True:
        k, j = np.random.randint(-10, 11), np.random.randint(-10, 11)
        m = -(k+j)
        l = k*j
        r = [1,2,5][np.random.randint(0,3)]
        s = r+1
        x, w = np.random.randint(-5, 6), np.random.randint(-5, 6)
        o = r*(w+x)
        n = r*x*w
        p = m+o
        q = -(n+l)
        y = frac_e(p,s)
        z = s/10
        v = int(10/r)
        u = q/10
        t = np.random.randint(-9, 10)
        i = t-j
        if k * j * x * w * t != 0 and k > j and k**2 != j**2 and x**2 != w**2:
            break

    s1 = "{ (x ` %s  )  (x ` %s  )}"%(sgn(x), sgn(w))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), s1=s1, v=v, sgn_u=sgn(u), t=t)
    answer = answer.format(ans=i)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), s1=s1, v=v, sgn_u=sgn(u), co_s=coefficient(s), co_r=coefficient(r), sgn_q=sgn(q), sgn_p=sgn(p,1), sgn_o=sgn(o,1), sgn_n=sgn(n), sgn_m=sgn(m,1), sgn_l=sgn(l), sgn_minus_k=sgn(-k), sgn_minus_j=sgn(-j), k=k, j=j, t=t, i=i)

    return stem, answer, comment


#3-1-2-655
def factorization312_Stem_568():
    stem = "이차방정식 $$수식$${co_frac_zy} x^2 ` {sgn_x} x ` {sgn_frac_wv} `=` 0$$/수식$$의 두 근을 $$수식$$a ,```` b$$/수식$$라 할 때, $$수식$${co_u} a ` {sgn_t} b$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$$a ` &gt; ` b  )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_frac_zy} x^2 ` {sgn_x} x ` {sgn_frac_wv} `=` 0$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$${co_s} x^2 ` {sgn_r} x ` {sgn_q} `=` 0 ,````  ({co_p} x ` {sgn_o}  )  ({co_n} x ` {sgn_m}  ) `=` 0$$/수식$$이므로\n" \
              "$$수식$$x `=` {frac_minus_op}$$/수식$$ 또는 $$수식$$x `=` {frac_minus_mn}$$/수식$$\n" \
              "이떄 $$수식$$a ` &gt; ` b$$/수식$$이므로 $$수식$$a `=` {frac_minus_op} ,```` x `=` {frac_minus_mn}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$${co_u} a ` {sgn_t} b `=` {l} ` {sgn_k} `=` {j}$$/수식$$\n\n"

    while True:
        p, n = np.random.randint(1, 6), np.random.randint(1, 6)
        o, m = np.random.randint(-10, 11), np.random.randint(-10, 11)
        if o * m != 0:
            if gcd(abs(o),p) == 1 and gcd(abs(m),n) == 1 and m/n > o/p:
                s = p*n
                r = p*m + o*n
                q = o*m
                frac_zy = frac_e(s,10)
                frac_wv = frac_e(q,10)
                x = r/10
                if x == int(x):
                    x = int(x)
                u, t = np.random.randint(-5, 6), np.random.randint(-5, 6)
                if u * t * r != 0:
                    l = frac_e(-o*u, p)
                    k = frac_e(-m*t, n)
                    j = frac_e(-n*o*u - p*m*t, p*n)
                    break

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(j, np.random.randint(1, 6))

    stem = stem.format(co_frac_zy=coefficient(frac_zy), sgn_x=sgn(x,1), sgn_frac_wv=sgn(frac_wv), co_u=coefficient(u), sgn_t=sgn(t,1), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_frac_zy=coefficient(frac_zy), sgn_x=sgn(x,1), sgn_frac_wv=sgn(frac_wv), co_s=coefficient(s), sgn_r=sgn(r,1), sgn_q=sgn(q), co_p=coefficient(p), sgn_o=sgn(o), co_n=coefficient(n), sgn_m=sgn(m), frac_minus_op=frac_e(-o,p), frac_minus_mn=frac_e(-m,n), co_u=coefficient(u), sgn_t=sgn(t,1), l=l, sgn_k=sgn(k), j=j)

    return stem, answer, comment


#3-1-2-656
def factorization312_Stem_569():
    stem = "다음 이차방정식의 해가 $$수식$$x `=` {s1}$$/수식$$일 때, 유리수 $$수식$$a ,```` b ,```` c$$/수식$$에 대하여 $$수식$$ac `+` b$$/수식$$의 값을 구하시오.\n$$표$$$$수식$${s2} over 10 `=` {co_y}  ({co_x} x ` {sgn_w}  )  (x ` {sgn_v}  )$$/수식$$$$/표$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${s2} over 10 `=` {co_y}  ({co_x} x ` {sgn_w}  )  (x ` {sgn_v}  )$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면\n" \
              "$$수식$$ (x ` {sgn_z}  )^2 `=` {co_u}  ({co_x} x ` {sgn_w}  )  (x ` {sgn_v}  )$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_t} x ` {sgn_s} `=` {co_r} x^2 ` {sgn_q} x ` {sgn_p}$$/수식$$\n" \
              "$$수식$${co_o} x^2 ` {sgn_n} x ` {sgn_m} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} `=` {c2}$$/수식$$\n" \
              "따라서 $$수식$$a `=` {l} ,```` b `=` {g} ,```` c `=` {i}$$/수식$$이므로\n" \
              "$$수식$$ac `+` b `=` {f} ` {sgn_g} `=` {e}$$/수식$$\n\n"

    while True:
        z, v = np.random.randint(-5, 6), np.random.randint(-5, 6)
        u, x = np.random.randint(1,6), np.random.randint(1,6)
        y = u/10
        w = np.random.randint(-10,11)
        t = 2*z
        s = z**2
        r = u*x
        q = u*(x*v+w)
        p = u*w*v
        o = r-1
        n = q-t
        m = p-s
        if z * v * w * n * m * o != 0 and n**2 > 4*o*m and gcd(abs(o), gcd(abs(n),abs(m))) == 1:
            if gcd(abs(w),x) == 1:
                if n%2 == 1:
                    l = -n
                    k,j,i = l**2, -4*o*m, 2*o
                else:
                    l = int(-n/2)
                    k, j, i = l ** 2, -o * m, o
                if not issquare(k+j):
                    h,g = sqrt_out(k+j)
                    f = l*i
                    e = f+g
                    break

    s1 = "{a `+-` %s sqrt b} over c"%h
    s2 = "{ (x ` %s  )^2}"%sgn(z)
    c1 = "{%d `+-` sqrt {%s ` %s}} %s" % (l, k, sgn(j), over_den(i))
    c2 = "{%d `+-` %s sqrt %s} %s" % (l, h, g, over_den(i))

    stem = stem.format(s1=s1, s2=s2, co_y=coefficient(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v))
    answer = answer.format(ans=e)
    comment = comment.format(s2=s2, co_y=coefficient(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_v=sgn(v), sgn_z=sgn(z), co_u=coefficient(u), sgn_t=sgn(t,1), sgn_s=sgn(s), co_r=coefficient(r), sgn_q=sgn(q,1), sgn_p=sgn(p), co_o=coefficient(o), sgn_n=sgn(n,1), sgn_m=sgn(m), c1=c1, c2=c2, l=l, g=g, i=i, f=f, sgn_g=sgn(g), e=e)

    return stem, answer, comment


#3-1-2-657
def factorization312_Stem_570():
    stem = "이차방정식 $$수식$${s1} {over_x} `=` {s2} {over_v}$$/수식$$의 두 근 중 큰 근을 $$수식$$a$$/수식$$라 할 때, 부등식 $$수식$$m ` &lt; ` a ` &lt; ` m `+` 1$$/수식$$을 만족시키는 정수 $$수식$$m$$/수식$$의 값은?\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${s1} {over_x} `=` {s2} {over_v}$$/수식$$에서\n" \
              "$$수식$${co_u}  (x ` {sgn_z}  )  (x ` {sgn_y}  ) `=` {co_t} x  (x ` {sgn_w}  )$$/수식$$\n" \
              "$$수식$${co_u} x^2 ` {sgn_s} x ` {sgn_r} `=` {co_t}x^2 ` {sgn_q} x$$/수식$$\n" \
              "$$수식$$x^2 ` {sgn_p} x ` {sgn_o} `=` 0$$/수식$$\n" \
              "$$수식$$x `=` {c1} `=` {n} `+-` {j} sqrt {i}$$/수식$$\n" \
              "이중 큰 근은 $$수식$${n} `+` {j} sqrt {i}$$/수식$$이므로 $$수식$$a `=` {n} `+` {j} sqrt {i}$$/수식$$\n" \
              "이때 $$수식$${h} ` &lt; ` {j} sqrt {i} ` &lt; ` {g}$$/수식$$이므로 $$수식$${f} ` &lt; ` {n} `+` {j} sqrt {i} ` &lt; ` {e}$$/수식$$\n" \
              "따라서 $$수식$$m `=` {f}$$/수식$$\n\n"

    while True:
        z, y, w = np.random.randint(-5, 6), np.random.randint(-5, 6), np.random.randint(-5, 6)
        u = np.random.randint(-5, 6)
        t = u-1
        if z * y * w * u * t != 0:
            k = lcm(abs(u),abs(t))
            x = int(k/u)
            v = int(k/t)
            s = u*(z+y)
            r = u*z*y
            q = t*w
            p = s-q
            o = r
            if p%2 == 0 and p**2 > 4*o and s != 0:
                n = int(-p/2)
                m = n**2
                l = -o
                if not issquare(m+l):
                    j,i = sqrt_out(m+l)
                    h = int(((m+l)**0.5))
                    g = h+1
                    f = h+n
                    e = f+1
                    break

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(f, np.random.randint(1, 3))

    s1 = "{ (x ` %s  )  (x ` %s  )}"%(sgn(z),sgn(y))
    s2 = "{x  (x ` %s  )}"%(sgn(w))
    c1 = "{%s `+-` sqrt{%s ` %s}}"%(n,m,sgn(l))

    stem = stem.format(s1=s1, over_x=over_den(x), s2=s2, over_v=over_den(v), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(s1=s1, over_x=over_den(x), s2=s2, over_v=over_den(v), co_u=coefficient(u), sgn_z=sgn(z), sgn_y=sgn(y), co_t=coefficient(t), sgn_w=sgn(w), sgn_s=sgn(s,1), sgn_r=sgn(r), sgn_q=sgn(q,1), sgn_p=sgn(p,1), sgn_o=sgn(o), c1=c1, n=n, j=j, i=i, h=h, g=g, f=f, e=e)

    return stem, answer, comment


#3-1-2-658
def factorization312_Stem_571():
    stem = "이차방정식 $$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 두 근 중 큰 근을 $$수식$$a$$/수식$$라 할 때, 부등식 $$수식$$m ` &lt; ` a ` &lt; ` m `+` 1$$/수식$$을 만족시키는 정수 $$수식$$m$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x^2 ` {sgn_y} x ` {sgn_x} `=` 0$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하여 정리하면\n" \
              "$$수식$${co_w}x^2 ` {sgn_v} x ` {sgn_u} `=` 0,```` x^2 ` {sgn_t} x ` {sgn_s} `=` 0$$/수식$$이므로\n" \
              "$$수식$$x `=` {c1} `=` {r} `+-` {o} sqrt {n}$$/수식$$\n" \
              "이때 두 근 중 큰 근이 $$수식$$a$$/수식$$이므로 $$수식$$a `=` {r} `+` {o} sqrt {n}$$/수식$$\n" \
              "$$수식$${m} ` &lt; ` {o} sqrt {n} ` &lt; ` {l}$$/수식$$이므로 $$수식$${k} ` &lt; ` {r} `+` {o} sqrt {n} ` &lt; ` {j}$$/수식$$\n" \
              "따라서 $$수식$$m `=` {k}$$/수식$$\n\n"

    while True:
        t = np.random.randint(-5, 6)*2
        s = np.random.randint(-20, 21)
        if t*s != 0 and t**2 > 4*s:
            r=int(-t/2)
            q=r**2
            p=-s
            if not issquare(q+p):
                o,n = sqrt_out(q+p)
                m = int((q+p)**0.5)
                l = m+1
                k = r+m
                j = k+1
                w = np.random.randint(1, 6)
                v = t*w
                u = s*w
                z = w/10
                y = v/10
                if y == int(y):
                    y = int(y)
                x = u/10
                if x == int(x):
                    x = int(x)
                if gcd(gcd(w, abs(v)), abs(u)) == 1:
                    break

    c1 = "{%s `+-` sqrt{%s ` %s}}"%(r,q,sgn(p))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x))
    answer = answer.format(ans=k)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), co_w=coefficient(w), sgn_v=sgn(v,1), sgn_u=sgn(u), sgn_t=sgn(t,1), sgn_s=sgn(s), c1=c1, r=r, o=o, n=n, m=m, l=l, k=k, j=j)

    return stem, answer, comment


#3-1-2-659
def factorization312_Stem_572():
    stem = "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2$$/수식$$의 두 근 사이에 있는 정수의 개수를 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$개\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${co_z}  (x ` {sgn_y}  )^2 `=` {co_x}  (x ` {sgn_w}  )^2$$/수식$$을 정리하면\n" \
              "$$수식$${co_z}  (x^2 ` {sgn_u} x ` {sgn_t}  ) `=` {co_x}  (x^2 ` {sgn_s} x ` {sgn_r}  )$$/수식$$\n" \
              "$$수식$${co_z} x^2 ` {sgn_q} x ` {sgn_p} `=` {co_x} x^2 ` {sgn_o} x ` {sgn_n} `=` 0$$/수식$$\n" \
              "$$수식$$x^2 `-` {m} `=` 0$$/수식$$이므로 $$수식$$x `=` +- {l} sqrt {k}$$/수식$$\n" \
              "이때 $$수식$${j} ` &lt; ` {l} sqrt {k} ` &lt; ` {i}$$/수식$$이고, $$수식$${minus_i} ` &lt; ` - {l} sqrt {k} ` &lt; ` {minus_j}$$/수식$$\n" \
              "따라서 두 근 사이에 있는 정수는\n" \
              "$$수식$${integer}$$/수식$$의 $$수식$${a}$$/수식$$개이다.\n\n"

    while True:
        z = np.random.randint(2, 6)
        x = z-1
        u, s = np.random.randint(-5, 6)*2, np.random.randint(-5, 6)*2
        if u * s != 0 and z*u == x*s:
            y = int(u/2)
            w = int(s/2)
            t = y**2
            r = w**2
            q = u*z
            p = t*z
            o = x*s
            n = x*r
            if int(z*u/s) == z*u/s and p-n<0 and not issquare(n-p):
                m = n-p
                l,k = sqrt_out(m)
                j = int(m**0.5)
                i = j+1
                a = 2*i-1
                break

    integer = ""
    if j in [0,1,2]:
        for c in range(-j, j) :
            integer = integer + str(c) + " ,```` "
        integer = integer + str(j)
    else:
        for c in range(5):
            integer = integer + str(-j+c) + " ,```` "
        integer = integer + "CDOTS"

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w))
    answer = answer.format(ans=a)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y), co_x=coefficient(x), sgn_w=sgn(w), sgn_u=sgn(u,1), sgn_t=sgn(t), sgn_s=sgn(s,1), sgn_r=sgn(r), sgn_q=sgn(q,1), sgn_p=sgn(p), sgn_o=sgn(o,1), sgn_n=sgn(n), m=m, l=l, k=k, j=j, i=i, minus_i=-i, minus_j=-j, integer=integer, a=a)

    return stem, answer, comment


#3-1-2-660
def factorization312_Stem_573():
    stem = "이차방정식 $$수식$$ (x ` {sgn_z}  )^2 ` {sgn_y}  (x ` {sgn_z}  ) `=` {x}$$/수식$$의 해를 구하시오.\n"
    answer = "(답): $$수식$${ans1},```` {ans2}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x ` {sgn_z} `=` A$$/수식$$로 놓으면\n" \
              "$$수식$$A^2 ` {sgn_y} A `=` {x} ,```` A^2 ` {sgn_y} A ` {sgn_minus_x} `=` 0$$/수식$$\n" \
              "$$수식$$ (A ` {sgn_minus_w}  )  (A ` {sgn_minus_v}  ) `=` 0$$/수식$$\n" \
              "$$수식$$A `=` {w}$$/수식$$ 또는 $$수식$$A `=` {v}$$/수식$$\n" \
              "즉, $$수식$$x ` {sgn_z} `=` {w}$$/수식$$ 또는 $$수식$$x ` {sgn_z} `=` {v}$$/수식$$에서\n" \
              "$$수식$$x `=` {u}$$/수식$$ 또는 $$수식$$x `=` {t}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        w, v = np.random.randint(-10, 11), np.random.randint(-10, 11)
        y = -(w+v)
        x = -w*v
        u = w-z
        t = v-z
        if z * w * v != 0 and w != v:
            break

    stem = stem.format(sgn_z=sgn(z), sgn_y=sgn(y,1), x=x)
    answer = answer.format(ans1=u, ans2=t)
    comment = comment.format(sgn_z=sgn(z), sgn_y=sgn(y,1), x=x, sgn_minus_x=sgn(-x), sgn_minus_w=sgn(-w), sgn_minus_v=sgn(-v), w=w, v=v, u=u, t=t)


    return stem, answer, comment


#3-1-2-661
def factorization312_Stem_574():
    stem = "$$수식$$ ({co_z} x ` {sgn_y} y  )  ({co_z} x ` {sgn_y} y ` {sgn_x}  ) `=` {w}$$/수식$$일 때, $$수식$${co_v} x ` {sgn_u} y$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$${co_z} x ` {sgn_y} y ` &gt; ` 0  )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x ` {sgn_y} y `=` A$$/수식$$로 놓으면\n" \
              "$$수식$$A  (A ` {sgn_x}  ) `=` {w} ,```` A^2 ` {sgn_x1} A ` {sgn_minus_w} `=` 0$$/수식$$\n" \
              "$$수식$$ (A ` {sgn_minus_t}  )  (x ` {sgn_minus_s}  ) `=` 0$$/수식$$\n" \
              "$$수식$$A `=` {t}$$/수식$$ 또는 $$수식$$A `=` {s}$$/수식$$\n" \
              "이때 $$수식$${co_z} x ` {sgn_y} y ` &gt; ` 0$$/수식$$이므로 $$수식$${co_z} x ` {sgn_y} y `=` {t}$$/수식$$\n" \
              "따라서 $$수식$${co_v} x ` {sgn_u} y `=` {r}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 6)
        y = np.random.randint(1, 6)
        t = np.random.randint(1, 11)
        s = np.random.randint(-10, 0)
        x = -(t+s)
        w = -t*s
        k = np.random.randint(-5, 6)
        v = k*z
        u = k*y
        r = k*t
        if s*k != 0 and gcd(z,y) == 1:
            break

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(r, np.random.randint(1, 6))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), w=w, co_v=coefficient(v), sgn_u=sgn(u,1), ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), sgn_x1=sgn(x,1), sgn_minus_w=sgn(-w), sgn_minus_t=sgn(-t), sgn_minus_s=sgn(-s), t=t, s=s, w=w, co_v=coefficient(v), sgn_u=sgn(u,1), r=r)

    return stem, answer, comment


#3-1-2-662
def factorization312_Stem_575():
    stem = "$$수식$$ ({co_z} x ` {sgn_y} y  )  ({co_z} x ` {sgn_y} y ` {sgn_x}  ) `=` {w}$$/수식$$일 때, $$수식$${co_v} {s1}$$/수식$$의 값은? $$수식$$ ($$/수식$$단, $$수식$${co_z} x ` {sgn_y} y ` &gt; ` 0  )$$/수식$$\n① $$수식$${ex1}$$/수식$$     ② $$수식$${ex2}$$/수식$$     ③ $$수식$${ex3}$$/수식$$     ④ $$수식$${ex4}$$/수식$$     ⑤ $$수식$${ex5}$$/수식$$\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${co_z} x ` {sgn_y} y `=` A$$/수식$$로 놓으면\n" \
              "$$수식$$A  (A ` {sgn_x}  ) `=` {w} ,```` A^2 ` {sgn_x1} A ` {sgn_minus_w} `=` 0$$/수식$$\n" \
              "$$수식$$ (A ` {sgn_minus_t}  )  (x ` {sgn_minus_s}  ) `=` 0$$/수식$$\n" \
              "$$수식$$A `=` {t}$$/수식$$ 또는 $$수식$$A `=` {s}$$/수식$$\n" \
              "즉, $$수식$${co_z} x ` {sgn_y} y `=` {t}$$/수식$$ 또는 $$수식$${co_z} x ` {sgn_y} y `=` {s}$$/수식$$\n" \
              "이때 $$수식$${co_z} x ` {sgn_y} y ` &gt; ` 0$$/수식$$이므로 $$수식$${co_z} x ` {sgn_y} y `=` {t}$$/수식$$\n" \
              "따라서 $$수식$${co_v}  ({co_z} x ` {sgn_y} y  ) `=` {r}$$/수식$$\n\n"

    while True:
        z = np.random.randint(1, 6)
        y = np.random.randint(1, 6)
        t = np.random.randint(1, 11)
        s = np.random.randint(-10, 0)
        x = -(t+s)
        w = -t*s
        v = np.random.randint(-5, 6)
        r = v*t
        if s*x*v != 0 and gcd(z,y) == 1:
            break

    s1 = "%s x ` %s y"%(coefficient(z), sgn(y,1))
    if v != 1:
        s1 = parentheses(s1, 1)

    ex1, ex2, ex3, ex4, ex5, ans = mulcho(r, np.random.randint(1, 6))

    stem = stem.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), w=w, co_v=coefficient(v), s1=s1, ex1=ex1, ex2=ex2, ex3=ex3, ex4=ex4, ex5=ex5)
    answer = answer.format(ans=ans)
    comment = comment.format(co_z=coefficient(z), sgn_y=sgn(y,1), sgn_x=sgn(x), sgn_x1=sgn(x,1), sgn_minus_w=sgn(-w), sgn_minus_t=sgn(-t), sgn_minus_s=sgn(-s), t=t, s=s, w=w, co_v=coefficient(v), r=r)

    return stem, answer, comment


#3-1-2-663
def factorization312_Stem_576():
    stem = "이차방정식 $$수식$$0.1  (x ` {sgn_z}  )^2 ` {sgn_frac_ky}  (x ` {sgn_z}  ) `=` {frac_xw}$$/수식$$의 음수인 해를 구하시오.\n"
    answer = "(답): $$수식$${ans}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$0.1  (x ` {sgn_z}  )^2 ` {sgn_frac_ky}  (x ` {sgn_z}  ) `=` {frac_xw}$$/수식$$의 양변에 $$수식$$10$$/수식$$을 곱하면 $$수식$$ (x ` {sgn_z}  )^2 ` {sgn_v}  (x ` {sgn_z}  ) `=` {u}$$/수식$$\n" \
              "$$수식$$x ` {sgn_z} `=` A$$/수식$$로 놓으면\n" \
              "$$수식$$A^2 ` {sgn_v} A `=` {u} ,```` A^2 ` {sgn_v} A ` {sgn_minus_u} `=` 0$$/수식$$\n" \
              "$$수식$$ (A ` {sgn_minus_t}  )  (A ` {sgn_minus_s}  ) `=` 0$$/수식$$\n" \
              "$$수식$$A `=` {t}$$/수식$$ 또는 $$수식$$A `=` {s}$$/수식$$\n" \
              "즉, $$수식$$x ` {sgn_z} `=` {t}$$/수식$$ 또는 $$수식$$x ` {sgn_z} `=` {s}$$/수식$$이므로\n" \
              "$$수식$$x `=` {r}$$/수식$$ 또는 $$수식$$x `=` {q}$$/수식$$\n" \
              "따라서 음수인 해는 $$수식$$x `=` {r}$$/수식$$\n\n"

    while True:
        z = np.random.randint(-5, 6)
        r = np.random.randint(-10, 0)
        q = np.random.randint(1, 11)
        t = r+z
        s = q+z
        if z*t*s != 0 and r+q != 0:
            v = -(t+s)
            u = -t*s
            frac_ky = frac_e(v,10)
            frac_xw = frac_e(u,10)
            break

    stem = stem.format(sgn_z=sgn(z), sgn_frac_ky=sgn(frac_ky, 1), frac_xw=frac_xw)
    answer = answer.format(ans=r)
    comment = comment.format(sgn_z=sgn(z), sgn_frac_ky=sgn(frac_ky, 1), frac_xw=frac_xw, sgn_v=sgn(v,1), u=u, sgn_minus_u=sgn(-u), sgn_minus_t=sgn(-t), sgn_minus_s=sgn(-s), t=t, s=s, r=r, q=q)

    return stem, answer, comment

# 3-1-2-665
def factorization312_Stem_577():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 두 근의 합은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$로 놓으면\n" \
              "$$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$ 또는 $$수식$${c_exp5}$$/수식$$\n" \
              "즉, $$수식$${c_exp6}$$/수식$$, $$수식$${c_exp7}$$/수식$$이므로\n" \
              "$$수식$${c_exp8}$$/수식$$ 또는 $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 두 근의 합은 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(1, 6) * np.random.choice([-1, 1], size=1)[0]
        W, V = np.random.choice(np.arange(1, 11) * np.random.choice([-1, 1], size=10), size=2, replace=False)
        U = W - Z
        T = V - Z
        Y = - (W + V)
        X = - W * V
        S = U + T

        if abs(W) != abs(V):
            break

    s_exp1 = " ( x %s  ) ^{2} %s  ( x %s  ) `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(Y, exp_one_remove=True),
                int_str_converter(Z),
                int_str_converter(X, first=True))

    c_exp1 = "x %s `=` A" % int_str_converter(Z)
    c_exp2 = "A ^{2} %sA %s `=` 0" \
             % (int_str_converter(Y, exp_one_remove=True),
                int_str_converter(-X))
    c_exp3 = " ( A %s  )  ( A %s  ) `=` 0" \
             % (int_str_converter(-W),
                int_str_converter(-V))
    c_exp4 = "A `=` %s" % int_str_converter(W, first=True)
    c_exp5 = "A `=` %s" % int_str_converter(V, first=True)
    c_exp6 = "x %s `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(W, first=True))
    c_exp7 = "x %s `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(V, first=True))
    c_exp8 = "x `=` %s" % int_str_converter(U, first=True)
    c_exp9 = "x `=` %s" % int_str_converter(T, first=True)
    c_exp10 = "%s `+` %s `=` %s" \
              % (int_str_converter(U, first=True),
                 round_brackets_int(T),
                 int_str_converter(S, first=True))


    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(S)
        elif i < ans_index:
            answers.append(S - abs(ans_index - i) * 2)
        else:
            answers.append(S + abs(ans_index - i) * 2)

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)

    return stem, answer, comment


# 3-1-2-666
def factorization312_Stem_578():
    stem = "이차방정식 $$수식$${s_exp1}$$/수식$$의 두 근의 곱은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$로 놓으면\n" \
              "$$수식$${c_exp2}$$/수식$$, $$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$ 또는 $$수식$${c_exp5}$$/수식$$\n" \
              "즉, $$수식$${c_exp6}$$/수식$$, $$수식$${c_exp7}$$/수식$$이므로\n" \
              "$$수식$${c_exp8}$$/수식$$ 또는 $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 두 근의 곱은 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(1, 6) * np.random.choice([-1, 1], size=1)[0]
        W, V = np.random.choice(np.arange(1, 11) * np.random.choice([-1, 1], size=10), size=2, replace=False)
        U = W - Z
        T = V - Z
        Y = - (W + V)
        X = - W * V
        S = U * T

        if abs(W) != abs(V):
            break

    s_exp1 = " ( x %s  ) ^{2} %s  ( x %s  ) `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(Y, exp_one_remove=True),
                int_str_converter(Z),
                int_str_converter(X, first=True))

    c_exp1 = "x %s `=` A" % int_str_converter(Z)
    c_exp2 = "A ^{2} %sA %s `=` 0" \
             % (int_str_converter(Y, exp_one_remove=True),
                int_str_converter(-X))
    c_exp3 = " ( A %s  )  ( A %s  ) `=` 0" \
             % (int_str_converter(-W),
                int_str_converter(-V))
    c_exp4 = "A `=` %s" % int_str_converter(W, first=True)
    c_exp5 = "A `=` %s" % int_str_converter(V, first=True)
    c_exp6 = "x %s `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(W, first=True))
    c_exp7 = "x %s `=` %s" \
             % (int_str_converter(Z),
                int_str_converter(V, first=True))
    c_exp8 = "x `=` %s" % int_str_converter(U, first=True)
    c_exp9 = "x `=` %s" % int_str_converter(T, first=True)
    c_exp10 = "%s ` TIMES ` %s `=` %s" \
              % (round_brackets_int(U),
                 round_brackets_int(T),
                 int_str_converter(S, first=True))

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(S)
        elif i < ans_index:
            answers.append(S - abs(ans_index - i) * 2)
        else:
            answers.append(S + abs(ans_index - i) * 2)

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10)

    return stem, answer, comment


# 3-1-2-667
def factorization312_Stem_579():
    stem = "$$수식$${s_exp1}$$/수식$$을 만족시키는 $$수식$$x$$/수식$$, $$수식$$y$$/수식$$에 대하여 $$수식$${s_exp2}$$/수식$$의 값은? " \
           "(단, $$수식$${s_exp3}$$/수식$$)\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$$로 놓으면\n" \
              "$$수식$${c_exp2}$$/수식$$이므로\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "이때 $$수식$${c_exp4}$$/수식$$이므로 $$수식$${c_exp5}$$/수식$$\n" \
              "따라서 $$수식$${c_exp6}$$/수식$$\n\n"

    while True:
        Z = np.random.randint(1, 6)
        Y = np.random.randint(1, 6) * np.random.choice([-1, 1], size=1)[0]
        U = np.random.randint(1, 10) * np.random.choice([-1, 1], size=1)[0]
        V = np.random.randint(-30, 0)
        X = U * Z
        W = -Y * U
        T = - (U // 2)
        S = T ** 2
        R = - V
        Q = [i for i in range(1, 11) if i ** 2 <= S + R][-1]
        P = (S + R)//(Q ** 2)

        if check_simFrac(abs(Z), abs(Y)) and abs(U) % 2 == 0 and 0 < S + R < 400 \
                and np.sqrt(S + R) not in [float(i) for i in range(1, 21)] and (S + R) % (Q ** 2) == 0:
            break

    s_exp1 = " ( %sx %sy  ) ^{2} %sx %sy %s `=` 0" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                int_str_converter(X, exp_one_remove=True),
                int_str_converter(W, exp_one_remove=True),
                int_str_converter(V))

    s_exp2 = "%sx %sy" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True))

    s_exp3 = "%sx `&lt;` %sy" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(Y, first=True, exp_one_remove=True))

    c_exp1 = "%sx %sy `=` A" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True))
    c_exp2 = "A ^{2} %sA %s `=` 0" \
             % (int_str_converter(U, exp_one_remove=True),
                int_str_converter(V))
    c_exp3 = "A `=` %s `+-` sqrt {%s %s} `=` %s `+-` %s sqrt {%s}" \
             % (int_str_converter(T, first=True),
                int_str_converter(S, first=True),
                int_str_converter(R),
                int_str_converter(T, first=True),
                int_str_converter(Q, first=True, exp_one_remove=True),
                int_str_converter(P, first=True))
    c_exp4 = s_exp3
    c_exp5 = "%sx %sy `%s` 0" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                right)
    c_exp6 = "%sx %sy `=` %s `-` %s sqrt {%s}" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                int_str_converter(T, first=True),
                int_str_converter(Q, first=True, exp_one_remove=True),
                int_str_converter(P, first=True))


    t1 = "%s `-` %s sqrt {%s}" \
         % (int_str_converter(T, first=True),
            int_str_converter(Q, first=True, exp_one_remove=True),
            int_str_converter(P, first=True))

    t2 = "%s `+` %s sqrt {%s}" \
         % (int_str_converter(T, first=True),
            int_str_converter(Q, first=True, exp_one_remove=True),
            int_str_converter(P, first=True))

    t3 = "%s sqrt {%s}" \
         % (int_str_converter(Q, first=True, exp_one_remove=True),
            int_str_converter(P, first=True))

    t4 = T

    t5 = T * 2

    a_list = [t1, t2, t3, t4, t5]
    np.random.shuffle(a_list)
    a1, a2, a3, a4, a5 = a_list

    ans_num = multiple_choice_nums[a_list.index(t1)]

    stem = stem.format(s_exp1=s_exp1, s_exp2=s_exp2, s_exp3=s_exp3, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6)

    return stem, answer, comment


# 3-1-2-669
def factorization312_Stem_580():
    stem = "$$수식$${s_exp1}$$/수식$$일 때, $$수식$$x `+` y$$/수식$$의 값은?\n" \
           "➀ $$수식$${a1}$$/수식$$\n" \
           "➁ $$수식$${a2}$$/수식$$\n" \
           "➂ $$수식$${a3}$$/수식$$\n" \
           "➃ $$수식$${a4}$$/수식$$\n" \
           "➄ $$수식$${a5}$$/수식$$\n"
    answer = "(답) : {ans_num}\n"
    comment = "(해설)\n" \
              "$$수식$${c_exp1}$$/수식$${josa1} 정리하면\n" \
              "$$수식$${c_exp2}$$/수식$$\n" \
              "$$수식$${c_exp3}$$/수식$$\n" \
              "$$수식$${c_exp4}$$/수식$$\n" \
              "$$수식$${c_exp5}$$/수식$$\n" \
              "$$수식$${c_exp6}$$/수식$$로 놓으면\n" \
              "$$수식$${c_exp7}$$/수식$$\n" \
              "$$수식$${c_exp8}$$/수식$$, $$수식$${c_exp9}$$/수식$$\n" \
              "따라서 $$수식$${c_exp10}$$/수식$$\n\n"

    while True:
        U = np.random.randint(1, 6) * np.random.choice([-1, 1], size=1)[0]
        W = -2 * U
        V = U ** 2
        Z = np.random.randint(2, 6)
        Y = -W * Z
        X = -V * Z

        if [True] * 4 == [0 < abs(i) < 100 for i in [W, V, Y, X]] and Y > 0:
            break

    josa1 = check_jongsung(abs(X))[2]
    s_exp1 = "%s  (x `-` y  ) ^{2} `=` %sx %sy %sxy %s" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(Y, first=True, exp_one_remove=True),
                int_str_converter(Y, exp_one_remove=True),
                int_str_converter(-4 * Z, exp_one_remove=True),
                int_str_converter(X))

    c_exp1 = s_exp1
    c_exp2 = "%sx ^{2} %sxy %sy ^{2} `=` %sx %sy %sxy %s" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-2 * Z, exp_one_remove=True),
                int_str_converter(Z, exp_one_remove=True),
                int_str_converter(Y, first=True, exp_one_remove=True),
                int_str_converter(Y, exp_one_remove=True),
                int_str_converter(-4 * Z, exp_one_remove=True),
                int_str_converter(X))
    c_exp3 = "%sx ^{2} %sxy %sy ^{2} %sx %sy %s `=` 0" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(2 * Z, exp_one_remove=True),
                int_str_converter(Z, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                int_str_converter(-X))
    c_exp4 = "%s  ( x `+` y  ) ^{2} %s  ( x `+` y  ) %s `=` 0" \
             % (int_str_converter(Z, first=True, exp_one_remove=True),
                int_str_converter(-Y, exp_one_remove=True),
                int_str_converter(-X))
    c_exp5 = " ( x `+` y  ) ^{2} %s  ( x `+` y  ) %s `=` 0" \
             % (int_str_converter(W, exp_one_remove=True),
                int_str_converter(V))
    c_exp6 = "x `+` y `=` A"
    c_exp7 = "A ^{2} %s A %s `=` 0" \
             % (int_str_converter(W, exp_one_remove=True),
                int_str_converter(V))
    c_exp8 = " ( A %s  ) ^{2} `=` 0" % int_str_converter(-U)
    c_exp9 = "A `=` %s" % int_str_converter(U, first=True)
    c_exp10 = "x `+` y `=` %s" % int_str_converter(U, first=True)

    ans_index = np.random.randint(0, 5)
    answers = []
    for i in range(5):
        if i == ans_index:
            answers.append(U)
        elif i < ans_index:
            answers.append(U - abs(ans_index - i) * 2)
        else:
            answers.append(U + abs(ans_index - i) * 2)

    a1, a2, a3, a4, a5 = answers
    ans_num = multiple_choice_nums[ans_index]

    stem = stem.format(s_exp1=s_exp1, a1=a1, a2=a2, a3=a3, a4=a4, a5=a5)
    answer = answer.format(ans_num=ans_num)
    comment = comment.format(c_exp1=c_exp1, c_exp2=c_exp2, c_exp3=c_exp3, c_exp4=c_exp4, c_exp5=c_exp5, c_exp6=c_exp6,
                             c_exp7=c_exp7, c_exp8=c_exp8, c_exp9=c_exp9, c_exp10=c_exp10, josa1=josa1)

    return stem, answer, comment

def factorization312_Stem_581():
    stem = "두 수 a,b에 대하여\n" \
           "$$수식$${Z}(a-b)^2`{t1}`{Y}(a-b)^2`{t2}`{X}`=`0이고``a`+`b`=`{W}$$/수식$$                일 때, a, b의 값을 구하면? (단, a > b)\n" \
           "① $$수식$${q1}$$/수식$$\n" \
           "② $$수식$${q2}$$/수식$$\n" \
           "③ $$수식$${q3}$$/수식$$\n" \
           "④ $$수식$${q4}$$/수식$$\n" \
           "⑤ $$수식$${q5}$$/수식$$\n"
    answer = "(답): {answer}\n"
    comment = "$$수식$$a`-`b`=`A로``놓으면``{Z}A^2`{t1}`{Y}A`{t2}`{X}`=`0$$/수식$$\n" \
              "$$수식$$({Z}A+{U})(A-{T})`=`0$$/수식$$\n" \
              "$$수식$$A`=`-`{U} OVER {Z}``또는``A`=`{T}$$/수식$$\n" \
              "$$수식$$즉,``a`-`b`=`-`{U} OVER {Z}``또는``a`-`b`=`{T}$$/수식$$\n" \
              "$$수식$$이때``a &gt; b이므로``a`-`b`=`{T}$$/수식$$\n" \
              "따라서 a - b = $$수식$${T}$$/수식$$이고, a + b = $$수식$${W}$$/수식$$이므로\n" \
              "두 식을 연립하여 풀면\n" \
              "a = $$수식$${Q}$$/수식$$, b = $$수식$${P}$$/수식$$\n\n"

    while(1):
        Q = np.random.randint(1,10)
        P = np.random.randint(1,10)
        T = (Q-P)
        Z = np.random.randint(2,6)
        U = np.random.randint(1,10)
        Y = U+Z*T*(-1)
        X = U*T*(-1)
        W = Q+P
        if Q!=0 and P!=0 and Q>P and gcd(Z,U)== 1:
            break

    if Y<0: t1=""
    else: t1 = "+"
    if X<0: t2=""
    else: t2 = "+"
    sol = np.random.randint(0, 5)

    if (sol == 0):
        q1 = "a`=`{%s},``b`=`{%s}" % (Q,P)
        q2 = "a`=`{%s},``b`=`{%s}" % (Q+1,P-1)
        q3 = "a`=`{%s},``b`=`{%s}" % (Q+2,P-2)
        q4 = "a`=`{%s},``b`=`{%s}" % (Q+3,P-3)
        q5 = "a`=`{%s},``b`=`{%s}" % (Q+4,P-4)
        answer = "①"
    elif (sol == 1):
        q1 = "a`=`{%s},``b`=`{%s}" % (Q - 1, P + 1)
        q2 = "a`=`{%s},``b`=`{%s}" % (Q , P)
        q3 = "a`=`{%s},``b`=`{%s}" % (Q + 2, P - 2)
        q4 = "a`=`{%s},``b`=`{%s}" % (Q + 3, P - 3)
        q5 = "a`=`{%s},``b`=`{%s}" % (Q + 4, P - 4)
        answer = "②"
    elif (sol == 2):
        q1 = "a`=`{%s},``b`=`{%s}" % (Q - 2, P + 2)
        q2 = "a`=`{%s},``b`=`{%s}" % (Q - 1, P + 1)
        q3 = "a`=`{%s},``b`=`{%s}" % (Q , P)
        q4 = "a`=`{%s},``b`=`{%s}" % (Q + 1, P - 1)
        q5 = "a`=`{%s},``b`=`{%s}" % (Q + 2, P - 2)
        answer = "③"
    elif (sol == 3):
        q1 = "a`=`{%s},``b`=`{%s}" % (Q - 3, P + 3)
        q2 = "a`=`{%s},``b`=`{%s}" % (Q - 2, P + 2)
        q3 = "a`=`{%s},``b`=`{%s}" % (Q - 1, P + 1)
        q4 = "a`=`{%s},``b`=`{%s}" % (Q, P)
        q5 = "a`=`{%s},``b`=`{%s}" % (Q + 1, P - 1)
        answer = "④"
    else:
        q1 = "a`=`{%s},``b`=`{%s}" % (Q - 4, P + 4)
        q2 = "a`=`{%s},``b`=`{%s}" % (Q - 3, P + 3)
        q3 = "a`=`{%s},``b`=`{%s}" % (Q - 2, P + 2)
        q4 = "a`=`{%s},``b`=`{%s}" % (Q - 1, P + 1)
        q5 = "a`=`{%s},``b`=`{%s}" % (Q , P )
        answer = "⑤"


    stem = stem.format(q1=q1, q2=q2, q3=q3, q4=q4, q5=q5, Z=Z, Y=Y, X=X, W=W, t1=t1, t2=t2)
    answer = answer.format(answer=answer)
    comment = comment.format(Z=Z, Y=Y, X=X, U=U, T=T, W=W,Q=Q,P=P, t1=t1, t2=t2)

    return stem, answer, comment

def factorization312_Stem_582():
    stem = "두 수 a,b에 대하여\n" \
           "$$수식$${Z}(a-b)^2`{t1}`{Y}(a-b)^2`{t2}`{X}`=`0이고``a`+`b`=`{W}$$/수식$$                일 때, ab의 값을 구하면? (단, a > b)\n" \
           "① $$수식$${q1}$$/수식$$\n" \
           "② $$수식$${q2}$$/수식$$\n" \
           "③ $$수식$${q3}$$/수식$$\n" \
           "④ $$수식$${q4}$$/수식$$\n" \
           "⑤ $$수식$${q5}$$/수식$$\n"
    answer = "(답): {answer}\n"
    comment = "$$수식$$a`-`b`=`A로``놓으면``{Z}A^2`{t1}`{Y}A`{t2}`{X}`=`0$$/수식$$\n" \
              "$$수식$$({Z}A+{U})(A-{T})`=`0$$/수식$$\n" \
              "$$수식$$A`=`-`{U} OVER {Z}``또는``A`=`{T}$$/수식$$\n" \
              "$$수식$$즉,``a`-`b`=`-`{U} OVER {Z}``또는``a`-`b`=`{T}$$/수식$$\n" \
              "$$수식$$이때``a &gt; b이므로``a`-`b`=`{T}$$/수식$$\n" \
              "따라서 a - b = $$수식$${T}$$/수식$$이고, a + b = $$수식$${W}$$/수식$$이므로\n" \
              "두 식을 연립하여 풀면 a = $$수식$${Q}$$/수식$$, b = $$수식$${P}$$/수식$$\n" \
              "ab = $$수식$${Q} TIMES {P}`=`{O}$$/수식$$\n\n"

    while(1):
        a = np.random.randint(1,4)
        Q = np.random.randint(1,10)
        P = np.random.randint(1,10)
        T = (Q-P)
        Z = np.random.randint(2,6)
        U = np.random.randint(1,10)
        Y = U+Z*T*(-1)
        X = U*T*(-1)
        W = Q+P
        O = Q*P
        if Q!=0 and P!=0 and Q>P and gcd(Z,U)== 1:
            break

    if Y<0: t1=""
    else: t1 = "+"
    if X<0: t2=""
    else: t2 = "+"
    sol = np.random.randint(0, 5)

    if (sol == 0):
        q1 = "{%s}" % (O)
        q2 = "{%s}" % (O+a)
        q3 = "{%s}" % (O+2*a)
        q4 = "{%s}" % (O+3*a)
        q5 = "{%s}" % (O+4*a)
        answer = "①"
    elif (sol == 1):
        q1 = "{%s}" % (O - a)
        q2 = "{%s}" % (O)
        q3 = "{%s}" % (O + 1 * a)
        q4 = "{%s}" % (O + 2 * a)
        q5 = "{%s}" % (O + 3 * a)
        answer = "②"
    elif (sol == 2):
        q1 = "{%s}" % (O - 2*a)
        q2 = "{%s}" % (O - 1*a)
        q3 = "{%s}" % (O )
        q4 = "{%s}" % (O + 1 * a)
        q5 = "{%s}" % (O + 2 * a)
        answer = "③"
    elif (sol == 3):
        q1 = "{%s}" % (O - 3 * a)
        q2 = "{%s}" % (O - 2 * a)
        q3 = "{%s}" % (O - 1 * a)
        q4 = "{%s}" % (O)
        q5 = "{%s}" % (O + 1 * a)
        answer = "④"
    else:
        q1 = "{%s}" % (O - 4 * a)
        q2 = "{%s}" % (O - 3 * a)
        q3 = "{%s}" % (O - 2 * a)
        q4 = "{%s}" % (O - 1 * a)
        q5 = "{%s}" % (O)
        answer = "⑤"


    stem = stem.format(q1=q1, q2=q2, q3=q3, q4=q4, q5=q5, Z=Z, Y=Y, X=X, W=W, t1=t1, t2=t2)
    answer = answer.format(answer=answer)
    comment = comment.format(Z=Z, Y=Y, X=X, U=U, T=T, W=W,Q=Q,P=P, t1=t1, t2=t2, O=O)

    return stem, answer, comment

def factorization312_Stem_583():
    stem = "$$수식$$({Z1}x+{Y1}y)({Z1}x+{Y1}y{t1}{X})`=`{W}$$/수식$$          을 만족시키는 자연수 x, y의 순서쌍 (x,y)의 개수를 구하시오.\n"
    answer = "(답): {T}\n"
    comment = "$$수식$${Z1}x+{Y1}y`=`A로``놓으면``A(A{t1}{X})`=`{W}$$/수식$$\n" \
              "$$수식$$A^2`{t1}`{X}A`-`{W}`=`0,``(A-{V})(A+{U})`=`0$$/수식$$\n" \
              "$$수식$$A`=`{V}``또는``A`=`{U1}$$/수식$$\n" \
              "$$수식$$즉,``{Z1}x+{Y1}y`=`{V}``또는``{Z1}x+{Y1}y`=`{U1}$$/수식$$\n" \
              "$$수식$$이때``x,y는``자연수이므로``{Z1}x+{Y1}y`=`{V}$$/수식$$\n" \
              "$$수식$$따라서``순서쌍``(x,y)는``{T3}``{TT}다.$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        Y = np.random.randint(1,6)
        V = np.random.randint(1,10)
        U = np.random.randint(1,10)
        U1 = U*(-1)
        X = -1 * (V+U1)
        W = -V*U1

        if Z==1: Z1=""
        else: Z1=Z
        if Y==1: Y1=""
        else: Y1 = Y
        if X < 0: t1=""
        else: t1 = "+"

        if fractions.gcd(Y,Z) == 1 and Z+Y <=V and X!=0:
            break
    T1 = []
    T2 = []
    T3 = []
    T = 0
    for i in range(1,10):
        for j in range(1,10):
            if(Z*i + Y*j == V):
                T1.append(i)
                T2.append(j)
                T = T+1

    for i in range(T1.__len__()):
        a = "(" + str(T1[i]) + "," + str(T2[i]) + ")"
        T3.append(a)

    T3 = ','.join(T3)

    if T != 0:
        TT = str(T) + "개이"
        T3 = str(T3) + ""
    else:
        TT = "없"

    stem = stem.format(Z1=Z1,Y1=Y1,W=W,V=V, X=X, t1=t1)
    answer = answer.format(T=T)
    comment = comment.format(Z1=Z1,Y1=Y1,X=X,V=V,U=U,U1=U1,W=W,TT=TT,T3=T3, T2=T2, t1=t1)

    return stem, answer, comment

def factorization312_Stem_584():
    stem = "다음 이차방정식 중 서로 다른 두 근을 갖는 것은?\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        V = np.random.randint(1,6)
        R = np.random.randint(1,6)
        O = np.random.randint(1,6)
        I = np.random.randint(1,6)
        if Z == 1: Z1=""
        else: Z1=Z
        if V == 1: V1=""
        else: V1=V
        if R == 1: R1=""
        else: R1=R
        if O == 1: O1=""
        else: O1=O
        if I == 1: I1=""
        else: I1=I



        Y = np.random.randint(-5,6)*2
        W = math.floor(Y*Y/4)
        X = math.floor(W/Z)
        U = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        T = np.random.randint(-20,21)
        A = 4*V*T
        S = U*U-A
        Q = np.random.randint(1,21)
        P = R*Q*4
        M = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        M1 = abs(M)
        N = np.random.randint(-10,11)
        L = M*M
        K = 4*O*N
        J = L-K
        H = np.random.randint(-10, 11)
        F = H*H
        E = H*H
        G = math.floor(E/4*I)
        if H == 1: H1=""
        else: H1=H


        if Y!=0 and W%Z == 0 and T!=0 and T>(U*U/4*V) and N!=0 and N>M*M/4*O  and E%(I*4) == 0 and H!=0 and G!=0 and Y*Y%4==0 and F==4*I*G:
            break

    if Y<0: t1 = ""
    else: t1 = "+"
    if U<0: t2 = ""
    else: t2 = "+"
    if M<0: t3 = "+"
    else: t3 = "-"
    if H<0: t4 = ""
    else: t4 = "+"

    s1 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (Z1,t1,Y,X)
    s2 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (V1,t2,U,T)
    s3 = "{%s}x^2`-`{%s}`=`0" % (R1,Q)
    s4 = "{%s}x^2`+`{%s}`=`{%s}x" % (O1,N,M)
    s5 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (I1,t4,H1,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0에서$$/수식$$" % (Z1,t1,Y,X) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (W,W)
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0에서$$/수식$$" % (V1,t2,U,T) + "\n" + "b^2`-`4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0이므로``근이``없다." % (U*U,A,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$${%s}x^2`-`{%s}`=`0에서$$/수식$$" % (R1,Q) + "\n" + "b^2`-`4ac`=`0`+`{%s}`=`{%s}`&gt;0이므로``서로``다른``두``근을``갖는다." % (P,P)
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s}x^2`+`{%s}`=`{%s}x에서``{%s}x^2`{%s}`{%s}x`+`{%s}`=`0$$/수식$$" % (O1,N,M,O1,t3,M1,N) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)

        else:
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0`$$/수식$$" % (I1,t4,H,G) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (F,E)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_585():
    stem = "다음 이차방정식 중에서 중근을 갖는 것은?(정답 2개)\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1},{a2}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        V = np.random.randint(1,6)
        R = np.random.randint(1,6)
        O = np.random.randint(1,6)
        I = np.random.randint(1,6)
        if Z == 1: Z1=""
        else: Z1=Z
        if V == 1: V1=""
        else: V1=V
        if R == 1: R1=""
        else: R1=R
        if O == 1: O1=""
        else: O1=O
        if I == 1: I1=""
        else: I1=I



        Y = np.random.randint(-5,6)*2
        W = math.floor(Y*Y/4)
        X = math.floor(W/Z)
        U = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        T = np.random.randint(-20,21)
        A = 4*V*T
        S = U*U-A
        Q = np.random.randint(1,21)
        P = R*Q*4
        M = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        M1 = abs(M)
        N = np.random.randint(-10,11)
        L = M*M
        K = 4*O*N
        J = L-K
        H = np.random.randint(-10, 11)
        F = H*H
        E = H*H
        G = math.floor(E/4*I)
        if H == 1: H1=""
        else: H1=H


        if Y!=0 and W%Z == 0 and T!=0 and T>(U*U/4*V) and N!=0 and N>M*M/4*O  and E%(I*4) == 0 and H!=0 and G!=0 and Y*Y%4==0 and F==4*I*G:
            break

    if Y<0: t1 = ""
    else: t1 = "+"
    if U<0: t2 = ""
    else: t2 = "+"
    if M<0: t3 = "+"
    else: t3 = "-"
    if H<0: t4 = ""
    else: t4 = "+"

    s1 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (Z1,t1,Y,X)
    s2 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (V1,t2,U,T)
    s3 = "{%s}x^2`-`{%s}`=`0" % (R1,Q)
    s4 = "{%s}x^2`+`{%s}`=`{%s}x" % (O1,N,M)
    s5 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (I1,t4,H1,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    a1=""
    a2=""
    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0에서$$/수식$$" % (Z1,t1,Y,X) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (W,W)
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0에서$$/수식$$" % (V1,t2,U,T) + "\n" + "b^2`-`4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0이므로``근이``없다." % (U*U,A,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$${%s}x^2`-`{%s}`=`0에서$$/수식$$" % (R1,Q) + "\n" + "b^2`-`4ac`=`0`+`{%s}`=`{%s}`&gt;0이므로``서로``다른``두``근을``갖는다." % (P,P)
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s}x^2`+`{%s}`=`{%s}x에서``{%s}x^2`{%s}`{%s}x`+`{%s}`=`0$$/수식$$" % (O1,N,M,O1,t3,M1,N) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)
        else:
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0`$$/수식$$" % (I1,t4,H,G) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (F,E)
            if (cnt == 0):
                a2 = "①"
            elif (cnt == 1):
                a2 = "②"
            elif (cnt == 2):
                a2 = "③"
            elif (cnt == 3):
                a2 = "④"
            else:
                a2 = "⑤"
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT

    if(a1=="②" and a2 == "①") or (a1 == "③" and a2 == "②") or (a1 == "③" and a2 == "①") or (a1 == "④" and a2 != "⑤") or (a1 == "⑤" and a2 != "⑤"):
        temp = a1
        a1 = a2
        a2 = temp


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1,a2=a2)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_586():
    stem = "다음 이차방정식 중에서 근이 없는 것은?\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        V = np.random.randint(1,6)
        R = np.random.randint(1,6)
        O = np.random.randint(1,6)
        I = np.random.randint(1,6)
        if Z == 1: Z1=""
        else: Z1=Z
        if V == 1: V1=""
        else: V1=V
        if R == 1: R1=""
        else: R1=R
        if O == 1: O1=""
        else: O1=O
        if I == 1: I1=""
        else: I1=I



        Y = np.random.randint(-5,6)*2
        W = math.floor(Y*Y/4)
        X = math.floor(W/Z)
        U = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        T = np.random.randint(-20,0)
        A = 4*V*T*(-1)
        S = U*U+A
        Q = np.random.randint(1,21)
        P = R*Q*4
        M = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        M1 = abs(M)
        N = np.random.randint(-10,11)
        L = M*M
        K = 4*O*N
        J = L-K
        H = np.random.randint(-10, 11)
        F = H*H
        E = H*H
        G = math.floor(E/4*I)
        if H == 1: H1=""
        else: H1=H


        if Y!=0 and W%Z == 0 and T!=0 and T<(U*U/4*V) and N!=0 and N>M*M/4*O  and E%(I*4) == 0 and H!=0 and G!=0 and Y*Y%4==0 and F==4*I*G:
            break

    if Y<0: t1 = ""
    else: t1 = "+"
    if U<0: t2 = ""
    else: t2 = "+"
    if M<0: t3 = "+"
    else: t3 = "-"
    if H<0: t4 = ""
    else: t4 = "+"

    s1 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (Z1,t1,Y,X)
    s2 = "{%s}x^2`{%s}`{%s}x``{%s}`=`0" % (V1,t2,U,T)
    s3 = "{%s}x^2`-`{%s}`=`0" % (R1,Q)
    s4 = "{%s}x^2`+`{%s}`=`{%s}x" % (O1,N,M)
    s5 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (I1,t4,H1,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0에서$$/수식$$" % (Z1,t1,Y,X) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (W,W)
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x``{%s}`=`0에서$$/수식$$" % (V1,t2,U,T) + "\n" + "b^2`-`4ac`=`{%s}`+`{%s}`=`{%s}`&gt;`0이므로``서로``다른``두``근을``갖는다." % (U*U,A,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$${%s}x^2`-`{%s}`=`0에서$$/수식$$" % (R1,Q) + "\n" + "b^2`-`4ac`=`0`+`{%s}`=`{%s}`&gt;0이므로``서로``다른``두``근을``갖는다." % (P,P)
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s}x^2`+`{%s}`=`{%s}x에서``{%s}x^2`{%s}`{%s}x`+`{%s}`=`0$$/수식$$" % (O1,N,M,O1,t3,M1,N) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"

        else:
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0`$$/수식$$" % (I1,t4,H,G) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (F,E)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_587():
    stem = "다음 이차방정식 중에서 중근을 갖는 것은?\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):

        Z = np.random.randint(1,6)
        V = np.random.randint(1,6)
        R = 1
        O = np.random.randint(1,6)
        I = np.random.randint(1,6)
        if Z == 1: Z1=""
        else: Z1=Z
        if V == 1: V1=""
        else: V1=V
        if R == 1: R1=""
        else: R1=R
        if O == 1: O1=""
        else: O1=O
        if I == 1: I1=""
        else: I1=I

        Y = np.random.randint(-5,6)*2
        W = math.floor(Y*Y/4)
        X = math.floor(W/Z)
        U = [-9,-7,-5,-3,3,5,7,9][np.random.randint(0,8)]
        T = np.random.randint(-20,0)
        A = 4*V*T*(-1)
        S = U*U+A
        Q = np.random.randint(1,21)
        P = R*Q*4
        M = np.random.randint(1,11)
        M1 = abs(M)
        N = np.random.randint(1,11)
        L = M*M
        K = 4*O*N
        J = L-K
        H = np.random.randint(-10, 11)
        F = H*H
        G = np.random.randint(1,10)
        E = 4 * I * G
        if H == 1: H1=""
        else: H1=H

        r4 = max(O,M,N)
        OO = math.floor(O/gcd(O,r4))
        MM = math.floor(M/gcd(M,r4))
        NN = math.floor(N/gcd(N,r4))

        r1 = math.floor(r4/gcd(O,r4))
        r2 = math.floor(r4/gcd(M,r4))
        r3 = math.floor(r4/gcd(N,r4))

        if  O<N and O<M and M!=0  and N!=0 and N>M*M/4*O  and Y!=0 and W%Z == 0 and T!=0 and T<(U*U/4*V)   and E%(I*4) == 0 and H!=0 and F>E and Y*Y%4==0 :
            break

    if Y<0: t1 = ""
    else: t1 = "+"
    if U<0: t2 = ""
    else: t2 = "+"
    if M<0: t3 = "+"
    else: t3 = "-"
    if H<0: t4 = ""
    else: t4 = "+"

    s1 = "{%s}x^2`{%s}`{%s}x`=-`{%s}`" % (Z1,t1,Y,X)
    s2 = "{%s}x^2`{%s}`{%s}x``{%s}`=`0" % (V1,t2,U,T)
    s3 = "{%s}x^2`=`{%s}`" % (R1,Q)
    s4 = "{%s} OVER {%s}`x^2`+`{%s} OVER {%s}`x`+`1`=`0" % (OO,r1,MM,r2)
    s5 = "{%s}x^2`{%s}`{%s}x`+`{%s}`=`0" % (I1,t4,H1,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`=-`{%s}에서$$/수식$$" % (Z1,t1,Y,X) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`0이므로``중근을``갖는다." % (W,W)
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x``{%s}`=`0에서$$/수식$$" % (V1,t2,U,T) + "\n" + "b^2`-`4ac`=`{%s}`+`{%s}`=`{%s}`&gt;`0이므로``서로``다른``두``근을``갖는다." % (U*U,A,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$${%s}x^2`=`{%s}에서$$/수식$$" % (R1,Q) + "\n" + "b^2`-`4ac`=`0`+`{%s}`=`{%s}`&gt;0이므로``서로``다른``두``근을``갖는다." % (P,P)
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s} OVER {%s}`x^2`+`{%s} OVER {%s}`x`+`1`=`0에서``양변에``{%s}를``곱하면$$/수식$$" % (OO,r1,MM,r2,r4) + "\n" +"$$수식$${%s}x^2`+`{%s}x`+`{%s}`=`0$$/수식$$" % (O1,M1,N) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)
        else:
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`+`{%s}`=`0`$$/수식$$" % (I1,t4,H,G) + "\n" + "b^2`-4ac`=`{%s}`-`{%s}`=`{%s}`&gt;`0이므로``서로``다른``두``근을``갖는다." % (F,E,F-E)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_588():
    stem = "다음 보기의 이차방정식 중 근이 없는 것은 모두 몇 개인가?\n" \
           "ㄱ. $$수식$$x^2`=`{Z}$$/수식$$\n" \
           "ㄴ. $$수식$$(x-{Y})(x+{X})`=`0$$/수식$$\n" \
           "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0$$/수식$$\n" \
           "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0$$/수식$$\n" \
           "ㅁ. $$수식$$(x`+`{R})^2`-`{Q1}(x`+`{R})`-`{O}`=`0$$/수식$$\n" \
           "① 1개\n" \
           "② 2개\n" \
           "③ 3개\n" \
           "④ 4개\n" \
           "⑤ 5개\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "ㄱ. $$수식$$x^2`=`{Z}에서``x^2``{t3}`{Z1}`=`0$$/수식$$\n" \
              "    $$수식$$b^2`-`4ac`=`{Z2} {Z3}이므로``{Z4}$$/수식$$\n" \
              "ㄴ. $$수식$$(x-{Y})(x+{X})`=`0에서$$/수식$$\n" \
              "   $$수식$$x`=`{Y}``또는``x`=`-{X}이므로``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{W1}-{W2}`=`{W3} {W4}이므로``{W5}$$/수식$$\n" \
              "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{T1}`-`{T2}`=`{T3} {T4}이므로``{T5}$$/수식$$\n" \
              "ㅁ. $$수식$$(x`+`{R})^2`-`{Q1}(x`+`{R})`-`{O}`=`0에서$$/수식$$\n" \
              "   $$수식$$x`+`{R}`=`A로``놓으면$$/수식$$\n" \
              "   $$수식$$A^2`-`{Q1}A`-`{O}`=`0,``(A{N})(A+{M})`=`0$$/수식$$\n" \
              "   $$수식$$A`=`{N1}``또는``A`=`-{M}$$/수식$$\n" \
              "   $$수식$$즉,``x`+`{R}`=`{N1}``또는``x`+`{R}`=`-{M}이므로$$/수식$$\n" \
              "   $$수식$$x`=`{L}``또는``x`=`{K}가``되어``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "따라서 근이 없는 이차방정식은 $$수식$${B}의``{C}개이다.$$/수식$$\n\n"

    while(1):

        Z = np.random.randint(-10,11)
        Z1 = abs(Z)
        if Z < 0: t3="+";  Z4="근이``없다"; Z3 = "&lt;0"
        else: t3 = "-";  Z4="서로``다른``두``근을``갖는다"; Z3 = "&gt;0"
        zz = Z * (-1)
        Z2 = -4*zz

        Y = np.random.randint(1,10)
        X = np.random.randint(1,10)

        W = np.random.randint(1,10)*2
        V = np.random.randint(1,10)
        W1 = math.floor(W/2)*math.floor(W/2)
        W2 = V
        W3 = W1-W2
        if W3 < 0: W4= "&lt;0"; W5="근이``없다"
        else: W4 = "&gt;0"; W5="서로``다른``두``근을``갖는다"

        U = np.random.randint(2,6)
        T = np.random.randint(1,10)*2
        S = np.random.randint(1,10)

        T1 = math.floor(T/2)*math.floor(T/2)
        T2 = U*S
        T3 = T1-T2
        if T3<0: T4 = "&lt;0"; T5="근이``없다"
        else: T4 = "&gt;0"; T5 = "서로``다른``두``근을``갖는다"

        R = np.random.randint(1,4)
        N = np.random.randint(-7,0)
        M = np.random.randint(1,7)
        Q = abs(N+M)
        if Q==1: Q1=""
        else: Q1=Q
        O = abs(N*M)
        N1 = abs(N)
        L = N1-R
        K = -1*M -R

        if  Z!=0 and W3!=0 and Q!=0:
            if not (Z4=="서로``다른``두``근을``갖는다" and W5=="서로``다른``두``근을``갖는다" and T5 == "서로``다른``두``근을``갖는다"):
                break

    B = []
    C = 0
    if Z4=="근이``없다":
        B.append("ㄱ")
        C = C + 1
    if W5=="근이``없다":
        B.append("ㄷ")
        C = C + 1
    if T5=="근이``없다":
        B.append("ㄹ")
        C = C + 1

    B = ','.join(B)

    if C == 1:
        a1 = "①"
    elif C == 2:
        a1 = "②"
    elif C ==3:
        a1 = "③"


    stem = stem.format(Z=Z, Y=Y, X=X, W=W, V=V, U=U, T=T, S=S, R=R, Q1=Q1, O=O)
    answer = answer.format(a1=a1)
    comment = comment.format(Z=Z, t3=t3, Z1=Z1, Z2=Z2, Z3=Z3, Z4=Z4, Y=Y, X=X, W=W, V=V, W1=W1, W2=W2, W3=W3, W4=W4, W5=W5, U=U, T=T, S=S, T1=T1, T2=T2, T3=T3, T4=T4, T5=T5, R=R, Q1=Q1, O=O, M=M, N=N, N1=N1, K=K, L=L, B=B,C=C)

    return stem, answer, comment

def factorization312_Stem_589():
    stem = "다음 보기의 이차방정식 중 서로 다른 두 근을 갖는 것은 모두 몇 개인가?\n" \
           "ㄱ. $$수식$$x^2`=`{Z}$$/수식$$\n" \
           "ㄴ. $$수식$$(x-{Y})(x+{X})`=`0$$/수식$$\n" \
           "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0$$/수식$$\n" \
           "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0$$/수식$$\n" \
           "ㅁ. $$수식$$(x`+`{R})^2`-`{Q1}(x`+`{R})`-`{O}`=`0$$/수식$$\n" \
           "① 1개\n" \
           "② 2개\n" \
           "③ 3개\n" \
           "④ 4개\n" \
           "⑤ 5개\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "ㄱ. $$수식$$x^2`=`{Z}에서``x^2``{t3}`{Z1}`=`0$$/수식$$\n" \
              "    $$수식$$b^2`-`4ac`=`{Z2} {Z3}이므로``{Z4}$$/수식$$\n" \
              "ㄴ. $$수식$$(x-{Y})(x+{X})`=`0에서$$/수식$$\n" \
              "   $$수식$$x`=`{Y}``또는``x`=`-{X}이므로``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{W1}-{W2}`=`{W3} {W4}이므로``{W5}$$/수식$$\n" \
              "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{T1}`-`{T2}`=`{T3} {T4}이므로``{T5}$$/수식$$\n" \
              "ㅁ. $$수식$$(x`+`{R})^2`-`{Q1}(x`+`{R})`-`{O}`=`0에서$$/수식$$\n" \
              "   $$수식$$x`+`{R}`=`A로``놓으면$$/수식$$\n" \
              "   $$수식$$A^2`-`{Q1}A`-`{O}`=`0,``(A{N})(A+{M})`=`0$$/수식$$\n" \
              "   $$수식$$A`=`{N1}``또는``A`=`-{M}$$/수식$$\n" \
              "   $$수식$$즉,``x`+`{R}`=`{N1}``또는``x`+`{R}`=`-{M}이므로$$/수식$$\n" \
              "   $$수식$$x`=`{L}``또는``x`=`{K}가``되어``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "따라서 근이 없는 이차방정식은 $$수식$${B}의``{C}개이다.$$/수식$$\n\n"

    while (1):

        Z = np.random.randint(-10, 11)
        Z1 = abs(Z)
        if Z < 0:
            t3 = "+";  Z4 = "근이``없다"; Z3 = "&lt;0"
        else:
            t3 = "-";  Z4 = "서로``다른``두``근을``갖는다"; Z3 = "&gt;0"
        zz = Z * (-1)
        Z2 = -4 * zz

        Y = np.random.randint(1, 10)
        X = np.random.randint(1, 10)
        Z6 = "서로``다른``두``근을``갖는다"

        W = np.random.randint(1, 10) * 2
        V = np.random.randint(1, 10)
        W1 = math.floor(W / 2) * math.floor(W / 2)
        W2 = V
        W3 = W1 - W2
        if W3 < 0:
            W4 = "&lt;0"; W5 = "근이``없다"
        else:
            W4 = "&gt;0"; W5 = "서로``다른``두``근을``갖는다"

        U = np.random.randint(2, 6)
        T = np.random.randint(1, 10) * 2
        S = np.random.randint(1, 10)
        Z7 = "서로``다른``두``근을``갖는다"

        T1 = math.floor(T / 2) * math.floor(T / 2)
        T2 = U * S
        T3 = T1 - T2
        if T3 < 0:
            T4 = "&lt;0"; T5 = "근이``없다"
        else:
            T4 = "&gt;0"; T5 = "서로``다른``두``근을``갖는다"

        R = np.random.randint(1, 4)
        N = np.random.randint(-7, 0)
        M = np.random.randint(1, 7)
        Q = abs(N + M)
        if Q == 1:
            Q1 = ""
        else:
            Q1 = Q
        O = abs(N * M)
        N1 = abs(N)
        L = N1 - R
        K = -1 * M - R

        if Z != 0 and W3 != 0 and Q!=0:
            break

    B = []
    C = 0
    if Z4 == "서로``다른``두``근을``갖는다":
        B.append("ㄱ")
        C = C + 1
    if Z6 == "서로``다른``두``근을``갖는다":
        B.append("ㄴ")
        C = C + 1
    if W5 == "서로``다른``두``근을``갖는다":
        B.append("ㄷ")
        C = C + 1
    if T5 == "서로``다른``두``근을``갖는다":
        B.append("ㄹ")
        C = C + 1
    if Z7 == "서로``다른``두``근을``갖는다":
        B.append("ㅁ")
        C = C + 1

    B = ','.join(B)

    if C == 1:
        a1 = "①"
    elif C == 2:
        a1 = "②"
    elif C == 3:
        a1 = "③"
    elif C == 4:
        a1 = "④"
    else:
        a1 = "⑤"

    stem = stem.format(Z=Z, Y=Y, X=X, W=W, V=V, U=U, T=T, S=S, R=R, Q1=Q1, O=O)
    answer = answer.format(a1=a1)
    comment = comment.format(Z=Z, t3=t3, Z1=Z1, Z2=Z2, Z3=Z3, Z4=Z4, Y=Y, X=X, W=W, V=V, W1=W1, W2=W2, W3=W3, W4=W4,
                             W5=W5, U=U, T=T, S=S, T1=T1, T2=T2, T3=T3, T4=T4, T5=T5, R=R, Q1=Q1, O=O, M=M, N=N, N1=N1,
                             K=K, L=L, B=B, C=C)

    return stem, answer, comment

def factorization312_Stem_590():
    stem = "다음 보기의 이차방정식 중 서로 다른 두 근을 갖는 것은 모두 몇 개인가?\n" \
           "ㄱ. $$수식$$x^2`=`{Z}$$/수식$$\n" \
           "ㄴ. $$수식$$-(x-{Y})(x+{X})`=`0$$/수식$$\n" \
           "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0$$/수식$$\n" \
           "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0$$/수식$$\n" \
           "ㅁ. $$수식$$(x`+`{R})^2`-`{Q}(x`+`{R})`+`{O}`=`0$$/수식$$\n" \
           "① 1개\n" \
           "② 2개\n" \
           "③ 3개\n" \
           "④ 4개\n" \
           "⑤ 5개\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "ㄱ. $$수식$$x^2`=`{Z}에서``x^2``{t3}`{Z1}`=`0$$/수식$$\n" \
              "    $$수식$$b^2`-`4ac`=`{Z2} {Z3}이므로``{Z4}$$/수식$$\n" \
              "ㄴ. $$수식$$-(x-{Y})(x+{X})`=`0에서$$/수식$$\n" \
              "   $$수식$$x`=`{Y}``또는``x`=`-{X}이므로``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{W1}-{W2}`=`{W3} {W4}이므로``{W5}$$/수식$$\n" \
              "ㄹ. $$수식$${U}x^2`-`{T}x`+`{S}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{T1}`-`{T2}`=`{T3} {T4}이므로``{T5}$$/수식$$\n" \
              "ㅁ. $$수식$$(x`-`{R})^2`-`{Q}(x`-`{R})`+`{O}`=`0에서$$/수식$$\n" \
              "   $$수식$$x`-`{R}`=`A로``놓으면``A^2`-`{Q}A`+`{O}`=`0이고$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{M}-{N}`=`{M1}`&lt; 0이므로``근이``없다.$$/수식$$\n" \
              "   즉, 주어진 이차방정식의 근도 없다.\n" \
              "따라서 서로 다른 두 근을 갖는 것은 $$수식$${B}의``{C}개이다.$$/수식$$\n\n"

    while (1):

        Z = np.random.randint(-10, 11)
        Z1 = abs(Z)
        if Z < 0:
            t3 = "+";  Z4 = "근이``없다"; Z3 = "&lt;0"
        else:
            t3 = "-";  Z4 = "서로``다른``두``근을``갖는다"; Z3 = "&gt;0"
        zz = Z * (-1)
        Z2 = -4 * zz

        Y = np.random.randint(1, 10)
        X = np.random.randint(1, 10)
        Z6 = "서로``다른``두``근을``갖는다"

        W = np.random.randint(1, 10) * 2
        V = np.random.randint(1, 10)
        W1 = math.floor(W / 2) * math.floor(W / 2)
        W2 = V
        W3 = W1 - W2
        if W3 < 0:
            W4 = "&lt;0"; W5 = "근이``없다"
        else:
            W4 = "&gt;0"; W5 = "서로``다른``두``근을``갖는다"

        U = np.random.randint(2, 6)
        T = np.random.randint(1, 10) * 2
        S = np.random.randint(1, 10)
        Z7 = "근이``없다"

        T1 = math.floor(T / 2) * math.floor(T / 2)
        T2 = U * S
        T3 = T1 - T2
        if T3 < 0:
            T4 = "&lt;0"; T5 = "근이``없다"
        else:
            T4 = "&gt;0"; T5 = "서로``다른``두``근을``갖는다"

        R = np.random.randint(1, 4)
        O = np.random.randint(1,7)
        Q = np.random.randint(1,5)*2
        M = math.floor(Q/2)
        N = O
        M1 = M-N
        

        if Z != 0 and W3 != 0 and Q!=0  and Q%2==0 and M1<0:
            break

    B = []
    C = 0
    if Z4 == "서로``다른``두``근을``갖는다":
        B.append("ㄱ")
        C = C + 1
    if Z6 == "서로``다른``두``근을``갖는다":
        B.append("ㄴ")
        C = C + 1
    if W5 == "서로``다른``두``근을``갖는다":
        B.append("ㄷ")
        C = C + 1
    if T5 == "서로``다른``두``근을``갖는다":
        B.append("ㄹ")
        C = C + 1
    if Z7 == "서로``다른``두``근을``갖는다":
        B.append("ㅁ")
        C = C + 1

    B = ','.join(B)

    if C == 1:
        a1 = "①"
    elif C == 2:
        a1 = "②"
    elif C == 3:
        a1 = "③"
    elif C == 4:
        a1 = "④"
    else:
        a1 = "⑤"

    stem = stem.format(Z=Z, Y=Y, X=X, W=W, V=V, U=U, T=T, S=S, R=R, Q=Q, O=O)
    answer = answer.format(a1=a1)
    comment = comment.format(Z=Z, t3=t3, Z1=Z1, Z2=Z2, Z3=Z3, Z4=Z4, Y=Y, X=X, W=W, V=V, W1=W1, W2=W2, W3=W3, W4=W4,
                             W5=W5, U=U, T=T, S=S, T1=T1, T2=T2, T3=T3, T4=T4, T5=T5, R=R, Q=Q, O=O, M=M, N=N,M1=M1,
                             B=B, C=C)

    return stem, answer, comment


def factorization312_Stem_591():
    stem = "다음 보기의 이차방정식 중 근이 없는 것은 모두 몇 개인가?\n" \
           "ㄱ. $$수식$$x^2`=`{Z}$$/수식$$\n" \
           "ㄴ. $$수식$$-(x-{Y})(x+{X})`=`0$$/수식$$\n" \
           "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0$$/수식$$\n" \
           "ㄹ. $$수식$${U}x^2`+`{T}x`+`{S}`=`0$$/수식$$\n" \
           "ㅁ. $$수식$$(x`+`{R})^2`-`{Q}(x`+`{R})`+`{O}`=`0$$/수식$$\n" \
           "① 1개\n" \
           "② 2개\n" \
           "③ 3개\n" \
           "④ 4개\n" \
           "⑤ 5개\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "ㄱ. $$수식$$x^2`=`{Z}에서``x^2``{t3}`{Z1}`=`0$$/수식$$\n" \
              "    $$수식$$b^2`-`4ac`=`{Z2} {Z3}이므로``{Z4}$$/수식$$\n" \
              "ㄴ. $$수식$$-(x-{Y})(x+{X})`=`0에서$$/수식$$\n" \
              "   $$수식$$x`=`{Y}``또는``x`=`-{X}이므로``서로``다른``두``근을``갖는다.$$/수식$$\n" \
              "ㄷ. $$수식$$x^2`-{W}x`+`{V}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{W1}-{W2}`=`{W3} {W4}이므로``{W5}$$/수식$$\n" \
              "ㄹ. $$수식$${U}x^2`+`{T}x`+`{S}`=`0에서$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{T1}`-`{T2}`=`{T3} {T4}이므로``{T5}$$/수식$$\n" \
              "ㅁ. $$수식$$(x`-`{R})^2`-`{Q}(x`-`{R})`+`{O}`=`0에서$$/수식$$\n" \
              "   $$수식$$x`-`{R}`=`A로``놓으면``A^2`-`{Q}A`+`{O}`=`0이고$$/수식$$\n" \
              "   $$수식$$b'^2`-`ac`=`{M}-{N}`=`{M1}`&lt; 0이므로``근이``없다.$$/수식$$\n" \
              "   즉, 주어진 이차방정식의 근도 없다.\n" \
              "따라서 근이 없는 이차방정식은 $$수식$${B}의``{C}개이다.$$/수식$$\n\n"

    while (1):

        Z = np.random.randint(-10, 11)
        Z1 = abs(Z)
        if Z < 0:
            t3 = "+";
            Z4 = "근이``없다";
            Z3 = "&lt;0"
        else:
            t3 = "-";
            Z4 = "서로``다른``두``근을``갖는다";
            Z3 = "&gt;0"
        zz = Z * (-1)
        Z2 = -4 * zz

        Y = np.random.randint(1, 10)
        X = np.random.randint(1, 10)
        Z6 = "서로``다른``두``근을``갖는다"

        W = np.random.randint(1, 10) * 2
        V = np.random.randint(1, 10)
        W1 = math.floor(W / 2) * math.floor(W / 2)
        W2 = V
        W3 = W1 - W2
        if W3 < 0:
            W4 = "&lt;0";
            W5 = "근이``없다"
        else:
            W4 = "&gt;0";
            W5 = "서로``다른``두``근을``갖는다"

        U = np.random.randint(2, 6)
        T = np.random.randint(1, 10) * 2
        S = np.random.randint(1, 10)
        Z7 = "근이``없다"

        T1 = math.floor(T / 2) * math.floor(T / 2)
        T2 = U * S
        T3 = T1 - T2
        if T3 < 0:
            T4 = "&lt;0";
            T5 = "근이``없다"
        else:
            T4 = "&gt;0";
            T5 = "서로``다른``두``근을``갖는다"

        R = np.random.randint(1, 4)
        O = np.random.randint(1, 7)
        Q = np.random.randint(1, 5) * 2
        M = math.floor(Q / 2)
        N = O
        M1 = M - N

        if Z != 0 and W3 != 0 and Q != 0 and Q % 2 == 0 and M1 < 0:
            break

    B = []
    C = 0
    if Z4 == "근이``없다":
        B.append("ㄱ")
        C = C + 1
    if Z6 == "근이``없다":
        B.append("ㄴ")
        C = C + 1
    if W5 == "근이``없다":
        B.append("ㄷ")
        C = C + 1
    if T5 == "근이``없다":
        B.append("ㄹ")
        C = C + 1
    if Z7 == "근이``없다":
        B.append("ㅁ")
        C = C + 1

    B = ','.join(B)

    if C == 1:
        a1 = "①"
    elif C == 2:
        a1 = "②"
    elif C == 3:
        a1 = "③"
    elif C == 4:
        a1 = "④"
    else:
        a1 = "⑤"

    stem = stem.format(Z=Z, Y=Y, X=X, W=W, V=V, U=U, T=T, S=S, R=R, Q=Q, O=O)
    answer = answer.format(a1=a1)
    comment = comment.format(Z=Z, t3=t3, Z1=Z1, Z2=Z2, Z3=Z3, Z4=Z4, Y=Y, X=X, W=W, V=V, W1=W1, W2=W2, W3=W3, W4=W4,
                             W5=W5, U=U, T=T, S=S, T1=T1, T2=T2, T3=T3, T4=T4, T5=T5, R=R, Q=Q, O=O, M=M, N=N, M1=M1,
                             B=B, C=C)

    return stem, answer, comment

def factorization312_Stem_592():
    stem = "다음 이차방정식 중 근의 개수가 나머지 넷과 다른 하나는?\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,5)*2
        Y = np.random.randint(1,21)
        X = math.floor((Z*Z)/4)
        W = Y
        V = X+W
        S = np.random.randint(2,6)
        R = np.random.randint(1,21)
        U = S*S
        T = R*R
        Q = np.random.randint(1,10)
        P = np.random.randint(1,10)
        O = np.random.randint(2,10)
        N = np.random.randint(1,10)
        M = np.random.randint(1,101)
        L = math.floor(N*N/4)
        K = O*M
        J = L-K
        F = ""
        C = np.random.randint(1,10)
        B = np.random.randint(1,10)
        E = (C+B)*(-1)
        D = C*B
        I = 0.1
        H = -E/10
        G = -D/10
        if Q!=P and N%O==0 and N<10 and N%2 == 0 and C!=B and R%S != 0 and J<0:
            break

    s1 = "x^2`+`{%s}x`=`{%s}" % (Z,Y)
    s2 = "{%s}x^2`=`{%s}" % (U,T)
    s3 = "(x-{%s})(x-{%s})`=`0" % (Q,P)
    s4 = "{%s}x^2`+`{%s}x`+`{%s}`=`0" % (O,N,M)
    s5 = "{%s}x^2`=`{%s}x``{%s}" % (I,H,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$$x^2`+`%sx`=`{%s}에서``x^2`+`{%s}x-{%s}`=`0$$/수식$$" % (Z,Y,Z,Y) + "\n" + "b'^2`-`ac`=`{%s}`+`{%s}`=`{%s}&gt;0이므로``서로``다른``두``근을``갖는다." % (X,W,V)
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`=`{%s}에서``{%s}x^2`-`{%s}`=`0,$$/수식$$" % (U,T,U,T) + "\n" + "$$수식$$({%s}x`+`{%s})({%s}x`-`{%s})`=`0$$/수식$$ " % (S,R,S,R) + "\n" + "x`=`+-`{%s} OVER {%s}이므로``서로``다른``두``근을``갖는다." % (R,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$$(x`-`{%s})(x`-`{%s})`=`0에서$$/수식$$" % (Q,P) + "\n" + "x`=`{%s}``또는``x`=`{%s}이므로``서로``다른``두``근을``갖는다." % (Q,P)
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s}x^2`+`{%s}x`+`{%s}`=`0에서$$/수식$$" % (O,N,M) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)
            if(cnt == 0): a1 = "①"
            elif(cnt == 1): a1 ="②"
            elif(cnt == 2): a1 ="③"
            elif(cnt == 3): a1 ="④"
            else: a1 = "⑤"

        else:
            TT[cnt] = "$$수식$${%s}x^2`=`{%s}x``{%s}에서``양변에``10을``곱하면$$/수식$$" % (I,H,G) + "\n" + "$$수식$${%s}x^2``{%s}x`+`{%s}`=`0,``(x-{%s})(x-{%s})`=`0$$/수식$$" % (F,E,D,C,B) + "\n" + "x`=`{%s}`또는``x`=`{%s}이므로``서로``다른``두``근을``갖는다." % (C,B)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_593():
    stem = "다음 이차방정식 중 근이 없는 것은?\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,5)*2
        Y = np.random.randint(1,21)
        X = math.floor((Z*Z)/4)
        W = Y
        V = X+W
        S = np.random.randint(2,6)
        R = np.random.randint(1,21)
        U = S*S
        T = R*R
        Q = np.random.randint(1,10)
        P = np.random.randint(1,10)
        O = np.random.randint(2,10)
        N = np.random.randint(1,10)
        M = np.random.randint(1,101)
        L = math.floor(N*N/4)
        K = O*M
        J = L-K
        F = ""
        C = np.random.randint(1,10)
        B = np.random.randint(1,10)
        E = (C+B)*(-1)
        D = C*B
        I = 0.1
        H = -E/10
        G = -D/10
        if Q!=P and N%O==0 and N<10 and N%2 == 0 and C!=B and R%S != 0 and J < 0:
            break

    s1 = "x^2`+`{%s}x`=`{%s}" % (Z,Y)
    s2 = "{%s}x^2`=`{%s}" % (U,T)
    s3 = "(x-{%s})(x-{%s})`=`0" % (Q,P)
    s4 = "{%s}x^2`+`{%s}x`+`{%s}`=`0" % (O,N,M)
    s5 = "{%s}x^2`=`{%s}x``{%s}" % (I,H,G)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$$x^2`+`%sx`=`{%s}에서``x^2`+`{%s}x-{%s}`=`0$$/수식$$" % (Z,Y,Z,Y) + "\n" + "b'^2`-`ac`=`{%s}`+`{%s}`=`{%s}&gt;0이므로``서로``다른``두``근을``갖는다." % (X,W,V)
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`=`{%s}에서``{%s}x^2`-`{%s}`=`0,$$/수식$$" % (U,T,U,T) + "\n" + "$$수식$$({%s}x`+`{%s})({%s}x`-`{%s})`=`0$$/수식$$ " % (S,R,S,R) + "\n" + "x`=`+-`{%s} OVER {%s}이므로``서로``다른``두``근을``갖는다." % (R,S)
        elif(i==ss3):
            TT[cnt] = "$$수식$$(x`-`{%s})(x`-`{%s})`=`0에서$$/수식$$" % (Q,P) + "\n" + "x`=`{%s}``또는``x`=`{%s}이므로``서로``다른``두``근을``갖는다." % (Q,P)
        elif(i==ss4):
            TT[cnt] = "$$수식$${%s}x^2`+`{%s}x`+`{%s}`=`0에서$$/수식$$" % (O,N,M) + "\n" + "b'^2`-`ac`=`{%s}`-`{%s}`=`{%s}`&lt;`0`이므로``근이``없다." % (L,K,J)
            if(cnt == 0): a1 = "①"
            elif(cnt == 1): a1 ="②"
            elif(cnt == 2): a1 ="③"
            elif(cnt == 3): a1 ="④"
            else: a1 = "⑤"

        else:
            TT[cnt] = "$$수식$${%s}x^2`=`{%s}x``{%s}에서``양변에``10을``곱하면$$/수식$$" % (I,H,G) + "\n" + "$$수식$${%s}x^2``{%s}x`+`{%s}`=`0,``(x-{%s})(x-{%s})`=`0$$/수식$$" % (F,E,D,C,B) + "\n" + "x`=`{%s}`또는``x`=`{%s}이므로``서로``다른``두``근을``갖는다." % (C,B)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5)
    answer = answer.format(a1=a1)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)

    return stem, answer, comment

def factorization312_Stem_594():
    stem = "이차방정식 $$수식$${Z1}x^2`{t1}`{Y}x`{t2}`{X}`=`0$$/수식$$    의 근의 개수를 x, $$수식$$1 OVER {W}`x^2`{t3}`{V1}x`{t4}`{U}`=`0$$/수식$$                 의 근의 개수를 y, $$수식$${T}(x{t5}{S1})^2`=`{R}$$/수식$$      의 근의 개수를 z라 할 때, x+y+z의 값을 구하시오.\n"
    answer = "(답): {n}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "$$수식$${Z1}x^2`{t1}`{Y}x`{t2}`{X}`=`0에서$$/수식$$\n"\
              "$$수식$$b^2`-4ac`=`{Q}{t6}{P}`=`{O}이므로$$/수식$$\n"\
              "$$수식$$즉,``x`=`{k}$$/수식$$\n"\
              "$$수식$$1 OVER {W}`x^2`{t3}`{V1}x`{t4}`{U}`=`0에서``양변에``{N}을``곱하면$$/수식$$\n"\
              "$$수식$$x^2`{t3}`{M}x`{t4}`{L}`=`0$$/수식$$\n"\
              "$$수식$$b^2`-`4ac`=`{K}`{t7}`{J1}`=`{I}이므로$$/수식$$\n"\
              "$$수식$$즉,``y`=`{l}$$/수식$$\n" \
              "$$수식$${T}(x{t5}{S1})^2`=`{R}에서``양변을``{H}으로``나누면$$/수식$$\n" \
              "$$수식$$(x{t5}{S1})^2`=`{G},``x^2`{t8}`{F}x`+`{E}`{t11}{G1}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{t8}`{F}x`{t9}`{D}`=`0$$/수식$$\n"\
              "$$수식$$b^2`-`4ac`=`{C}`{t10}`{B1}`=`{A}이므로$$/수식$$\n"\
              "$$수식$$즉,``z`=`{m}$$/수식$$\n"\
              "따라서\n"\
              "$$수식$$x`+`y`+`z`=`{k}`+`{l}`+`{m}`=`{n}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        if Z == 1: Z1 = ""
        else: Z1 = Z
        Y = np.random.randint(-10,11)
        X = np.random.randint(-30,31)
        Q = Y*Y
        P = -4*Z*X
        O = Q+P
        W = np.random.randint(2,6)
        N = W
        V = np.random.randint(-5,6)
        if V==1 : V1=""
        else: V1=V
        U = np.random.randint(-10,11)
        M = V*N
        L = U*N
        K = M*M
        J = 4*L
        J1 = abs(J)
        I = K-J
        T = np.random.randint(-5,6)
        H = T
        S = np.random.randint(-10,11)
        S1 = abs(S)
        G = np.random.randint(-20,21)
        G1 = abs(G)
        R = G*H
        F = -2*S
        E = S*S
        D = E-G
        C = F*F
        B = 4*D
        B1 = abs(B)
        A = C - B

        if V!=-1 and T!=1 and T!=-1 and Y!=0 and X!=0 and V!=0 and U!=0 and T!=0 and T!=1 and H!=0 and H!=1 and S!=0 and G!=0:
            break

    if Y<0: t1=""
    else: t1="+"
    if X<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if V<0: t3="";
    else: t3="+";
    if U<0: t4=""; t7="+"
    else: t4="+"; t7="-"
    if S<0: t5="+";
    else: t5="-"
    if F<0: t8=""
    else: t8 = "+"
    if D<0: t9=""; t10 = "+"
    else: t9 = "+"; t10 = "-"
    if G<0: t11="+"
    else: t11="-"


    if O>0: k=2
    elif O==0: k=1
    else: k = 0

    if I>0: l=2
    elif I==0: l=1
    else: l = 0

    if A>0: m=2
    elif A==0: m=1
    else: m = 0

    n = k+l+m

    stem = stem.format(S1=S1,Z1=Z1,Y=Y,W=W,V1=V1, X=X, U=U,T=T,S=S,R=R, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6)
    answer = answer.format(n=n)
    comment = comment.format(G1=G1,S1=S1,H=H,Z1=Z1,Y=Y,X=X,Q=Q,P=P,O=O,k=k,N=N,M=M,L=L,K=K,J1=J1,I=I,l=l,T=T,S=S,R=R,G=G,F=F,E=E,D=D,A=A,B1=B1,C=C,m=m,n=n,V1=V1,U=U,W=W, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, t8=t8, t9=t9, t10=t10, t11=t11)

    return stem, answer, comment

def factorization312_Stem_595():
    stem = "이차방정식 $$수식$${Z1}x^2`{t1}`{Y}x`{t2}`{X}`=`0$$/수식$$    의 근의 개수를 x, $$수식$$1 OVER {W}`x^2`{t3}`{V1}x`{t4}`{U}`=`0$$/수식$$                 의 근의 개수를 y, $$수식$${T}(x{t5}{S1})^2`=`{R}$$/수식$$      의 근의 개수를 z라 할 때, xyz의 값을 구하시오.\n"
    answer = "(답): {n}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`bx`+`c`=`0``또는$$/수식$$\n" \
              "$$수식$$ax^2`+`2b'x`+`c`=`0``이라``하면$$/수식$$\n" \
              "$$수식$${Z1}x^2`{t1}`{Y}x`{t2}`{X}`=`0에서$$/수식$$\n"\
              "$$수식$$b^2`-4ac`=`{Q}{t6}{P}`=`{O}이므로$$/수식$$\n"\
              "$$수식$$즉,``x`=`{k}$$/수식$$\n"\
              "$$수식$$1 OVER {W}`x^2`{t3}`{V1}x`{t4}`{U}`=`0에서``양변에``{N}을``곱하면$$/수식$$\n"\
              "$$수식$$x^2`{t3}`{M}x`{t4}`{L}`=`0$$/수식$$\n"\
              "$$수식$$b^2`-`4ac`=`{K}`{t7}`{J1}`=`{I}이므로$$/수식$$\n"\
              "$$수식$$즉,``y`=`{l}$$/수식$$\n" \
              "$$수식$${T}(x{t5}{S1})^2`=`{R}에서``양변을``{H}으로``나누면$$/수식$$\n" \
              "$$수식$$(x{t5}{S1})^2`=`{G},``x^2`{t8}`{F}x`+`{E}`{t11}{G1}`=`0$$/수식$$\n"\
              "$$수식$$x^2`{t8}`{F}x`{t9}`{D}`=`0$$/수식$$\n"\
              "$$수식$$b^2`-`4ac`=`{C}`{t10}`{B1}`=`{A}이므로$$/수식$$\n"\
              "$$수식$$즉,``z`=`{m}$$/수식$$\n"\
              "따라서\n"\
              "$$수식$$xyz`=`{k}`TIMES`{l}`TIMES`{m}`=`{n}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(1,6)
        if Z == 1: Z1 = ""
        else: Z1 = Z
        Y = np.random.randint(-10,11)
        X = np.random.randint(-30,31)
        Q = Y*Y
        P = -4*Z*X
        O = Q+P
        W = np.random.randint(2,6)
        N = W
        V = np.random.randint(-5,6)
        if V==1 : V1=""
        else: V1=V
        U = np.random.randint(-10,11)
        M = V*N
        L = U*N
        K = M*M
        J = 4*L
        J1 = abs(J)
        I = K-J
        T = np.random.randint(-5,6)
        H = T
        S = np.random.randint(-10,11)
        S1 = abs(S)
        G = np.random.randint(-20,21)
        G1 = abs(G)
        R = G*H
        F = -2*S
        E = S*S
        D = E-G
        C = F*F
        B = 4*D
        B1 = abs(B)
        A = C - B

        if V!=-1 and T!=1 and T!=-1 and Y!=0 and X!=0 and V!=0 and U!=0 and T!=0 and T!=1 and H!=0 and H!=1 and S!=0 and G!=0:
            break

    if Y<0: t1=""
    else: t1="+"
    if X<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if V<0: t3="";
    else: t3="+";
    if U<0: t4=""; t7="+"
    else: t4="+"; t7="-"
    if S<0: t5="+";
    else: t5="-"
    if F<0: t8=""
    else: t8 = "+"
    if D<0: t9=""; t10 = "+"
    else: t9 = "+"; t10 = "-"
    if G<0: t11="+"
    else: t11="-"


    if O>0: k=2
    elif O==0: K=1
    else: k = 0

    if I>0: l=2
    elif I==0: l=1
    else: l = 0

    if A>0: m=2
    elif A==0: m=1
    else: m = 0

    n = k*l*m

    stem = stem.format(S1=S1,Z1=Z1,Y=Y,W=W,V1=V1, X=X, U=U,T=T,S=S,R=R, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6)
    answer = answer.format(n=n)
    comment = comment.format(G1=G1,S1=S1,H=H,Z1=Z1,Y=Y,X=X,Q=Q,P=P,O=O,k=k,N=N,M=M,L=L,K=K,J1=J1,I=I,l=l,T=T,S=S,R=R,G=G,F=F,E=E,D=D,A=A,B1=B1,C=C,m=m,n=n,V1=V1,U=U,W=W, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, t8=t8, t9=t9, t10=t10, t11=t11)

    return stem, answer, comment

def factorization312_Stem_596():
    stem = "이차방정식 $$수식$$x^2$$/수식$$ + Ax + B = 0의 근에 대한 설명으로 옳은 것만을 보기에서 있는 대로 고른 것은?\n" \
           "(ㄱ) $$수식$$A={Z},``B={Y}이면``{L}$$/수식$$\n" \
           "(ㄴ) $$수식$$A={ZZ},``B={YY}이면``{LL}$$/수식$$\n" \
           "(ㄷ) $$수식$$A {O}이면``{LLL}$$/수식$$\n" \
           "(ㄹ) $$수식$$B {S}이면``{LLLL}$$/수식$$\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {X1}\n"
    comment = "(ㄱ) $$수식$$x^2`{t1}`{Z}x`{t2}`{Y}`=`0이므로``({Z})^2`-`4 TIMES {Y} {N}에서``{M}.``({K})$$/수식$$\n" \
              "(ㄴ) $$수식$$x^2`{t3}`{ZZ}x`{t4}`{YY}`=`0이므로``({ZZ})^2`-`4 TIMES {YY} {NN}에서``{MM}.``({KK})$$/수식$$\n" \
              "(ㄷ) $$수식$$A^2`-`4B$$/수식$$ 에서 A의 부호와 상관없이 -4B의 값이 중요하므로 근이 없는지 알 수 없다. $$수식$$({P})$$/수식$$\n" \
              "(ㄹ) $$수식$$B {S}이면``A^2`-`4B {T}이므로``{R}.``({U})$$/수식$$\n" \
              "따라서 옳은 것은 $$수식$${X}이다.$$/수식$$"

    while(1):
        L = ["서로``다른``두``근을``갖는다","중근을``갖는다","근이``없다"][np.random.randint(0,3)]
        LL = ["서로``다른``두``근을``갖는다","중근을``갖는다","근이``없다"][np.random.randint(0,3)]
        LLL = ["서로``다른``두``근을``갖는다","중근을``갖는다","근이``없다"][np.random.randint(0,3)]
        LLLL = ["서로``다른``두``근을``갖는다","중근을``갖는다","근이``없다"][np.random.randint(0,3)]

        Z = np.random.randint(-10,11)
        Y = np.random.randint(-10,11)
        if Z*Z-Y < 0: N = "&lt;0"
        elif Z*Z-Y == 0: N = "=0"
        else: N = "&gt;0"

        if N == "&lt;0": M = "근이``없다"
        elif N == "=0": M = "중근을``갖는다"
        else: M = "서로``다른``두``근을``갖는다"

        if L == M: K = "참"
        else: K = "거짓"

        ZZ = np.random.randint(-10, 11)
        YY = np.random.randint(-10, 11)
        if ZZ * ZZ - YY < 0:
            NN = "&lt;0"
        elif ZZ * ZZ - YY == 0:
            NN = "=0"
        else:
            NN = "&gt;0"

        if NN == "&lt;0":
            MM = "근이``없다"
        elif NN == "=0":
            MM = "중근을``갖는다"
        else:
            MM = "서로``다른``두``근을``갖는다"

        if LL == MM:
            KK = "참"
        else:
            KK = "거짓"

        O = ["&lt;0","=0","&gt;0"][np.random.randint(0,3)]
        P = "거짓"

        S = ["&lt;0", "=0", "&gt;0"][np.random.randint(0, 3)]
        if S == "&lt;0": T = "&gt;0"
        elif S == "=0": T = "=0"
        else: T = "&lt;0"

        if T == "&gt;0": R = "서로``다른``두``근을``갖는다"
        elif T == "=0": R = "중근을``갖는다"
        else: R = "근이``없다"

        if LLLL==R: U = "참"
        else: U = "거짓"

        if  Z!=0 and Y!=0 and ZZ!=0 and YY!=0:
            if (K=="참" or KK=="참" or U=="참"):
                break

    if Z < 0 : t1 = ""
    else: t1 = "+"
    if Y < 0 : t2 = ""
    else: t2 = "+"
    if ZZ < 0 : t3 = ""
    else: t3 = "+"
    if YY < 0 : t4 = ""
    else: t4 = "+"

    X = []
    if K=="참":
        X.append("(ㄱ)")
    if KK=="참":
        X.append("(ㄴ)")
    if U=="참":
        X.append("(ㄹ)")


    if "(ㄱ)" in X  and X.__len__()==1:
        s1 = "(ㄱ)"
        s2 = "(ㄴ)"
        s3 = "(ㄷ)"
        s4 = "(ㄱ),(ㄴ)"
        s5 = "(ㄱ),(ㄹ)"
        X1 = "①"
    elif "(ㄴ)" in X and X.__len__()==1:
        s1 = "(ㄱ)"
        s2 = "(ㄴ)"
        s3 = "(ㄷ)"
        s4 = "(ㄱ),(ㄴ)"
        s5 = "(ㄱ),(ㄹ)"
        X1 = "②"
    elif "(ㄹ)" in X and X.__len__()==1:
        s1 = "(ㄱ)"
        s2 = "(ㄹ)"
        s3 = "(ㄱ),(ㄹ)"
        s4 = "(ㄱ),(ㄴ),(ㄷ)"
        s5 = "(ㄱ),(ㄴ),(ㄹ)"
        X1 = "②"
    elif "(ㄱ)" in X and "(ㄴ)" in X and X.__len__()==2:
        s1 = "(ㄱ)"
        s2 = "(ㄴ)"
        s3 = "(ㄱ),(ㄴ)"
        s4 = "(ㄱ),(ㄴ),(ㄹ)"
        s5 = "(ㄱ),(ㄴ),(ㄷ),(ㄹ)"
        X1 = "③"
    elif "(ㄱ)" in X and "(ㄹ)" in X and X.__len__()==2:
        s1 = "(ㄱ)"
        s2 = "(ㄹ)"
        s3 = "(ㄱ),(ㄴ)"
        s4 = "(ㄱ),(ㄹ)"
        s5 = "(ㄱ),(ㄴ),(ㄷ),(ㄹ)"
        X1 = "④"
    elif "(ㄴ)" in X and "(ㄹ)" in X and X.__len__()==2:
        s1 = "(ㄴ)"
        s2 = "(ㄹ)"
        s3 = "(ㄱ),(ㄹ)"
        s4 = "(ㄴ),(ㄹ)"
        s5 = "(ㄱ),(ㄴ),(ㄷ),(ㄹ)"
        X1 = "④"
    else:
        s1 = "(ㄱ)"
        s2 = "(ㄴ)"
        s3 = "(ㄱ),(ㄴ)"
        s4 = "(ㄱ),(ㄴ),(ㄷ)"
        s5 = "(ㄱ),(ㄴ),(ㄹ)"
        X1 = "⑤"


    X = ','.join(X)

    stem = stem.format(s1=s1,s2=s2,s3=s3,s4=s4,s5=s5,Z=Z, Y=Y, ZZ=ZZ, YY=YY, L=L, LL=LL, LLL=LLL, LLLL=LLLL, P=P, O=O, U=U,T=T,S=S)
    answer = answer.format(X1=X1)
    comment = comment.format(Z=Z, Y=Y, ZZ=ZZ, YY=YY,N=N,M=M,KK=KK,L=L,K=K,P=P,U=U,R=R,S=S, NN=NN, MM=MM, T=T, X=X,t1=t1,t2=t2,t3=t3,t4=t4)

    return stem, answer, comment

def factorization312_Stem_597():
    stem = "다음 이차방정식 중 유리수의 범위에서 해가 없는 것을 모두 고르면? (정답 2개)\n" \
           "① $$수식$${s1}$$/수식$$\n" \
           "② $$수식$${s2}$$/수식$$\n" \
           "③ $$수식$${s3}$$/수식$$\n" \
           "④ $$수식$${s4}$$/수식$$\n" \
           "⑤ $$수식$${s5}$$/수식$$\n"
    answer = "(답): {a1},{a2}\n"
    comment = "이차 방정식을 $$수식$$ax^2`+`2b'x`+`c`=`0이라``하면$$/수식$$\n" \
              "① $$수식$${t1}$$/수식$$\n" \
              "② $$수식$${t2}$$/수식$$\n" \
              "③ $$수식$${t3}$$/수식$$\n" \
              "④ $$수식$${t4}$$/수식$$\n" \
              "⑤ $$수식$${t5}$$/수식$$\n\n"

    while(1):
        U = np.random.randint(2,4)
        S = np.random.randint(2,4)
        m = np.random.randint(2,4)
        p = np.random.randint(2,4)

        T = np.random.randint(-9,10)
        R = np.random.randint(-9,10)
        n = np.random.randint(-9,10)
        q = np.random.randint(-9,10)

        Z = U*S
        if Z==1: Z1=""
        else: Z1=Z
        W = -U*R-T*S
        V = T*R
        Y = math.floor(-W/(2*Z))
        X = -V + Z*(Y*Y)

        N = np.random.randint(1,10)
        O = np.random.randint(-9,10)
        P = O*O
        Q = N*N
        if Q==1: Q1=""
        else: Q1=Q
        H = np.random.randint(1,10)
        G = [2,3,5,6,7,10][np.random.randint(0,6)]
        K = np.random.randint(-9,10)
        J = K*K
        I = H*H*G-J
        M = -2*K
        L = -I
        F = np.random.randint(-9,9)
        D = math.floor(F*F/4)
        E = np.random.randint(1,51)
        C = E
        B = D-C
        A = m*p
        if A==1: A1=""
        else: A1=A
        k = -m*q-n*p
        l = n*q

        if gcd(U,T)==1 and gcd(S,R)==1 and gcd(m,n)==1 and gcd(p,q)==1 and -W%2*Z==0 and F*F%4==0:
            if abs(O)<N and gcd(O,N)==1 and F%2==0 and F!=0 and X!=0 and (T!=R) and M!=0 and L!=0 and E!=0:
                break

    if M<0: j1 = ""
    else: j1 = "+"
    if L<0: j2 = ""
    else: j2 = "+"
    if F<0: j3 = ""
    else: j3 = "+"
    if E<0: j4 = ""
    else: j4 = "+"
    if k<0: j5 = ""
    else: j5 = "+"
    if l<0: j6 = ""
    else: j6 = "+"

    s1 = "{%s}(x-{%s})^2`=`{%s}" % (Z1,Y,X)
    s2 = "{%s}x^2`-`{%s}`=`0" % (Q1,P)
    s3 = "x^2`{%s}`{%s}x`{%s}`{%s}`=`0" % (j1,M,j2,L)
    s4 = "x^2`{%s}`{%s}x`{%s}`{%s}`=`0" % (j3,F,j4,E)
    s5 = "{%s}x^2`{%s}`{%s}x`{%s}`{%s}`=`0" % (A1,j5,k,j6,l)

    ss1 = s1
    ss2 = s2
    ss3 = s3
    ss4 = s4
    ss5 = s5

    NN = [s1, s2, s3, s4, s5]
    np.random.shuffle(NN)
    s1, s2, s3, s4, s5 = NN

    a1=""
    a2=""
    TT = ["","","","",""]
    cnt = 0
    for i in NN:
        if(i == ss1):
            TT[cnt] = "$$수식$${%s}(x-{%s})^2`=`{%s}에서``{%s}x^2``{%s}x`+`{%s}`=`0$$/수식$$" % (Z1,Y,X,Z1,W,V) + "\n" + "$$수식$$({%s}x`-`{%s})({%s}x`-`{%s})`=`0$$/수식$$" % (U,T,S,R) + "\n" + "x`=`{%s} OVER {%s}``또는``x`=`{%s} OVER {%s}" % (T,U,R,S)
        elif(i == ss2):
            TT[cnt] = "$$수식$${%s}x^2`-`{%s}`=`0에서``{%s}x^2`=`{%s}$$/수식$$" % (Q1,P,Q1,P) + "\n" + "x^2`=`{%s} OVER {%s},``x`=`+-`{%s} OVER {%s}" % (P,Q1,O,N)
        elif(i==ss3):
            TT[cnt] = "$$수식$$x^2`{%s}`{%s}x`{%s}`{%s}`=`0에서$$/수식$$" % (j1,M,j2,L) + "\n" + "x`=`{%s}`+-`sqrt{{%s}`+`{%s}}`=`{%s}`+-{%s}`sqrt{%s}이므로``해는``무리수이다." % (K,J,I,K,H,G)
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"
        elif(i==ss4):
            TT[cnt] = "$$수식$$x^2`{%s}`{%s}x`{%s}`{%s}`=`0에서$$/수식$$" % (j3,F,j4,E) +"\n"+"b'^2`-`ac`=`{%s}`-`{%s}`=`{%s} &lt; 0이므로``근이``없다." % (D,C,B)
            if (cnt == 0):
                a2 = "①"
            elif (cnt == 1):
                a2 = "②"
            elif (cnt == 2):
                a2 = "③"
            elif (cnt == 3):
                a2 = "④"
            else:
                a2 = "⑤"
        else:
            TT[cnt] = "$$수식$${%s}x^2`{%s}`{%s}x`{%s}`{%s}`=`0에서$$/수식$$" % (A1,j5,k,j6,l) + "\n" + "({%s}x-{%s})({%s}x-{%s})`=`0````x`=`{%s} OVER {%s}``또는``x`=`{%s} OVER {%s}" % (m,n,p,q,n,m,q,p)
        cnt = cnt+1

    t1, t2, t3, t4, t5 = TT

    if(a1=="②" and a2 == "①") or (a1 == "③" and a2 == "②") or (a1 == "③" and a2 == "①") or (a1 == "④" and a2 != "⑤") or (a1 == "⑤" and a2 != "⑤"):
        temp = a1
        a1 = a2
        a2 = temp


    stem = stem.format(s1=s1, s2=s2, s3=s3, s4=s4, s5=s5, j1=j1, j2=j2, j3=j3, j4=j4, j5=j5, j6=j6)
    answer = answer.format(a1=a1,a2=a2)
    comment = comment.format(t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, j1=j1, j2=j2, j3=j3, j4=j4, j5=j5, j6=j6)

    return stem, answer, comment

def factorization312_Stem_598():
    stem = "이차방정식 $$수식$$x^2`{j1}{Z}kx``{j2}{Y}k`{j3}{X}`=`0이``중근을``갖도록``하는``모든``상수``k의``값들의``곱은?$$/수식$$\n" \
           "① $$수식$${q1}$$/수식$$\n" \
           "② $$수식$${q2}$$/수식$$\n" \
           "③ $$수식$${q3}$$/수식$$\n" \
           "④ $$수식$${q4}$$/수식$$\n" \
           "⑤ $$수식$${q5}$$/수식$$\n"
    answer = "(답): {answer}\n"
    comment = "$$수식$$x^2`{j1}{Z}kx``{j2}{Y}k`{j3}{X}`=`0에서$$/수식$$\n" \
              "$$수식$$({Z}k)^2`-`4 TIMES ({Y}k`{j3}{X})`=`0이므로$$/수식$$\n" \
              "$$수식$${A}k^2`-`4 TIMES {Y}k`-`4 TIMES {X} `=`0,````{Z} TIMES ({Z}k+{P})(k+{N})`=`0$$/수식$$\n" \
              "$$수식$$k`=`-`{P} OVER {Z}``또는``k`=`-`{N}$$/수식$$\n" \
              "따라서 모든 상수 k의 값들의 곱은\n" \
              "$$수식$$-`{P} OVER {Z} TIMES -`{N}`=`{C} OVER {Z}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(-10,11)
        P = np.random.randint(-10,11)
        N = np.random.randint(-10,11)

        X = math.floor(P*N*Z/-4)
        Y = math.floor(Z*(P+N*Z)/-4)
        C = P*N
        W = "{%s} OVER {%s}" % (C,Z)
        A = Z*Z


        if Z!=0 and P!=0 and N!=0 and gcd(Z,P)==1 and P*N*Z%-4 == 0 and Z*(P+N*Z)%-4==0 and gcd(C,Z) == 1:
            if Y!=1 and Y!= -1 and Z!=1 and Z!=-1:
                break

    if Z<0: j1 = ""
    else: j1 = "+"
    if Y<0: j2 = ""
    else: j2 = "+"
    if X<0: j3 = ""
    else: j3 = "+"

    sol = np.random.randint(0, 5)

    if (sol == 0):
        q1 = "{%s} OVER {%s}" % (abs(C),Z)
        if C<0: q1 = "-" + q1
        q2 = "{%s} OVER {%s}" % (abs(C+Z),Z)
        if C+Z<0: q2 = "-" + q2
        q3 = "{%s} OVER {%s}" % (abs(C+2*Z),Z)
        if C+2*Z<0: q3 = "-" + q3
        q4 = "{%s} OVER {%s}" % (abs(C+3*Z),Z)
        if C+3*Z<0: q4 = "-" + q4
        q5 = "{%s} OVER {%s}" % (abs(C+4*Z),Z)
        if C + 4 * Z < 0: q5 = "-" + q5
        answer = "①"
    elif (sol == 1):
        q1 = "{%s} OVER {%s}" % (abs(C-Z), Z)
        if C-Z<0: q1 = "-" + q1
        q2 = "{%s} OVER {%s}" % (abs(C), Z)
        if C < 0: q2 = "-" + q2
        q3 = "{%s} OVER {%s}" % (abs(C+Z),Z)
        if C+Z<0: q3 = "-" + q3
        q4 = "{%s} OVER {%s}" % (abs(C+2*Z),Z)
        if C+2*Z<0: q4 = "-" + q4
        q5 = "{%s} OVER {%s}" % (abs(C+3*Z),Z)
        if C+3*Z<0: q5 = "-" + q5
        answer = "②"
    elif (sol == 2):
        q1 = "{%s} OVER {%s}" % (abs(C - Z*2), Z)
        if C-Z*2 < 0: q1 = "-" + q1
        q2 = "{%s} OVER {%s}" % (abs(C - Z), Z)
        if C - Z < 0: q2 = "-" + q2
        q3 = "{%s} OVER {%s}" % (abs(C), Z)
        if C < 0: q3 = "-" + q3
        q4 = "{%s} OVER {%s}" % (abs(C + Z), Z)
        if C + Z < 0: q4 = "-" + q4
        q5 = "{%s} OVER {%s}" % (abs(C + 2 * Z), Z)
        if C + 2 * Z < 0: q5 = "-" + q5
        answer = "③"
    elif (sol == 3):
        q1 = "{%s} OVER {%s}" % (abs(C - Z * 3), Z)
        if C-Z*3 < 0: q1 = "-" + q1
        q2 = "{%s} OVER {%s}" % (abs(C - Z * 2), Z)
        if C - Z * 2 < 0: q2 = "-" + q2
        q3 = "{%s} OVER {%s}" % (abs(C - Z), Z)
        if C - Z < 0: q3 = "-" + q3
        q4 = "{%s} OVER {%s}" % (abs(C), Z)
        if C < 0: q4 = "-" + q4
        q5 = "{%s} OVER {%s}" % (abs(C + Z), Z)
        if C + Z < 0: q5 = "-" + q5
        answer = "④"
    else:
        q1 = "{%s} OVER {%s}" % (abs(C - Z * 4), Z)
        if C-Z*4 < 0: q1 = "-" + q1
        q2 = "{%s} OVER {%s}" % (abs(C - Z * 3), Z)
        if C - Z * 3 < 0: q2 = "-" + q2
        q3 = "{%s} OVER {%s}" % (abs(C - Z * 2), Z)
        if C - Z * 2 < 0: q3 = "-" + q3
        q4 = "{%s} OVER {%s}" % (abs(C - Z), Z)
        if C - Z < 0: q4 = "-" + q4
        q5 = "{%s} OVER {%s}" % (abs(C), Z)
        if C < 0: q5 = "-" + q5
        answer = "⑤"

    stem = stem.format(q1=q1, q2=q2, q3=q3, q4=q4, q5=q5, j1=j1, j2=j2, j3=j3,Z=Z,Y=Y,X=X)
    answer = answer.format(answer=answer)
    comment = comment.format(Z=Z,Y=Y,X=X, j1=j1, j2=j2, j3=j3, A=A,P=P,C=C, N=N)

    return stem, answer, comment

def factorization312_Stem_599():
    stem = "이차방정식 $$수식$$x^2`+(a{j1}{Z})x`{j2}{Y1}a`{j3}{X}`=`0$$/수식$$        이 중근을 갖도록 하는 모든 상수 a의 값을 모두 고르면? (정답 2개)\n" \
           "① $$수식$${q1}$$/수식$$\n" \
           "② $$수식$${q2}$$/수식$$\n" \
           "③ $$수식$${q3}$$/수식$$\n" \
           "④ $$수식$${q4}$$/수식$$\n" \
           "⑤ $$수식$${q5}$$/수식$$\n"
    answer = "(답): {a1},{a2}\n"
    comment = "$$수식$$x^2`+(a{j1}{Z})x`{j2}{Y1}a`{j3}{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$(a{j1}{Z})^2`-`4 TIMES 1 TIMES ({Y1}a`{j3}{X})`=`0$$/수식$$\n" \
              "$$수식$$a^2`{j1}`{A}a`+`{B}-{C}a-{D}`=`0$$/수식$$\n" \
              "$$수식$$a^2`+`({A}-{C})a`+`{B}`-`{D}`=`0,````(a{j4}{Q1})(a{j5}{R1})`=`0$$/수식$$\n" \
              "$$수식$$a`=`{Q}``또는``a`=`{R}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(-5,6)
        Y = np.random.randint(-5,6)
        if Y == 1: Y1=""
        elif Y==-1: Y1="-"
        else: Y1=Y
        X = np.random.randint(-5,6)

        Q = np.random.randint(-10,11)
        R = np.random.randint(-10,11)

        A = 2*Z
        B = Z*Z
        C = 4*Y
        D= 4*X

        if Z!=0 and Y!=0 and X!=0 and gcd(Y,X)==1 and Q!=0 and R!=0 and Q+R == -1 * (2*Z-4*Y) and Q*R == Z*Z - 4*X and Q+2!=R-1 and Q+2!=R+3 and Q-2!=R-1 and Q-2!=R+3:
            break

    if Z<0: j1 = ""
    else: j1 = "+"
    if Y<0: j2 = ""
    else: j2 = "+"
    if X<0: j3 = ""
    else: j3 = "+"
    if Q<0: j4 = "+"; Q1 = abs(Q)
    else: j4 = "-"; Q1= Q
    if R<0: j5 = "+"; R1 = abs(R)
    else: j5 = "-"; R1= R


    sol = np.random.randint(0, 5)

    T1 = [Q-2,Q+2,R-1,R+3,Q*R]
    T4 = random.sample(T1,3)
    T3 = [Q,R]
    T3 = T3+T4
    T3.sort()
    T2 = T3
    q1,q2,q3,q4,q5 = T2


    if(Q>R): qq=R; rr=Q
    else: qq=Q; rr=R
    cnt = 0
    for i in T2:
        if T2[cnt]== qq:
            if (cnt == 0):
                a1 = "①"
            elif (cnt == 1):
                a1 = "②"
            elif (cnt == 2):
                a1 = "③"
            elif (cnt == 3):
                a1 = "④"
            else:
                a1 = "⑤"
        if T2[cnt] == rr:
            if (cnt == 0):
                a2 = "①"
            elif (cnt == 1):
                a2 = "②"
            elif (cnt == 2):
                a2 = "③"
            elif (cnt == 3):
                a2 = "④"
            else:
                a2 = "⑤"
        cnt = cnt+1

    stem = stem.format(q1=q1, q2=q2, q3=q3, q4=q4, q5=q5, j1=j1, j2=j2, j3=j3,Z=Z,Y1=Y1,X=X)
    answer = answer.format(a1=a1,a2=a2)
    comment = comment.format(Z=Z,Y1=Y1,X=X, j1=j1, j2=j2, j3=j3, A=A,B=B,C=C,D=D,Q=Q,R=R, j4=j4, j5=j5, Q1=Q1, R1=R1)

    return stem, answer, comment


def factorization312_Stem_600():
    stem = "이차방정식 $$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0$$/수식$$     이 중근 x = a를 가질 때, k + a의 값을 구하시오. (단, k는 상수)\n"
    answer = "(답): {W}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$({Z})^2`-`4 TIMES 1 TIMES ({Y}k`{t3}`{X})`=`0$$/수식$$\n" \
              "$$수식$${ZZ}`{t6}`{A}k`{t7}`{B}`=`0,``k`=`{V}$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0에``k`=`{V}를``대입하면$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y} TIMES {V}`{t3}`{X}`=`0$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`+`{E}`=`0,``(x-{U})^2`=`0$$/수식$$\n" \
              "$$수식$$x`=`{U}(중근)``이므로``a`=`{U}$$/수식$$\n" \
              "$$수식$$따라서$$/수식$$\n" \
              "$$수식$$k`+`a`=`{V}`+`{U}`=`{W}$$/수식$$\n\n"

    while(1):
        U = np.random.randint(1,6)
        Z = -2*U
        Y = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        W = np.random.randint(-10,11)
        V = np.random.randint(-5,6)

        A = -4*Y
        B = -4*X
        ZZ = Z*Z
        if A!=0: V = math.floor((ZZ+B)/-A)
        else: V = 1
        E = U*U

        W = V + U

        if X!=0 and Y!=0 and V!=0 and fractions.gcd(abs(Y),abs(X)):
            if(ZZ+B)%A == 0 and Y!= 1 and Y!= -1 and W >= -10 and W <= 10:
                break

    if Z<0: t1=""
    else: t1="+"
    if Y<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if X<0: t3=""; t7="+"
    else: t3="+"; t7=""
    if V<0: t4=""
    else: t4="+"
    if W<0: t5=""
    else: t5="+"

    stem = stem.format(Z=Z,Y=Y,W=W,V=V, X=X, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)
    answer = answer.format(W=W)
    comment = comment.format(Z=Z,Y=Y,X=X,ZZ=ZZ,A=A,B=B,V=V,E=E,U=U,W=W, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7)

    return stem, answer, comment

def factorization312_Stem_601():
    stem = "이차방정식 $$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0$$/수식$$     이 중근 x = a를 가질 때, 4k - a의 값을 구하시오. (단, k는 상수)\n"
    answer = "(답): {W}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$${Z1}^2`-`4 TIMES 1 TIMES ({Y}k`{t3}`{X})`=`0$$/수식$$\n" \
              "$$수식$${ZZ}`{t6}`{A}k`{t7}`{B}`=`0,``k`=`{V}$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}k`{t3}`{X}`=`0에``k`=`{V}를``대입하면$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y} TIMES {V1}`{t3}`{X}`=`0$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`+`{E}`=`0,``(x-{U})^2`=`0$$/수식$$\n" \
              "$$수식$$x`=`{U}(중근)``이므로``a`=`{U}$$/수식$$\n" \
              "$$수식$$따라서$$/수식$$\n" \
              "$$수식$$4k`-`a`=`4 TIMES {V1}`-`{U}`=`{W}$$/수식$$\n\n"

    while(1):
        U = np.random.randint(1,6)
        Z = -2*U
        Y = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        W = np.random.randint(-10,11)
        V = np.random.randint(-5,6)

        A = -4*Y
        B = -4*X
        ZZ = Z*Z
        if A!=0: V = math.floor((ZZ+B)/-A)
        else: V = 1
        E = U*U

        W = 4*V - U

        if X!=0 and Y!=0 and V!=0 and fractions.gcd(abs(Y),abs(X)):
            if(ZZ+B)%A == 0 and Y!= 1 and Y!= -1 and W >= -10 and W <= 10:
                break

    if Z<0: t1=""
    else: t1="+"
    if Y<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if X<0: t3=""; t7="+"
    else: t3="+"; t7=""
    if V<0: t4=""
    else: t4="+"
    if W<0: t5=""
    else: t5="+"

    if V < 0:
        V1 = "(" + str(V) + ")"
    else: V1 = V
    if Z < 0:
        Z1 = "(" + str(Z) + ")"
    else: Z1 = Z

    stem = stem.format(Z=Z,Y=Y,W=W,V=V, X=X, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)
    answer = answer.format(W=W)
    comment = comment.format(Z=Z,Y=Y,X=X,ZZ=ZZ,A=A,B=B,V=V,E=E,U=U,W=W, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, V1=V1, Z1=Z1)

    return stem, answer, comment

def factorization312_Stem_602():
    stem = "다음 두 이차방정식 $$수식$$x^2`{t1}`{Z}x`{t2}`{Y}m`{t3}`{X}`=`0,$$/수식$$\n$$수식$$x^2`+`(m{t5}{W})x`{t4}`{V}m`+`n`=`0$$/수식$$          이 모두 중근을 가질 때, 상수 m, n에 대하여 m - n의 값을 구하시오.\n"
    answer = "(답): {U}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}m`{t3}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$${Z1}^2`-`4 TIMES 1 TIMES ({Y}m`{t3}`{X})`=`0$$/수식$$\n" \
              "$$수식$${ZZ}`{t6}`{A}m`{t7}`{B}`=`0,``m`=`{T}$$/수식$$\n" \
              "$$수식$$x^2`+`(m{t5}{W})x`{t4}`{V}m`+`n`=`0에``m`=`{T}를``대입하면$$/수식$$\n" \
              "$$수식$$x^2`+`({T}{t5}{W})x`{t4}`{V} TIMES {T}`+`n`=`0이고``이``이차방정식도``중근을``가지므로$$/수식$$\n" \
              "$$수식$${Q1}^2`-`4 TIMES 1 TIMES ({J}`+`n)`=`0$$/수식$$\n" \
              "$$수식$${C}`+`{D}`-4n`=`0,``n`=`{S}$$/수식$$\n" \
              "$$수식$$따라서$$/수식$$\n" \
              "$$수식$$m`-`n`=`{T} - {S1}`=`{U}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(-5,6)*2
        Y = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        W = np.random.randint(-5,6)
        V = np.random.randint(-5,6)

        A = -4*Y
        B = -4*X
        ZZ = Z*Z
        if A!=0: T = math.floor((ZZ+B)/-A)
        else: T = 1
        D = -4 * V * T
        CC = (T + W)
        C = CC*CC
        S = math.floor((C+D)/4)
        J = V*T
        Q = T+W

        U = T-S
        if(Z!=0 and T+W>= -10 and T+W <=10 and (T+W)%2 == 0 and Y!=0 and X!=0 and V!=0 and W!=0 and U!=0 and fractions.gcd(abs(Y),abs(X))==1):
            if(ZZ+B)%A == 0 and (C+D)%4==0 and Y!= 1 and Y!= -1 and V!=1 and V!=-1:
                break

    if Z<0: t1=""; Z1 = "(" + str(Z) + ")"
    else: t1="+"; Z1 = Z
    if Y<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if X<0: t3=""; t7="+"
    else: t3="+"; t7=""
    if V<0: t4=""
    else: t4="+"
    if W<0: t5=""
    else: t5="+"

    if Q<0: Q1 = "(" + str(Q) + ")"
    else: Q1=Q
    if S<0: S1 = "(" + str(S) + ")"
    else: S1 = S

    stem = stem.format(Z=Z,Y=Y,W=W,V=V, X=X, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)
    answer = answer.format(U=U)
    comment = comment.format(Z=Z,Y=Y,X=X,ZZ=ZZ,A=A,B=B,T=T,W=W,V=V,C=C,D=D,S=S,U=U, J=J, Q=Q, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, S1=S1, Z1=Z1, Q1=Q1)

    return stem, answer, comment

def factorization312_Stem_603():
    stem = "다음 두 이차방정식 $$수식$$x^2`{t1}`{Z}x`{t2}`{Y}m`{t3}`{X}`=`0,$$/수식$$\n$$수식$$x^2`+`(m{t5}{W})x`{t4}`{V}m`+`n`=`0$$/수식$$          이 모두 중근을 가질 때, 상수 m, n에 대하여 mn의 값을 구하시오.\n"
    answer = "(답): {U}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`{t2}`{Y}m`{t3}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$({Z})^2`-`4 TIMES 1 TIMES ({Y}m`{t3}`{X})`=`0$$/수식$$\n" \
              "$$수식$${ZZ}`{t6}`{A}m`{t7}`{B}`=`0,``m`=`{T}$$/수식$$\n" \
              "$$수식$$x^2`+`(m{t5}{W})x`{t4}`{V}m`+`n`=`0에``m`=`{T}를``대입하면$$/수식$$\n" \
              "$$수식$$x^2`+`({T}{t5}{W})x`{t4}`{V} TIMES {T}`+`n`=`0이고``이``이차방정식도``중근을``가지므로$$/수식$$\n" \
              "$$수식$$({Q})^2`-`4 TIMES 1 TIMES ({J}`+`n)`=`0$$/수식$$\n" \
              "$$수식$${C}`+`{D}`-4n`=`0,``n`=`{S}$$/수식$$\n" \
              "$$수식$$따라서$$/수식$$\n" \
              "$$수식$$mn`=`{T} TIMES {S}`=`{U}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(-5,6)*2
        Y = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        W = np.random.randint(-5,6)
        V = np.random.randint(-5,6)

        A = -4*Y
        B = -4*X
        ZZ = Z*Z
        if A!=0: T = math.floor((ZZ+B)/-A)
        else: T = 1
        D = -4 * V * T
        CC = (T + W)
        C = CC*CC
        S = math.floor((C+D)/4)
        J = V*T
        Q = T+W

        U = T*S
        if(Z!=0 and T+W>= -10 and T+W <=10 and (T+W)%2 == 0 and Y!=0 and X!=0 and V!=0 and W!=0 and U!=0 and fractions.gcd(abs(Y),abs(X))==1):
            if(ZZ+B)%A == 0 and (C+D)%4==0 and Y!= 1 and Y!= -1 and V!=1 and V!=-1:
                break

    if Z<0: t1=""
    else: t1="+"
    if Y<0: t2=""; t6="+"
    else: t2="+"; t6=""
    if X<0: t3=""; t7="+"
    else: t3="+"; t7=""
    if V<0: t4=""
    else: t4="+"
    if W<0: t5=""
    else: t5="+"

    stem = stem.format(Z=Z,Y=Y,W=W,V=V, X=X, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5)
    answer = answer.format(U=U)
    comment = comment.format(Z=Z,Y=Y,X=X,ZZ=ZZ,A=A,B=B,T=T,W=W,V=V,C=C,D=D,S=S,U=U, J=J, Q=Q, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7)

    return stem, answer, comment

def factorization312_Stem_604():
    stem = "이차방정식 $$수식$${Z}x^2`+`ax`+`{Y}`=`0$$/수식$$    이 음수인 중근을 가질 때, 상수 a의 값을 구하시오.\n"
    answer = "(답): {A}\n"
    comment = "$$수식$${Z}x^2`+`ax`+`{Y}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$a^2`-`4 TIMES {Z} TIMES {Y}`=`0,``a^2`=`{T},``a`=`+-{A}$$/수식$$\n" \
              "$$수식$${Z}x^2`+`ax`+`{Y}`=`0에``a`=`{A}를``대입하면$$/수식$$\n" \
              "$$수식$${Z}x^2`+`{A}x`+`{Y}`=`0,``x^2`+`{W}x`+`{V}`=`0$$/수식$$\n" \
              "$$수식$$(x`+`{U})^2`=`0,``x`=`-{U}(중근)$$/수식$$\n" \
              "$$수식$${Z}x^2`+`ax`+`{Y}`=`0에``a`=`-`{A}를``대입하면$$/수식$$\n" \
              "$$수식$${Z}x^2`-`{A}x`+`{Y}`=`0,``x^2`-`{W}x`+`{V}`=`0$$/수식$$\n" \
              "$$수식$$(x`-`{U})^2`=`0,``x`=`{U}(중근)$$/수식$$\n" \
              "따라서 이차방정식 $$수식$${Z}x^2`+`ax`+`{Y}`=`0$$/수식$$    이 음수인 중근을 가지는 경우는 a = $$수식$${A}$$/수식$$ 이다.\n\n"

    U = np.random.randint(1,10)
    W = 2*U
    V = U*U
    Z = np.random.randint(2,6)
    Y = V*Z
    A = Z*W
    T = 4*Z*Y

    stem = stem.format(Z=Z,Y=Y)
    answer = answer.format(A=A)
    comment = comment.format(Z=Z, Y=Y, A=A, W=W, V=V, U=U, T=T)

    return stem, answer, comment

def factorization312_Stem_605():
    stem = "이차방정식 $$수식$${Z}x^2`+`ax`+`{Y}`=`0$$/수식$$    이 양수인 중근을 가질 때, 상수 a의 값을 구하시오.\n"
    answer = "(답): -{A}\n"
    comment = "$$수식$${Z}x^2`+`ax`+`{Y}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$a^2`-`4 TIMES {Z} TIMES {Y}`=`0,``a^2`=`{T},``a`=`+-{A}$$/수식$$\n" \
              "$$수식$${Z}x^2`+`ax`+`{Y}`=`0에``a`=`{A}를``대입하면$$/수식$$\n" \
              "$$수식$${Z}x^2`+`{A}x`+`{Y}`=`0,``x^2`+`{W}x`+`{V}`=`0$$/수식$$\n" \
              "$$수식$$(x`+`{U})^2`=`0,``x`=`-{U}(중근)$$/수식$$\n" \
              "$$수식$${Z}x^2`+`ax`+`{Y}`=`0에``a`=`-`{A}를``대입하면$$/수식$$\n" \
              "$$수식$${Z}x^2`-`{A}x`+`{Y}`=`0,``x^2`-`{W}x`+`{V}`=`0$$/수식$$\n" \
              "$$수식$$(x`-`{U})^2`=`0,``x`=`{U}(중근)$$/수식$$\n" \
              "따라서 이차방정식 $$수식$${Z}x^2`+`ax`+`{Y}`=`0$$/수식$$    이 양수인 중근을 가지는 경우는 a = $$수식$$-{A}$$/수식$$ 이다.\n\n"

    U = np.random.randint(1,10)
    W = 2*U
    V = U*U
    Z = np.random.randint(2,6)
    Y = V*Z
    A = Z*W
    T = 4*Z*Y

    stem = stem.format(Z=Z,Y=Y)
    answer = answer.format(A=A)
    comment = comment.format(Z=Z, Y=Y, A=A, W=W, V=V, U=U, T=T)

    return stem, answer, comment

def factorization312_Stem_606():
    stem = "이차방정식 $$수식$$(k{t1}{Z})x^2`+`(k{t1}{Y})x`{t9}`{X}`=`0$$/수식$$          이 중근을 가질 때, 상수 k의 값을 구하시오.(단, k≠$$수식$${W}$$/수식$$) \n"
    answer = "(답): {U}\n"
    comment = "$$수식$$(k{t1}{Z})x^2`+`(k{t1}{Y})x`{t9}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$(k{t1}{Y})^2`-`4 TIMES (k{t1}{Z}) TIMES {X}`=`0$$/수식$$\n" \
              "$$수식$$k^2`{t2}`{A}k`+`{B}`{t5}`{C}k`{t6}`{D}`=`0$$/수식$$\n" \
              "$$수식$$k^2`{t7}`{E}k`{t8}`{F}`=`0,``(k{t3}{WW})(k{t4}{UU})`=`0$$/수식$$\n" \
              "$$수식$$k`=`{W}``또는``k`=`{U}$$/수식$$\n" \
              "$$수식$$이때``k≠{W}이므로``k`=`{U}$$/수식$$\n\n"

    while(1):
        W = np.random.randint(-5,6)
        U = np.random.randint(-5,6)
        Z = np.random.randint(-10,11)
        X = np.random.randint(-10,11)
        Y = np.random.randint(-10,11)
        A = 2*Y
        B = Y*Y
        C = -4*X
        D = -4*Z*X
        E = A+C
        F = B+D
        if(Z==Y and W!=0 and U!=0 and F == W*U and E == -W-U and Z!=0 and X!=0 and Y!=0 and W == -Z):
            break


    if Z <0 : t1 = ""
    else: t1 = "+"
    if A<0: t2 = ""
    else: t2 = "+"
    if W>0: t3="-"; WW = W
    else: t3 = "+"; WW = W*(-1)
    if U>0: t4="-"; UU = U
    else: t4 = "+"; UU = U*(-1)
    if C < 0: t5 = ""
    else: t5 = "+"
    if D < 0: t6 = ""
    else: t6 = "+"
    if E < 0: t7 = ""
    else: t7 = "+"
    if F < 0: t8 = ""
    else: t8 = "+"
    if X < 0: t9 = ""
    else: t9 = "+"

    stem = stem.format(Z=Z,Y=Y,X=X, W=W, t1=t1, t9=t9)
    answer = answer.format(U=U)
    comment = comment.format(Z=Z, Y=Y, X=X, A=A, B=B, C=C, D=D, E=E, F=F, W=W, U=U, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, t8=t8, t9=t9, WW=WW, UU=UU)

    return stem, answer, comment

def factorization312_Stem_607():
    stem = "이차방정식 $$수식$$(k{t1}{Z})x^2`+`(k{t1}{Y})x`{t9}`{X}`=`0$$/수식$$          이 중근을 가질 때, 상수 k에 대하여 $$수식$$k^2$$/수식$$의 값을 구하시오.(단, k≠$$수식$${W}$$/수식$$) \n"
    answer = "(답): {G}\n"
    comment = "$$수식$$(k{t1}{Z})x^2`+`(k{t1}{Y})x`{t9}`{X}`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$$(k{t1}{Y})^2`-`4 TIMES (k{t1}{Z}) TIMES {X}`=`0$$/수식$$\n" \
              "$$수식$$k^2`{t2}`{A}k`+`{B}`{t5}`{C}k`{t6}`{D}`=`0$$/수식$$\n" \
              "$$수식$$k^2`{t7}`{E}k`{t8}`{F}`=`0,``(k{t3}{WW})(k{t4}{UU})`=`0$$/수식$$\n" \
              "$$수식$$k`=`{W}``또는``k`=`{U}$$/수식$$\n" \
              "$$수식$$이때``k≠{W}이므로``k`=`{U}에서$$/수식$$\n" \
              "$$수식$$k^2`=`{G}$$/수식$$\n"

    while(1):
        W = np.random.randint(-5,6)
        U = np.random.randint(-5,6)
        Z = np.random.randint(-10,11)
        X = np.random.randint(-10,11)
        Y = np.random.randint(-10,11)
        A = 2*Y
        B = Y*Y
        C = -4*X
        D = -4*Z*X
        E = A+C
        F = B+D
        G = U*U
        if(Z==Y and W!=0 and U!=0 and F == W*U and E == -W-U and Z!=0 and X!=0 and Y!=0 and W == -Z):
            break


    if Z <0 : t1 = ""
    else: t1 = "+"
    if A<0: t2 = ""
    else: t2 = "+"
    if W>0: t3="-"; WW = W
    else: t3 = "+"; WW = W*(-1)
    if U>0: t4="-"; UU = U
    else: t4 = "+"; UU = U*(-1)
    if C < 0: t5 = ""
    else: t5 = "+"
    if D < 0: t6 = ""
    else: t6 = "+"
    if E < 0: t7 = ""
    else: t7 = "+"
    if F < 0: t8 = ""
    else: t8 = "+"
    if X < 0: t9 = ""
    else: t9 = "+"

    stem = stem.format(Z=Z,Y=Y,X=X, W=W, t1=t1, t9=t9)
    answer = answer.format(G=G)
    comment = comment.format(Z=Z, Y=Y, X=X, A=A, B=B, C=C, D=D, E=E, F=F, W=W, U=U, t1=t1, t2=t2, t3=t3, t4=t4, t5=t5, t6=t6, t7=t7, t8=t8, t9=t9, WW=WW, UU=UU, G=G)

    return stem, answer, comment

def factorization312_Stem_608():
    stem = "두 이차방정식 $$수식$$x^2`{t1}`{Z}x`-p`=`0,$$/수식$$\n" \
           "$$수식$$x^2`+`({Y}{t4}{X}p)x`+`q`=`0$$/수식$$       이 모두 중근을 가질 때, 상수 p, q에 대하여 p+q의 값을 구하시오.\n"
    answer = "(답): {W}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`-`p`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$${Z1}^2`-`4 TIMES 1 TIMES (-p)`=`0$$/수식$$\n" \
              "$$수식$${A}`+`4p`=`0이므로``p`=`{V}$$/수식$$\n" \
              "$$수식$$x^2`+`({Y}{t4}{X}p)x`+`q`=`0에``p`=`{V}을``대입하면$$/수식$$\n" \
              "$$수식$$x^2`+`({Y}{t2}{C})x`+`q`=`0이고$$/수식$$\n" \
              "이 이차방정식도 중근을 가지므로\n" \
              "$$수식$${B}^2`-`4 TIMES 1 TIMES q `=`0$$/수식$$\n" \
              "$$수식$${E}`-4q`=`0,``q`=`{U}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$p+q`=`{V}+{U}`=`{W}$$/수식$$\n"

    while(1):
        Z = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        Y = np.random.randint(-5,6)
        if (X < 0): XX = -X
        else: XX = X
        if (Y < 0): YY = -Y
        else: YY = Y
        A = Z*Z
        V = math.floor(-A/4)
        C = X*V
        B = Y+C
        E = B*B
        U = math.floor(E/4)
        W = V+U
        if(X!=0 and Y!=0 and Z!=0 and A%4 ==0  and E%4 == 0 and Y+C>=-10 and Y+C<=10 and gcd(YY,XX)==1):
            break


    if Z <0 : t1 = ""; Z1 = "(" + str(Z) + ")"
    else: t1 = "+"; Z1 = Z
    if C<0: t2 = ""
    else: t2 = "+"
    if B < 0: t3 = ""; B = "(" + str(B) + ")"
    else: t3 = "+"
    if X < 0: t4 = ""
    else: t4 = "+"
    if E < 0: t7 = ""
    else: t7 = "+"

    stem = stem.format(Z=Z,Y=Y,X=X, W=W, t1=t1, t4=t4)
    answer = answer.format(W=W)
    comment = comment.format(Z=Z, V=V, Y=Y, X=X, A=A, C=C, E=E, B=B, U=U, W=W, t1=t1, t2=t2, t3=t3, t4=t4, Z1=Z1)

    return stem, answer, comment

def factorization312_Stem_609():
    stem = "두 이차방정식 $$수식$$x^2`{t1}`{Z}x`-p`=`0,$$/수식$$\n" \
           "$$수식$$x^2`+`({Y}{t4}{X}p)x`+`q`=`0$$/수식$$        이 모두 중근을 가질 때, 상수 p, q에 대하여 6p+q의 값을 구하시오.\n"
    answer = "(답): {W}\n"
    comment = "$$수식$$x^2`{t1}`{Z}x`-`p`=`0이``중근을``가지므로$$/수식$$\n" \
              "$$수식$${Z1}^2`-`4 TIMES 1 TIMES (-p)`=`0$$/수식$$\n" \
              "$$수식$${A}`+`4p`=`0이므로``p`=`{V}$$/수식$$\n" \
              "$$수식$$x^2`+`({Y}{t4}{X}p)x`+`q`=`0에``p`=`{V}을``대입하면$$/수식$$\n" \
              "$$수식$$x^2`+`({Y}{t2}{C})x`+`q`=`0이고$$/수식$$\n" \
              "이 이차방정식도 중근을 가지므로\n" \
              "$$수식$${B}^2`-`4 TIMES 1 TIMES q `=`0$$/수식$$\n" \
              "$$수식$${E}`-4q`=`0,``q`=`{U}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$6p+q`=`6 TIMES ({V})+{U}`=`{W}$$/수식$$\n"

    while(1):
        Z = np.random.randint(-5,6)
        X = np.random.randint(-5,6)
        Y = np.random.randint(-5,6)
        if (X < 0): XX = -X
        else: XX = X
        if (Y < 0): YY = -Y
        else: YY = Y
        A = Z*Z
        V = math.floor(-A/4)
        C = X*V
        B = Y+C
        E = B*B
        U = math.floor(E/4)
        W = 6*V+U
        if(X!=0 and Y!=0 and Z!=0 and A%4 ==0  and E%4 == 0 and Y+C>=-10 and Y+C<=10 and gcd(YY,XX)==1):
            break

    if Z < 0:
        t1 = ""; Z1 = "(" + str(Z) + ")"
    else:
        t1 = "+"; Z1 = Z
    if C<0: t2 = ""
    else: t2 = "+"
    if B < 0: t3 = ""; B = "(" + str(B) + ")"
    else: t3 = "+"
    if X < 0: t4 = ""
    else: t4 = "+"
    if E < 0: t7 = ""
    else: t7 = "+"

    stem = stem.format(Z=Z,Y=Y,X=X, W=W, t1=t1, t4=t4)
    answer = answer.format(W=W)
    comment = comment.format(Z=Z, V=V, Y=Y, X=X, A=A, C=C, E=E, B=B, U=U, W=W, t1=t1, t2=t2, t3=t3, t4=t4, Z1=Z1)

    return stem, answer, comment

def factorization312_Stem_610():
    stem = "이차방정식 x(x{t1}$$수식$${Z}$$/수식$$) = A가 중근 x = B를 가질 때, 상수 A, B에 대하여 $$수식$$A OVER B$$/수식$$ 의 값은?\n" \
           "① $$수식$${q1}$$/수식$$\n" \
           "② $$수식$${q2}$$/수식$$\n" \
           "③ $$수식$${q3}$$/수식$$\n" \
           "④ $$수식$${q4}$$/수식$$\n" \
           "⑤ $$수식$${q5}$$/수식$$\n"
    answer = "(답): {Y}\n"
    comment = "$$수식$$x^2`{t1}{Z}x$$/수식$$ - A = 0이 중근을 가지므로\n" \
              "$$수식$${Z}^2`-`4 TIMES 1 TIMES (-A)`=`0$$/수식$$\n" \
              "$$수식$${F}`+`4A`=`0,````A`=`-`{CC}$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`-`A`=`0에``A`=`-`{CC}를``대입하면$$/수식$$\n" \
              "$$수식$$x^2`{t1}`{Z}x`+`{CC}`=`0,``(x{t1}{DD})^2`=`0$$/수식$$\n" \
              "즉, x = $$수식$${DDD}$$/수식$$ (중근)이므로 B = $$수식$${DDD}$$/수식$$\n" \
              "따라서\n" \
              "$$수식$$A OVER B`=`{X}`=`-{CC} TIMES {EE}`=`{t2}`{Y3} OVER {Y2}$$/수식$$\n\n"

    while(1):
        Z = np.random.randint(-5,6)
        F = Z*Z
        C = -Fraction(F,4)
        CC = "`{%s} OVER 4`" % (F)
        D = Fraction(Z,2)
        if Z<0:
            DD = "-`{%s} OVER 2`" % (-Z)
            DDD = "`{%s} OVER 2`" % (-Z)
            EE = "`2 OVER {%s}`" % (-Z)
        else:
            DD = "`{%s} OVER 2`" % (Z)
            DDD = "-`{%s} OVER 2`" % (Z)
            EE = "-`2 OVER {%s}`" % (Z)

        if(Z!=0):
            E = -Fraction(2,Z)
        else: E = 1
        Y = C*E
        Y1 = Y.numerator
        Y2 = Y.denominator
        if F%4 !=0 and Z%2 !=0 and Z!=0 and D!=0:
            break

    if Z <0 : t1 = ""; Z1 = "(" + str(Z) + ")"
    else: t1 = "+"; Z1 = Z
    if Y1<0: t2="-"; Y3=abs(Y1)
    else: t2=""; Y3=Y1
    CCC = "`-`{%s} OVER 4`" % (F)
    X = "`{%s} OVER {%s}" % (CCC,DDD)
    if Y1<0: YYY = "-`{%s} OVER {%s}" % (abs(Y1),Y2)
    else: YYY = "{%s} OVER {%s}" % (Y1,Y2)

    sol = np.random.randint(0, 5)

    if (sol == 0):
        q1 = "{%s}" % (YYY)
        if Y1 + Y2 < 0:
            q2 = "-`{%s} OVER {%s}" % (abs(Y1 + Y2), Y2)
        else:
            q2 = "{%s} OVER {%s}" % (Y1 + Y2, Y2)
        if Y1+2*Y2<0: q3 = "-`{%s} OVER {%s}" % (abs(Y1 + 2*Y2), Y2)
        else: q3 = "{%s} OVER {%s}" % (Y1 + 2*Y2, Y2)
        q4 = "{%s} OVER {%s}" % (Y1 + 3*Y2, Y2)
        q5 = "{%s} OVER {%s}" % (Y1 + 4*Y2, Y2)
        answer = "①"
    elif (sol == 1):
        if Y1<Y2: q1 = "-`{%s} OVER {%s}" % (Y2 - Y1, Y2)
        else: q1 = "{%s} OVER {%s}" % (Y1 - Y2, Y2)
        q2 = "{%s}" % (YYY)
        if Y1+Y2 < 0: q3 = "-`{%s} OVER {%s}" % (abs(Y1+Y2), Y2)
        else: q3 = "{%s} OVER {%s}" % (Y1 + Y2, Y2)
        if Y1 + 2*Y2 < 0: q4 = "-`{%s} OVER {%s}" % (abs(Y1 + 2*Y2), Y2)
        else: q4 = "{%s} OVER {%s}" % (Y1 + 2*Y2, Y2)
        q5 = "{%s} OVER {%s}" % (Y1 + 3*Y2, Y2)
        answer = "②"
    elif (sol == 2):
        if Y1<2*Y2: q1 = "-`{%s} OVER {%s}" % (2*Y2 - Y1, Y2)
        else: q1 = "{%s} OVER {%s}" % (Y1 - 2*Y2, Y2)
        if Y1<Y2: q2 = "-`{%s} OVER {%s}" % (Y2 - Y1, Y2)
        else: q2 = "{%s} OVER {%s}" % (Y1 - Y2, Y2)
        q3 = "{%s}" % (YYY)
        if Y1 + Y2 < 0:
            q4 = "-`{%s} OVER {%s}" % (abs(Y1 + Y2), Y2)
        else:
            q4 = "{%s} OVER {%s}" % (Y1 + Y2, Y2)
        if Y1 < 2 * Y2:
            q5 = "-`{%s} OVER {%s}" % (2 * Y2 - Y1, Y2)
        else:
            q5 = "{%s} OVER {%s}" % (Y1 - 2 * Y2, Y2)
        answer = "③"
    elif (sol == 3):
        if Y1<3*Y2: q1 = "-`{%s} OVER {%s}" % (3*Y2 - Y1, Y2)
        else: q1 = "{%s} OVER {%s}" % (Y1 - 3*Y2, Y2)
        if Y1<2*Y2: q2 = "-`{%s} OVER {%s}" % (2*Y2 - Y1, Y2)
        else: q2 = "{%s} OVER {%s}" % (Y1 - 2*Y2, Y2)
        if Y1<Y2: q3 = "-`{%s} OVER {%s}" % (Y2 - Y1, Y2)
        else: q3 = "{%s} OVER {%s}" % (Y1 - Y2, Y2)
        q4 = "{%s}" % (YYY)
        if Y1+Y2<0: q5 = "-`{%s} OVER {%s}" % (abs(Y1 + Y2), Y2)
        else: q5 = "{%s} OVER {%s}" % (Y1 + Y2, Y2)
        answer = "④"
    else:
        if Y1<4*Y2: q1 = "-`{%s} OVER {%s}" % (4*Y2 - Y1, Y2)
        else: q1 = "{%s} OVER {%s}" % (Y1 - 4*Y2, Y2)
        if Y1<3*Y2: q2 = "-`{%s} OVER {%s}" % (3*Y2 - Y1, Y2)
        else: q2 = "{%s} OVER {%s}" % (Y1 - 3*Y2, Y2)
        if Y1<2*Y2: q3 = "-`{%s} OVER {%s}" % (2*Y2 - Y1, Y2)
        else: q3 = "{%s} OVER {%s}" % (Y1 - 2*Y2, Y2)
        if Y1<Y2: q4 = "-`{%s} OVER {%s}" % (Y2 - Y1, Y2)
        else: q4 = "{%s} OVER {%s}" % (Y1 - Y2, Y2)
        q5 = "{%s}" % (YYY)
        answer = "⑤"

    stem = stem.format(q1=q1, q2=q2, q3=q3, q4=q4, q5=q5, t1=t1, Z=Z)
    answer = answer.format(answer=answer)
    comment = comment.format(Z1=Z1,t1=t1, Z=Z, F=F, C=C, D=D, E=E, Y=Y, CC=CC, DD=DD, DDD=DDD, EE=EE, X=X, Y3=Y3, Y2=Y2, t2=t2)

    return stem, answer, comment

def factorization312_Stem_611():
    stem = "이차방정식 $$수식$${z}x^2 `{y}`ax `{op0}` {r_}a `{op1}`{x} `=` 0$$/수식$$이 음수인 중근을 갖도록 하는 상수 $$수식$$a$$/수식$$의 값은? \n"\
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "$$수식$${z}x^2 `{y}`ax `{op0}` {r_}a `{op1}` {x} `=` 0$$/수식$$이 중근을 가지므로\n"\
              "$$수식$$(`{y}a`) ^2 `-`4` TIMES `{z}` TIMES `(`{r_}a`{op1}`{x}`)`=`0$$/수식$$\n"\
              "$$수식$${a}a  ^2 `-`{q}a`{c}`=`0`$$/수식$$\n"\
              "$$수식$${a}(a`-`{p})(a`+`{v})=0$$/수식$$\n"\
              "$$수식$$a`=`{p}$$/수식$$ 또는 $$수식$$a`=`-{v}$$/수식$$\n"\
              "이차방정식이 음수인 중근을 가지려면 일차항의 계수가 양수이어야 하므로\n"\
              "$$수식$${y}a`&gt;`0$$/수식$$에서 $$수식$$a`&lt;`0$$/수식$$\n"\
              "따라서 $$수식$$a`=`-{v}$$/수식$$\n\n"
    r = 0
    q = 5
    z = 1
    c = 5
    while r == 0  or (-q) %(4 * z) != 0 or (-c)%(4*z) != 0:
        p = np.random.randint(1, 11)
        v = np.random.randint(1, 11)
        z = np.random.randint(2, 6)
        y = np.random.randint(-5, 0)
        a = y ** 2
        q = -1 * a*(v-p)
        c = -1 * a * p * v
        r = int(q / (4*z))

    x = int(-c / (4*z))
    if r > 0 :
        op0 = '+'
    else :
        op0 = ''
    if x > 0 :
        op1 = '+'
    else :
        op1 = ''

    if r == 1 :
        r_ = ''
    elif r == -1 :
        r_ = '-'
    else :
        r_ = r
    candidates = [-v-6, -v-5, -v-2, -v+2, -v+4, -v+6]
    answer_list = [-v]
    for i in range(0, 4):
        answer_list.append(candidates.pop(np.random.randint(len(candidates))))

    answer_list.sort()

    [a1, a2, a3, a4, a5] = answer_list
    correct_idx = 0
    for idx, sdx in enumerate(answer_list):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == -v:
            correct_idx = idx
            break

    stem = stem.format(r_ = r_, z = z, y = y, r = r, x = x, op0 = op0, op1 = op1, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(r_ = r_, z = z, y = y, r = r, x = x, op0 = op0, op1 = op1, a = a, q = q, c = c, p = p, v = v)
    return stem, answer, comment


def factorization312_Stem_612():
    stem = "이차방정식 $$수식$$x^2 `{opz}`{z_}x`{opy}`{y_}k`{opx}`{x}`=`0`$$/수식$$이 중근을 가질 때, " \
           "이차방정식 $$수식$$(`k`{opw}`{w}`)`x ^2 `{opv}`{v_}x`{opu}`{u}`=`0`$$/수식$$의 두 근의 합을 구하시오. (단, $$수식$$k$$/수식$$는 상수)\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 `{opz}`{z_}x`{opy}`{y_}k`{opx}`{x}`=`0`$$/수식$$이 중근을 가지므로\n"\
              "$$수식$${z__}^2 `-`4` TIMES `1` TIMES `(`{y_}k`{opx}`{x}`)`=`0$$/수식$$\n"\
              "$$수식$${a}`{opb}`{b_}k`{opc}`{c}`=`0$$/수식$$, $$수식$$k`=`{s}$$/수식$$\n"\
              "$$수식$$(`k`{opw}`{w})`x  ^2 `{opv}{v_}x`{opu}{u}`=`0`$$/수식$$에 $$수식$$k`=`{s}$$/수식$$를 대입하면\n"\
              "$$수식$$({s}`{opw}`{w})x ^2 `{opv}`{v_}x`{opu}{u}`=`{d_}(`x`{opq_}`{q_}`)(`x`{opp_}`{p_}`)`=`0`$$/수식$$\n"\
              "따라서 두 근은  $$수식$$x`=`{q}$$/수식$$또는 $$수식$$x`=`{p}$$/수식$$이므로\n"\
              "두 근의 합은 $$수식$${p}`{opq}`{q}`=`{t}$$/수식$$\n\n"
    a = 2
    c = 3
    b = 2
    d = 0
    while (a+c)%b != 0 or d == 0:
        z = np.random.randint(-5, 6)*2
        while z == 0 :
            z = np.random.randint(-5, 6)*2
        if z == 1 or z == -1:
            z_ = ''
        else :
            z_ = z
        y = np.random.randint(-5, 6)
        while y == 0 :
            y = np.random.randint(-5, 6)
        if y == 1 or y == -1:
            y_ = ''
        else :
            y_ = y
        x = np.random.randint(-10, 11)
        while x == 0 :
            x = np.random.randint(-10, 11)
        a = z ** 2
        b = -4 * y
        if b == 1 or b == -1 :
            b_ = ''
        else :
            b_ = b
        c = -4 * x
        s = int((-(a+c))/b)
        w = np.random.randint(-5, 6)
        while w == 0 :
            w = np.random.randint(-5, 6)
        d = s + w
    v = 0
    u = 0
    while v == 0 or u == 0 :
        q = np.random.randint(-5, 6)
        while q == 0 :
            q = np.random.randint(-5, 6)
        p = np.random.randint(-5, 6)
        while p == q or p == 0 :
            p = np.random.randint(-5, 6)

        if d == 1 :
            d_ = ''
        elif d == -1 :
            d_ = '-'
        else :
            d_ = d
        v = -(q+p)*d

        u = d * q * p
    t = p + q

    if v == 1 or v == -1:
        v_ = ''
    else:
        v_ = v
    if z > 0 :
        opz = '+'
        z__ = z
    elif z == -1 :
        opz = '-'
        z__ = f'({z})'
    else :
        opz = ''
        z__ = f'({z})'
    if y > 0 :
        opy = '+'
    elif y == -1 :
        opy = '-'
    else :
        opy = ''

    if x > 0 :
        opx = '+'
    else :
        opx = ''

    if b > 0 :
        opb = '+'
    else :
        opb = ''

    if c > 0 :
        opc = '+'
    else :
        opc = ''

    if w > 0 :
        opw = '+'
    else :
        opw = ''

    if v > 0 :
        opv = '+'
    elif v == -1 :
        opv = '-'
    else :
        opv = ''

    if u > 0 :
        opu = '+'
    else :
        opu = ''

    if q > 0 :
        q_ = q
        opq_ = '-'
        opq = '+'
    else :
        q_ = -q
        opq_ = '+'
        opq = ''
    if p > 0 :
        p_ = p
        opp_ = '-'
    else :
        p_ = -p
        opp_ = '+'

    stem = stem.format(z_ = z_, y_ = y_, v_ = v_, z = z, y = y, x = x, w = w, v = v, u = u, opz = opz, opy = opy, opx = opx, opw = opw, opv = opv, opu = opu)
    answer = answer.format(an = t)
    comment = comment.format(d_ = d_, z__ = z__, z_ = z_, y_ = y_, v_ = v_, b_ = b_, z = z, y = y, x = x, w = w, v = v, u = u, a = a, b = b, c = c, s = s, q = q, p = p, q_ = q_, p_ = p_, d= d,t = t,
                             opb = opb, opc = opc, opq_ = opq_, opp_ = opp_, opq = opq, opz = opz, opy = opy, opx = opx, opw = opw, opv = opv, opu = opu)
    return stem, answer, comment


def factorization312_Stem_613():
    stem = "이차방정식 $$수식$$x^2 `{opz}`{z_}x`{opy}`{y_}k`{opx}`{x}`=`0`$$/수식$$이 중근을 가질 때, " \
           "이차방정식 $$수식$$(`k`{opw}`{w}`)`x ^2 `{opv}`{v_}x`{opu}`{u}`=`0`$$/수식$$의 두 근의 곱을 구하시오. (단, $$수식$$k$$/수식$$는 상수)\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$x^2 `{opz}`{z_}x`{opy}`{y_}k`{opx}`{x}`=`0`$$/수식$$이 중근을 가지므로\n"\
              "$$수식$${z__}^2 `-`4` TIMES `1` TIMES `(`{y_}k`{opx}`{x}`)`=`0$$/수식$$\n"\
              "$$수식$${a}`{opb}`{b_}k`{opc}`{c}`=`0$$/수식$$, $$수식$$k`=`{s}$$/수식$$\n"\
              "$$수식$$(`k`{opw}`{w})`x  ^2 `{opv}{v_}x`{opu}{u}`=`0`$$/수식$$에 $$수식$$k`=`{s}$$/수식$$를 대입하면\n"\
              "$$수식$$({s}`{opw}`{w})x ^2 `{opv}`{v_}x`{opu}{u}`=`{d_}(`x`{opq_}`{q_}`)(`x`{opp_}`{p_}`)`=`0`$$/수식$$\n"\
              "따라서 두 근은  $$수식$$x`=`{q}$$/수식$$또는 $$수식$$x`=`{p}$$/수식$$이므로\n"\
              "두 근의 곱은 $$수식$${p}`TIMES`{q}`=`{t}$$/수식$$\n\n"
    a = 2
    c = 3
    b = 2
    d = 0
    while (a+c)%b != 0 or d == 0:
        z = np.random.randint(-5, 6)*2
        while z == 0 :
            z = np.random.randint(-5, 6)*2
        if z == 1 or z == -1:
            z_ = ''
        else :
            z_ = z
        y = np.random.randint(-5, 6)
        while y == 0 :
            y = np.random.randint(-5, 6)
        if y == 1 or y == -1:
            y_ = ''
        else :
            y_ = y
        x = np.random.randint(-10, 11)
        while x == 0 :
            x = np.random.randint(-10, 11)
        a = z ** 2
        b = -4 * y
        if b == 1 or b == -1 :
            b_ = ''
        else :
            b_ = b
        c = -4 * x
        s = int((-(a+c))/b)
        w = np.random.randint(-5, 6)
        while w == 0 :
            w = np.random.randint(-5, 6)
        d = s + w
    v = 0
    u = 0
    while v == 0 or u == 0 :
        q = np.random.randint(-5, 6)
        while q == 0 :
            q = np.random.randint(-5, 6)
        p = np.random.randint(-5, 6)
        while p == q or p == 0 :
            p = np.random.randint(-5, 6)

        if d == 1 :
            d_ = ''
        elif d == -1 :
            d_ = '-'
        else :
            d_ = d
        v = -(q+p)*d

        u = d * q * p
    t = p * q

    if v == 1 or v == -1:
        v_ = ''
    else:
        v_ = v
    if z > 0 :
        opz = '+'
        z__ = z
    elif z == -1 :
        opz = '-'
        z__ = f'({z})'
    else :
        opz = ''
        z__ = f'({z})'
    if y > 0 :
        opy = '+'
    elif y == -1 :
        opy = '-'
    else :
        opy = ''

    if x > 0 :
        opx = '+'
    else :
        opx = ''

    if b > 0 :
        opb = '+'
    else :
        opb = ''

    if c > 0 :
        opc = '+'
    else :
        opc = ''

    if w > 0 :
        opw = '+'
    else :
        opw = ''

    if v > 0 :
        opv = '+'
    elif v == -1 :
        opv = '-'
    else :
        opv = ''

    if u > 0 :
        opu = '+'
    else :
        opu = ''

    if q > 0 :
        q_ = q
        opq_ = '-'
    else :
        q_ = -q
        opq_ = '+'
    if p > 0 :
        p_ = p
        opp_ = '-'
    else :
        p_ = -p
        opp_ = '+'

    stem = stem.format(z_ = z_, y_ = y_, v_ = v_, z = z, y = y, x = x, w = w, v = v, u = u, opz = opz, opy = opy, opx = opx, opw = opw, opv = opv, opu = opu)
    answer = answer.format(an = t)
    comment = comment.format(d_ = d_, z__ = z__, z_ = z_, y_ = y_, v_ = v_, b_ = b_, z = z, y = y, x = x, w = w, v = v, u = u, a = a, b = b, c = c, s = s, q = q, p = p, q_ = q_, p_ = p_, d= d,t = t,
                             opb = opb, opc = opc, opq_ = opq_, opp_ = opp_,opz = opz, opy = opy, opx = opx, opw = opw, opv = opv, opu = opu)
    return stem, answer, comment


def factorization312_Stem_614():
    stem = "이차방정식 $$수식$$x  ^2 `-`(`k`{opz}`{z}`)`x`{opy}`{y}`=`0`$$/수식$$이 중근을 가질 때의 상수 $$수식$$k$$/수식$$의 값 중 큰 값이 이차방정식 " \
           "$$수식$${x_}x  ^2 `-`(`a  ^2 `{opw}`{w}`)`x`{opv_}`{v_}a`=`0`$$/수식$$의 한 근일 때, 상수 $$수식$$a$$/수식$$의 값을 모두 구하면? (정답 $$수식$$2$$/수식$$개)  \n"\
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum1}, {anum2}\n"
    comment = "(해설)\n" \
              "$$수식$$x  ^2 `-`(`k`{opz}`{z}`)`x`{opy}`{y}`=`0`$$/수식$$이 중근을 가지므로\n"\
              "$$수식$$(`k`{opz}`{z}`)^2 `-`4` TIMES `1` TIMES `{y}`=`0$$/수식$$\n"\
              "$$수식$$k^2 `{opa}`{a}k`{opb}`{b}`{opc}`{c}`=`0$$/수식$$\n"\
              "$$수식$$(`k`{opp_}{p_}`)(`k`{opo_}`{o_}`)`=`0`$$/수식$$, $$수식$$k`=`{p}$$/수식$$ 또는 $$수식$$k `=` {o}$$/수식$$\n"\
              "상수 $$수식$$k$$/수식$$의 값 중 큰 값은 $$수식$$k`=`{o}$$/수식$$\n"\
              "$$수식$${x_}x  ^2 `-`(`a  ^2 `{opw}`{w}`)`x`{opv}`{v}a`=`0`$$/수식$$의 한 근이 $$수식$$x`=`{o}$$/수식$$이므로\n"\
              "$$수식$${x} TIMES {o}^2 -(a^2 `{opw}`{w}) TIMES {o}`{opv}`{v}a`=`0$$/수식$$\n"\
              "$$수식$$-{o_}a^2 `{opv}`{v}a`{opd}`{d}=`0`$$/수식$$, $$수식$$a^2`{opf}`{f}a `{opg}`{g}`=`0$$/수식$$\n"\
              "$$수식$$( a`{opn_}`{n_} ) (a `{opm_}`{m_}) `=` 0$$/수식$$\n"\
              "따라서 $$수식$$a`=`{n}$$/수식$$ 또는 $$수식$$a`=`{m}$$/수식$$\n\n"

    p = np.random.randint(-5, 6)
    while p == 0 :
        p = np.random.randint(-5, 6)

    o = 0
    b = c = 1

    while o == 0 or p == -o or (p+o)%2 != 0 or (o*p - z ** 2)%4 != 0:
        p = np.random.randint(-5, 6)
        while p == 0:
            p = np.random.randint(-5, 6)
        o = np.random.randint(p+1, 7)
        a = -(p+o)
        z = int(a/2)
        b = z ** 2
        c = o*p - b

    y = -int((o*p - z ** 2)/4)

    n = np.random.randint(-10, 11)
    while n == 0 :
        n = np.random.randint(-10, 11)
    m = np.random.randint(-10, 11)
    while m == 0 or m == n :
        m = np.random.randint(-10, 11)
    f = -(n+m)
    g = n * m
    v = -o * f
    d = -o * g
    x = np.random.randint(-5, 6)
    while x == 0 :
        x = np.random.randint(-5, 6)
    w = x * o + g

    if z > 0 :
        opz = '+'
    else :
        opz = ''
    if y > 0 :
        opy = '+'
    else :
        opy = ''
    if w > 0 :
        opw = '+'
    else :
        opw = ''
    if x == 1 :
        x_ = ''
    elif x == -1 :
        x_ = '-'
    else :
        x_ = x
    if v > 0 :
        opv_ = '+'
    else :
        opv_ = ''
    if v == 1 :
        v_ = ''
    elif v == -1 :
        v_ = '-'
    else :
        v_ = v

    if a > 0 :
        opa = '+'
    else :
        opa = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''
    if c > 0 :
        opc = '+'
    else :
        opc = ''
    if p > 0 :
        p_ = p
        opp_ = '-'
    else :
        p_ = abs(p)
        opp_ = '+'
    if o > 0 :
        o_ = o
        opo_ = '-'
    else :
        o_ = abs(o)
        opo_ = '+'
    if d > 0 :
        opd = '+'
    else :
        opd = ''
    if f > 0 :
        opf = '+'
    else :
        opf = ''
    if g > 0 :
        opg = '+'
    else :
        opg = ''
    if n > 0 :
        n_ = n
        opn_ = '-'
    else :
        n_ = abs(n)
        opn_ = '+'
    if m > 0 :
        m_ = m
        opm_ = '-'
    else :
        m_ = abs(m)
        opm_ = '+'
    if f == 1 :
        f_ = ''
    elif f == -1 :
        f_ = '-'
    else :
        f_ = f
    if o == 1 :
        o_= ''
    elif o == -1 :
        o_ = ''
    else :
        o_ = o
    candidates = [m - 1,m +1, n -1, n+1,m + n]

    answer_list = [m, n]
    for i in range(0, 3):
        answer_list.append(candidates.pop(np.random.randint(len(candidates))))
    answer_list.sort()
    [a1, a2, a3, a4, a5] = answer_list
    correct_idx1 = -1
    correct_idx2 = -1

    for idx, sdx in enumerate(answer_list):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == m:
            if correct_idx1 == -1 :
                correct_idx1 = idx
            else :
                correct_idx2 = idx
        if sdx == n :
            if correct_idx1 == -1 :
                correct_idx1 = idx
            else :
                correct_idx2 = idx

    stem = stem.format(z = z, y = y, opy = opy, opz = opz, opw = opw, x_ = x_, w = w, opv_ = opv_, v_ = v_, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum1 = answer_dict[correct_idx1], anum2 = answer_dict[correct_idx2])
    comment = comment.format(f = f, v = v_, x_ = x_, z = z, y = y, a = a, b = b, c = c, p = p, o = o, w = w, x = x, v_ = v_, d = d, f_ = f_, g = g, n = n, m = m, n_ = n_, m_ = m_,
                             p_ = p_, o_ = o_, opz = opz, opy = opy, opa = opa, opb = opb, opc = opc, opp_ = opp_, opo_ = opo_, opw = opw, opv = opv_,
                             opd = opd, opf = opf, opg = opg, opn_ = opn_, opm_ = opm_)
    return stem, answer, comment


def factorization312_Stem_615():
    stem = "이차방정식 $$수식$$x  ^2 `-`(`k`{opz}`{z}`)`x`{opy}`{y}`=`0`$$/수식$$이 중근을 가질 때의 상수 $$수식$$k$$/수식$$의 값 중 큰 값이 이차방정식 " \
           "$$수식$${x_}x  ^2 `-`(`a  ^2 `{opw}`{w}`)`x`{opv_}`{v_}a`=`0`$$/수식$$의 한 근일 때, 상수 $$수식$$a$$/수식$$의 값의 합을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$$x  ^2 `-`(`k`{opz}`{z}`)`x`{opy}`{y}`=`0`$$/수식$$이 중근을 가지므로\n" \
              "$$수식$$(`k`{opz}`{z}`)^2 `-`4` TIMES `1` TIMES `{y}`=`0$$/수식$$\n" \
              "$$수식$$k^2 `{opa}`{a}k`{opb}`{b}`{opc}`{c}`=`0$$/수식$$\n" \
              "$$수식$$(`k`{opp_}{p_}`)(`k`{opo_}`{o_}`)`=`0`$$/수식$$, $$수식$$k`=`{p}$$/수식$$ 또는 $$수식$$k `=` {o}$$/수식$$\n" \
              "상수 $$수식$$k$$/수식$$의 값 중 큰 값은 $$수식$$k`=`{o}$$/수식$$\n" \
              "$$수식$${x_}x  ^2 `-`(`a  ^2 `{opw}`{w}`)`x`{opv}`{v}a`=`0`$$/수식$$의 한 근이 $$수식$$x`=`{o}$$/수식$$이므로\n" \
              "$$수식$${x} TIMES {o}^2 -(a^2 `{opw}`{w}) TIMES {o}`{opv}`{v}a`=`0$$/수식$$\n" \
              "$$수식$$-{o_}a^2 `{opv}`{v}a`{opd}`{d}=`0`$$/수식$$, $$수식$$a^2`{opf}`{f}a `{opg}`{g}`=`0$$/수식$$\n" \
              "$$수식$$( a`{opn_}`{n_} ) (a `{opm_}`{m_}) `=` 0$$/수식$$\n" \
              "따라서 $$수식$$a`=`{n}$$/수식$$ 또는 $$수식$$a`=`{m}$$/수식$$이므로 상수 $$수식$$a$$/수식$$의 값의 합은 $$수식$${an}$$/수식$$이다.\n\n"

    p = np.random.randint(-5, 6)
    while p == 0:
        p = np.random.randint(-5, 6)

    o = 0
    b = c = 1

    while o == 0 or p == -o or (p + o) % 2 != 0 or (o * p - z ** 2) % 4 != 0:
        p = np.random.randint(-5, 6)
        while p == 0:
            p = np.random.randint(-5, 6)
        o = np.random.randint(p + 1, 7)
        a = -(p + o)
        z = int(a / 2)
        b = z ** 2
        c = o * p - b

    y = -int((o * p - z ** 2) / 4)

    n = np.random.randint(-10, 11)
    while n == 0:
        n = np.random.randint(-10, 11)
    m = np.random.randint(-10, 11)
    while m == 0 or m == n:
        m = np.random.randint(-10, 11)
    f = -(n + m)
    g = n * m
    v = -o * f
    d = -o * g
    x = np.random.randint(-5, 6)
    while x == 0:
        x = np.random.randint(-5, 6)
    w = x * o + g

    if z > 0:
        opz = '+'
    else:
        opz = ''
    if y > 0:
        opy = '+'
    else:
        opy = ''
    if w > 0:
        opw = '+'
    else:
        opw = ''
    if x == 1:
        x_ = ''
    elif x == -1:
        x_ = '-'
    else:
        x_ = x
    if v > 0:
        opv_ = '+'
    else:
        opv_ = ''
    if v == 1:
        v_ = ''
    elif v == -1:
        v_ = '-'
    else:
        v_ = v

    if a > 0:
        opa = '+'
    else:
        opa = ''
    if b > 0:
        opb = '+'
    else:
        opb = ''
    if c > 0:
        opc = '+'
    else:
        opc = ''
    if p > 0:
        p_ = p
        opp_ = '-'
    else:
        p_ = abs(p)
        opp_ = '+'
    if o > 0:
        o_ = o
        opo_ = '-'
    else:
        o_ = abs(o)
        opo_ = '+'
    if d > 0:
        opd = '+'
    else:
        opd = ''
    if f > 0:
        opf = '+'
    else:
        opf = ''
    if g > 0:
        opg = '+'
    else:
        opg = ''
    if n > 0:
        n_ = n
        opn_ = '-'
    else:
        n_ = abs(n)
        opn_ = '+'
    if m > 0:
        m_ = m
        opm_ = '-'
    else:
        m_ = abs(m)
        opm_ = '+'
    if f == 1:
        f_ = ''
    elif f == -1:
        f_ = '-'
    else:
        f_ = f
    if o == 1:
        o_ = ''
    elif o == -1:
        o_ = ''
    else:
        o_ = o

    an = n + m
    stem = stem.format(z=z, y=y, opy=opy, opz=opz, opw=opw, x_=x_, w=w, opv_=opv_, v_=v_)
    answer = answer.format(an = an)
    comment = comment.format(f=f, v=v_, x_=x_, z=z, y=y, a=a, b=b, c=c, p=p, o=o, w=w, x=x, v_=v_, d=d, f_=f_, g=g, n=n,
                             m=m, n_=n_, m_=m_,
                             p_=p_, o_=o_, opz=opz, opy=opy, opa=opa, opb=opb, opc=opc, opp_=opp_, opo_=opo_, opw=opw,
                             opv=opv_,
                             opd=opd, opf=opf, opg=opg, opn_=opn_, opm_=opm_, an = an)
    return stem, answer, comment


def factorization312_Stem_616():
    stem = "이차방정식 $$수식$$x ^2 `{opa}`{a_}ax`{opb}`{b_}a`=`0`$$/수식$$이 중근을 가질 때, 모든 상수 의 값의 합을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "근의 판별식을 이용하면\n"\
              "$$수식$${ag}^2 a^2 `{op4b}`{b4_}a`=`0`$$/수식$$, $$수식$$a`(`{ag}^2 a`{op4b}`{b4_}`)`=`0`$$/수식$$\n"\
              "$$수식$$a`=`0$$/수식$$ 또는 $$수식$$a`=` {opc}{c_}$$/수식$$\n"\
              "따라서 모든 상수 $$수식$$a$$/수식$$의 값의 합은\n"\
              "$$수식$$0`{opc_}` {c_}`=`{c}`$$/수식$$\n\n"

    a = np.random.randint(-9, 10)
    while a == 0 :
        a = np.random.randint(-9, 10)
    b = np.random.randint(-9, 10)

    while b == 0 or 4*b % a**2 != 0:
        a = np.random.randint(-9, 10)
        while a == 0:
            a = np.random.randint(-9, 10)
        b = np.random.randint(-9, 10)
    b4 = 4 * b

    if a == 1:
        a_ = ''
    elif a == -1:
        a_ = '-'
    else:
        a_ = a
    if a > 0:
        opa = '+'
        ag = a
    else:
        opa = ''
        ag = f'({a})'

    if b == 1 :
        b_ = ''
    elif b == -1 :
        b_ = '-'
    else :
        b_ = b
    if b > 0 :
        opb = '+'
        op4b = '-'
        b4_ = b4
    else :
        opb = ''
        op4b = '+'
        b4_ = abs(b4)

    c = int(4*b / a **2)
    if c > 0 :
        opc = ''
        opc_ = '+'
        c_ = c
    else :
        opc = '-'
        opc_ = '-'
        c_ = abs(c)

    stem = stem.format(a_ = a_, opa = opa, opb = opb, b_ = b_)
    answer = answer.format(an = c)
    comment = comment.format(c_ = c_, b4_ = b4_, ag = ag, b4 = b4,  c = c, op4b = op4b, opc = opc, opc_ = opc_)
    return stem, answer, comment


def factorization312_Stem_617():
    stem = "이차방정식 $$수식$$x^2 `+`{a}x`+`k`{opb}`{b}`=`0`$$/수식$$이 서로 다른 두 근을 갖도록 하는 상수 $$수식$$k$$/수식$$의 조건은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "근의 판별식을 이용하면\n"\
              "$$수식$$ {a_2}^2 `-`(`k`{opb}`{b}`) `&gt;` 0`$$/수식$$\n"\
              "$$수식$$-k `{opc}`{c} `&gt;` 0$$/수식$$\n"\
              "따라서 $$수식$$k `&lt;` {c}$$/수식$$\n\n"

    a = np.random.randint(1, 10) * 2
    b = np.random.randint(-9, 10)
    while b == 0 :
        b = np.random.randint(-9, 10)
    c = int(a**2/4) - b

    if b > 0 :
        opb = '+'
    else :
        opb = ''
    a_2 = int(a/2)
    if c > 0 :
        opc = '+'
    else :
        opc = ''
    c_ = -c
    candidates = [f'k `&lt;` {c}', f'k `&gt;` {c_}', f'k `&lt;`{c_}', f'k`&gt;`{c}', f'k`!={c}']
    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates

    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == f'k `&lt;` {c}':
            correct_idx = idx
            break
    stem = stem.format(a = a, opb = opb, b = b, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_2 = a_2, b = b, opb = opb, c = c, opc = opc)
    return stem, answer, comment


def factorization312_Stem_618():
    stem = "이차방정식 $$수식$${a_}x^2 `{opb}`{b}x`{opc}`{c}`+`m`=`0`$$/수식$$이 서로 다른 두 근을 가질 때, 상수 $$수식$$m$$/수식$$의 값의 범위는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "이차방정식이 서로 다른 두 근을 가지려면 근의 판별식에서 \n"\
              "$$수식$${b_2_}^2 `-`{a_} ( {c} `+`m ) `&gt;` 0 $$/수식$$\n"\
              "$$수식$$-{a_}m `{ope}`{e} `&gt;`0$$/수식$$\n"\
              "따라서 $$수식$$m`&lt;`{e_a}$$/수식$$\n\n"

    a = np.random.randint(1, 10)
    if a == 1 :
        a_ = ''
    else :
        a_ = a
    b = np.random.randint(-5, 6)*2
    while b == 0 :
        b = np.random.randint(-5, 6)*2
    c = np.random.randint(-9, 10)
    while c == 0:
        c = np.random.randint(-9, 10)

    b_2 = int (b/2)
    if b > 0 :
        b_2_ =  b_2
    else :
        b_2_ = f'( {b_2} )'

    e = int(b/2)**2 - a*c
    if e % a == 0:
        e_a = int(e/a)
        f_ = -1 * e_a
    elif abs(e) == 1 :
        if e > 0:
            e_a = f'{e} over {a}'
            f_ = f'- {e} over {a}'
        else:
            e_a = f'- {e} over {a}'
            f_ = f'{e} over {a}'
    else :
        e_ = int(abs(e)/gcd(abs(e), a))
        a_ = int(a/gcd(abs(e),a))
        if e > 0 :
            e_a = f'{e_} over {a_}'
            f_ = f'- {e_} over {a_}'
        else :
            e_a = f'- {e_} over {a_}'
            f_ = f'{e_} over {a_}'
    if c > 0 :
        opc = '+'
    else :
        opc = ''
    if e > 0 :
        ope = '+'
    else :
        ope = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''
    candidates = [f'm`&lt;`{e_a}', f'm`&gt;`{e_a}', f'm`&gt;`{f_}', f'm`&lt;`{f_}', f'm` !=`{e_a}']
    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates

    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == f'm`&lt;`{e_a}':
            correct_idx = idx
            break
    stem = stem.format(opb = opb, a_ = a_, b = b, c = c, opc = opc, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_ = a_, b_2_ = b_2_, c = c, e = e, ope = ope, e_a = e_a)
    return stem, answer, comment


def factorization312_Stem_619():
    stem = "이차방정식 $$수식$${a_}x^2 `{opb}`{b}x`{opc}`{c}`+`m`=`0`$$/수식$$이 해가 없을 때, 상수 $$수식$$m$$/수식$$의 값의 범위는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "이차방정식이 해가 없으려면 근의 판별식에서 \n"\
              "$$수식$${b_2_}^2 `-`{a_} ( {c} `+`m ) `&lt;` 0 $$/수식$$\n"\
              "$$수식$$-{a_}m `{ope}`{e} `&gt;`0$$/수식$$\n"\
              "따라서 $$수식$$m`&gt;`{e_a}$$/수식$$\n\n"

    a = np.random.randint(1, 10)
    if a == 1 :
        a_ = ''
    else :
        a_ = a
    b = np.random.randint(-5, 6)*2
    while b == 0 :
        b = np.random.randint(-5, 6)*2
    c = np.random.randint(-9, 10)
    while c == 0 or int(b/2)**2 - a*c == 0:
        c = np.random.randint(-9, 10)

    b_2 = int (b/2)
    if b > 0 :
        b_2_ =  b_2
    else :
        b_2_ = f'( {b_2} )'

    e = int(b/2)**2 - a*c

    if e % a == 0:
        e_a = int(e/a)
        f_ = -1 * e_a
    elif abs(e) == 1 :
        if e > 0:
            e_a = f'{e} over {a}'
            f_ = f'- {e} over {a}'
        else:
            e_ = abs(e)
            e_a = f'- {e_} over {a}'
            f_ = f'{e_} over {a}'
    else :
        gcdae = gcd(abs(e), a)
        e_ = int(abs(e)/gcdae)
        a__ = int(a/gcdae)
        if e > 0 :
            e_a = f'{e_} over {a__}'
            f_ = f'- {e_} over {a__}'
        else :
            e_a = f'- {e_} over {a__}'
            f_ = f'{e_} over {a__}'

    if c > 0 :
        opc = '+'
    else :
        opc = ''
    if e >= 0 :
        ope = '+'
    else :
        ope = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''
    candidates = [f'm`&lt;`{e_a}', f'm`&gt;`{e_a}', f'm`&gt;`{f_}', f'm`&lt;`{f_}', f'm` !=`{e_a}']
    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates

    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == f'm`&gt;`{e_a}':
            correct_idx = idx
            break
    stem = stem.format(opb = opb, a_ = a_, b = b, c = c, opc = opc, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_ = a_, b_2_ = b_2_, c = c, e = e, ope = ope, e_a = e_a)
    return stem, answer, comment


def factorization312_Stem_620():
    stem = "이차방정식 $$수식$$x ^2 `+`{a}x`+`k`=`0`$$/수식$$이 서로 다른 두 근을 가질 때, 다음 중 상수 $$수식$$k$$/수식$$의 값으로 옳지 않은 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "이차방정식이 서로 다른 두 근을 가지려면 근의 판별식에서 $$수식$${a_2}^2`-`k`&gt;`0`$$/수식$$, 즉 $$수식$$k `&lt;` {b}$$/수식$$\n"\
              "따라서 {anum}는 $$수식$$k$$/수식$$의 값이 될 수 없다.\n\n"

    a = np.random.randint(1, 6)*2
    a_2 = int(a/2)
    b = a_2**2
    can_list = []
    for i in range(-5, b) :
        can_list.append(i)
    an = b + np.random.randint(0, 4)

    candidates = [an, can_list.pop(np.random.randint(len(can_list))), can_list.pop(np.random.randint(len(can_list))), can_list.pop(np.random.randint(len(can_list))), can_list.pop(np.random.randint(len(can_list)))]
    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates
    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == an:
            correct_idx = idx
            break
    stem = stem.format(a = a, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_2 = a_2, b = b, anum = answer_dict[correct_idx])
    return stem, answer, comment


def factorization312_Stem_621():
    stem = "이차방정식 $$수식$${a}x^2 `{opb}`{b}x`+`k`{opc}`{c}`=`0`$$/수식$$에 대하여 해가 없을 때, 실수 의 값의 범위는?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "이차방정식의 해가 없으므로 판별식에서\n"\
              "$$수식$${b_2_}^2 `-`{a} ( k `{opc}`{c} ) `&lt;`0$$/수식$$, $$수식$$-{a}k `{ope}`{e}`&lt;`0$$/수식$$\n"\
              "따라서 $$수식$$ k `&gt;` {f}$$/수식$$\n\n"

    a = np.random.randint(2, 10)
    b = np.random.randint(-5, 6)*2
    while b == 0 :
        b = np.random.randint(-5, 6)*2
    b_2 = int(b/2)
    c = np.random.randint(-9, 10)
    while c == 0 :
        c = np.random.randint(-9, 10)
    e = b_2**2 -a*c
    if b < 0 :
        b_2_ = f'({b_2})'
    else :
        b_2_ = b_2
    if e > 0 :
        ope = '+'
    else :
        ope = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''
    if c > 0 :
        opc = '+'
    else :
        opc = ''

    if e%a == 0 :
        f = int(e/a)
        f_ = -f
    else :
        abse = abs(e)
        gcdea = gcd(abse, a)

        e_ = abse//gcdea
        a_ = a//gcdea

        if e > 0 :
            f = f'{e_} over {a_}'
            f_ = f'- {e_} over {a_}'
        else :
            f = f'- {e_} over {a_}'
            f_ = f'{e_} over {a_}'

    candidates = [f'k`&gt;`{f}', f'k `GEQ` {f_}', f'k `LEQ` `{f_}', f'k`&lt;`{f}', f'k `GEQ` {f}']
    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates
    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == f'k`&gt;`{f}':
            correct_idx = idx
            break
    stem = stem.format(a = a, b = b, c = c, opb = opb, opc = opc, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a = a, b_2_ = b_2_, c = c, e = e, opc = opc, ope = ope, f = f)
    return stem, answer, comment


def factorization312_Stem_622():
    stem = "이차방정식 $$수식$$x^2 `{opa}`{a_}x`+`k`{opb}`{b}`=`0`$$/수식$$이 해를 갖도록 하는 가장 큰 정수 $$수식$$k$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식의 해가 없으므로 판별식에서\n"\
              "$$수식$${a}^2`-`4`(`k`{opb}`{b}`) `GEQ` 0`$$/수식$$, $$수식$$-4k`{opc}`{c}` GEQ `0$$/수식$$\n"\
              "$$수식$$k `LEQ` {d}`$$/수식$$\n"\
              "이를 만족하는 가장 큰 정수 $$수식$$k$$/수식$$는 $$수식$${e}$$/수식$$이다.\n\n"

    a = np.random.randint(-9, 10)
    while a == 0 :
        a = np.random.randint(-9, 10)
    b = np.random.randint(-9, 10)
    while b == 0 or a**2 - 4 * b == 0 :
        b = np.random.randint(-9, 10)

    c = a**2 - 4 * b

    if c % 4 == 0 :
        d = int(c/4)
        e = d
    else :
        absc = abs(c)
        gcdc4 = gcd(absc, 4)
        c_ = absc//gcdc4
        c4 = 4//gcdc4

        if c > 0 :
            d = f'{c_} over {c4}'
            e = int(c/4)
        else :
            d = f'- {c_} over {c4}'
            e = int(c/4) -1
    if a == 1 :
        a_ = ''
    elif a == -1 :
        a_ = '-'
    else :
        a_ = a
    if a > 0 :
        opa = '+'
    else :
        opa = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''
    if c > 0 :
        opc = '+'
    else :
        opc = ''
    stem = stem.format(a_ = a_, opa = opa, b = b, opb = opb)
    answer = answer.format(an = e)
    comment = comment.format(a = a, b = b, opb =opb, c = c, opc = opc, d = d, e = e)
    return stem, answer, comment


def factorization312_Stem_623():
    stem = "다음 중 이차방정식 $$수식$$m^2 x^2 `{opa}`{a}`(`m`{opb}`{b}`)`x`+`{c}`=`0`$$/수식$$의 해가 없도록 하는 상수 $$수식$$m$$/수식$$의 값이 될 수 있는 것은?\n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "근의 판별식을 이용하면\n"\
              "$$수식$${a_2_}^2 (`m`{opb}`{b}`)^2 `-`{c}`TIMES`m^2 `&lt;`0`$$/수식$$, $$수식$${d}m`+`{e}`&lt;`0`$$/수식$$\n"\
              "따라서 $$수식$$m`&lt;`{f}$$/수식$$이므로 $$수식$$m$$/수식$$의 값이 될 수 있는 것은 $$수식$${g}$$/수식$$이다. \n\n"

    a = np.random.randint(-4, 5)*2
    while a == 0 :
        a = np.random.randint(-4, 5)
    b = np.random.randint(1, 10)
    while b == 0 or (abs(a) ==1 and abs(b) ==1):
        b = np.random.randint(1, 10)
    a_2 = int(a/2)
    c = a_2 ** 2
    d = int((a**2 * b)/2)
    e = int(c * b**2)

    if a > 0 :
        opa = '+'
        a_2_ = a_2
    else :
        opa = ''
        a_2_ = f'({a_2})'
    if b > 0 :
        opb = '+'
    else :
        opb = ''

    if e % d == 0 :
        f = -1 * int(e / d)
        g = f - np.random.randint(1, 4)
        candidates = [g, f, f + 1, f+3, f+5]
    else :
        absd = abs(d)
        gcded = gcd(e, absd)
        e_ = e // gcded
        d_ = absd // gcded

        if d > 0 :
            f = f'- {e_} over {d_}'
            g = int(-e_/d_)- np.random.randint(1, 4)
            candidates = [g, f, int(-e_/d_) + 2, int(-e_/d_) + 4, int(-e_/d_) + 5]
        else :
            f = f' {e_} over {d_}'
            g = int(e_/d_)- np.random.randint(1, 4)
            candidates = [g, f,int(e_/d_) + 1, int(e_/d_) + 3, int(e_/d_) +4]

    np.random.shuffle(candidates)
    [a1, a2, a3, a4, a5] = candidates
    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == g:
            correct_idx = idx
            break
    stem = stem.format(a = a, opa =opa, b = b, opb = opb, c = c, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_2_ = a_2_, b = b, opb = opb, c = c, d = d, e = e, f = f, g = g)
    return stem, answer, comment


def factorization312_Stem_624():
    stem = "이차방정식 $$수식$$(`m`{opa}`{a}`)`x ^2 `{opb}`{b_}x`{c}`=`0`$$/수식$$이 서로 다른 두 근을 가질 조건은? (단, $$수식$$m$$/수식$$은 실수) \n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "근의 판별식을 이용하면\n"\
              "$$수식$${b_2_} ^2 `+`{c_}` ( m `{opa}` {a}`) `&gt;` 0$$/수식$$, $$수식$$m`&gt;`{d}$$/수식$$\n"\
              "또, 이차항의 계수가 $$수식$$m`{opa}`{a} != 0$$/수식$$, 즉 $$수식$$m`!=`{a_}$$/수식$$이어야 한다.\n"\
              "따라서 두 근을 가질 조건은 $$수식$${d} `&lt;` m `&lt;` {a_}$$/수식$$ 또는 $$수식$$m`&gt;`{a_}$$/수식$$ \n\n"

    a = d = 1
    while d >= a:
        a = np.random.randint(-9, 10)
        while a == 0:
            a = np.random.randint(-9, 10)
        b = np.random.randint(-5, 6)*2
        while b == 0 :
            b = np.random.randint(-5, 6)*2
        b_2 = int(b / 2)

        c = np.random.randint(-9, 0)
        while b**2 % (4*c) != 0 :
            c = np.random.randint(-9, 0)

        d = int((b**2 / (4*c))) - a

    if a > 0 :
        opa = '+'
    else :
        opa = ''

    if b > 0 :
        opb = '+'
        b_2_ = b_2
    else :
        opb = ''
        b_2_ = f'( {b_2} )'
    if b == 1 :
        b_ = ''
    elif b == -1 :
        b_ = '-'
    else :
        b_ = b
    if c == -1 :
        c_ = ''
    else :
        c_ = -c
    a_ = -a
    candidates = [f'm `&lt;` {d}', f'm`&gt;`{d}', f'{d} `LEQ` m `&lt;` {a_}', f'm` GEQ`{a_}']

    an = [f'{d}`&lt;`m`&lt;`{a_}', f'm`&gt;`{a_}'][np.random.randint(0, 2)]
    candidates.append(an)
    np.random.shuffle(candidates)

    [a1, a2, a3, a4, a5] = candidates

    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == an:
            correct_idx = idx
            break
    stem = stem.format(a = a, b_ = b_, c = c, opa = opa, opb = opb, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_ = a_, b_2_ = b_2_, c_ = c_, d = d, a = a, opa = opa)
    return stem, answer, comment


def factorization312_Stem_625():
    stem = "이차방정식 $$수식$$(`m`{opa}`{a}`)`x ^2 `{opb}`{b_}x`{c}`=`0`$$/수식$$이 해를 갖지 않을 조건은? (단, $$수식$$m$$/수식$$은 실수) \n" \
           "① $$수식$${a1}$$/수식$$\n" \
           "② $$수식$${a2}$$/수식$$\n" \
           "③ $$수식$${a3}$$/수식$$\n" \
           "④ $$수식$${a4}$$/수식$$\n" \
           "⑤ $$수식$${a5}$$/수식$$\n"
    answer = "(답): {anum}\n"
    comment = "(해설)\n" \
              "근의 판별식을 이용하면\n"\
              "$$수식$${b_2_} ^2 `+`{c_}` ( m `{opa}` {a}`) `&lt;` 0$$/수식$$, $$수식$$m`&lt;`{d}$$/수식$$\n"\
              "따라서 이차방정식 $$수식$$(`m`{opa}`{a}`)`x ^2 `{opb}`{b_}x`{c}`=`0`$$/수식$$이 해를 갖지 않을 조건은 $$수식$$m `&lt;` {d}$$/수식$$\n\n"



    a = d = 1
    while d >= a or d == -a:
        a = np.random.randint(-9, 10)
        while a == 0:
            a = np.random.randint(-9, 10)
        b = np.random.randint(-5, 6)*2
        while b == 0 :
            b = np.random.randint(-5, 6)*2
        b_2 = int(b / 2)

        c = np.random.randint(-9, 0)
        while b**2 % (4*c) != 0 :
            c = np.random.randint(-9, 0)

        d = int((b**2 / (4*c))) - a

    if a > 0 :
        opa = '+'
    else :
        opa = ''

    if b > 0 :
        opb = '+'
        b_2_ = b_2
    else :
        opb = ''
        b_2_ = f'( {b_2} )'
    if b == 1 :
        b_ = ''
    elif b == -1 :
        b_ = '-'
    else :
        b_ = b
    if c == -1 :
        c_ = ''
    else :
        c_ = -c
    a_ = -a

    candidates = [f'm`&lt;`{d}', f'm `&gt;` {d}', f'{d}`LEQ`m`&lt;`{a}', f'm`&gt;`{a}']

    candidates.append([f'{d}`&lt;`m`&lt;`{a_}', f'm`&gt;`{a_}'][np.random.randint(0, 2)])
    np.random.shuffle(candidates)

    [a1, a2, a3, a4, a5] = candidates

    correct_idx = 0
    for idx, sdx in enumerate(candidates):  # [a, b, c] => 0 : a, 1 : b, 2 :c
        if sdx == f'm`&lt;`{d}':
            correct_idx = idx
            break
    stem = stem.format(a = a, b_ = b_, c = c, opa = opa, opb = opb, a1 = a1, a2 = a2, a3 = a3, a4 = a4, a5 = a5)
    answer = answer.format(anum = answer_dict[correct_idx])
    comment = comment.format(a_ = a_, b_ = b_, b_2_ = b_2_, c = c, c_ = c_, d = d, a = a, opa = opa, opb = opb)
    return stem, answer, comment



def factorization312_Stem_626():
    stem = "이차방정식 $$수식$${a_}x^2 `{opb}`{b_}x`+`k`{opc}`{c}=`0$$/수식$$은 해를 갖고, " \
           "이차방정식 $$수식$$( k`{opd}`{d})x^2`{ope}`{e_}x`+`{f}`=`0$$/수식$$은 해를 갖지 않도록 하는 모든 정수 $$수식$$k$$/수식$$의 값의 합을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$${a_}x^2` {opb}`{b_}x`+`k`{opc}`{c}=`0$$/수식$$이 해를 가지므로\n"\
              "$$수식$${b2}`-`{a4_}(k`{opc}`{c})`GEQ`0$$/수식$$, $$수식$${g}`-`{h}k`GEQ`0$$/수식$$, $$수식$$k`LEQ`{i}$$/수식$$\n"\
              "이차방정식 $$수식$$( k`{opd}`{d})x^2`+`{e_}x`+`{f}`=`0$$/수식$$이 해를 갖지 않으므로\n" \
              "$$수식$${e2}`-4`(k`{opd}`{d})`TIMES`{f}`&lt;`0$$/수식$$, $$수식$${j}-k`&lt;`0$$/수식$$, $$수식$$k`&gt;`{j}$$/수식$$\n"\
              "이를 만족시키는 $$수식$$k$$/수식$$의 값의 범위는 $$수식$${j}`&lt;`k`LEQ`{i}$$/수식$$이므로 " \
              "정수 $$수식$$k$$/수식$$는 {k}이고 그 합은 $$수식$${l}$$/수식$$이다.\n\n"

    g = 5
    h = 2
    while g % h != 0 :
        a = np.random.randint(1, 10)
        b = np.random.randint(-9, 10)
        while b == 0 :
            b = np.random.randint(-9, 10)
        c = np.random.randint(-9, 10)
        while c == 0 :
            c = np.random.randint(-9, 10)

        b2 = b ** 2
        a4 = a * 4
        g = b**2-4*a*c
        h = 4 * a
        i = int(g/h)

    j = i + 1
    e = f = d = 1
    cnt = 0
    while i <= j or (e**2 - 4 * f * d)%(4*f)!= 0 or i - j >6:
        while g % h != 0 or cnt > 30:
            cnt = 0
            a = np.random.randint(1, 10)
            b = np.random.randint(-9, 10)
            while b == 0:
                b = np.random.randint(-9, 10)
            c = np.random.randint(-9, 10)
            while c == 0:
                c = np.random.randint(-9, 10)

            b2 = b ** 2
            a4 = a * 4
            g = b ** 2 - 4 * a * c
            h = 4 * a
            i = int(g / h)
        cnt +=1
        e = np.random.randint(-9, 10)
        while e == 0 :
            e = np.random.randint(-9, 10)
        e2 = e ** 2
        d = np.random.randint(-9, 10)
        while d == 0 :
            d = np.random.randint(-9, 10)

        f = np.random.randint(1, 10)
        j = int((e**2 - 4 * f * d)/(4*f))

    if e == 1:
        e_ = ''
    elif e == -1:
        e_ = '-'
    else:
        e_ = e
    if e > 0:
        ope = '+'
    else:
        ope = ''
    if d > 0 :
        opd = '+'
    else :
        opd = ''
    if a == 1:
        a_ = ''
    else:
        a_ = a
    if b > 0:
        opb = '+'
    else:
        opb = ''
    if b == 1:
        b_ = ''
    elif b == -1:
        b_ = '-'
    else:
        b_ = b
    if c > 0:
        opc = '+'
    else:
        opc = ''
    if a4 == 1:
        a4_ = ''
    else:
        a4_ = a4
    l = 0
    k = ""
    for m in range(j+1, i+1):
        l += m
        k += f"$$수식$${m}$$/수식$$, "
    k = k[0:-2]
    stem = stem.format(a_ = a_, opb = opb, b_ = b_, opc = opc, opd = opd, c = c, d = d, e_ = e_, f = f, ope = ope)
    answer = answer.format(an = l)
    comment = comment.format(a_ = a_, b_ = b_, c = c, b2 = b2,  opb = opb, opc = opc, a4_ = a4_, g = g, h = h, i = i,
                             d = d, e_ = e_, f = f, opd = opd, ope = ope, e2 = e2, j = j, l = l, k = k)
    return stem, answer, comment


def factorization312_Stem_627():
    stem = "이차방정식 $$수식$$(`x`{opa}`{a}`) ^2 `{opb}`{b}`=`0`$$/수식$$의 두 근의 합을 $$수식$$a$$/수식$$, 두 근의 곱을 $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$$3a`+`b$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$(`x`{opa}`{a}`) ^2 `{opb}`{b}`=`0`$$/수식$$에서\n"\
              "$$수식$$x^2`{opc}`{c}x`{opd}`{d}`=`0$$/수식$$에서\n"\
              "두 근의 합 $$수식$$a`=` - {c} over 1 `=`{c_}$$/수식$$\n"\
              "두 근의 곱 $$수식$$b`=` {d} over 1 `=` {d}$$/수식$$\n"\
              "따라서 $$수식$$3a`+`b`=` {c3}`{opd}`{d}`=`{e}$$/수식$$\n\n"

    a = np.random.randint(-9, 10)
    while a == 0 :
        a = np.random.randint(-9, 10)
    b = np.random.randint(-9, 10)
    while b == 0 :
        b = np.random.randint(-9, 10)

    if a > 0 :
        opa = '+'
        opc = '+'
    else :
        opa = ''
        opc = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''

    c = 2 * a
    d = a ** 2 + b
    if d > 0 :
        opd = '+'
        opd_ = ''
    else :
        opd = ''
        opd_ = '-'

    c3 = c * -3
    e = c3 + d
    c_ = -1 * c
    stem = stem.format(a = a, b = b, opa = opa, opb = opb)
    answer = answer.format(an = e)
    comment = comment.format(a = a, b = b, c = c, c_ = c_, c3 = c3, d = d, e = e, opa = opa, opb = opb, opc = opc, opd = opd, opd_ = opd_)
    return stem, answer, comment


def factorization312_Stem_628():
    stem = "이차방정식 $$수식$$(`x`{opa}`{a}`) ^2 `{opb}`{b}`=`0`$$/수식$$의 두 근의 합을 $$수식$$a$$/수식$$, 두 근의 곱을 $$수식$$b$$/수식$$라 할 때, " \
           "$$수식$$b`-`3a$$/수식$$의 값을 구하시오.\n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "이차방정식 $$수식$$(`x`{opa}`{a}`) ^2 `{opb}`{b}`=`0`$$/수식$$에서\n"\
              "$$수식$$x^2`{opc}`{c}x`{opd}`{d}`=`0$$/수식$$에서\n"\
              "두 근의 합 $$수식$$a`=` - {c} over 1 `=`{c_}$$/수식$$\n"\
              "두 근의 곱 $$수식$$b`=` {d} over 1 `=` {d}$$/수식$$\n"\
              "따라서 $$수식$$b`-`3a =` {d} `-3`TIMES`{c_}`=`{e}$$/수식$$\n\n"

    a = np.random.randint(-9, 10)
    while a == 0 :
        a = np.random.randint(-9, 10)
    b = np.random.randint(-9, 10)
    while b == 0 :
        b = np.random.randint(-9, 10)

    if a > 0 :
        opa = '+'
        opc = '+'
    else :
        opa = ''
        opc = ''
    if b > 0 :
        opb = '+'
    else :
        opb = ''

    c = 2 * a
    d = a ** 2 + b
    if d > 0 :
        opd = '+'
        opd_ = ''
    else :
        opd = ''
        opd_ = '-'
    c_ = -1 * c
    e = c_ * -3 + d
    if c_ < 0 :
        c_ = f'({c_})'
    stem = stem.format(a = a, b = b, opa = opa, opb = opb)
    answer = answer.format(an = e)
    comment = comment.format(a = a, b = b, c = c, c_ = c_, d = d, e = e, opa = opa, opb = opb, opc = opc, opd = opd, opd_ = opd_)
    return stem, answer, comment


def factorization312_Stem_629():
    stem = "이차방정식 $$수식$${opz}`{z_} over {y} x^2 `{opx}` {x_} over {w} x `=` {v}$$/수식$$의 두 근의 합을 $$수식$$a$$/수식$$, " \
           "두 근의 곱을 $$수식$$b$$/수식$$라 할 때, $$수식$${u}(a`+`b)$$/수식$$의 값을 구하시오. \n"
    answer = "(답): $$수식$${an}$$/수식$$\n"
    comment = "(해설)\n" \
              "$$수식$${opz}`{z_} over {y} x^2 `{opx}` {x_} over {w} x `=` {v}$$/수식$$의 양변에 $$수식$${t}$$/수식$$을 곱하여 정리하면\n"\
              "$$수식$${s1}x^2 `{opr}`{r1}x`{opq}`{q}`=`0`$$/수식$$\n"\
              "두 근의 합 $$수식$$a`=`- {r} over {s} {r_s}$$/수식$$\n"\
              "두 근의 곱 $$수식$$b`=` {q} over {s} {q_s}$$/수식$$\n"\
              "따라서 $$수식$${u}(a`+`b)`=`{u}`TIMES`  ( {r_s_} {q_s_}  ) `=` {p}$$/수식$$\n\n"

    y = np.random.randint(2, 10)
    w = np.random.randint(2, 10)

    t = lcm(y, w)

    z = np.random.randint(1, y)
    if z!= 0 :
        gcdyz = gcd(abs(z), y)
    else :
        gcdyz = 1
    while z == 0 or gcdyz != 1:
        z = np.random.randint(1, y)
        if z != 0 :
            gcdyz = gcd(abs(z), y)
    if z > 0 :
        opz = ''
    else :
        opz = '-'
    z_ = abs(z)

    x = np.random.randint(-w, w)
    if x!= 0 :
        gcdxw = gcd(abs(x), w)
    else :
        gcdxw = 1
    while x == 0 or gcd(abs(x), w)!= 1 :
        x = np.random.randint(-w, w)
        if x!= 0 :
            gcdxw = gcd(abs(x), w)

    if x > 0 :
        opx = '+'
    else :
        opx = '-'
    x_ = abs(x)

    s = int(t/y)*z
    r = int(t/w)*x
    if r > 0 :
        opr = '+'
    else :
        opr = ''

    v = np.random.randint(-5, 6)
    while v == 0 :
        v = np.random.randint(-5, 6)
    q = -1 * v * t
    if q > 0 :
        opq = '+'
        opq_ = ''
        opq__ = '+'
    else :
        opq = ''
        opq_ = '-'
        opq__ = '-'
    r__ = r * -1
    if r%s == 0 :
        r_s_ = rs = -1 *int(r/s)
        r_s = f'`=`{rs}'
    elif gcd(abs(r), s) == 1 :
        if r < 0 :
            r_s = f'`=` {r__} over {s}'
            r_s_ =f'{r__} over {s}'
        else :
            r_s_ = f'- {r} over {s}'
            r_s = ''
    else :
        gcdrs = gcd(abs(r), s)
        r_ = int(r/gcdrs)
        s_ = int(s/gcdrs)
        if r < 0 :
            r_ = -1 * r_
            r_s = f'`=` {r_} over {s_}'
            r_s_ = f'{r_} over {s_}'
        else :
            r_s = f'`=` {r_} over {s_}'
            r_s_ = f'{r_} over {s_}'

    if q % s == 0:
        qs = int(q / s)
        q_s_ = f'`{opq}`{qs}'
        q_s = f'`=`{qs}'
    elif gcd(abs(q), s) == 1 :
        absq = abs(q)
        q_s_ = f'{opq__}` {absq} over {s}'
        q_s = ''
    else:
        gcdqs = gcd(abs(q), s)
        q_ = int(q / gcdqs)
        s_ = int(s / gcdqs)
        if q_ < 0 :
            q_ = -1 * int(q / gcdqs)
        q_s = f'`=` {opq_}`{q_} over {s_}'
        q_s_ = f'`{opq__}` {q_} over {s_}'

    k = np.random.randint(-3, 4)
    while k == 0 or abs(s * k) == 1 :
        k = np.random.randint(-3, 4)
    u = s * k
    p = r__ * k + q * k

    if s == 1 :
        s1 = ''
    elif s == -1 :
        s1= '-'
    else :
        s1 = s
    if r == 1:
        r1 = ''
    elif r == -1:
        r1 = '-'
    else:
        r1 = r

    stem = stem.format(z_ = z_, y = y, x_ = x_, w = w, opx = opx, v = v, u = u, opz = opz)
    answer = answer.format(an = p)
    comment = comment.format(s1 = s1, r1 = r1, opq_ = opq_, v = v, z_ = z_, y = y, x_ = x_, w = w, opz = opz, opx = opx, t = t, s = s, r = r, q = q, opr = opr, opq = opq, r_s = r_s, q_s = q_s, u = u, r_s_ = r_s_, q_s_ = q_s_, p = p)
    return stem, answer, comment